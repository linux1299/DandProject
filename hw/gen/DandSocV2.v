// Generator : SpinalHDL v1.8.1    git head : 2a7592004363e5b40ec43e1f122ed8641cd8965b
// Component : DandSocV2
// Git hash  : 7531e2415e1b5972fd32aa984f766ac58b3b39ee

`timescale 1ns/1ps

module DandSocV2 (
  input               io_asyncResetn,
  input               io_axiClk,
  output              io_uart_txd,
  input               io_uart_rxd,
  output              io_axi_frame_buff_aw_valid,
  input               io_axi_frame_buff_aw_ready,
  output     [31:0]   io_axi_frame_buff_aw_payload_addr,
  output     [3:0]    io_axi_frame_buff_aw_payload_id,
  output     [3:0]    io_axi_frame_buff_aw_payload_region,
  output     [7:0]    io_axi_frame_buff_aw_payload_len,
  output     [2:0]    io_axi_frame_buff_aw_payload_size,
  output     [1:0]    io_axi_frame_buff_aw_payload_burst,
  output     [0:0]    io_axi_frame_buff_aw_payload_lock,
  output     [3:0]    io_axi_frame_buff_aw_payload_cache,
  output     [3:0]    io_axi_frame_buff_aw_payload_qos,
  output     [2:0]    io_axi_frame_buff_aw_payload_prot,
  output              io_axi_frame_buff_w_valid,
  input               io_axi_frame_buff_w_ready,
  output     [31:0]   io_axi_frame_buff_w_payload_data,
  output     [3:0]    io_axi_frame_buff_w_payload_strb,
  output              io_axi_frame_buff_w_payload_last,
  input               io_axi_frame_buff_b_valid,
  output              io_axi_frame_buff_b_ready,
  input      [3:0]    io_axi_frame_buff_b_payload_id,
  input      [1:0]    io_axi_frame_buff_b_payload_resp,
  output              io_axi_frame_buff_ar_valid,
  input               io_axi_frame_buff_ar_ready,
  output     [31:0]   io_axi_frame_buff_ar_payload_addr,
  output     [3:0]    io_axi_frame_buff_ar_payload_id,
  output     [3:0]    io_axi_frame_buff_ar_payload_region,
  output     [7:0]    io_axi_frame_buff_ar_payload_len,
  output     [2:0]    io_axi_frame_buff_ar_payload_size,
  output     [1:0]    io_axi_frame_buff_ar_payload_burst,
  output     [0:0]    io_axi_frame_buff_ar_payload_lock,
  output     [3:0]    io_axi_frame_buff_ar_payload_cache,
  output     [3:0]    io_axi_frame_buff_ar_payload_qos,
  output     [2:0]    io_axi_frame_buff_ar_payload_prot,
  input               io_axi_frame_buff_r_valid,
  output              io_axi_frame_buff_r_ready,
  input      [31:0]   io_axi_frame_buff_r_payload_data,
  input      [3:0]    io_axi_frame_buff_r_payload_id,
  input      [1:0]    io_axi_frame_buff_r_payload_resp,
  input               io_axi_frame_buff_r_payload_last,
  output              io_axi_ddr_aw_valid,
  input               io_axi_ddr_aw_ready,
  output     [31:0]   io_axi_ddr_aw_payload_addr,
  output     [3:0]    io_axi_ddr_aw_payload_id,
  output     [3:0]    io_axi_ddr_aw_payload_region,
  output     [7:0]    io_axi_ddr_aw_payload_len,
  output     [2:0]    io_axi_ddr_aw_payload_size,
  output     [1:0]    io_axi_ddr_aw_payload_burst,
  output     [0:0]    io_axi_ddr_aw_payload_lock,
  output     [3:0]    io_axi_ddr_aw_payload_cache,
  output     [3:0]    io_axi_ddr_aw_payload_qos,
  output     [2:0]    io_axi_ddr_aw_payload_prot,
  output              io_axi_ddr_w_valid,
  input               io_axi_ddr_w_ready,
  output     [31:0]   io_axi_ddr_w_payload_data,
  output     [3:0]    io_axi_ddr_w_payload_strb,
  output              io_axi_ddr_w_payload_last,
  input               io_axi_ddr_b_valid,
  output              io_axi_ddr_b_ready,
  input      [3:0]    io_axi_ddr_b_payload_id,
  input      [1:0]    io_axi_ddr_b_payload_resp,
  output              io_axi_ddr_ar_valid,
  input               io_axi_ddr_ar_ready,
  output     [31:0]   io_axi_ddr_ar_payload_addr,
  output     [3:0]    io_axi_ddr_ar_payload_id,
  output     [3:0]    io_axi_ddr_ar_payload_region,
  output     [7:0]    io_axi_ddr_ar_payload_len,
  output     [2:0]    io_axi_ddr_ar_payload_size,
  output     [1:0]    io_axi_ddr_ar_payload_burst,
  output     [0:0]    io_axi_ddr_ar_payload_lock,
  output     [3:0]    io_axi_ddr_ar_payload_cache,
  output     [3:0]    io_axi_ddr_ar_payload_qos,
  output     [2:0]    io_axi_ddr_ar_payload_prot,
  input               io_axi_ddr_r_valid,
  output              io_axi_ddr_r_ready,
  input      [31:0]   io_axi_ddr_r_payload_data,
  input      [3:0]    io_axi_ddr_r_payload_id,
  input      [1:0]    io_axi_ddr_r_payload_resp,
  input               io_axi_ddr_r_payload_last,
  input               io_axi_usb_aw_valid,
  output              io_axi_usb_aw_ready,
  input      [31:0]   io_axi_usb_aw_payload_addr,
  input      [1:0]    io_axi_usb_aw_payload_id,
  input      [3:0]    io_axi_usb_aw_payload_region,
  input      [7:0]    io_axi_usb_aw_payload_len,
  input      [2:0]    io_axi_usb_aw_payload_size,
  input      [1:0]    io_axi_usb_aw_payload_burst,
  input      [0:0]    io_axi_usb_aw_payload_lock,
  input      [3:0]    io_axi_usb_aw_payload_cache,
  input      [3:0]    io_axi_usb_aw_payload_qos,
  input      [2:0]    io_axi_usb_aw_payload_prot,
  input               io_axi_usb_w_valid,
  output              io_axi_usb_w_ready,
  input      [31:0]   io_axi_usb_w_payload_data,
  input      [3:0]    io_axi_usb_w_payload_strb,
  input               io_axi_usb_w_payload_last,
  output              io_axi_usb_b_valid,
  input               io_axi_usb_b_ready,
  output     [1:0]    io_axi_usb_b_payload_id,
  output     [1:0]    io_axi_usb_b_payload_resp,
  input               io_axi_usb_ar_valid,
  output              io_axi_usb_ar_ready,
  input      [31:0]   io_axi_usb_ar_payload_addr,
  input      [1:0]    io_axi_usb_ar_payload_id,
  input      [3:0]    io_axi_usb_ar_payload_region,
  input      [7:0]    io_axi_usb_ar_payload_len,
  input      [2:0]    io_axi_usb_ar_payload_size,
  input      [1:0]    io_axi_usb_ar_payload_burst,
  input      [0:0]    io_axi_usb_ar_payload_lock,
  input      [3:0]    io_axi_usb_ar_payload_cache,
  input      [3:0]    io_axi_usb_ar_payload_qos,
  input      [2:0]    io_axi_usb_ar_payload_prot,
  output              io_axi_usb_r_valid,
  input               io_axi_usb_r_ready,
  output     [31:0]   io_axi_usb_r_payload_data,
  output     [1:0]    io_axi_usb_r_payload_id,
  output     [1:0]    io_axi_usb_r_payload_resp,
  output              io_axi_usb_r_payload_last,
  input               io_usb_done
);

  wire                bufferCC_1_io_dataIn;
  wire       [15:0]   axi_uartCtrl_io_apb_PADDR;
  wire                axi_uartCtrl_io_resetn;
  wire       [7:0]    axi_timer_io_apb_PADDR;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_b_payload_id;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_b_payload_id;
  wire       [2:0]    axi4WriteOnlyArbiter_1_io_inputs_0_aw_payload_id;
  wire       [2:0]    axi4WriteOnlyArbiter_1_io_inputs_1_aw_payload_id;
  wire       [19:0]   axi_apbBridge_io_axi_arbiter_io_readInputs_0_ar_payload_addr;
  wire       [19:0]   axi_apbBridge_io_axi_arbiter_io_writeInputs_0_aw_payload_addr;
  wire                bufferCC_1_io_dataOut;
  wire                axi_downsizer_io_input_ar_ready;
  wire                axi_downsizer_io_input_aw_ready;
  wire                axi_downsizer_io_input_w_ready;
  wire                axi_downsizer_io_input_r_valid;
  wire       [63:0]   axi_downsizer_io_input_r_payload_data;
  wire       [3:0]    axi_downsizer_io_input_r_payload_id;
  wire       [1:0]    axi_downsizer_io_input_r_payload_resp;
  wire                axi_downsizer_io_input_r_payload_last;
  wire                axi_downsizer_io_input_b_valid;
  wire       [3:0]    axi_downsizer_io_input_b_payload_id;
  wire       [1:0]    axi_downsizer_io_input_b_payload_resp;
  wire                axi_downsizer_io_output_ar_valid;
  wire       [31:0]   axi_downsizer_io_output_ar_payload_addr;
  wire       [3:0]    axi_downsizer_io_output_ar_payload_id;
  wire       [3:0]    axi_downsizer_io_output_ar_payload_region;
  wire       [7:0]    axi_downsizer_io_output_ar_payload_len;
  wire       [2:0]    axi_downsizer_io_output_ar_payload_size;
  wire       [1:0]    axi_downsizer_io_output_ar_payload_burst;
  wire       [0:0]    axi_downsizer_io_output_ar_payload_lock;
  wire       [3:0]    axi_downsizer_io_output_ar_payload_cache;
  wire       [3:0]    axi_downsizer_io_output_ar_payload_qos;
  wire       [2:0]    axi_downsizer_io_output_ar_payload_prot;
  wire                axi_downsizer_io_output_aw_valid;
  wire       [31:0]   axi_downsizer_io_output_aw_payload_addr;
  wire       [3:0]    axi_downsizer_io_output_aw_payload_id;
  wire       [3:0]    axi_downsizer_io_output_aw_payload_region;
  wire       [7:0]    axi_downsizer_io_output_aw_payload_len;
  wire       [2:0]    axi_downsizer_io_output_aw_payload_size;
  wire       [1:0]    axi_downsizer_io_output_aw_payload_burst;
  wire       [0:0]    axi_downsizer_io_output_aw_payload_lock;
  wire       [3:0]    axi_downsizer_io_output_aw_payload_cache;
  wire       [3:0]    axi_downsizer_io_output_aw_payload_qos;
  wire       [2:0]    axi_downsizer_io_output_aw_payload_prot;
  wire                axi_downsizer_io_output_w_valid;
  wire       [31:0]   axi_downsizer_io_output_w_payload_data;
  wire       [3:0]    axi_downsizer_io_output_w_payload_strb;
  wire                axi_downsizer_io_output_w_payload_last;
  wire                axi_downsizer_io_output_r_ready;
  wire                axi_downsizer_io_output_b_ready;
  wire                axi_upsizer_io_input_ar_ready;
  wire                axi_upsizer_io_input_aw_ready;
  wire                axi_upsizer_io_input_w_ready;
  wire                axi_upsizer_io_input_r_valid;
  wire       [31:0]   axi_upsizer_io_input_r_payload_data;
  wire       [1:0]    axi_upsizer_io_input_r_payload_id;
  wire       [1:0]    axi_upsizer_io_input_r_payload_resp;
  wire                axi_upsizer_io_input_r_payload_last;
  wire                axi_upsizer_io_input_b_valid;
  wire       [1:0]    axi_upsizer_io_input_b_payload_id;
  wire       [1:0]    axi_upsizer_io_input_b_payload_resp;
  wire                axi_upsizer_io_output_ar_valid;
  wire       [31:0]   axi_upsizer_io_output_ar_payload_addr;
  wire       [1:0]    axi_upsizer_io_output_ar_payload_id;
  wire       [3:0]    axi_upsizer_io_output_ar_payload_region;
  wire       [7:0]    axi_upsizer_io_output_ar_payload_len;
  wire       [2:0]    axi_upsizer_io_output_ar_payload_size;
  wire       [1:0]    axi_upsizer_io_output_ar_payload_burst;
  wire       [0:0]    axi_upsizer_io_output_ar_payload_lock;
  wire       [3:0]    axi_upsizer_io_output_ar_payload_cache;
  wire       [3:0]    axi_upsizer_io_output_ar_payload_qos;
  wire       [2:0]    axi_upsizer_io_output_ar_payload_prot;
  wire                axi_upsizer_io_output_aw_valid;
  wire       [31:0]   axi_upsizer_io_output_aw_payload_addr;
  wire       [1:0]    axi_upsizer_io_output_aw_payload_id;
  wire       [3:0]    axi_upsizer_io_output_aw_payload_region;
  wire       [7:0]    axi_upsizer_io_output_aw_payload_len;
  wire       [2:0]    axi_upsizer_io_output_aw_payload_size;
  wire       [1:0]    axi_upsizer_io_output_aw_payload_burst;
  wire       [0:0]    axi_upsizer_io_output_aw_payload_lock;
  wire       [3:0]    axi_upsizer_io_output_aw_payload_cache;
  wire       [3:0]    axi_upsizer_io_output_aw_payload_qos;
  wire       [2:0]    axi_upsizer_io_output_aw_payload_prot;
  wire                axi_upsizer_io_output_w_valid;
  wire       [63:0]   axi_upsizer_io_output_w_payload_data;
  wire       [7:0]    axi_upsizer_io_output_w_payload_strb;
  wire                axi_upsizer_io_output_w_payload_last;
  wire                axi_upsizer_io_output_r_ready;
  wire                axi_upsizer_io_output_b_ready;
  wire                axi_apbBridge_io_axi_arw_ready;
  wire                axi_apbBridge_io_axi_w_ready;
  wire                axi_apbBridge_io_axi_b_valid;
  wire       [3:0]    axi_apbBridge_io_axi_b_payload_id;
  wire       [1:0]    axi_apbBridge_io_axi_b_payload_resp;
  wire                axi_apbBridge_io_axi_r_valid;
  wire       [31:0]   axi_apbBridge_io_axi_r_payload_data;
  wire       [3:0]    axi_apbBridge_io_axi_r_payload_id;
  wire       [1:0]    axi_apbBridge_io_axi_r_payload_resp;
  wire                axi_apbBridge_io_axi_r_payload_last;
  wire       [19:0]   axi_apbBridge_io_apb_PADDR;
  wire       [0:0]    axi_apbBridge_io_apb_PSEL;
  wire                axi_apbBridge_io_apb_PENABLE;
  wire                axi_apbBridge_io_apb_PWRITE;
  wire       [31:0]   axi_apbBridge_io_apb_PWDATA;
  wire                axi_cpu_area_cpu_icache_ar_valid;
  wire       [31:0]   axi_cpu_area_cpu_icache_ar_payload_addr;
  wire       [1:0]    axi_cpu_area_cpu_icache_ar_payload_id;
  wire       [7:0]    axi_cpu_area_cpu_icache_ar_payload_len;
  wire       [2:0]    axi_cpu_area_cpu_icache_ar_payload_size;
  wire       [1:0]    axi_cpu_area_cpu_icache_ar_payload_burst;
  wire                axi_cpu_area_cpu_icache_r_ready;
  wire                axi_cpu_area_cpu_dcache_ar_valid;
  wire       [31:0]   axi_cpu_area_cpu_dcache_ar_payload_addr;
  wire       [1:0]    axi_cpu_area_cpu_dcache_ar_payload_id;
  wire       [7:0]    axi_cpu_area_cpu_dcache_ar_payload_len;
  wire       [2:0]    axi_cpu_area_cpu_dcache_ar_payload_size;
  wire       [1:0]    axi_cpu_area_cpu_dcache_ar_payload_burst;
  wire                axi_cpu_area_cpu_dcache_r_ready;
  wire                axi_cpu_area_cpu_dcache_aw_valid;
  wire       [31:0]   axi_cpu_area_cpu_dcache_aw_payload_addr;
  wire       [1:0]    axi_cpu_area_cpu_dcache_aw_payload_id;
  wire       [7:0]    axi_cpu_area_cpu_dcache_aw_payload_len;
  wire       [2:0]    axi_cpu_area_cpu_dcache_aw_payload_size;
  wire       [1:0]    axi_cpu_area_cpu_dcache_aw_payload_burst;
  wire                axi_cpu_area_cpu_dcache_w_valid;
  wire       [63:0]   axi_cpu_area_cpu_dcache_w_payload_data;
  wire       [7:0]    axi_cpu_area_cpu_dcache_w_payload_strb;
  wire                axi_cpu_area_cpu_dcache_w_payload_last;
  wire                axi_cpu_area_cpu_dcache_b_ready;
  wire                axi_uartCtrl_io_apb_PREADY;
  wire       [31:0]   axi_uartCtrl_io_apb_PRDATA;
  wire                axi_uartCtrl_io_apb_PSLVERROR;
  wire                axi_uartCtrl_io_uart_txd;
  wire                axi_timer_io_apb_PREADY;
  wire       [31:0]   axi_timer_io_apb_PRDATA;
  wire                axi_timer_io_apb_PSLVERROR;
  wire                axi_cpu_area_cpu_icache_decoder_io_input_ar_ready;
  wire                axi_cpu_area_cpu_icache_decoder_io_input_r_valid;
  wire       [63:0]   axi_cpu_area_cpu_icache_decoder_io_input_r_payload_data;
  wire       [1:0]    axi_cpu_area_cpu_icache_decoder_io_input_r_payload_id;
  wire       [1:0]    axi_cpu_area_cpu_icache_decoder_io_input_r_payload_resp;
  wire                axi_cpu_area_cpu_icache_decoder_io_input_r_payload_last;
  wire                axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_valid;
  wire       [31:0]   axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_addr;
  wire       [1:0]    axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_id;
  wire       [7:0]    axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_len;
  wire       [2:0]    axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_size;
  wire       [1:0]    axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_burst;
  wire                axi_cpu_area_cpu_icache_decoder_io_outputs_0_r_ready;
  wire                axi_cpu_area_cpu_dcache_decoder_io_input_ar_ready;
  wire                axi_cpu_area_cpu_dcache_decoder_io_input_r_valid;
  wire       [63:0]   axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_data;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_id;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_resp;
  wire                axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_last;
  wire                axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_valid;
  wire       [31:0]   axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_addr;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_id;
  wire       [7:0]    axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_len;
  wire       [2:0]    axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_size;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_burst;
  wire                axi_cpu_area_cpu_dcache_decoder_io_outputs_0_r_ready;
  wire                axi_cpu_area_cpu_dcache_decoder_1_io_input_aw_ready;
  wire                axi_cpu_area_cpu_dcache_decoder_1_io_input_w_ready;
  wire                axi_cpu_area_cpu_dcache_decoder_1_io_input_b_valid;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_1_io_input_b_payload_id;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_1_io_input_b_payload_resp;
  wire                axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_valid;
  wire       [31:0]   axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_addr;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_id;
  wire       [7:0]    axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_len;
  wire       [2:0]    axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_size;
  wire       [1:0]    axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_burst;
  wire                axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_valid;
  wire       [63:0]   axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_data;
  wire       [7:0]    axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_strb;
  wire                axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_last;
  wire                axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_b_ready;
  wire                toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_ar_ready;
  wire                toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_valid;
  wire       [63:0]   toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_data;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_id;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_resp;
  wire                toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_last;
  wire                toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_valid;
  wire       [31:0]   toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_addr;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_id;
  wire       [3:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_region;
  wire       [7:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_len;
  wire       [2:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_size;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_burst;
  wire       [0:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_lock;
  wire       [3:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_cache;
  wire       [3:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_qos;
  wire       [2:0]    toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_prot;
  wire                toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_r_ready;
  wire                toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_aw_ready;
  wire                toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_w_ready;
  wire                toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_valid;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_payload_id;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_payload_resp;
  wire                toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_valid;
  wire       [31:0]   toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_addr;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_id;
  wire       [3:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_region;
  wire       [7:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_len;
  wire       [2:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_size;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_burst;
  wire       [0:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_lock;
  wire       [3:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_cache;
  wire       [3:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_qos;
  wire       [2:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_prot;
  wire                toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_valid;
  wire       [63:0]   toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_data;
  wire       [7:0]    toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_strb;
  wire                toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_last;
  wire                toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_b_ready;
  wire                axi4ReadOnlyArbiter_1_io_inputs_0_ar_ready;
  wire                axi4ReadOnlyArbiter_1_io_inputs_0_r_valid;
  wire       [63:0]   axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_data;
  wire       [1:0]    axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_id;
  wire       [1:0]    axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_resp;
  wire                axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_last;
  wire                axi4ReadOnlyArbiter_1_io_inputs_1_ar_ready;
  wire                axi4ReadOnlyArbiter_1_io_inputs_1_r_valid;
  wire       [63:0]   axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_data;
  wire       [1:0]    axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_id;
  wire       [1:0]    axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_resp;
  wire                axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_last;
  wire                axi4ReadOnlyArbiter_1_io_inputs_2_ar_ready;
  wire                axi4ReadOnlyArbiter_1_io_inputs_2_r_valid;
  wire       [63:0]   axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_data;
  wire       [1:0]    axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_id;
  wire       [1:0]    axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_resp;
  wire                axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_last;
  wire                axi4ReadOnlyArbiter_1_io_output_ar_valid;
  wire       [31:0]   axi4ReadOnlyArbiter_1_io_output_ar_payload_addr;
  wire       [3:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_id;
  wire       [3:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_region;
  wire       [7:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_len;
  wire       [2:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_size;
  wire       [1:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_burst;
  wire       [0:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_lock;
  wire       [3:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_cache;
  wire       [3:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_qos;
  wire       [2:0]    axi4ReadOnlyArbiter_1_io_output_ar_payload_prot;
  wire                axi4ReadOnlyArbiter_1_io_output_r_ready;
  wire                axi4WriteOnlyArbiter_1_io_inputs_0_aw_ready;
  wire                axi4WriteOnlyArbiter_1_io_inputs_0_w_ready;
  wire                axi4WriteOnlyArbiter_1_io_inputs_0_b_valid;
  wire       [2:0]    axi4WriteOnlyArbiter_1_io_inputs_0_b_payload_id;
  wire       [1:0]    axi4WriteOnlyArbiter_1_io_inputs_0_b_payload_resp;
  wire                axi4WriteOnlyArbiter_1_io_inputs_1_aw_ready;
  wire                axi4WriteOnlyArbiter_1_io_inputs_1_w_ready;
  wire                axi4WriteOnlyArbiter_1_io_inputs_1_b_valid;
  wire       [2:0]    axi4WriteOnlyArbiter_1_io_inputs_1_b_payload_id;
  wire       [1:0]    axi4WriteOnlyArbiter_1_io_inputs_1_b_payload_resp;
  wire                axi4WriteOnlyArbiter_1_io_output_aw_valid;
  wire       [31:0]   axi4WriteOnlyArbiter_1_io_output_aw_payload_addr;
  wire       [3:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_id;
  wire       [3:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_region;
  wire       [7:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_len;
  wire       [2:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_size;
  wire       [1:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_burst;
  wire       [0:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_lock;
  wire       [3:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_cache;
  wire       [3:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_qos;
  wire       [2:0]    axi4WriteOnlyArbiter_1_io_output_aw_payload_prot;
  wire                axi4WriteOnlyArbiter_1_io_output_w_valid;
  wire       [63:0]   axi4WriteOnlyArbiter_1_io_output_w_payload_data;
  wire       [7:0]    axi4WriteOnlyArbiter_1_io_output_w_payload_strb;
  wire                axi4WriteOnlyArbiter_1_io_output_w_payload_last;
  wire                axi4WriteOnlyArbiter_1_io_output_b_ready;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_ar_ready;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_data;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_id;
  wire       [1:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_resp;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_last;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_prot;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_r_ready;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_prot;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_r_ready;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_prot;
  wire                toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_r_ready;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_aw_ready;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_w_ready;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_valid;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_payload_id;
  wire       [1:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_payload_resp;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_prot;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_data;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_strb;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_last;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_b_ready;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_prot;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_data;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_strb;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_last;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_b_ready;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_prot;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_valid;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_data;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_strb;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_last;
  wire                toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_b_ready;
  wire                axi_apbBridge_io_axi_arbiter_io_readInputs_0_ar_ready;
  wire                axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_valid;
  wire       [31:0]   axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_data;
  wire       [3:0]    axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_id;
  wire       [1:0]    axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_resp;
  wire                axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_last;
  wire                axi_apbBridge_io_axi_arbiter_io_writeInputs_0_aw_ready;
  wire                axi_apbBridge_io_axi_arbiter_io_writeInputs_0_w_ready;
  wire                axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_valid;
  wire       [3:0]    axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_payload_id;
  wire       [1:0]    axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_payload_resp;
  wire                axi_apbBridge_io_axi_arbiter_io_output_arw_valid;
  wire       [19:0]   axi_apbBridge_io_axi_arbiter_io_output_arw_payload_addr;
  wire       [3:0]    axi_apbBridge_io_axi_arbiter_io_output_arw_payload_id;
  wire       [7:0]    axi_apbBridge_io_axi_arbiter_io_output_arw_payload_len;
  wire       [2:0]    axi_apbBridge_io_axi_arbiter_io_output_arw_payload_size;
  wire       [1:0]    axi_apbBridge_io_axi_arbiter_io_output_arw_payload_burst;
  wire                axi_apbBridge_io_axi_arbiter_io_output_arw_payload_write;
  wire                axi_apbBridge_io_axi_arbiter_io_output_w_valid;
  wire       [31:0]   axi_apbBridge_io_axi_arbiter_io_output_w_payload_data;
  wire       [3:0]    axi_apbBridge_io_axi_arbiter_io_output_w_payload_strb;
  wire                axi_apbBridge_io_axi_arbiter_io_output_w_payload_last;
  wire                axi_apbBridge_io_axi_arbiter_io_output_b_ready;
  wire                axi_apbBridge_io_axi_arbiter_io_output_r_ready;
  wire                io_apb_decoder_io_input_PREADY;
  wire       [31:0]   io_apb_decoder_io_input_PRDATA;
  wire                io_apb_decoder_io_input_PSLVERROR;
  wire       [19:0]   io_apb_decoder_io_output_PADDR;
  wire       [1:0]    io_apb_decoder_io_output_PSEL;
  wire                io_apb_decoder_io_output_PENABLE;
  wire                io_apb_decoder_io_output_PWRITE;
  wire       [31:0]   io_apb_decoder_io_output_PWDATA;
  wire                apb3Router_1_io_input_PREADY;
  wire       [31:0]   apb3Router_1_io_input_PRDATA;
  wire                apb3Router_1_io_input_PSLVERROR;
  wire       [19:0]   apb3Router_1_io_outputs_0_PADDR;
  wire       [0:0]    apb3Router_1_io_outputs_0_PSEL;
  wire                apb3Router_1_io_outputs_0_PENABLE;
  wire                apb3Router_1_io_outputs_0_PWRITE;
  wire       [31:0]   apb3Router_1_io_outputs_0_PWDATA;
  wire       [19:0]   apb3Router_1_io_outputs_1_PADDR;
  wire       [0:0]    apb3Router_1_io_outputs_1_PSEL;
  wire                apb3Router_1_io_outputs_1_PENABLE;
  wire                apb3Router_1_io_outputs_1_PWRITE;
  wire       [31:0]   apb3Router_1_io_outputs_1_PWDATA;
  wire                tmp_when;
  reg                 resetCtrl_systemResetUnbuffered;
  reg        [5:0]    resetCtrl_systemResetCounter;
  wire       [5:0]    tmp_1;
  (* MAX_FANOUT=32 *) reg                 resetCtrl_axiReset;
  wire                tmp_io_resetn;
  wire                cpu_rst;
  wire                toplevel_axi_upsizer_io_output_readOnly_ar_valid;
  wire                toplevel_axi_upsizer_io_output_readOnly_ar_ready;
  wire       [31:0]   toplevel_axi_upsizer_io_output_readOnly_ar_payload_addr;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_id;
  wire       [3:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_region;
  wire       [7:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_len;
  wire       [2:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_size;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_burst;
  wire       [0:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_lock;
  wire       [3:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_cache;
  wire       [3:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_qos;
  wire       [2:0]    toplevel_axi_upsizer_io_output_readOnly_ar_payload_prot;
  wire                toplevel_axi_upsizer_io_output_readOnly_r_valid;
  wire                toplevel_axi_upsizer_io_output_readOnly_r_ready;
  wire       [63:0]   toplevel_axi_upsizer_io_output_readOnly_r_payload_data;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_r_payload_id;
  wire       [1:0]    toplevel_axi_upsizer_io_output_readOnly_r_payload_resp;
  wire                toplevel_axi_upsizer_io_output_readOnly_r_payload_last;
  wire                toplevel_axi_upsizer_io_output_writeOnly_aw_valid;
  wire                toplevel_axi_upsizer_io_output_writeOnly_aw_ready;
  wire       [31:0]   toplevel_axi_upsizer_io_output_writeOnly_aw_payload_addr;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_id;
  wire       [3:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_region;
  wire       [7:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_len;
  wire       [2:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_size;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_burst;
  wire       [0:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_lock;
  wire       [3:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_cache;
  wire       [3:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_qos;
  wire       [2:0]    toplevel_axi_upsizer_io_output_writeOnly_aw_payload_prot;
  wire                toplevel_axi_upsizer_io_output_writeOnly_w_valid;
  wire                toplevel_axi_upsizer_io_output_writeOnly_w_ready;
  wire       [63:0]   toplevel_axi_upsizer_io_output_writeOnly_w_payload_data;
  wire       [7:0]    toplevel_axi_upsizer_io_output_writeOnly_w_payload_strb;
  wire                toplevel_axi_upsizer_io_output_writeOnly_w_payload_last;
  wire                toplevel_axi_upsizer_io_output_writeOnly_b_valid;
  wire                toplevel_axi_upsizer_io_output_writeOnly_b_ready;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_b_payload_id;
  wire       [1:0]    toplevel_axi_upsizer_io_output_writeOnly_b_payload_resp;
  wire                toplevel_axi_downsizer_io_output_readOnly_ar_valid;
  wire                toplevel_axi_downsizer_io_output_readOnly_ar_ready;
  wire       [31:0]   toplevel_axi_downsizer_io_output_readOnly_ar_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_readOnly_ar_payload_prot;
  wire                toplevel_axi_downsizer_io_output_readOnly_r_valid;
  wire                toplevel_axi_downsizer_io_output_readOnly_r_ready;
  wire       [31:0]   toplevel_axi_downsizer_io_output_readOnly_r_payload_data;
  wire       [3:0]    toplevel_axi_downsizer_io_output_readOnly_r_payload_id;
  wire       [1:0]    toplevel_axi_downsizer_io_output_readOnly_r_payload_resp;
  wire                toplevel_axi_downsizer_io_output_readOnly_r_payload_last;
  wire                toplevel_axi_downsizer_io_output_writeOnly_aw_valid;
  wire                toplevel_axi_downsizer_io_output_writeOnly_aw_ready;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_aw_payload_addr;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_id;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_region;
  wire       [7:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_len;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_size;
  wire       [1:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_burst;
  wire       [0:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_lock;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_cache;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_qos;
  wire       [2:0]    toplevel_axi_downsizer_io_output_writeOnly_aw_payload_prot;
  wire                toplevel_axi_downsizer_io_output_writeOnly_w_valid;
  wire                toplevel_axi_downsizer_io_output_writeOnly_w_ready;
  wire       [31:0]   toplevel_axi_downsizer_io_output_writeOnly_w_payload_data;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_w_payload_strb;
  wire                toplevel_axi_downsizer_io_output_writeOnly_w_payload_last;
  wire                toplevel_axi_downsizer_io_output_writeOnly_b_valid;
  wire                toplevel_axi_downsizer_io_output_writeOnly_b_ready;
  wire       [3:0]    toplevel_axi_downsizer_io_output_writeOnly_b_payload_id;
  wire       [1:0]    toplevel_axi_downsizer_io_output_writeOnly_b_payload_resp;
  wire                toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_valid;
  wire                toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_ready;
  wire       [31:0]   toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_addr;
  wire       [1:0]    toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_id;
  wire       [7:0]    toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_len;
  wire       [2:0]    toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_size;
  wire       [1:0]    toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_burst;
  reg                 toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_rValid;
  wire                toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_fire;
  wire                toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_fire_1;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_valid;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_ready;
  wire       [31:0]   toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_addr;
  wire       [1:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_id;
  wire       [7:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_len;
  wire       [2:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_size;
  wire       [1:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_burst;
  reg                 toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_rValid;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_fire;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_fire_1;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_valid;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_ready;
  wire       [31:0]   toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_addr;
  wire       [1:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_id;
  wire       [7:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_len;
  wire       [2:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_size;
  wire       [1:0]    toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_burst;
  reg                 toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_rValid;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_fire;
  wire                toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_fire_1;
  wire                toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid;
  wire                toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_addr;
  wire       [1:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid;
  wire                toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire;
  wire                toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire_1;
  wire                toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid;
  wire                toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_addr;
  wire       [1:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid;
  wire                toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire;
  wire                toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire_1;
  wire       [3:0]    tmp_io_inputs_0_ar_payload_region;
  wire       [3:0]    tmp_io_inputs_1_ar_payload_region;
  wire       [3:0]    tmp_io_inputs_0_aw_payload_region;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_addr;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire_1;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_valid;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_addr;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_rValid;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_fire;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_fire_1;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_valid;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_addr;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_rValid;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_fire;
  wire                toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_fire_1;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_addr;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire_1;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_valid;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_addr;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_rValid;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_fire;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_fire_1;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_valid;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_ready;
  wire       [31:0]   toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_addr;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_id;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_region;
  wire       [7:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_len;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_size;
  wire       [1:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_burst;
  wire       [0:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_lock;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_cache;
  wire       [3:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_qos;
  wire       [2:0]    toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_prot;
  reg                 toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_rValid;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_fire;
  wire                toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_fire_1;

  assign tmp_when = (resetCtrl_systemResetCounter != tmp_1);
  BufferCC bufferCC_1 (
    .io_dataIn      (bufferCC_1_io_dataIn ), //i
    .io_dataOut     (bufferCC_1_io_dataOut), //o
    .io_axiClk      (io_axiClk            ), //i
    .io_asyncResetn (io_asyncResetn       )  //i
  );
  Axi4Downsizer axi_downsizer (
    .io_input_aw_valid           (axi4WriteOnlyArbiter_1_io_output_aw_valid                     ), //i
    .io_input_aw_ready           (axi_downsizer_io_input_aw_ready                               ), //o
    .io_input_aw_payload_addr    (axi4WriteOnlyArbiter_1_io_output_aw_payload_addr[31:0]        ), //i
    .io_input_aw_payload_id      (axi4WriteOnlyArbiter_1_io_output_aw_payload_id[3:0]           ), //i
    .io_input_aw_payload_region  (axi4WriteOnlyArbiter_1_io_output_aw_payload_region[3:0]       ), //i
    .io_input_aw_payload_len     (axi4WriteOnlyArbiter_1_io_output_aw_payload_len[7:0]          ), //i
    .io_input_aw_payload_size    (axi4WriteOnlyArbiter_1_io_output_aw_payload_size[2:0]         ), //i
    .io_input_aw_payload_burst   (axi4WriteOnlyArbiter_1_io_output_aw_payload_burst[1:0]        ), //i
    .io_input_aw_payload_lock    (axi4WriteOnlyArbiter_1_io_output_aw_payload_lock              ), //i
    .io_input_aw_payload_cache   (axi4WriteOnlyArbiter_1_io_output_aw_payload_cache[3:0]        ), //i
    .io_input_aw_payload_qos     (axi4WriteOnlyArbiter_1_io_output_aw_payload_qos[3:0]          ), //i
    .io_input_aw_payload_prot    (axi4WriteOnlyArbiter_1_io_output_aw_payload_prot[2:0]         ), //i
    .io_input_w_valid            (axi4WriteOnlyArbiter_1_io_output_w_valid                      ), //i
    .io_input_w_ready            (axi_downsizer_io_input_w_ready                                ), //o
    .io_input_w_payload_data     (axi4WriteOnlyArbiter_1_io_output_w_payload_data[63:0]         ), //i
    .io_input_w_payload_strb     (axi4WriteOnlyArbiter_1_io_output_w_payload_strb[7:0]          ), //i
    .io_input_w_payload_last     (axi4WriteOnlyArbiter_1_io_output_w_payload_last               ), //i
    .io_input_b_valid            (axi_downsizer_io_input_b_valid                                ), //o
    .io_input_b_ready            (axi4WriteOnlyArbiter_1_io_output_b_ready                      ), //i
    .io_input_b_payload_id       (axi_downsizer_io_input_b_payload_id[3:0]                      ), //o
    .io_input_b_payload_resp     (axi_downsizer_io_input_b_payload_resp[1:0]                    ), //o
    .io_input_ar_valid           (axi4ReadOnlyArbiter_1_io_output_ar_valid                      ), //i
    .io_input_ar_ready           (axi_downsizer_io_input_ar_ready                               ), //o
    .io_input_ar_payload_addr    (axi4ReadOnlyArbiter_1_io_output_ar_payload_addr[31:0]         ), //i
    .io_input_ar_payload_id      (axi4ReadOnlyArbiter_1_io_output_ar_payload_id[3:0]            ), //i
    .io_input_ar_payload_region  (axi4ReadOnlyArbiter_1_io_output_ar_payload_region[3:0]        ), //i
    .io_input_ar_payload_len     (axi4ReadOnlyArbiter_1_io_output_ar_payload_len[7:0]           ), //i
    .io_input_ar_payload_size    (axi4ReadOnlyArbiter_1_io_output_ar_payload_size[2:0]          ), //i
    .io_input_ar_payload_burst   (axi4ReadOnlyArbiter_1_io_output_ar_payload_burst[1:0]         ), //i
    .io_input_ar_payload_lock    (axi4ReadOnlyArbiter_1_io_output_ar_payload_lock               ), //i
    .io_input_ar_payload_cache   (axi4ReadOnlyArbiter_1_io_output_ar_payload_cache[3:0]         ), //i
    .io_input_ar_payload_qos     (axi4ReadOnlyArbiter_1_io_output_ar_payload_qos[3:0]           ), //i
    .io_input_ar_payload_prot    (axi4ReadOnlyArbiter_1_io_output_ar_payload_prot[2:0]          ), //i
    .io_input_r_valid            (axi_downsizer_io_input_r_valid                                ), //o
    .io_input_r_ready            (axi4ReadOnlyArbiter_1_io_output_r_ready                       ), //i
    .io_input_r_payload_data     (axi_downsizer_io_input_r_payload_data[63:0]                   ), //o
    .io_input_r_payload_id       (axi_downsizer_io_input_r_payload_id[3:0]                      ), //o
    .io_input_r_payload_resp     (axi_downsizer_io_input_r_payload_resp[1:0]                    ), //o
    .io_input_r_payload_last     (axi_downsizer_io_input_r_payload_last                         ), //o
    .io_output_aw_valid          (axi_downsizer_io_output_aw_valid                              ), //o
    .io_output_aw_ready          (toplevel_axi_downsizer_io_output_writeOnly_aw_ready           ), //i
    .io_output_aw_payload_addr   (axi_downsizer_io_output_aw_payload_addr[31:0]                 ), //o
    .io_output_aw_payload_id     (axi_downsizer_io_output_aw_payload_id[3:0]                    ), //o
    .io_output_aw_payload_region (axi_downsizer_io_output_aw_payload_region[3:0]                ), //o
    .io_output_aw_payload_len    (axi_downsizer_io_output_aw_payload_len[7:0]                   ), //o
    .io_output_aw_payload_size   (axi_downsizer_io_output_aw_payload_size[2:0]                  ), //o
    .io_output_aw_payload_burst  (axi_downsizer_io_output_aw_payload_burst[1:0]                 ), //o
    .io_output_aw_payload_lock   (axi_downsizer_io_output_aw_payload_lock                       ), //o
    .io_output_aw_payload_cache  (axi_downsizer_io_output_aw_payload_cache[3:0]                 ), //o
    .io_output_aw_payload_qos    (axi_downsizer_io_output_aw_payload_qos[3:0]                   ), //o
    .io_output_aw_payload_prot   (axi_downsizer_io_output_aw_payload_prot[2:0]                  ), //o
    .io_output_w_valid           (axi_downsizer_io_output_w_valid                               ), //o
    .io_output_w_ready           (toplevel_axi_downsizer_io_output_writeOnly_w_ready            ), //i
    .io_output_w_payload_data    (axi_downsizer_io_output_w_payload_data[31:0]                  ), //o
    .io_output_w_payload_strb    (axi_downsizer_io_output_w_payload_strb[3:0]                   ), //o
    .io_output_w_payload_last    (axi_downsizer_io_output_w_payload_last                        ), //o
    .io_output_b_valid           (toplevel_axi_downsizer_io_output_writeOnly_b_valid            ), //i
    .io_output_b_ready           (axi_downsizer_io_output_b_ready                               ), //o
    .io_output_b_payload_id      (toplevel_axi_downsizer_io_output_writeOnly_b_payload_id[3:0]  ), //i
    .io_output_b_payload_resp    (toplevel_axi_downsizer_io_output_writeOnly_b_payload_resp[1:0]), //i
    .io_output_ar_valid          (axi_downsizer_io_output_ar_valid                              ), //o
    .io_output_ar_ready          (toplevel_axi_downsizer_io_output_readOnly_ar_ready            ), //i
    .io_output_ar_payload_addr   (axi_downsizer_io_output_ar_payload_addr[31:0]                 ), //o
    .io_output_ar_payload_id     (axi_downsizer_io_output_ar_payload_id[3:0]                    ), //o
    .io_output_ar_payload_region (axi_downsizer_io_output_ar_payload_region[3:0]                ), //o
    .io_output_ar_payload_len    (axi_downsizer_io_output_ar_payload_len[7:0]                   ), //o
    .io_output_ar_payload_size   (axi_downsizer_io_output_ar_payload_size[2:0]                  ), //o
    .io_output_ar_payload_burst  (axi_downsizer_io_output_ar_payload_burst[1:0]                 ), //o
    .io_output_ar_payload_lock   (axi_downsizer_io_output_ar_payload_lock                       ), //o
    .io_output_ar_payload_cache  (axi_downsizer_io_output_ar_payload_cache[3:0]                 ), //o
    .io_output_ar_payload_qos    (axi_downsizer_io_output_ar_payload_qos[3:0]                   ), //o
    .io_output_ar_payload_prot   (axi_downsizer_io_output_ar_payload_prot[2:0]                  ), //o
    .io_output_r_valid           (toplevel_axi_downsizer_io_output_readOnly_r_valid             ), //i
    .io_output_r_ready           (axi_downsizer_io_output_r_ready                               ), //o
    .io_output_r_payload_data    (toplevel_axi_downsizer_io_output_readOnly_r_payload_data[31:0]), //i
    .io_output_r_payload_id      (toplevel_axi_downsizer_io_output_readOnly_r_payload_id[3:0]   ), //i
    .io_output_r_payload_resp    (toplevel_axi_downsizer_io_output_readOnly_r_payload_resp[1:0] ), //i
    .io_output_r_payload_last    (toplevel_axi_downsizer_io_output_readOnly_r_payload_last      ), //i
    .io_axiClk                   (io_axiClk                                                     ), //i
    .tmp_io_resetn               (tmp_io_resetn                                                 )  //i
  );
  Axi4Upsizer axi_upsizer (
    .io_input_aw_valid           (io_axi_usb_aw_valid                                         ), //i
    .io_input_aw_ready           (axi_upsizer_io_input_aw_ready                               ), //o
    .io_input_aw_payload_addr    (io_axi_usb_aw_payload_addr[31:0]                            ), //i
    .io_input_aw_payload_id      (io_axi_usb_aw_payload_id[1:0]                               ), //i
    .io_input_aw_payload_region  (io_axi_usb_aw_payload_region[3:0]                           ), //i
    .io_input_aw_payload_len     (io_axi_usb_aw_payload_len[7:0]                              ), //i
    .io_input_aw_payload_size    (io_axi_usb_aw_payload_size[2:0]                             ), //i
    .io_input_aw_payload_burst   (io_axi_usb_aw_payload_burst[1:0]                            ), //i
    .io_input_aw_payload_lock    (io_axi_usb_aw_payload_lock                                  ), //i
    .io_input_aw_payload_cache   (io_axi_usb_aw_payload_cache[3:0]                            ), //i
    .io_input_aw_payload_qos     (io_axi_usb_aw_payload_qos[3:0]                              ), //i
    .io_input_aw_payload_prot    (io_axi_usb_aw_payload_prot[2:0]                             ), //i
    .io_input_w_valid            (io_axi_usb_w_valid                                          ), //i
    .io_input_w_ready            (axi_upsizer_io_input_w_ready                                ), //o
    .io_input_w_payload_data     (io_axi_usb_w_payload_data[31:0]                             ), //i
    .io_input_w_payload_strb     (io_axi_usb_w_payload_strb[3:0]                              ), //i
    .io_input_w_payload_last     (io_axi_usb_w_payload_last                                   ), //i
    .io_input_b_valid            (axi_upsizer_io_input_b_valid                                ), //o
    .io_input_b_ready            (io_axi_usb_b_ready                                          ), //i
    .io_input_b_payload_id       (axi_upsizer_io_input_b_payload_id[1:0]                      ), //o
    .io_input_b_payload_resp     (axi_upsizer_io_input_b_payload_resp[1:0]                    ), //o
    .io_input_ar_valid           (io_axi_usb_ar_valid                                         ), //i
    .io_input_ar_ready           (axi_upsizer_io_input_ar_ready                               ), //o
    .io_input_ar_payload_addr    (io_axi_usb_ar_payload_addr[31:0]                            ), //i
    .io_input_ar_payload_id      (io_axi_usb_ar_payload_id[1:0]                               ), //i
    .io_input_ar_payload_region  (io_axi_usb_ar_payload_region[3:0]                           ), //i
    .io_input_ar_payload_len     (io_axi_usb_ar_payload_len[7:0]                              ), //i
    .io_input_ar_payload_size    (io_axi_usb_ar_payload_size[2:0]                             ), //i
    .io_input_ar_payload_burst   (io_axi_usb_ar_payload_burst[1:0]                            ), //i
    .io_input_ar_payload_lock    (io_axi_usb_ar_payload_lock                                  ), //i
    .io_input_ar_payload_cache   (io_axi_usb_ar_payload_cache[3:0]                            ), //i
    .io_input_ar_payload_qos     (io_axi_usb_ar_payload_qos[3:0]                              ), //i
    .io_input_ar_payload_prot    (io_axi_usb_ar_payload_prot[2:0]                             ), //i
    .io_input_r_valid            (axi_upsizer_io_input_r_valid                                ), //o
    .io_input_r_ready            (io_axi_usb_r_ready                                          ), //i
    .io_input_r_payload_data     (axi_upsizer_io_input_r_payload_data[31:0]                   ), //o
    .io_input_r_payload_id       (axi_upsizer_io_input_r_payload_id[1:0]                      ), //o
    .io_input_r_payload_resp     (axi_upsizer_io_input_r_payload_resp[1:0]                    ), //o
    .io_input_r_payload_last     (axi_upsizer_io_input_r_payload_last                         ), //o
    .io_output_aw_valid          (axi_upsizer_io_output_aw_valid                              ), //o
    .io_output_aw_ready          (toplevel_axi_upsizer_io_output_writeOnly_aw_ready           ), //i
    .io_output_aw_payload_addr   (axi_upsizer_io_output_aw_payload_addr[31:0]                 ), //o
    .io_output_aw_payload_id     (axi_upsizer_io_output_aw_payload_id[1:0]                    ), //o
    .io_output_aw_payload_region (axi_upsizer_io_output_aw_payload_region[3:0]                ), //o
    .io_output_aw_payload_len    (axi_upsizer_io_output_aw_payload_len[7:0]                   ), //o
    .io_output_aw_payload_size   (axi_upsizer_io_output_aw_payload_size[2:0]                  ), //o
    .io_output_aw_payload_burst  (axi_upsizer_io_output_aw_payload_burst[1:0]                 ), //o
    .io_output_aw_payload_lock   (axi_upsizer_io_output_aw_payload_lock                       ), //o
    .io_output_aw_payload_cache  (axi_upsizer_io_output_aw_payload_cache[3:0]                 ), //o
    .io_output_aw_payload_qos    (axi_upsizer_io_output_aw_payload_qos[3:0]                   ), //o
    .io_output_aw_payload_prot   (axi_upsizer_io_output_aw_payload_prot[2:0]                  ), //o
    .io_output_w_valid           (axi_upsizer_io_output_w_valid                               ), //o
    .io_output_w_ready           (toplevel_axi_upsizer_io_output_writeOnly_w_ready            ), //i
    .io_output_w_payload_data    (axi_upsizer_io_output_w_payload_data[63:0]                  ), //o
    .io_output_w_payload_strb    (axi_upsizer_io_output_w_payload_strb[7:0]                   ), //o
    .io_output_w_payload_last    (axi_upsizer_io_output_w_payload_last                        ), //o
    .io_output_b_valid           (toplevel_axi_upsizer_io_output_writeOnly_b_valid            ), //i
    .io_output_b_ready           (axi_upsizer_io_output_b_ready                               ), //o
    .io_output_b_payload_id      (toplevel_axi_upsizer_io_output_writeOnly_b_payload_id[1:0]  ), //i
    .io_output_b_payload_resp    (toplevel_axi_upsizer_io_output_writeOnly_b_payload_resp[1:0]), //i
    .io_output_ar_valid          (axi_upsizer_io_output_ar_valid                              ), //o
    .io_output_ar_ready          (toplevel_axi_upsizer_io_output_readOnly_ar_ready            ), //i
    .io_output_ar_payload_addr   (axi_upsizer_io_output_ar_payload_addr[31:0]                 ), //o
    .io_output_ar_payload_id     (axi_upsizer_io_output_ar_payload_id[1:0]                    ), //o
    .io_output_ar_payload_region (axi_upsizer_io_output_ar_payload_region[3:0]                ), //o
    .io_output_ar_payload_len    (axi_upsizer_io_output_ar_payload_len[7:0]                   ), //o
    .io_output_ar_payload_size   (axi_upsizer_io_output_ar_payload_size[2:0]                  ), //o
    .io_output_ar_payload_burst  (axi_upsizer_io_output_ar_payload_burst[1:0]                 ), //o
    .io_output_ar_payload_lock   (axi_upsizer_io_output_ar_payload_lock                       ), //o
    .io_output_ar_payload_cache  (axi_upsizer_io_output_ar_payload_cache[3:0]                 ), //o
    .io_output_ar_payload_qos    (axi_upsizer_io_output_ar_payload_qos[3:0]                   ), //o
    .io_output_ar_payload_prot   (axi_upsizer_io_output_ar_payload_prot[2:0]                  ), //o
    .io_output_r_valid           (toplevel_axi_upsizer_io_output_readOnly_r_valid             ), //i
    .io_output_r_ready           (axi_upsizer_io_output_r_ready                               ), //o
    .io_output_r_payload_data    (toplevel_axi_upsizer_io_output_readOnly_r_payload_data[63:0]), //i
    .io_output_r_payload_id      (toplevel_axi_upsizer_io_output_readOnly_r_payload_id[1:0]   ), //i
    .io_output_r_payload_resp    (toplevel_axi_upsizer_io_output_readOnly_r_payload_resp[1:0] ), //i
    .io_output_r_payload_last    (toplevel_axi_upsizer_io_output_readOnly_r_payload_last      ), //i
    .io_axiClk                   (io_axiClk                                                   ), //i
    .tmp_io_resetn               (tmp_io_resetn                                               )  //i
  );
  Axi4SharedToApb3Bridge axi_apbBridge (
    .io_axi_arw_valid         (axi_apbBridge_io_axi_arbiter_io_output_arw_valid             ), //i
    .io_axi_arw_ready         (axi_apbBridge_io_axi_arw_ready                               ), //o
    .io_axi_arw_payload_addr  (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_addr[19:0]), //i
    .io_axi_arw_payload_id    (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_id[3:0]   ), //i
    .io_axi_arw_payload_len   (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_len[7:0]  ), //i
    .io_axi_arw_payload_size  (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_size[2:0] ), //i
    .io_axi_arw_payload_burst (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_burst[1:0]), //i
    .io_axi_arw_payload_write (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_write     ), //i
    .io_axi_w_valid           (axi_apbBridge_io_axi_arbiter_io_output_w_valid               ), //i
    .io_axi_w_ready           (axi_apbBridge_io_axi_w_ready                                 ), //o
    .io_axi_w_payload_data    (axi_apbBridge_io_axi_arbiter_io_output_w_payload_data[31:0]  ), //i
    .io_axi_w_payload_strb    (axi_apbBridge_io_axi_arbiter_io_output_w_payload_strb[3:0]   ), //i
    .io_axi_w_payload_last    (axi_apbBridge_io_axi_arbiter_io_output_w_payload_last        ), //i
    .io_axi_b_valid           (axi_apbBridge_io_axi_b_valid                                 ), //o
    .io_axi_b_ready           (axi_apbBridge_io_axi_arbiter_io_output_b_ready               ), //i
    .io_axi_b_payload_id      (axi_apbBridge_io_axi_b_payload_id[3:0]                       ), //o
    .io_axi_b_payload_resp    (axi_apbBridge_io_axi_b_payload_resp[1:0]                     ), //o
    .io_axi_r_valid           (axi_apbBridge_io_axi_r_valid                                 ), //o
    .io_axi_r_ready           (axi_apbBridge_io_axi_arbiter_io_output_r_ready               ), //i
    .io_axi_r_payload_data    (axi_apbBridge_io_axi_r_payload_data[31:0]                    ), //o
    .io_axi_r_payload_id      (axi_apbBridge_io_axi_r_payload_id[3:0]                       ), //o
    .io_axi_r_payload_resp    (axi_apbBridge_io_axi_r_payload_resp[1:0]                     ), //o
    .io_axi_r_payload_last    (axi_apbBridge_io_axi_r_payload_last                          ), //o
    .io_apb_PADDR             (axi_apbBridge_io_apb_PADDR[19:0]                             ), //o
    .io_apb_PSEL              (axi_apbBridge_io_apb_PSEL                                    ), //o
    .io_apb_PENABLE           (axi_apbBridge_io_apb_PENABLE                                 ), //o
    .io_apb_PREADY            (io_apb_decoder_io_input_PREADY                               ), //i
    .io_apb_PWRITE            (axi_apbBridge_io_apb_PWRITE                                  ), //o
    .io_apb_PWDATA            (axi_apbBridge_io_apb_PWDATA[31:0]                            ), //o
    .io_apb_PRDATA            (io_apb_decoder_io_input_PRDATA[31:0]                         ), //i
    .io_apb_PSLVERROR         (io_apb_decoder_io_input_PSLVERROR                            ), //i
    .io_axiClk                (io_axiClk                                                    ), //i
    .tmp_io_resetn            (tmp_io_resetn                                                )  //i
  );
  DandMaxFreq axi_cpu_area_cpu (
    .icache_ar_valid         (axi_cpu_area_cpu_icache_ar_valid                              ), //o
    .icache_ar_ready         (axi_cpu_area_cpu_icache_decoder_io_input_ar_ready             ), //i
    .icache_ar_payload_addr  (axi_cpu_area_cpu_icache_ar_payload_addr[31:0]                 ), //o
    .icache_ar_payload_id    (axi_cpu_area_cpu_icache_ar_payload_id[1:0]                    ), //o
    .icache_ar_payload_len   (axi_cpu_area_cpu_icache_ar_payload_len[7:0]                   ), //o
    .icache_ar_payload_size  (axi_cpu_area_cpu_icache_ar_payload_size[2:0]                  ), //o
    .icache_ar_payload_burst (axi_cpu_area_cpu_icache_ar_payload_burst[1:0]                 ), //o
    .icache_r_valid          (axi_cpu_area_cpu_icache_decoder_io_input_r_valid              ), //i
    .icache_r_ready          (axi_cpu_area_cpu_icache_r_ready                               ), //o
    .icache_r_payload_data   (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_data[63:0] ), //i
    .icache_r_payload_id     (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_id[1:0]    ), //i
    .icache_r_payload_resp   (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_resp[1:0]  ), //i
    .icache_r_payload_last   (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_last       ), //i
    .dcache_ar_valid         (axi_cpu_area_cpu_dcache_ar_valid                              ), //o
    .dcache_ar_ready         (axi_cpu_area_cpu_dcache_decoder_io_input_ar_ready             ), //i
    .dcache_ar_payload_addr  (axi_cpu_area_cpu_dcache_ar_payload_addr[31:0]                 ), //o
    .dcache_ar_payload_id    (axi_cpu_area_cpu_dcache_ar_payload_id[1:0]                    ), //o
    .dcache_ar_payload_len   (axi_cpu_area_cpu_dcache_ar_payload_len[7:0]                   ), //o
    .dcache_ar_payload_size  (axi_cpu_area_cpu_dcache_ar_payload_size[2:0]                  ), //o
    .dcache_ar_payload_burst (axi_cpu_area_cpu_dcache_ar_payload_burst[1:0]                 ), //o
    .dcache_r_valid          (axi_cpu_area_cpu_dcache_decoder_io_input_r_valid              ), //i
    .dcache_r_ready          (axi_cpu_area_cpu_dcache_r_ready                               ), //o
    .dcache_r_payload_data   (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_data[63:0] ), //i
    .dcache_r_payload_id     (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_id[1:0]    ), //i
    .dcache_r_payload_resp   (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_resp[1:0]  ), //i
    .dcache_r_payload_last   (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_last       ), //i
    .dcache_aw_valid         (axi_cpu_area_cpu_dcache_aw_valid                              ), //o
    .dcache_aw_ready         (axi_cpu_area_cpu_dcache_decoder_1_io_input_aw_ready           ), //i
    .dcache_aw_payload_addr  (axi_cpu_area_cpu_dcache_aw_payload_addr[31:0]                 ), //o
    .dcache_aw_payload_id    (axi_cpu_area_cpu_dcache_aw_payload_id[1:0]                    ), //o
    .dcache_aw_payload_len   (axi_cpu_area_cpu_dcache_aw_payload_len[7:0]                   ), //o
    .dcache_aw_payload_size  (axi_cpu_area_cpu_dcache_aw_payload_size[2:0]                  ), //o
    .dcache_aw_payload_burst (axi_cpu_area_cpu_dcache_aw_payload_burst[1:0]                 ), //o
    .dcache_w_valid          (axi_cpu_area_cpu_dcache_w_valid                               ), //o
    .dcache_w_ready          (axi_cpu_area_cpu_dcache_decoder_1_io_input_w_ready            ), //i
    .dcache_w_payload_data   (axi_cpu_area_cpu_dcache_w_payload_data[63:0]                  ), //o
    .dcache_w_payload_strb   (axi_cpu_area_cpu_dcache_w_payload_strb[7:0]                   ), //o
    .dcache_w_payload_last   (axi_cpu_area_cpu_dcache_w_payload_last                        ), //o
    .dcache_b_valid          (axi_cpu_area_cpu_dcache_decoder_1_io_input_b_valid            ), //i
    .dcache_b_ready          (axi_cpu_area_cpu_dcache_b_ready                               ), //o
    .dcache_b_payload_id     (axi_cpu_area_cpu_dcache_decoder_1_io_input_b_payload_id[1:0]  ), //i
    .dcache_b_payload_resp   (axi_cpu_area_cpu_dcache_decoder_1_io_input_b_payload_resp[1:0]), //i
    .io_axiClk               (io_axiClk                                                     ), //i
    .cpu_rst                 (cpu_rst                                                       )  //i
  );
  Apb3Uart axi_uartCtrl (
    .io_apb_PADDR     (axi_uartCtrl_io_apb_PADDR[15:0]       ), //i
    .io_apb_PSEL      (apb3Router_1_io_outputs_0_PSEL        ), //i
    .io_apb_PENABLE   (apb3Router_1_io_outputs_0_PENABLE     ), //i
    .io_apb_PREADY    (axi_uartCtrl_io_apb_PREADY            ), //o
    .io_apb_PWRITE    (apb3Router_1_io_outputs_0_PWRITE      ), //i
    .io_apb_PWDATA    (apb3Router_1_io_outputs_0_PWDATA[31:0]), //i
    .io_apb_PRDATA    (axi_uartCtrl_io_apb_PRDATA[31:0]      ), //o
    .io_apb_PSLVERROR (axi_uartCtrl_io_apb_PSLVERROR         ), //o
    .io_uart_txd      (axi_uartCtrl_io_uart_txd              ), //o
    .io_uart_rxd      (io_uart_rxd                           ), //i
    .io_clock         (io_axiClk                             ), //i
    .io_resetn        (axi_uartCtrl_io_resetn                )  //i
  );
  Apb3Timer axi_timer (
    .io_apb_PADDR     (axi_timer_io_apb_PADDR[7:0]           ), //i
    .io_apb_PSEL      (apb3Router_1_io_outputs_1_PSEL        ), //i
    .io_apb_PENABLE   (apb3Router_1_io_outputs_1_PENABLE     ), //i
    .io_apb_PREADY    (axi_timer_io_apb_PREADY               ), //o
    .io_apb_PWRITE    (apb3Router_1_io_outputs_1_PWRITE      ), //i
    .io_apb_PWDATA    (apb3Router_1_io_outputs_1_PWDATA[31:0]), //i
    .io_apb_PRDATA    (axi_timer_io_apb_PRDATA[31:0]         ), //o
    .io_apb_PSLVERROR (axi_timer_io_apb_PSLVERROR            ), //o
    .io_axiClk        (io_axiClk                             ), //i
    .tmp_io_resetn    (tmp_io_resetn                         )  //i
  );
  Axi4ReadOnlyDecoder axi_cpu_area_cpu_icache_decoder (
    .io_input_ar_valid             (axi_cpu_area_cpu_icache_ar_valid                                         ), //i
    .io_input_ar_ready             (axi_cpu_area_cpu_icache_decoder_io_input_ar_ready                        ), //o
    .io_input_ar_payload_addr      (axi_cpu_area_cpu_icache_ar_payload_addr[31:0]                            ), //i
    .io_input_ar_payload_id        (axi_cpu_area_cpu_icache_ar_payload_id[1:0]                               ), //i
    .io_input_ar_payload_len       (axi_cpu_area_cpu_icache_ar_payload_len[7:0]                              ), //i
    .io_input_ar_payload_size      (axi_cpu_area_cpu_icache_ar_payload_size[2:0]                             ), //i
    .io_input_ar_payload_burst     (axi_cpu_area_cpu_icache_ar_payload_burst[1:0]                            ), //i
    .io_input_r_valid              (axi_cpu_area_cpu_icache_decoder_io_input_r_valid                         ), //o
    .io_input_r_ready              (axi_cpu_area_cpu_icache_r_ready                                          ), //i
    .io_input_r_payload_data       (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_data[63:0]            ), //o
    .io_input_r_payload_id         (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_id[1:0]               ), //o
    .io_input_r_payload_resp       (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_resp[1:0]             ), //o
    .io_input_r_payload_last       (axi_cpu_area_cpu_icache_decoder_io_input_r_payload_last                  ), //o
    .io_outputs_0_ar_valid         (axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_valid                    ), //o
    .io_outputs_0_ar_ready         (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_fire_1), //i
    .io_outputs_0_ar_payload_addr  (axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_addr[31:0]       ), //o
    .io_outputs_0_ar_payload_id    (axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_id[1:0]          ), //o
    .io_outputs_0_ar_payload_len   (axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_len[7:0]         ), //o
    .io_outputs_0_ar_payload_size  (axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_size[2:0]        ), //o
    .io_outputs_0_ar_payload_burst (axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_burst[1:0]       ), //o
    .io_outputs_0_r_valid          (axi4ReadOnlyArbiter_1_io_inputs_0_r_valid                                ), //i
    .io_outputs_0_r_ready          (axi_cpu_area_cpu_icache_decoder_io_outputs_0_r_ready                     ), //o
    .io_outputs_0_r_payload_data   (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_data[63:0]                   ), //i
    .io_outputs_0_r_payload_id     (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_id[1:0]                      ), //i
    .io_outputs_0_r_payload_resp   (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_resp[1:0]                    ), //i
    .io_outputs_0_r_payload_last   (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_last                         ), //i
    .io_axiClk                     (io_axiClk                                                                ), //i
    .tmp_io_resetn                 (tmp_io_resetn                                                            )  //i
  );
  Axi4ReadOnlyDecoder axi_cpu_area_cpu_dcache_decoder (
    .io_input_ar_valid             (axi_cpu_area_cpu_dcache_ar_valid                                         ), //i
    .io_input_ar_ready             (axi_cpu_area_cpu_dcache_decoder_io_input_ar_ready                        ), //o
    .io_input_ar_payload_addr      (axi_cpu_area_cpu_dcache_ar_payload_addr[31:0]                            ), //i
    .io_input_ar_payload_id        (axi_cpu_area_cpu_dcache_ar_payload_id[1:0]                               ), //i
    .io_input_ar_payload_len       (axi_cpu_area_cpu_dcache_ar_payload_len[7:0]                              ), //i
    .io_input_ar_payload_size      (axi_cpu_area_cpu_dcache_ar_payload_size[2:0]                             ), //i
    .io_input_ar_payload_burst     (axi_cpu_area_cpu_dcache_ar_payload_burst[1:0]                            ), //i
    .io_input_r_valid              (axi_cpu_area_cpu_dcache_decoder_io_input_r_valid                         ), //o
    .io_input_r_ready              (axi_cpu_area_cpu_dcache_r_ready                                          ), //i
    .io_input_r_payload_data       (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_data[63:0]            ), //o
    .io_input_r_payload_id         (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_id[1:0]               ), //o
    .io_input_r_payload_resp       (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_resp[1:0]             ), //o
    .io_input_r_payload_last       (axi_cpu_area_cpu_dcache_decoder_io_input_r_payload_last                  ), //o
    .io_outputs_0_ar_valid         (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_valid                    ), //o
    .io_outputs_0_ar_ready         (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_fire_1), //i
    .io_outputs_0_ar_payload_addr  (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_addr[31:0]       ), //o
    .io_outputs_0_ar_payload_id    (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_id[1:0]          ), //o
    .io_outputs_0_ar_payload_len   (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_len[7:0]         ), //o
    .io_outputs_0_ar_payload_size  (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_size[2:0]        ), //o
    .io_outputs_0_ar_payload_burst (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_burst[1:0]       ), //o
    .io_outputs_0_r_valid          (axi4ReadOnlyArbiter_1_io_inputs_1_r_valid                                ), //i
    .io_outputs_0_r_ready          (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_r_ready                     ), //o
    .io_outputs_0_r_payload_data   (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_data[63:0]                   ), //i
    .io_outputs_0_r_payload_id     (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_id[1:0]                      ), //i
    .io_outputs_0_r_payload_resp   (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_resp[1:0]                    ), //i
    .io_outputs_0_r_payload_last   (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_last                         ), //i
    .io_axiClk                     (io_axiClk                                                                ), //i
    .tmp_io_resetn                 (tmp_io_resetn                                                            )  //i
  );
  Axi4WriteOnlyDecoder axi_cpu_area_cpu_dcache_decoder_1 (
    .io_input_aw_valid             (axi_cpu_area_cpu_dcache_aw_valid                                           ), //i
    .io_input_aw_ready             (axi_cpu_area_cpu_dcache_decoder_1_io_input_aw_ready                        ), //o
    .io_input_aw_payload_addr      (axi_cpu_area_cpu_dcache_aw_payload_addr[31:0]                              ), //i
    .io_input_aw_payload_id        (axi_cpu_area_cpu_dcache_aw_payload_id[1:0]                                 ), //i
    .io_input_aw_payload_len       (axi_cpu_area_cpu_dcache_aw_payload_len[7:0]                                ), //i
    .io_input_aw_payload_size      (axi_cpu_area_cpu_dcache_aw_payload_size[2:0]                               ), //i
    .io_input_aw_payload_burst     (axi_cpu_area_cpu_dcache_aw_payload_burst[1:0]                              ), //i
    .io_input_w_valid              (axi_cpu_area_cpu_dcache_w_valid                                            ), //i
    .io_input_w_ready              (axi_cpu_area_cpu_dcache_decoder_1_io_input_w_ready                         ), //o
    .io_input_w_payload_data       (axi_cpu_area_cpu_dcache_w_payload_data[63:0]                               ), //i
    .io_input_w_payload_strb       (axi_cpu_area_cpu_dcache_w_payload_strb[7:0]                                ), //i
    .io_input_w_payload_last       (axi_cpu_area_cpu_dcache_w_payload_last                                     ), //i
    .io_input_b_valid              (axi_cpu_area_cpu_dcache_decoder_1_io_input_b_valid                         ), //o
    .io_input_b_ready              (axi_cpu_area_cpu_dcache_b_ready                                            ), //i
    .io_input_b_payload_id         (axi_cpu_area_cpu_dcache_decoder_1_io_input_b_payload_id[1:0]               ), //o
    .io_input_b_payload_resp       (axi_cpu_area_cpu_dcache_decoder_1_io_input_b_payload_resp[1:0]             ), //o
    .io_outputs_0_aw_valid         (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_valid                    ), //o
    .io_outputs_0_aw_ready         (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_fire_1), //i
    .io_outputs_0_aw_payload_addr  (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_addr[31:0]       ), //o
    .io_outputs_0_aw_payload_id    (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_id[1:0]          ), //o
    .io_outputs_0_aw_payload_len   (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_len[7:0]         ), //o
    .io_outputs_0_aw_payload_size  (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_size[2:0]        ), //o
    .io_outputs_0_aw_payload_burst (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_burst[1:0]       ), //o
    .io_outputs_0_w_valid          (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_valid                     ), //o
    .io_outputs_0_w_ready          (axi4WriteOnlyArbiter_1_io_inputs_0_w_ready                                 ), //i
    .io_outputs_0_w_payload_data   (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_data[63:0]        ), //o
    .io_outputs_0_w_payload_strb   (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_strb[7:0]         ), //o
    .io_outputs_0_w_payload_last   (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_last              ), //o
    .io_outputs_0_b_valid          (axi4WriteOnlyArbiter_1_io_inputs_0_b_valid                                 ), //i
    .io_outputs_0_b_ready          (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_b_ready                     ), //o
    .io_outputs_0_b_payload_id     (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_b_payload_id[1:0]           ), //i
    .io_outputs_0_b_payload_resp   (axi4WriteOnlyArbiter_1_io_inputs_0_b_payload_resp[1:0]                     ), //i
    .io_axiClk                     (io_axiClk                                                                  ), //i
    .tmp_io_resetn                 (tmp_io_resetn                                                              )  //i
  );
  Axi4ReadOnlyDecoder_2 toplevel_axi_upsizer_io_output_readOnly_decoder (
    .io_input_ar_valid              (toplevel_axi_upsizer_io_output_readOnly_ar_valid                                         ), //i
    .io_input_ar_ready              (toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_ar_ready                        ), //o
    .io_input_ar_payload_addr       (toplevel_axi_upsizer_io_output_readOnly_ar_payload_addr[31:0]                            ), //i
    .io_input_ar_payload_id         (toplevel_axi_upsizer_io_output_readOnly_ar_payload_id[1:0]                               ), //i
    .io_input_ar_payload_region     (toplevel_axi_upsizer_io_output_readOnly_ar_payload_region[3:0]                           ), //i
    .io_input_ar_payload_len        (toplevel_axi_upsizer_io_output_readOnly_ar_payload_len[7:0]                              ), //i
    .io_input_ar_payload_size       (toplevel_axi_upsizer_io_output_readOnly_ar_payload_size[2:0]                             ), //i
    .io_input_ar_payload_burst      (toplevel_axi_upsizer_io_output_readOnly_ar_payload_burst[1:0]                            ), //i
    .io_input_ar_payload_lock       (toplevel_axi_upsizer_io_output_readOnly_ar_payload_lock                                  ), //i
    .io_input_ar_payload_cache      (toplevel_axi_upsizer_io_output_readOnly_ar_payload_cache[3:0]                            ), //i
    .io_input_ar_payload_qos        (toplevel_axi_upsizer_io_output_readOnly_ar_payload_qos[3:0]                              ), //i
    .io_input_ar_payload_prot       (toplevel_axi_upsizer_io_output_readOnly_ar_payload_prot[2:0]                             ), //i
    .io_input_r_valid               (toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_valid                         ), //o
    .io_input_r_ready               (toplevel_axi_upsizer_io_output_readOnly_r_ready                                          ), //i
    .io_input_r_payload_data        (toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_data[63:0]            ), //o
    .io_input_r_payload_id          (toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_id[1:0]               ), //o
    .io_input_r_payload_resp        (toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_resp[1:0]             ), //o
    .io_input_r_payload_last        (toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_last                  ), //o
    .io_outputs_0_ar_valid          (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_valid                    ), //o
    .io_outputs_0_ar_ready          (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire_1), //i
    .io_outputs_0_ar_payload_addr   (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_addr[31:0]       ), //o
    .io_outputs_0_ar_payload_id     (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_id[1:0]          ), //o
    .io_outputs_0_ar_payload_region (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_region[3:0]      ), //o
    .io_outputs_0_ar_payload_len    (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_len[7:0]         ), //o
    .io_outputs_0_ar_payload_size   (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_size[2:0]        ), //o
    .io_outputs_0_ar_payload_burst  (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_burst[1:0]       ), //o
    .io_outputs_0_ar_payload_lock   (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_lock             ), //o
    .io_outputs_0_ar_payload_cache  (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_cache[3:0]       ), //o
    .io_outputs_0_ar_payload_qos    (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_qos[3:0]         ), //o
    .io_outputs_0_ar_payload_prot   (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_prot[2:0]        ), //o
    .io_outputs_0_r_valid           (axi4ReadOnlyArbiter_1_io_inputs_2_r_valid                                                ), //i
    .io_outputs_0_r_ready           (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_r_ready                     ), //o
    .io_outputs_0_r_payload_data    (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_data[63:0]                                   ), //i
    .io_outputs_0_r_payload_id      (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_id[1:0]                                      ), //i
    .io_outputs_0_r_payload_resp    (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_resp[1:0]                                    ), //i
    .io_outputs_0_r_payload_last    (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_last                                         ), //i
    .io_axiClk                      (io_axiClk                                                                                ), //i
    .tmp_io_resetn                  (tmp_io_resetn                                                                            )  //i
  );
  Axi4WriteOnlyDecoder_1 toplevel_axi_upsizer_io_output_writeOnly_decoder (
    .io_input_aw_valid              (toplevel_axi_upsizer_io_output_writeOnly_aw_valid                                         ), //i
    .io_input_aw_ready              (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_aw_ready                        ), //o
    .io_input_aw_payload_addr       (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_addr[31:0]                            ), //i
    .io_input_aw_payload_id         (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_id[1:0]                               ), //i
    .io_input_aw_payload_region     (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_region[3:0]                           ), //i
    .io_input_aw_payload_len        (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_len[7:0]                              ), //i
    .io_input_aw_payload_size       (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_size[2:0]                             ), //i
    .io_input_aw_payload_burst      (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_burst[1:0]                            ), //i
    .io_input_aw_payload_lock       (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_lock                                  ), //i
    .io_input_aw_payload_cache      (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_cache[3:0]                            ), //i
    .io_input_aw_payload_qos        (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_qos[3:0]                              ), //i
    .io_input_aw_payload_prot       (toplevel_axi_upsizer_io_output_writeOnly_aw_payload_prot[2:0]                             ), //i
    .io_input_w_valid               (toplevel_axi_upsizer_io_output_writeOnly_w_valid                                          ), //i
    .io_input_w_ready               (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_w_ready                         ), //o
    .io_input_w_payload_data        (toplevel_axi_upsizer_io_output_writeOnly_w_payload_data[63:0]                             ), //i
    .io_input_w_payload_strb        (toplevel_axi_upsizer_io_output_writeOnly_w_payload_strb[7:0]                              ), //i
    .io_input_w_payload_last        (toplevel_axi_upsizer_io_output_writeOnly_w_payload_last                                   ), //i
    .io_input_b_valid               (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_valid                         ), //o
    .io_input_b_ready               (toplevel_axi_upsizer_io_output_writeOnly_b_ready                                          ), //i
    .io_input_b_payload_id          (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_payload_id[1:0]               ), //o
    .io_input_b_payload_resp        (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_payload_resp[1:0]             ), //o
    .io_outputs_0_aw_valid          (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_valid                    ), //o
    .io_outputs_0_aw_ready          (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire_1), //i
    .io_outputs_0_aw_payload_addr   (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_addr[31:0]       ), //o
    .io_outputs_0_aw_payload_id     (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_id[1:0]          ), //o
    .io_outputs_0_aw_payload_region (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_region[3:0]      ), //o
    .io_outputs_0_aw_payload_len    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_len[7:0]         ), //o
    .io_outputs_0_aw_payload_size   (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_size[2:0]        ), //o
    .io_outputs_0_aw_payload_burst  (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_burst[1:0]       ), //o
    .io_outputs_0_aw_payload_lock   (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_lock             ), //o
    .io_outputs_0_aw_payload_cache  (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_cache[3:0]       ), //o
    .io_outputs_0_aw_payload_qos    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_qos[3:0]         ), //o
    .io_outputs_0_aw_payload_prot   (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_prot[2:0]        ), //o
    .io_outputs_0_w_valid           (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_valid                     ), //o
    .io_outputs_0_w_ready           (axi4WriteOnlyArbiter_1_io_inputs_1_w_ready                                                ), //i
    .io_outputs_0_w_payload_data    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_data[63:0]        ), //o
    .io_outputs_0_w_payload_strb    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_strb[7:0]         ), //o
    .io_outputs_0_w_payload_last    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_last              ), //o
    .io_outputs_0_b_valid           (axi4WriteOnlyArbiter_1_io_inputs_1_b_valid                                                ), //i
    .io_outputs_0_b_ready           (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_b_ready                     ), //o
    .io_outputs_0_b_payload_id      (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_b_payload_id[1:0]           ), //i
    .io_outputs_0_b_payload_resp    (axi4WriteOnlyArbiter_1_io_inputs_1_b_payload_resp[1:0]                                    ), //i
    .io_axiClk                      (io_axiClk                                                                                 ), //i
    .tmp_io_resetn                  (tmp_io_resetn                                                                             )  //i
  );
  Axi4ReadOnlyArbiter axi4ReadOnlyArbiter_1 (
    .io_inputs_0_ar_valid          (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_valid                              ), //i
    .io_inputs_0_ar_ready          (axi4ReadOnlyArbiter_1_io_inputs_0_ar_ready                                                            ), //o
    .io_inputs_0_ar_payload_addr   (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_addr[31:0]                 ), //i
    .io_inputs_0_ar_payload_id     (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_id[1:0]                    ), //i
    .io_inputs_0_ar_payload_region (tmp_io_inputs_0_ar_payload_region[3:0]                                                                ), //i
    .io_inputs_0_ar_payload_len    (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_len[7:0]                   ), //i
    .io_inputs_0_ar_payload_size   (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_size[2:0]                  ), //i
    .io_inputs_0_ar_payload_burst  (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_burst[1:0]                 ), //i
    .io_inputs_0_ar_payload_lock   (1'b0                                                                                                  ), //i
    .io_inputs_0_ar_payload_cache  (4'b0000                                                                                               ), //i
    .io_inputs_0_ar_payload_qos    (4'b0000                                                                                               ), //i
    .io_inputs_0_ar_payload_prot   (3'b010                                                                                                ), //i
    .io_inputs_0_r_valid           (axi4ReadOnlyArbiter_1_io_inputs_0_r_valid                                                             ), //o
    .io_inputs_0_r_ready           (axi_cpu_area_cpu_icache_decoder_io_outputs_0_r_ready                                                  ), //i
    .io_inputs_0_r_payload_data    (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_data[63:0]                                                ), //o
    .io_inputs_0_r_payload_id      (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_id[1:0]                                                   ), //o
    .io_inputs_0_r_payload_resp    (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_resp[1:0]                                                 ), //o
    .io_inputs_0_r_payload_last    (axi4ReadOnlyArbiter_1_io_inputs_0_r_payload_last                                                      ), //o
    .io_inputs_1_ar_valid          (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_valid                              ), //i
    .io_inputs_1_ar_ready          (axi4ReadOnlyArbiter_1_io_inputs_1_ar_ready                                                            ), //o
    .io_inputs_1_ar_payload_addr   (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_addr[31:0]                 ), //i
    .io_inputs_1_ar_payload_id     (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_id[1:0]                    ), //i
    .io_inputs_1_ar_payload_region (tmp_io_inputs_1_ar_payload_region[3:0]                                                                ), //i
    .io_inputs_1_ar_payload_len    (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_len[7:0]                   ), //i
    .io_inputs_1_ar_payload_size   (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_size[2:0]                  ), //i
    .io_inputs_1_ar_payload_burst  (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_burst[1:0]                 ), //i
    .io_inputs_1_ar_payload_lock   (1'b0                                                                                                  ), //i
    .io_inputs_1_ar_payload_cache  (4'b0000                                                                                               ), //i
    .io_inputs_1_ar_payload_qos    (4'b0000                                                                                               ), //i
    .io_inputs_1_ar_payload_prot   (3'b010                                                                                                ), //i
    .io_inputs_1_r_valid           (axi4ReadOnlyArbiter_1_io_inputs_1_r_valid                                                             ), //o
    .io_inputs_1_r_ready           (axi_cpu_area_cpu_dcache_decoder_io_outputs_0_r_ready                                                  ), //i
    .io_inputs_1_r_payload_data    (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_data[63:0]                                                ), //o
    .io_inputs_1_r_payload_id      (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_id[1:0]                                                   ), //o
    .io_inputs_1_r_payload_resp    (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_resp[1:0]                                                 ), //o
    .io_inputs_1_r_payload_last    (axi4ReadOnlyArbiter_1_io_inputs_1_r_payload_last                                                      ), //o
    .io_inputs_2_ar_valid          (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid              ), //i
    .io_inputs_2_ar_ready          (axi4ReadOnlyArbiter_1_io_inputs_2_ar_ready                                                            ), //o
    .io_inputs_2_ar_payload_addr   (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_addr[31:0] ), //i
    .io_inputs_2_ar_payload_id     (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_id[1:0]    ), //i
    .io_inputs_2_ar_payload_region (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_region[3:0]), //i
    .io_inputs_2_ar_payload_len    (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_len[7:0]   ), //i
    .io_inputs_2_ar_payload_size   (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_size[2:0]  ), //i
    .io_inputs_2_ar_payload_burst  (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_burst[1:0] ), //i
    .io_inputs_2_ar_payload_lock   (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_lock       ), //i
    .io_inputs_2_ar_payload_cache  (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_cache[3:0] ), //i
    .io_inputs_2_ar_payload_qos    (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_qos[3:0]   ), //i
    .io_inputs_2_ar_payload_prot   (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_prot[2:0]  ), //i
    .io_inputs_2_r_valid           (axi4ReadOnlyArbiter_1_io_inputs_2_r_valid                                                             ), //o
    .io_inputs_2_r_ready           (toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_r_ready                                  ), //i
    .io_inputs_2_r_payload_data    (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_data[63:0]                                                ), //o
    .io_inputs_2_r_payload_id      (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_id[1:0]                                                   ), //o
    .io_inputs_2_r_payload_resp    (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_resp[1:0]                                                 ), //o
    .io_inputs_2_r_payload_last    (axi4ReadOnlyArbiter_1_io_inputs_2_r_payload_last                                                      ), //o
    .io_output_ar_valid            (axi4ReadOnlyArbiter_1_io_output_ar_valid                                                              ), //o
    .io_output_ar_ready            (axi_downsizer_io_input_ar_ready                                                                       ), //i
    .io_output_ar_payload_addr     (axi4ReadOnlyArbiter_1_io_output_ar_payload_addr[31:0]                                                 ), //o
    .io_output_ar_payload_id       (axi4ReadOnlyArbiter_1_io_output_ar_payload_id[3:0]                                                    ), //o
    .io_output_ar_payload_region   (axi4ReadOnlyArbiter_1_io_output_ar_payload_region[3:0]                                                ), //o
    .io_output_ar_payload_len      (axi4ReadOnlyArbiter_1_io_output_ar_payload_len[7:0]                                                   ), //o
    .io_output_ar_payload_size     (axi4ReadOnlyArbiter_1_io_output_ar_payload_size[2:0]                                                  ), //o
    .io_output_ar_payload_burst    (axi4ReadOnlyArbiter_1_io_output_ar_payload_burst[1:0]                                                 ), //o
    .io_output_ar_payload_lock     (axi4ReadOnlyArbiter_1_io_output_ar_payload_lock                                                       ), //o
    .io_output_ar_payload_cache    (axi4ReadOnlyArbiter_1_io_output_ar_payload_cache[3:0]                                                 ), //o
    .io_output_ar_payload_qos      (axi4ReadOnlyArbiter_1_io_output_ar_payload_qos[3:0]                                                   ), //o
    .io_output_ar_payload_prot     (axi4ReadOnlyArbiter_1_io_output_ar_payload_prot[2:0]                                                  ), //o
    .io_output_r_valid             (axi_downsizer_io_input_r_valid                                                                        ), //i
    .io_output_r_ready             (axi4ReadOnlyArbiter_1_io_output_r_ready                                                               ), //o
    .io_output_r_payload_data      (axi_downsizer_io_input_r_payload_data[63:0]                                                           ), //i
    .io_output_r_payload_id        (axi_downsizer_io_input_r_payload_id[3:0]                                                              ), //i
    .io_output_r_payload_resp      (axi_downsizer_io_input_r_payload_resp[1:0]                                                            ), //i
    .io_output_r_payload_last      (axi_downsizer_io_input_r_payload_last                                                                 ), //i
    .io_axiClk                     (io_axiClk                                                                                             ), //i
    .tmp_io_resetn                 (tmp_io_resetn                                                                                         )  //i
  );
  Axi4WriteOnlyArbiter axi4WriteOnlyArbiter_1 (
    .io_inputs_0_aw_valid          (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_valid                             ), //i
    .io_inputs_0_aw_ready          (axi4WriteOnlyArbiter_1_io_inputs_0_aw_ready                                                            ), //o
    .io_inputs_0_aw_payload_addr   (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_addr[31:0]                ), //i
    .io_inputs_0_aw_payload_id     (axi4WriteOnlyArbiter_1_io_inputs_0_aw_payload_id[2:0]                                                  ), //i
    .io_inputs_0_aw_payload_region (tmp_io_inputs_0_aw_payload_region[3:0]                                                                 ), //i
    .io_inputs_0_aw_payload_len    (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_len[7:0]                  ), //i
    .io_inputs_0_aw_payload_size   (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_size[2:0]                 ), //i
    .io_inputs_0_aw_payload_burst  (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_burst[1:0]                ), //i
    .io_inputs_0_aw_payload_lock   (1'b0                                                                                                   ), //i
    .io_inputs_0_aw_payload_cache  (4'b0000                                                                                                ), //i
    .io_inputs_0_aw_payload_qos    (4'b0000                                                                                                ), //i
    .io_inputs_0_aw_payload_prot   (3'b010                                                                                                 ), //i
    .io_inputs_0_w_valid           (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_valid                                                 ), //i
    .io_inputs_0_w_ready           (axi4WriteOnlyArbiter_1_io_inputs_0_w_ready                                                             ), //o
    .io_inputs_0_w_payload_data    (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_data[63:0]                                    ), //i
    .io_inputs_0_w_payload_strb    (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_strb[7:0]                                     ), //i
    .io_inputs_0_w_payload_last    (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_w_payload_last                                          ), //i
    .io_inputs_0_b_valid           (axi4WriteOnlyArbiter_1_io_inputs_0_b_valid                                                             ), //o
    .io_inputs_0_b_ready           (axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_b_ready                                                 ), //i
    .io_inputs_0_b_payload_id      (axi4WriteOnlyArbiter_1_io_inputs_0_b_payload_id[2:0]                                                   ), //o
    .io_inputs_0_b_payload_resp    (axi4WriteOnlyArbiter_1_io_inputs_0_b_payload_resp[1:0]                                                 ), //o
    .io_inputs_1_aw_valid          (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid              ), //i
    .io_inputs_1_aw_ready          (axi4WriteOnlyArbiter_1_io_inputs_1_aw_ready                                                            ), //o
    .io_inputs_1_aw_payload_addr   (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_addr[31:0] ), //i
    .io_inputs_1_aw_payload_id     (axi4WriteOnlyArbiter_1_io_inputs_1_aw_payload_id[2:0]                                                  ), //i
    .io_inputs_1_aw_payload_region (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_region[3:0]), //i
    .io_inputs_1_aw_payload_len    (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_len[7:0]   ), //i
    .io_inputs_1_aw_payload_size   (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_size[2:0]  ), //i
    .io_inputs_1_aw_payload_burst  (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_burst[1:0] ), //i
    .io_inputs_1_aw_payload_lock   (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_lock       ), //i
    .io_inputs_1_aw_payload_cache  (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_cache[3:0] ), //i
    .io_inputs_1_aw_payload_qos    (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_qos[3:0]   ), //i
    .io_inputs_1_aw_payload_prot   (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_prot[2:0]  ), //i
    .io_inputs_1_w_valid           (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_valid                                  ), //i
    .io_inputs_1_w_ready           (axi4WriteOnlyArbiter_1_io_inputs_1_w_ready                                                             ), //o
    .io_inputs_1_w_payload_data    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_data[63:0]                     ), //i
    .io_inputs_1_w_payload_strb    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_strb[7:0]                      ), //i
    .io_inputs_1_w_payload_last    (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_last                           ), //i
    .io_inputs_1_b_valid           (axi4WriteOnlyArbiter_1_io_inputs_1_b_valid                                                             ), //o
    .io_inputs_1_b_ready           (toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_b_ready                                  ), //i
    .io_inputs_1_b_payload_id      (axi4WriteOnlyArbiter_1_io_inputs_1_b_payload_id[2:0]                                                   ), //o
    .io_inputs_1_b_payload_resp    (axi4WriteOnlyArbiter_1_io_inputs_1_b_payload_resp[1:0]                                                 ), //o
    .io_output_aw_valid            (axi4WriteOnlyArbiter_1_io_output_aw_valid                                                              ), //o
    .io_output_aw_ready            (axi_downsizer_io_input_aw_ready                                                                        ), //i
    .io_output_aw_payload_addr     (axi4WriteOnlyArbiter_1_io_output_aw_payload_addr[31:0]                                                 ), //o
    .io_output_aw_payload_id       (axi4WriteOnlyArbiter_1_io_output_aw_payload_id[3:0]                                                    ), //o
    .io_output_aw_payload_region   (axi4WriteOnlyArbiter_1_io_output_aw_payload_region[3:0]                                                ), //o
    .io_output_aw_payload_len      (axi4WriteOnlyArbiter_1_io_output_aw_payload_len[7:0]                                                   ), //o
    .io_output_aw_payload_size     (axi4WriteOnlyArbiter_1_io_output_aw_payload_size[2:0]                                                  ), //o
    .io_output_aw_payload_burst    (axi4WriteOnlyArbiter_1_io_output_aw_payload_burst[1:0]                                                 ), //o
    .io_output_aw_payload_lock     (axi4WriteOnlyArbiter_1_io_output_aw_payload_lock                                                       ), //o
    .io_output_aw_payload_cache    (axi4WriteOnlyArbiter_1_io_output_aw_payload_cache[3:0]                                                 ), //o
    .io_output_aw_payload_qos      (axi4WriteOnlyArbiter_1_io_output_aw_payload_qos[3:0]                                                   ), //o
    .io_output_aw_payload_prot     (axi4WriteOnlyArbiter_1_io_output_aw_payload_prot[2:0]                                                  ), //o
    .io_output_w_valid             (axi4WriteOnlyArbiter_1_io_output_w_valid                                                               ), //o
    .io_output_w_ready             (axi_downsizer_io_input_w_ready                                                                         ), //i
    .io_output_w_payload_data      (axi4WriteOnlyArbiter_1_io_output_w_payload_data[63:0]                                                  ), //o
    .io_output_w_payload_strb      (axi4WriteOnlyArbiter_1_io_output_w_payload_strb[7:0]                                                   ), //o
    .io_output_w_payload_last      (axi4WriteOnlyArbiter_1_io_output_w_payload_last                                                        ), //o
    .io_output_b_valid             (axi_downsizer_io_input_b_valid                                                                         ), //i
    .io_output_b_ready             (axi4WriteOnlyArbiter_1_io_output_b_ready                                                               ), //o
    .io_output_b_payload_id        (axi_downsizer_io_input_b_payload_id[3:0]                                                               ), //i
    .io_output_b_payload_resp      (axi_downsizer_io_input_b_payload_resp[1:0]                                                             ), //i
    .io_axiClk                     (io_axiClk                                                                                              ), //i
    .tmp_io_resetn                 (tmp_io_resetn                                                                                          )  //i
  );
  Axi4ReadOnlyDecoder_3 toplevel_axi_downsizer_io_output_readOnly_decoder (
    .io_input_ar_valid              (toplevel_axi_downsizer_io_output_readOnly_ar_valid                                         ), //i
    .io_input_ar_ready              (toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_ar_ready                        ), //o
    .io_input_ar_payload_addr       (toplevel_axi_downsizer_io_output_readOnly_ar_payload_addr[31:0]                            ), //i
    .io_input_ar_payload_id         (toplevel_axi_downsizer_io_output_readOnly_ar_payload_id[3:0]                               ), //i
    .io_input_ar_payload_region     (toplevel_axi_downsizer_io_output_readOnly_ar_payload_region[3:0]                           ), //i
    .io_input_ar_payload_len        (toplevel_axi_downsizer_io_output_readOnly_ar_payload_len[7:0]                              ), //i
    .io_input_ar_payload_size       (toplevel_axi_downsizer_io_output_readOnly_ar_payload_size[2:0]                             ), //i
    .io_input_ar_payload_burst      (toplevel_axi_downsizer_io_output_readOnly_ar_payload_burst[1:0]                            ), //i
    .io_input_ar_payload_lock       (toplevel_axi_downsizer_io_output_readOnly_ar_payload_lock                                  ), //i
    .io_input_ar_payload_cache      (toplevel_axi_downsizer_io_output_readOnly_ar_payload_cache[3:0]                            ), //i
    .io_input_ar_payload_qos        (toplevel_axi_downsizer_io_output_readOnly_ar_payload_qos[3:0]                              ), //i
    .io_input_ar_payload_prot       (toplevel_axi_downsizer_io_output_readOnly_ar_payload_prot[2:0]                             ), //i
    .io_input_r_valid               (toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_valid                         ), //o
    .io_input_r_ready               (toplevel_axi_downsizer_io_output_readOnly_r_ready                                          ), //i
    .io_input_r_payload_data        (toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_data[31:0]            ), //o
    .io_input_r_payload_id          (toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_id[3:0]               ), //o
    .io_input_r_payload_resp        (toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_resp[1:0]             ), //o
    .io_input_r_payload_last        (toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_last                  ), //o
    .io_outputs_0_ar_valid          (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_valid                    ), //o
    .io_outputs_0_ar_ready          (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire_1), //i
    .io_outputs_0_ar_payload_addr   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_addr[31:0]       ), //o
    .io_outputs_0_ar_payload_id     (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_id[3:0]          ), //o
    .io_outputs_0_ar_payload_region (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_region[3:0]      ), //o
    .io_outputs_0_ar_payload_len    (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_len[7:0]         ), //o
    .io_outputs_0_ar_payload_size   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_size[2:0]        ), //o
    .io_outputs_0_ar_payload_burst  (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_burst[1:0]       ), //o
    .io_outputs_0_ar_payload_lock   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_lock             ), //o
    .io_outputs_0_ar_payload_cache  (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_cache[3:0]       ), //o
    .io_outputs_0_ar_payload_qos    (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_qos[3:0]         ), //o
    .io_outputs_0_ar_payload_prot   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_prot[2:0]        ), //o
    .io_outputs_0_r_valid           (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_valid                                       ), //i
    .io_outputs_0_r_ready           (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_r_ready                     ), //o
    .io_outputs_0_r_payload_data    (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_data[31:0]                          ), //i
    .io_outputs_0_r_payload_id      (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_id[3:0]                             ), //i
    .io_outputs_0_r_payload_resp    (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_resp[1:0]                           ), //i
    .io_outputs_0_r_payload_last    (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_last                                ), //i
    .io_outputs_1_ar_valid          (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_valid                    ), //o
    .io_outputs_1_ar_ready          (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_fire_1), //i
    .io_outputs_1_ar_payload_addr   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_addr[31:0]       ), //o
    .io_outputs_1_ar_payload_id     (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_id[3:0]          ), //o
    .io_outputs_1_ar_payload_region (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_region[3:0]      ), //o
    .io_outputs_1_ar_payload_len    (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_len[7:0]         ), //o
    .io_outputs_1_ar_payload_size   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_size[2:0]        ), //o
    .io_outputs_1_ar_payload_burst  (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_burst[1:0]       ), //o
    .io_outputs_1_ar_payload_lock   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_lock             ), //o
    .io_outputs_1_ar_payload_cache  (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_cache[3:0]       ), //o
    .io_outputs_1_ar_payload_qos    (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_qos[3:0]         ), //o
    .io_outputs_1_ar_payload_prot   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_prot[2:0]        ), //o
    .io_outputs_1_r_valid           (io_axi_frame_buff_r_valid                                                                  ), //i
    .io_outputs_1_r_ready           (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_r_ready                     ), //o
    .io_outputs_1_r_payload_data    (io_axi_frame_buff_r_payload_data[31:0]                                                     ), //i
    .io_outputs_1_r_payload_id      (io_axi_frame_buff_r_payload_id[3:0]                                                        ), //i
    .io_outputs_1_r_payload_resp    (io_axi_frame_buff_r_payload_resp[1:0]                                                      ), //i
    .io_outputs_1_r_payload_last    (io_axi_frame_buff_r_payload_last                                                           ), //i
    .io_outputs_2_ar_valid          (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_valid                    ), //o
    .io_outputs_2_ar_ready          (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_fire_1), //i
    .io_outputs_2_ar_payload_addr   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_addr[31:0]       ), //o
    .io_outputs_2_ar_payload_id     (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_id[3:0]          ), //o
    .io_outputs_2_ar_payload_region (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_region[3:0]      ), //o
    .io_outputs_2_ar_payload_len    (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_len[7:0]         ), //o
    .io_outputs_2_ar_payload_size   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_size[2:0]        ), //o
    .io_outputs_2_ar_payload_burst  (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_burst[1:0]       ), //o
    .io_outputs_2_ar_payload_lock   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_lock             ), //o
    .io_outputs_2_ar_payload_cache  (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_cache[3:0]       ), //o
    .io_outputs_2_ar_payload_qos    (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_qos[3:0]         ), //o
    .io_outputs_2_ar_payload_prot   (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_prot[2:0]        ), //o
    .io_outputs_2_r_valid           (io_axi_ddr_r_valid                                                                         ), //i
    .io_outputs_2_r_ready           (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_r_ready                     ), //o
    .io_outputs_2_r_payload_data    (io_axi_ddr_r_payload_data[31:0]                                                            ), //i
    .io_outputs_2_r_payload_id      (io_axi_ddr_r_payload_id[3:0]                                                               ), //i
    .io_outputs_2_r_payload_resp    (io_axi_ddr_r_payload_resp[1:0]                                                             ), //i
    .io_outputs_2_r_payload_last    (io_axi_ddr_r_payload_last                                                                  ), //i
    .io_axiClk                      (io_axiClk                                                                                  ), //i
    .tmp_io_resetn                  (tmp_io_resetn                                                                              )  //i
  );
  Axi4WriteOnlyDecoder_2 toplevel_axi_downsizer_io_output_writeOnly_decoder (
    .io_input_aw_valid              (toplevel_axi_downsizer_io_output_writeOnly_aw_valid                                         ), //i
    .io_input_aw_ready              (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_aw_ready                        ), //o
    .io_input_aw_payload_addr       (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_addr[31:0]                            ), //i
    .io_input_aw_payload_id         (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_id[3:0]                               ), //i
    .io_input_aw_payload_region     (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_region[3:0]                           ), //i
    .io_input_aw_payload_len        (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_len[7:0]                              ), //i
    .io_input_aw_payload_size       (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_size[2:0]                             ), //i
    .io_input_aw_payload_burst      (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_burst[1:0]                            ), //i
    .io_input_aw_payload_lock       (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_lock                                  ), //i
    .io_input_aw_payload_cache      (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_cache[3:0]                            ), //i
    .io_input_aw_payload_qos        (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_qos[3:0]                              ), //i
    .io_input_aw_payload_prot       (toplevel_axi_downsizer_io_output_writeOnly_aw_payload_prot[2:0]                             ), //i
    .io_input_w_valid               (toplevel_axi_downsizer_io_output_writeOnly_w_valid                                          ), //i
    .io_input_w_ready               (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_w_ready                         ), //o
    .io_input_w_payload_data        (toplevel_axi_downsizer_io_output_writeOnly_w_payload_data[31:0]                             ), //i
    .io_input_w_payload_strb        (toplevel_axi_downsizer_io_output_writeOnly_w_payload_strb[3:0]                              ), //i
    .io_input_w_payload_last        (toplevel_axi_downsizer_io_output_writeOnly_w_payload_last                                   ), //i
    .io_input_b_valid               (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_valid                         ), //o
    .io_input_b_ready               (toplevel_axi_downsizer_io_output_writeOnly_b_ready                                          ), //i
    .io_input_b_payload_id          (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_payload_id[3:0]               ), //o
    .io_input_b_payload_resp        (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_payload_resp[1:0]             ), //o
    .io_outputs_0_aw_valid          (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_valid                    ), //o
    .io_outputs_0_aw_ready          (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire_1), //i
    .io_outputs_0_aw_payload_addr   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_addr[31:0]       ), //o
    .io_outputs_0_aw_payload_id     (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_id[3:0]          ), //o
    .io_outputs_0_aw_payload_region (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_region[3:0]      ), //o
    .io_outputs_0_aw_payload_len    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_len[7:0]         ), //o
    .io_outputs_0_aw_payload_size   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_size[2:0]        ), //o
    .io_outputs_0_aw_payload_burst  (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_burst[1:0]       ), //o
    .io_outputs_0_aw_payload_lock   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_lock             ), //o
    .io_outputs_0_aw_payload_cache  (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_cache[3:0]       ), //o
    .io_outputs_0_aw_payload_qos    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_qos[3:0]         ), //o
    .io_outputs_0_aw_payload_prot   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_prot[2:0]        ), //o
    .io_outputs_0_w_valid           (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_valid                     ), //o
    .io_outputs_0_w_ready           (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_w_ready                                       ), //i
    .io_outputs_0_w_payload_data    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_data[31:0]        ), //o
    .io_outputs_0_w_payload_strb    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_strb[3:0]         ), //o
    .io_outputs_0_w_payload_last    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_last              ), //o
    .io_outputs_0_b_valid           (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_valid                                       ), //i
    .io_outputs_0_b_ready           (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_b_ready                     ), //o
    .io_outputs_0_b_payload_id      (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_payload_id[3:0]                             ), //i
    .io_outputs_0_b_payload_resp    (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_payload_resp[1:0]                           ), //i
    .io_outputs_1_aw_valid          (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_valid                    ), //o
    .io_outputs_1_aw_ready          (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_fire_1), //i
    .io_outputs_1_aw_payload_addr   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_addr[31:0]       ), //o
    .io_outputs_1_aw_payload_id     (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_id[3:0]          ), //o
    .io_outputs_1_aw_payload_region (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_region[3:0]      ), //o
    .io_outputs_1_aw_payload_len    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_len[7:0]         ), //o
    .io_outputs_1_aw_payload_size   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_size[2:0]        ), //o
    .io_outputs_1_aw_payload_burst  (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_burst[1:0]       ), //o
    .io_outputs_1_aw_payload_lock   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_lock             ), //o
    .io_outputs_1_aw_payload_cache  (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_cache[3:0]       ), //o
    .io_outputs_1_aw_payload_qos    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_qos[3:0]         ), //o
    .io_outputs_1_aw_payload_prot   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_prot[2:0]        ), //o
    .io_outputs_1_w_valid           (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_valid                     ), //o
    .io_outputs_1_w_ready           (io_axi_frame_buff_w_ready                                                                   ), //i
    .io_outputs_1_w_payload_data    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_data[31:0]        ), //o
    .io_outputs_1_w_payload_strb    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_strb[3:0]         ), //o
    .io_outputs_1_w_payload_last    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_last              ), //o
    .io_outputs_1_b_valid           (io_axi_frame_buff_b_valid                                                                   ), //i
    .io_outputs_1_b_ready           (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_b_ready                     ), //o
    .io_outputs_1_b_payload_id      (io_axi_frame_buff_b_payload_id[3:0]                                                         ), //i
    .io_outputs_1_b_payload_resp    (io_axi_frame_buff_b_payload_resp[1:0]                                                       ), //i
    .io_outputs_2_aw_valid          (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_valid                    ), //o
    .io_outputs_2_aw_ready          (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_fire_1), //i
    .io_outputs_2_aw_payload_addr   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_addr[31:0]       ), //o
    .io_outputs_2_aw_payload_id     (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_id[3:0]          ), //o
    .io_outputs_2_aw_payload_region (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_region[3:0]      ), //o
    .io_outputs_2_aw_payload_len    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_len[7:0]         ), //o
    .io_outputs_2_aw_payload_size   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_size[2:0]        ), //o
    .io_outputs_2_aw_payload_burst  (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_burst[1:0]       ), //o
    .io_outputs_2_aw_payload_lock   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_lock             ), //o
    .io_outputs_2_aw_payload_cache  (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_cache[3:0]       ), //o
    .io_outputs_2_aw_payload_qos    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_qos[3:0]         ), //o
    .io_outputs_2_aw_payload_prot   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_prot[2:0]        ), //o
    .io_outputs_2_w_valid           (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_valid                     ), //o
    .io_outputs_2_w_ready           (io_axi_ddr_w_ready                                                                          ), //i
    .io_outputs_2_w_payload_data    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_data[31:0]        ), //o
    .io_outputs_2_w_payload_strb    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_strb[3:0]         ), //o
    .io_outputs_2_w_payload_last    (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_last              ), //o
    .io_outputs_2_b_valid           (io_axi_ddr_b_valid                                                                          ), //i
    .io_outputs_2_b_ready           (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_b_ready                     ), //o
    .io_outputs_2_b_payload_id      (io_axi_ddr_b_payload_id[3:0]                                                                ), //i
    .io_outputs_2_b_payload_resp    (io_axi_ddr_b_payload_resp[1:0]                                                              ), //i
    .io_axiClk                      (io_axiClk                                                                                   ), //i
    .tmp_io_resetn                  (tmp_io_resetn                                                                               )  //i
  );
  Axi4SharedArbiter axi_apbBridge_io_axi_arbiter (
    .io_readInputs_0_ar_valid          (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid              ), //i
    .io_readInputs_0_ar_ready          (axi_apbBridge_io_axi_arbiter_io_readInputs_0_ar_ready                                                   ), //o
    .io_readInputs_0_ar_payload_addr   (axi_apbBridge_io_axi_arbiter_io_readInputs_0_ar_payload_addr[19:0]                                      ), //i
    .io_readInputs_0_ar_payload_id     (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_id[3:0]    ), //i
    .io_readInputs_0_ar_payload_len    (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_len[7:0]   ), //i
    .io_readInputs_0_ar_payload_size   (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_size[2:0]  ), //i
    .io_readInputs_0_ar_payload_burst  (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_burst[1:0] ), //i
    .io_readInputs_0_r_valid           (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_valid                                                    ), //o
    .io_readInputs_0_r_ready           (toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_r_ready                                  ), //i
    .io_readInputs_0_r_payload_data    (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_data[31:0]                                       ), //o
    .io_readInputs_0_r_payload_id      (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_id[3:0]                                          ), //o
    .io_readInputs_0_r_payload_resp    (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_resp[1:0]                                        ), //o
    .io_readInputs_0_r_payload_last    (axi_apbBridge_io_axi_arbiter_io_readInputs_0_r_payload_last                                             ), //o
    .io_writeInputs_0_aw_valid         (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid             ), //i
    .io_writeInputs_0_aw_ready         (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_aw_ready                                                  ), //o
    .io_writeInputs_0_aw_payload_addr  (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_aw_payload_addr[19:0]                                     ), //i
    .io_writeInputs_0_aw_payload_id    (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_id[3:0]   ), //i
    .io_writeInputs_0_aw_payload_len   (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_len[7:0]  ), //i
    .io_writeInputs_0_aw_payload_size  (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_size[2:0] ), //i
    .io_writeInputs_0_aw_payload_burst (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_burst[1:0]), //i
    .io_writeInputs_0_w_valid          (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_valid                                 ), //i
    .io_writeInputs_0_w_ready          (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_w_ready                                                   ), //o
    .io_writeInputs_0_w_payload_data   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_data[31:0]                    ), //i
    .io_writeInputs_0_w_payload_strb   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_strb[3:0]                     ), //i
    .io_writeInputs_0_w_payload_last   (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_w_payload_last                          ), //i
    .io_writeInputs_0_b_valid          (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_valid                                                   ), //o
    .io_writeInputs_0_b_ready          (toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_b_ready                                 ), //i
    .io_writeInputs_0_b_payload_id     (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_payload_id[3:0]                                         ), //o
    .io_writeInputs_0_b_payload_resp   (axi_apbBridge_io_axi_arbiter_io_writeInputs_0_b_payload_resp[1:0]                                       ), //o
    .io_output_arw_valid               (axi_apbBridge_io_axi_arbiter_io_output_arw_valid                                                        ), //o
    .io_output_arw_ready               (axi_apbBridge_io_axi_arw_ready                                                                          ), //i
    .io_output_arw_payload_addr        (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_addr[19:0]                                           ), //o
    .io_output_arw_payload_id          (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_id[3:0]                                              ), //o
    .io_output_arw_payload_len         (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_len[7:0]                                             ), //o
    .io_output_arw_payload_size        (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_size[2:0]                                            ), //o
    .io_output_arw_payload_burst       (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_burst[1:0]                                           ), //o
    .io_output_arw_payload_write       (axi_apbBridge_io_axi_arbiter_io_output_arw_payload_write                                                ), //o
    .io_output_w_valid                 (axi_apbBridge_io_axi_arbiter_io_output_w_valid                                                          ), //o
    .io_output_w_ready                 (axi_apbBridge_io_axi_w_ready                                                                            ), //i
    .io_output_w_payload_data          (axi_apbBridge_io_axi_arbiter_io_output_w_payload_data[31:0]                                             ), //o
    .io_output_w_payload_strb          (axi_apbBridge_io_axi_arbiter_io_output_w_payload_strb[3:0]                                              ), //o
    .io_output_w_payload_last          (axi_apbBridge_io_axi_arbiter_io_output_w_payload_last                                                   ), //o
    .io_output_b_valid                 (axi_apbBridge_io_axi_b_valid                                                                            ), //i
    .io_output_b_ready                 (axi_apbBridge_io_axi_arbiter_io_output_b_ready                                                          ), //o
    .io_output_b_payload_id            (axi_apbBridge_io_axi_b_payload_id[3:0]                                                                  ), //i
    .io_output_b_payload_resp          (axi_apbBridge_io_axi_b_payload_resp[1:0]                                                                ), //i
    .io_output_r_valid                 (axi_apbBridge_io_axi_r_valid                                                                            ), //i
    .io_output_r_ready                 (axi_apbBridge_io_axi_arbiter_io_output_r_ready                                                          ), //o
    .io_output_r_payload_data          (axi_apbBridge_io_axi_r_payload_data[31:0]                                                               ), //i
    .io_output_r_payload_id            (axi_apbBridge_io_axi_r_payload_id[3:0]                                                                  ), //i
    .io_output_r_payload_resp          (axi_apbBridge_io_axi_r_payload_resp[1:0]                                                                ), //i
    .io_output_r_payload_last          (axi_apbBridge_io_axi_r_payload_last                                                                     ), //i
    .io_axiClk                         (io_axiClk                                                                                               ), //i
    .tmp_io_resetn                     (tmp_io_resetn                                                                                           )  //i
  );
  Apb3Decoder io_apb_decoder (
    .io_input_PADDR      (axi_apbBridge_io_apb_PADDR[19:0]     ), //i
    .io_input_PSEL       (axi_apbBridge_io_apb_PSEL            ), //i
    .io_input_PENABLE    (axi_apbBridge_io_apb_PENABLE         ), //i
    .io_input_PREADY     (io_apb_decoder_io_input_PREADY       ), //o
    .io_input_PWRITE     (axi_apbBridge_io_apb_PWRITE          ), //i
    .io_input_PWDATA     (axi_apbBridge_io_apb_PWDATA[31:0]    ), //i
    .io_input_PRDATA     (io_apb_decoder_io_input_PRDATA[31:0] ), //o
    .io_input_PSLVERROR  (io_apb_decoder_io_input_PSLVERROR    ), //o
    .io_output_PADDR     (io_apb_decoder_io_output_PADDR[19:0] ), //o
    .io_output_PSEL      (io_apb_decoder_io_output_PSEL[1:0]   ), //o
    .io_output_PENABLE   (io_apb_decoder_io_output_PENABLE     ), //o
    .io_output_PREADY    (apb3Router_1_io_input_PREADY         ), //i
    .io_output_PWRITE    (io_apb_decoder_io_output_PWRITE      ), //o
    .io_output_PWDATA    (io_apb_decoder_io_output_PWDATA[31:0]), //o
    .io_output_PRDATA    (apb3Router_1_io_input_PRDATA[31:0]   ), //i
    .io_output_PSLVERROR (apb3Router_1_io_input_PSLVERROR      )  //i
  );
  Apb3Router apb3Router_1 (
    .io_input_PADDR         (io_apb_decoder_io_output_PADDR[19:0]  ), //i
    .io_input_PSEL          (io_apb_decoder_io_output_PSEL[1:0]    ), //i
    .io_input_PENABLE       (io_apb_decoder_io_output_PENABLE      ), //i
    .io_input_PREADY        (apb3Router_1_io_input_PREADY          ), //o
    .io_input_PWRITE        (io_apb_decoder_io_output_PWRITE       ), //i
    .io_input_PWDATA        (io_apb_decoder_io_output_PWDATA[31:0] ), //i
    .io_input_PRDATA        (apb3Router_1_io_input_PRDATA[31:0]    ), //o
    .io_input_PSLVERROR     (apb3Router_1_io_input_PSLVERROR       ), //o
    .io_outputs_0_PADDR     (apb3Router_1_io_outputs_0_PADDR[19:0] ), //o
    .io_outputs_0_PSEL      (apb3Router_1_io_outputs_0_PSEL        ), //o
    .io_outputs_0_PENABLE   (apb3Router_1_io_outputs_0_PENABLE     ), //o
    .io_outputs_0_PREADY    (axi_uartCtrl_io_apb_PREADY            ), //i
    .io_outputs_0_PWRITE    (apb3Router_1_io_outputs_0_PWRITE      ), //o
    .io_outputs_0_PWDATA    (apb3Router_1_io_outputs_0_PWDATA[31:0]), //o
    .io_outputs_0_PRDATA    (axi_uartCtrl_io_apb_PRDATA[31:0]      ), //i
    .io_outputs_0_PSLVERROR (axi_uartCtrl_io_apb_PSLVERROR         ), //i
    .io_outputs_1_PADDR     (apb3Router_1_io_outputs_1_PADDR[19:0] ), //o
    .io_outputs_1_PSEL      (apb3Router_1_io_outputs_1_PSEL        ), //o
    .io_outputs_1_PENABLE   (apb3Router_1_io_outputs_1_PENABLE     ), //o
    .io_outputs_1_PREADY    (axi_timer_io_apb_PREADY               ), //i
    .io_outputs_1_PWRITE    (apb3Router_1_io_outputs_1_PWRITE      ), //o
    .io_outputs_1_PWDATA    (apb3Router_1_io_outputs_1_PWDATA[31:0]), //o
    .io_outputs_1_PRDATA    (axi_timer_io_apb_PRDATA[31:0]         ), //i
    .io_outputs_1_PSLVERROR (axi_timer_io_apb_PSLVERROR            ), //i
    .io_axiClk              (io_axiClk                             ), //i
    .tmp_io_resetn          (tmp_io_resetn                         )  //i
  );
  always @(*) begin
    resetCtrl_systemResetUnbuffered = 1'b0; // @ GenDandSoC.scala l206
    if(tmp_when) begin
      resetCtrl_systemResetUnbuffered = 1'b1; // @ GenDandSoC.scala l212
    end
  end

  assign tmp_1[5 : 0] = 6'h3f; // @ Literal.scala l88
  assign bufferCC_1_io_dataIn = (! io_asyncResetn); // @ CrossClock.scala l9
  assign tmp_io_resetn = (! io_asyncResetn); // @ BaseType.scala l299
  assign cpu_rst = (resetCtrl_axiReset || (! io_usb_done)); // @ BaseType.scala l305
  assign axi_uartCtrl_io_resetn = (! tmp_io_resetn); // @ GenDandSoC.scala l258
  assign io_axi_usb_aw_ready = axi_upsizer_io_input_aw_ready; // @ GenDandSoC.scala l262
  assign io_axi_usb_w_ready = axi_upsizer_io_input_w_ready; // @ GenDandSoC.scala l262
  assign io_axi_usb_b_valid = axi_upsizer_io_input_b_valid; // @ GenDandSoC.scala l262
  assign io_axi_usb_b_payload_id = axi_upsizer_io_input_b_payload_id; // @ GenDandSoC.scala l262
  assign io_axi_usb_b_payload_resp = axi_upsizer_io_input_b_payload_resp; // @ GenDandSoC.scala l262
  assign io_axi_usb_ar_ready = axi_upsizer_io_input_ar_ready; // @ GenDandSoC.scala l262
  assign io_axi_usb_r_valid = axi_upsizer_io_input_r_valid; // @ GenDandSoC.scala l262
  assign io_axi_usb_r_payload_data = axi_upsizer_io_input_r_payload_data; // @ GenDandSoC.scala l262
  assign io_axi_usb_r_payload_id = axi_upsizer_io_input_r_payload_id; // @ GenDandSoC.scala l262
  assign io_axi_usb_r_payload_resp = axi_upsizer_io_input_r_payload_resp; // @ GenDandSoC.scala l262
  assign io_axi_usb_r_payload_last = axi_upsizer_io_input_r_payload_last; // @ GenDandSoC.scala l262
  assign toplevel_axi_upsizer_io_output_readOnly_ar_valid = axi_upsizer_io_output_ar_valid; // @ Stream.scala l303
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_addr = axi_upsizer_io_output_ar_payload_addr; // @ Axi4Channel.scala l361
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_id = axi_upsizer_io_output_ar_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_region = axi_upsizer_io_output_ar_payload_region; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_len = axi_upsizer_io_output_ar_payload_len; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_size = axi_upsizer_io_output_ar_payload_size; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_burst = axi_upsizer_io_output_ar_payload_burst; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_lock = axi_upsizer_io_output_ar_payload_lock; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_cache = axi_upsizer_io_output_ar_payload_cache; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_qos = axi_upsizer_io_output_ar_payload_qos; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_ar_payload_prot = axi_upsizer_io_output_ar_payload_prot; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_r_ready = axi_upsizer_io_output_r_ready; // @ Stream.scala l304
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_valid = axi_upsizer_io_output_aw_valid; // @ Stream.scala l303
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_addr = axi_upsizer_io_output_aw_payload_addr; // @ Axi4Channel.scala l361
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_id = axi_upsizer_io_output_aw_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_region = axi_upsizer_io_output_aw_payload_region; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_len = axi_upsizer_io_output_aw_payload_len; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_size = axi_upsizer_io_output_aw_payload_size; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_burst = axi_upsizer_io_output_aw_payload_burst; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_lock = axi_upsizer_io_output_aw_payload_lock; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_cache = axi_upsizer_io_output_aw_payload_cache; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_qos = axi_upsizer_io_output_aw_payload_qos; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_payload_prot = axi_upsizer_io_output_aw_payload_prot; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_w_valid = axi_upsizer_io_output_w_valid; // @ Stream.scala l303
  assign toplevel_axi_upsizer_io_output_writeOnly_w_payload_data = axi_upsizer_io_output_w_payload_data; // @ Axi4Channel.scala l423
  assign toplevel_axi_upsizer_io_output_writeOnly_w_payload_strb = axi_upsizer_io_output_w_payload_strb; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_w_payload_last = axi_upsizer_io_output_w_payload_last; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_b_ready = axi_upsizer_io_output_b_ready; // @ Stream.scala l304
  assign io_axi_frame_buff_ar_valid = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_valid; // @ Stream.scala l303
  assign io_axi_frame_buff_ar_payload_addr = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_addr; // @ Axi4Channel.scala l361
  assign io_axi_frame_buff_ar_payload_id = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_id; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_region = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_region; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_len = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_len; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_size = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_size; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_burst = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_burst; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_lock = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_lock; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_cache = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_cache; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_qos = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_qos; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_ar_payload_prot = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_prot; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_r_ready = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_r_ready; // @ Stream.scala l304
  assign io_axi_frame_buff_aw_valid = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_valid; // @ Stream.scala l303
  assign io_axi_frame_buff_aw_payload_addr = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_addr; // @ Axi4Channel.scala l361
  assign io_axi_frame_buff_aw_payload_id = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_id; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_region = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_region; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_len = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_len; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_size = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_size; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_burst = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_burst; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_lock = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_lock; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_cache = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_cache; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_qos = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_qos; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_aw_payload_prot = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_prot; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_w_valid = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_valid; // @ Stream.scala l303
  assign io_axi_frame_buff_w_payload_data = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_data; // @ Axi4Channel.scala l423
  assign io_axi_frame_buff_w_payload_strb = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_strb; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_w_payload_last = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_w_payload_last; // @ Axi4Channel.scala l352
  assign io_axi_frame_buff_b_ready = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_b_ready; // @ Stream.scala l304
  assign io_axi_ddr_ar_valid = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_valid; // @ Stream.scala l303
  assign io_axi_ddr_ar_payload_addr = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_addr; // @ Axi4Channel.scala l361
  assign io_axi_ddr_ar_payload_id = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_id; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_region = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_region; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_len = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_len; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_size = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_size; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_burst = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_burst; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_lock = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_lock; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_cache = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_cache; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_qos = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_qos; // @ Axi4Channel.scala l352
  assign io_axi_ddr_ar_payload_prot = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_prot; // @ Axi4Channel.scala l352
  assign io_axi_ddr_r_ready = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_r_ready; // @ Stream.scala l304
  assign io_axi_ddr_aw_valid = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_valid; // @ Stream.scala l303
  assign io_axi_ddr_aw_payload_addr = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_addr; // @ Axi4Channel.scala l361
  assign io_axi_ddr_aw_payload_id = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_id; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_region = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_region; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_len = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_len; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_size = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_size; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_burst = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_burst; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_lock = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_lock; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_cache = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_cache; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_qos = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_qos; // @ Axi4Channel.scala l352
  assign io_axi_ddr_aw_payload_prot = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_prot; // @ Axi4Channel.scala l352
  assign io_axi_ddr_w_valid = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_valid; // @ Stream.scala l303
  assign io_axi_ddr_w_payload_data = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_data; // @ Axi4Channel.scala l423
  assign io_axi_ddr_w_payload_strb = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_strb; // @ Axi4Channel.scala l352
  assign io_axi_ddr_w_payload_last = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_w_payload_last; // @ Axi4Channel.scala l352
  assign io_axi_ddr_b_ready = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_b_ready; // @ Stream.scala l304
  assign toplevel_axi_downsizer_io_output_readOnly_ar_valid = axi_downsizer_io_output_ar_valid; // @ Stream.scala l303
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_addr = axi_downsizer_io_output_ar_payload_addr; // @ Axi4Channel.scala l361
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_id = axi_downsizer_io_output_ar_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_region = axi_downsizer_io_output_ar_payload_region; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_len = axi_downsizer_io_output_ar_payload_len; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_size = axi_downsizer_io_output_ar_payload_size; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_burst = axi_downsizer_io_output_ar_payload_burst; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_lock = axi_downsizer_io_output_ar_payload_lock; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_cache = axi_downsizer_io_output_ar_payload_cache; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_qos = axi_downsizer_io_output_ar_payload_qos; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_ar_payload_prot = axi_downsizer_io_output_ar_payload_prot; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_r_ready = axi_downsizer_io_output_r_ready; // @ Stream.scala l304
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_valid = axi_downsizer_io_output_aw_valid; // @ Stream.scala l303
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_addr = axi_downsizer_io_output_aw_payload_addr; // @ Axi4Channel.scala l361
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_id = axi_downsizer_io_output_aw_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_region = axi_downsizer_io_output_aw_payload_region; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_len = axi_downsizer_io_output_aw_payload_len; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_size = axi_downsizer_io_output_aw_payload_size; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_burst = axi_downsizer_io_output_aw_payload_burst; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_lock = axi_downsizer_io_output_aw_payload_lock; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_cache = axi_downsizer_io_output_aw_payload_cache; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_qos = axi_downsizer_io_output_aw_payload_qos; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_payload_prot = axi_downsizer_io_output_aw_payload_prot; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_w_valid = axi_downsizer_io_output_w_valid; // @ Stream.scala l303
  assign toplevel_axi_downsizer_io_output_writeOnly_w_payload_data = axi_downsizer_io_output_w_payload_data; // @ Axi4Channel.scala l423
  assign toplevel_axi_downsizer_io_output_writeOnly_w_payload_strb = axi_downsizer_io_output_w_payload_strb; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_w_payload_last = axi_downsizer_io_output_w_payload_last; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_b_ready = axi_downsizer_io_output_b_ready; // @ Stream.scala l304
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_fire = (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_valid && toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_fire_1 = (toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_valid && toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_valid = toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_rValid; // @ Stream.scala l402
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_addr = axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_addr; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_id = axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_id; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_len = axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_len; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_size = axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_size; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_payload_burst = axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_payload_burst; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_ready = axi4ReadOnlyArbiter_1_io_inputs_0_ar_ready; // @ Stream.scala l295
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_fire = (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_valid && toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_fire_1 = (toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_valid && toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_valid = toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_rValid; // @ Stream.scala l402
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_addr = axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_addr; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_id = axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_id; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_len = axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_len; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_size = axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_size; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_payload_burst = axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_payload_burst; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_ready = axi4ReadOnlyArbiter_1_io_inputs_1_ar_ready; // @ Stream.scala l295
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_fire = (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_valid && toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_fire_1 = (toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_valid && toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_valid = toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_rValid; // @ Stream.scala l402
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_addr = axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_addr; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_id = axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_id; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_len = axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_len; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_size = axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_size; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_burst = axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_payload_burst; // @ Stream.scala l403
  assign toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_ready = axi4WriteOnlyArbiter_1_io_inputs_0_aw_ready; // @ Stream.scala l295
  assign axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_b_payload_id = axi4WriteOnlyArbiter_1_io_inputs_0_b_payload_id[1:0]; // @ Stream.scala l296
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire = (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid && toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire_1 = (toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid && toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid = toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_addr = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_id = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_region = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_len = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_size = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_burst = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_lock = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_cache = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_qos = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_prot = toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready = axi4ReadOnlyArbiter_1_io_inputs_2_ar_ready; // @ Stream.scala l295
  assign toplevel_axi_upsizer_io_output_readOnly_ar_ready = toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_ar_ready; // @ Stream.scala l304
  assign toplevel_axi_upsizer_io_output_readOnly_r_valid = toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_valid; // @ Stream.scala l303
  assign toplevel_axi_upsizer_io_output_readOnly_r_payload_data = toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_data; // @ Axi4Channel.scala l451
  assign toplevel_axi_upsizer_io_output_readOnly_r_payload_last = toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_last; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_r_payload_id = toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_readOnly_r_payload_resp = toplevel_axi_upsizer_io_output_readOnly_decoder_io_input_r_payload_resp; // @ Axi4Channel.scala l352
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire = (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid && toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire_1 = (toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid && toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid = toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_addr = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_id = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_region = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_len = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_size = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_burst = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_lock = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_cache = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_qos = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_prot = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready = axi4WriteOnlyArbiter_1_io_inputs_1_aw_ready; // @ Stream.scala l295
  assign toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_b_payload_id = axi4WriteOnlyArbiter_1_io_inputs_1_b_payload_id[1:0]; // @ Stream.scala l296
  assign toplevel_axi_upsizer_io_output_writeOnly_aw_ready = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_aw_ready; // @ Stream.scala l304
  assign toplevel_axi_upsizer_io_output_writeOnly_w_ready = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_w_ready; // @ Stream.scala l304
  assign toplevel_axi_upsizer_io_output_writeOnly_b_valid = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_valid; // @ Stream.scala l303
  assign toplevel_axi_upsizer_io_output_writeOnly_b_payload_id = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_upsizer_io_output_writeOnly_b_payload_resp = toplevel_axi_upsizer_io_output_writeOnly_decoder_io_input_b_payload_resp; // @ Axi4Channel.scala l352
  assign tmp_io_inputs_0_ar_payload_region[3 : 0] = 4'b0000; // @ Literal.scala l88
  assign tmp_io_inputs_1_ar_payload_region[3 : 0] = 4'b0000; // @ Literal.scala l88
  assign axi4WriteOnlyArbiter_1_io_inputs_0_aw_payload_id = {1'd0, toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_payload_id}; // @ Axi4Channel.scala l352
  assign tmp_io_inputs_0_aw_payload_region[3 : 0] = 4'b0000; // @ Literal.scala l88
  assign axi4WriteOnlyArbiter_1_io_inputs_1_aw_payload_id = {1'd0, toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_id}; // @ Axi4Channel.scala l352
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire = (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire_1 = (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_valid = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_addr = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_id = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_region = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_len = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_size = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_burst = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_lock = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_cache = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_qos = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_prot = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_ready = axi_apbBridge_io_axi_arbiter_io_readInputs_0_ar_ready; // @ Stream.scala l295
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_fire = (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_fire_1 = (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_valid = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_addr = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_id = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_region = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_len = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_size = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_burst = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_lock = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_cache = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_qos = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_payload_prot = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_ready = io_axi_frame_buff_ar_ready; // @ Stream.scala l295
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_fire = (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_fire_1 = (toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_valid = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_addr = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_id = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_region = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_len = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_size = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_burst = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_lock = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_cache = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_qos = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_payload_prot = toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_ready = io_axi_ddr_ar_ready; // @ Stream.scala l295
  assign toplevel_axi_downsizer_io_output_readOnly_ar_ready = toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_ar_ready; // @ Stream.scala l304
  assign toplevel_axi_downsizer_io_output_readOnly_r_valid = toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_valid; // @ Stream.scala l303
  assign toplevel_axi_downsizer_io_output_readOnly_r_payload_data = toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_data; // @ Axi4Channel.scala l451
  assign toplevel_axi_downsizer_io_output_readOnly_r_payload_last = toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_last; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_r_payload_id = toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_readOnly_r_payload_resp = toplevel_axi_downsizer_io_output_readOnly_decoder_io_input_r_payload_resp; // @ Axi4Channel.scala l352
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire = (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire_1 = (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_valid = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_addr = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_id = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_region = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_len = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_size = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_burst = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_lock = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_cache = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_qos = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_prot = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_ready = axi_apbBridge_io_axi_arbiter_io_writeInputs_0_aw_ready; // @ Stream.scala l295
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_fire = (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_fire_1 = (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_valid = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_addr = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_id = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_region = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_len = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_size = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_burst = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_lock = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_cache = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_qos = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_payload_prot = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_ready = io_axi_frame_buff_aw_ready; // @ Stream.scala l295
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_fire = (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_fire_1 = (toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_valid && toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_ready); // @ BaseType.scala l305
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_valid = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_rValid; // @ Stream.scala l402
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_addr = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_addr; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_id = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_id; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_region = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_region; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_len = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_len; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_size = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_size; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_burst = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_burst; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_lock = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_lock; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_cache = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_cache; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_qos = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_qos; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_payload_prot = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_payload_prot; // @ Stream.scala l403
  assign toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_ready = io_axi_ddr_aw_ready; // @ Stream.scala l295
  assign toplevel_axi_downsizer_io_output_writeOnly_aw_ready = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_aw_ready; // @ Stream.scala l304
  assign toplevel_axi_downsizer_io_output_writeOnly_w_ready = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_w_ready; // @ Stream.scala l304
  assign toplevel_axi_downsizer_io_output_writeOnly_b_valid = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_valid; // @ Stream.scala l303
  assign toplevel_axi_downsizer_io_output_writeOnly_b_payload_id = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_payload_id; // @ Axi4Channel.scala l352
  assign toplevel_axi_downsizer_io_output_writeOnly_b_payload_resp = toplevel_axi_downsizer_io_output_writeOnly_decoder_io_input_b_payload_resp; // @ Axi4Channel.scala l352
  assign axi_apbBridge_io_axi_arbiter_io_readInputs_0_ar_payload_addr = toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_payload_addr[19:0]; // @ Axi4Channel.scala l361
  assign axi_apbBridge_io_axi_arbiter_io_writeInputs_0_aw_payload_addr = toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_payload_addr[19:0]; // @ Axi4Channel.scala l361
  assign axi_uartCtrl_io_apb_PADDR = apb3Router_1_io_outputs_0_PADDR[15:0]; // @ APB3.scala l72
  assign axi_timer_io_apb_PADDR = apb3Router_1_io_outputs_1_PADDR[7:0]; // @ APB3.scala l72
  assign io_uart_txd = axi_uartCtrl_io_uart_txd; // @ GenDandSoC.scala l301
  always @(posedge io_axiClk or negedge io_asyncResetn) begin
    if(!io_asyncResetn) begin
      resetCtrl_systemResetCounter <= 6'h0; // @ Data.scala l400
    end else begin
      if(tmp_when) begin
        resetCtrl_systemResetCounter <= (resetCtrl_systemResetCounter + 6'h01); // @ GenDandSoC.scala l211
      end
      if(bufferCC_1_io_dataOut) begin
        resetCtrl_systemResetCounter <= 6'h0; // @ GenDandSoC.scala l215
      end
    end
  end

  always @(posedge io_axiClk) begin
    resetCtrl_axiReset <= resetCtrl_systemResetUnbuffered; // @ Reg.scala l39
  end

  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Data.scala l400
      toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Data.scala l400
      toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_rValid <= 1'b0; // @ Data.scala l400
      toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_rValid <= 1'b0; // @ Data.scala l400
    end else begin
      if(axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_valid) begin
        toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_validPipe_fire) begin
        toplevel_axi_cpu_area_cpu_icache_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_valid) begin
        toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_validPipe_fire) begin
        toplevel_axi_cpu_area_cpu_dcache_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_valid) begin
        toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_validPipe_fire) begin
        toplevel_axi_cpu_area_cpu_dcache_decoder_1_io_outputs_0_aw_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_valid) begin
        toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire) begin
        toplevel_toplevel_axi_upsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_valid) begin
        toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire) begin
        toplevel_toplevel_axi_upsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_valid) begin
        toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_validPipe_fire) begin
        toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_0_ar_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_valid) begin
        toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_validPipe_fire) begin
        toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_1_ar_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_valid) begin
        toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_validPipe_fire) begin
        toplevel_toplevel_axi_downsizer_io_output_readOnly_decoder_io_outputs_2_ar_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_valid) begin
        toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_validPipe_fire) begin
        toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_0_aw_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_valid) begin
        toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_validPipe_fire) begin
        toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_1_aw_rValid <= 1'b0; // @ Stream.scala l398
      end
      if(toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_valid) begin
        toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_rValid <= 1'b1; // @ Stream.scala l398
      end
      if(toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_validPipe_fire) begin
        toplevel_toplevel_axi_downsizer_io_output_writeOnly_decoder_io_outputs_2_aw_rValid <= 1'b0; // @ Stream.scala l398
      end
    end
  end


endmodule

module Apb3Router (
  input      [19:0]   io_input_PADDR,
  input      [1:0]    io_input_PSEL,
  input               io_input_PENABLE,
  output              io_input_PREADY,
  input               io_input_PWRITE,
  input      [31:0]   io_input_PWDATA,
  output     [31:0]   io_input_PRDATA,
  output              io_input_PSLVERROR,
  output     [19:0]   io_outputs_0_PADDR,
  output     [0:0]    io_outputs_0_PSEL,
  output              io_outputs_0_PENABLE,
  input               io_outputs_0_PREADY,
  output              io_outputs_0_PWRITE,
  output     [31:0]   io_outputs_0_PWDATA,
  input      [31:0]   io_outputs_0_PRDATA,
  input               io_outputs_0_PSLVERROR,
  output     [19:0]   io_outputs_1_PADDR,
  output     [0:0]    io_outputs_1_PSEL,
  output              io_outputs_1_PENABLE,
  input               io_outputs_1_PREADY,
  output              io_outputs_1_PWRITE,
  output     [31:0]   io_outputs_1_PWDATA,
  input      [31:0]   io_outputs_1_PRDATA,
  input               io_outputs_1_PSLVERROR,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg                 tmp_io_input_PREADY;
  reg        [31:0]   tmp_io_input_PRDATA;
  reg                 tmp_io_input_PSLVERROR;
  wire                tmp_selIndex;
  reg        [0:0]    selIndex;

  always @(*) begin
    case(selIndex)
      1'b0 : begin
        tmp_io_input_PREADY = io_outputs_0_PREADY;
        tmp_io_input_PRDATA = io_outputs_0_PRDATA;
        tmp_io_input_PSLVERROR = io_outputs_0_PSLVERROR;
      end
      default : begin
        tmp_io_input_PREADY = io_outputs_1_PREADY;
        tmp_io_input_PRDATA = io_outputs_1_PRDATA;
        tmp_io_input_PSLVERROR = io_outputs_1_PSLVERROR;
      end
    endcase
  end

  assign io_outputs_0_PADDR = io_input_PADDR; // @ Apb3Router.scala l47
  assign io_outputs_0_PENABLE = io_input_PENABLE; // @ Apb3Router.scala l48
  assign io_outputs_0_PSEL[0] = io_input_PSEL[0]; // @ Apb3Router.scala l49
  assign io_outputs_0_PWRITE = io_input_PWRITE; // @ Apb3Router.scala l50
  assign io_outputs_0_PWDATA = io_input_PWDATA; // @ Apb3Router.scala l51
  assign io_outputs_1_PADDR = io_input_PADDR; // @ Apb3Router.scala l47
  assign io_outputs_1_PENABLE = io_input_PENABLE; // @ Apb3Router.scala l48
  assign io_outputs_1_PSEL[0] = io_input_PSEL[1]; // @ Apb3Router.scala l49
  assign io_outputs_1_PWRITE = io_input_PWRITE; // @ Apb3Router.scala l50
  assign io_outputs_1_PWDATA = io_input_PWDATA; // @ Apb3Router.scala l51
  assign tmp_selIndex = io_input_PSEL[1]; // @ BaseType.scala l305
  assign io_input_PREADY = tmp_io_input_PREADY; // @ Apb3Router.scala l56
  assign io_input_PRDATA = tmp_io_input_PRDATA; // @ Apb3Router.scala l57
  assign io_input_PSLVERROR = tmp_io_input_PSLVERROR; // @ Apb3Router.scala l59
  always @(posedge io_axiClk) begin
    selIndex <= tmp_selIndex; // @ Reg.scala l39
  end


endmodule

module Apb3Decoder (
  input      [19:0]   io_input_PADDR,
  input      [0:0]    io_input_PSEL,
  input               io_input_PENABLE,
  output reg          io_input_PREADY,
  input               io_input_PWRITE,
  input      [31:0]   io_input_PWDATA,
  output     [31:0]   io_input_PRDATA,
  output reg          io_input_PSLVERROR,
  output     [19:0]   io_output_PADDR,
  output reg [1:0]    io_output_PSEL,
  output              io_output_PENABLE,
  input               io_output_PREADY,
  output              io_output_PWRITE,
  output     [31:0]   io_output_PWDATA,
  input      [31:0]   io_output_PRDATA,
  input               io_output_PSLVERROR
);

  wire                tmp_when;

  assign tmp_when = (io_input_PSEL[0] && (io_output_PSEL == 2'b00));
  assign io_output_PADDR = io_input_PADDR; // @ Apb3Decoder.scala l74
  assign io_output_PENABLE = io_input_PENABLE; // @ Apb3Decoder.scala l75
  assign io_output_PWRITE = io_input_PWRITE; // @ Apb3Decoder.scala l76
  assign io_output_PWDATA = io_input_PWDATA; // @ Apb3Decoder.scala l77
  always @(*) begin
    io_output_PSEL[0] = (((io_input_PADDR & (~ 20'h0003f)) == 20'h0) && io_input_PSEL[0]); // @ Apb3Decoder.scala l80
    io_output_PSEL[1] = (((io_input_PADDR & (~ 20'h0003f)) == 20'h00040) && io_input_PSEL[0]); // @ Apb3Decoder.scala l80
  end

  always @(*) begin
    io_input_PREADY = io_output_PREADY; // @ Apb3Decoder.scala l83
    if(tmp_when) begin
      io_input_PREADY = 1'b1; // @ Apb3Decoder.scala l89
    end
  end

  assign io_input_PRDATA = io_output_PRDATA; // @ Apb3Decoder.scala l84
  always @(*) begin
    io_input_PSLVERROR = io_output_PSLVERROR; // @ Apb3Decoder.scala l86
    if(tmp_when) begin
      io_input_PSLVERROR = 1'b1; // @ Apb3Decoder.scala l90
    end
  end


endmodule

module Axi4SharedArbiter (
  input               io_readInputs_0_ar_valid,
  output              io_readInputs_0_ar_ready,
  input      [19:0]   io_readInputs_0_ar_payload_addr,
  input      [3:0]    io_readInputs_0_ar_payload_id,
  input      [7:0]    io_readInputs_0_ar_payload_len,
  input      [2:0]    io_readInputs_0_ar_payload_size,
  input      [1:0]    io_readInputs_0_ar_payload_burst,
  output              io_readInputs_0_r_valid,
  input               io_readInputs_0_r_ready,
  output     [31:0]   io_readInputs_0_r_payload_data,
  output     [3:0]    io_readInputs_0_r_payload_id,
  output     [1:0]    io_readInputs_0_r_payload_resp,
  output              io_readInputs_0_r_payload_last,
  input               io_writeInputs_0_aw_valid,
  output              io_writeInputs_0_aw_ready,
  input      [19:0]   io_writeInputs_0_aw_payload_addr,
  input      [3:0]    io_writeInputs_0_aw_payload_id,
  input      [7:0]    io_writeInputs_0_aw_payload_len,
  input      [2:0]    io_writeInputs_0_aw_payload_size,
  input      [1:0]    io_writeInputs_0_aw_payload_burst,
  input               io_writeInputs_0_w_valid,
  output              io_writeInputs_0_w_ready,
  input      [31:0]   io_writeInputs_0_w_payload_data,
  input      [3:0]    io_writeInputs_0_w_payload_strb,
  input               io_writeInputs_0_w_payload_last,
  output              io_writeInputs_0_b_valid,
  input               io_writeInputs_0_b_ready,
  output     [3:0]    io_writeInputs_0_b_payload_id,
  output     [1:0]    io_writeInputs_0_b_payload_resp,
  output              io_output_arw_valid,
  input               io_output_arw_ready,
  output     [19:0]   io_output_arw_payload_addr,
  output     [3:0]    io_output_arw_payload_id,
  output     [7:0]    io_output_arw_payload_len,
  output     [2:0]    io_output_arw_payload_size,
  output     [1:0]    io_output_arw_payload_burst,
  output              io_output_arw_payload_write,
  output              io_output_w_valid,
  input               io_output_w_ready,
  output     [31:0]   io_output_w_payload_data,
  output     [3:0]    io_output_w_payload_strb,
  output              io_output_w_payload_last,
  input               io_output_b_valid,
  output              io_output_b_ready,
  input      [3:0]    io_output_b_payload_id,
  input      [1:0]    io_output_b_payload_resp,
  input               io_output_r_valid,
  output              io_output_r_ready,
  input      [31:0]   io_output_r_payload_data,
  input      [3:0]    io_output_r_payload_id,
  input      [1:0]    io_output_r_payload_resp,
  input               io_output_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg                 cmdArbiter_io_output_ready;
  wire                cmdRouteFork_thrown_translated_fifo_io_pop_ready;
  wire                cmdArbiter_io_inputs_0_ready;
  wire                cmdArbiter_io_inputs_1_ready;
  wire                cmdArbiter_io_output_valid;
  wire       [19:0]   cmdArbiter_io_output_payload_addr;
  wire       [3:0]    cmdArbiter_io_output_payload_id;
  wire       [7:0]    cmdArbiter_io_output_payload_len;
  wire       [2:0]    cmdArbiter_io_output_payload_size;
  wire       [1:0]    cmdArbiter_io_output_payload_burst;
  wire                cmdArbiter_io_output_payload_write;
  wire       [0:0]    cmdArbiter_io_chosen;
  wire       [1:0]    cmdArbiter_io_chosenOH;
  wire                cmdRouteFork_thrown_translated_fifo_io_push_ready;
  wire                cmdRouteFork_thrown_translated_fifo_io_pop_valid;
  wire       [2:0]    cmdRouteFork_thrown_translated_fifo_io_occupancy;
  wire                tmp_when;
  wire                inputsCmd_0_valid;
  wire                inputsCmd_0_ready;
  wire       [19:0]   inputsCmd_0_payload_addr;
  wire       [3:0]    inputsCmd_0_payload_id;
  wire       [7:0]    inputsCmd_0_payload_len;
  wire       [2:0]    inputsCmd_0_payload_size;
  wire       [1:0]    inputsCmd_0_payload_burst;
  wire                inputsCmd_0_payload_write;
  wire                inputsCmd_1_valid;
  wire                inputsCmd_1_ready;
  wire       [19:0]   inputsCmd_1_payload_addr;
  wire       [3:0]    inputsCmd_1_payload_id;
  wire       [7:0]    inputsCmd_1_payload_len;
  wire       [2:0]    inputsCmd_1_payload_size;
  wire       [1:0]    inputsCmd_1_payload_burst;
  wire                inputsCmd_1_payload_write;
  wire                cmdOutputFork_valid;
  wire                cmdOutputFork_ready;
  wire       [19:0]   cmdOutputFork_payload_addr;
  wire       [3:0]    cmdOutputFork_payload_id;
  wire       [7:0]    cmdOutputFork_payload_len;
  wire       [2:0]    cmdOutputFork_payload_size;
  wire       [1:0]    cmdOutputFork_payload_burst;
  wire                cmdOutputFork_payload_write;
  wire                cmdRouteFork_valid;
  reg                 cmdRouteFork_ready;
  wire       [19:0]   cmdRouteFork_payload_addr;
  wire       [3:0]    cmdRouteFork_payload_id;
  wire       [7:0]    cmdRouteFork_payload_len;
  wire       [2:0]    cmdRouteFork_payload_size;
  wire       [1:0]    cmdRouteFork_payload_burst;
  wire                cmdRouteFork_payload_write;
  reg                 axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_0;
  reg                 axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_1;
  wire                cmdOutputFork_fire;
  wire                cmdRouteFork_fire;
  reg                 cmdRouteFork_thrown_valid;
  wire                cmdRouteFork_thrown_ready;
  wire       [19:0]   cmdRouteFork_thrown_payload_addr;
  wire       [3:0]    cmdRouteFork_thrown_payload_id;
  wire       [7:0]    cmdRouteFork_thrown_payload_len;
  wire       [2:0]    cmdRouteFork_thrown_payload_size;
  wire       [1:0]    cmdRouteFork_thrown_payload_burst;
  wire                cmdRouteFork_thrown_payload_write;
  wire                cmdRouteFork_thrown_translated_valid;
  wire                cmdRouteFork_thrown_translated_ready;
  wire                writeLogic_routeDataInput_valid;
  wire                writeLogic_routeDataInput_ready;
  wire       [31:0]   writeLogic_routeDataInput_payload_data;
  wire       [3:0]    writeLogic_routeDataInput_payload_strb;
  wire                writeLogic_routeDataInput_payload_last;
  wire                io_output_w_fire;
  wire                writeLogic_writeRspSels_0;
  wire                readRspSels_0;

  assign tmp_when = (! cmdRouteFork_payload_write);
  StreamArbiter cmdArbiter (
    .io_inputs_0_valid         (inputsCmd_0_valid                      ), //i
    .io_inputs_0_ready         (cmdArbiter_io_inputs_0_ready           ), //o
    .io_inputs_0_payload_addr  (inputsCmd_0_payload_addr[19:0]         ), //i
    .io_inputs_0_payload_id    (inputsCmd_0_payload_id[3:0]            ), //i
    .io_inputs_0_payload_len   (inputsCmd_0_payload_len[7:0]           ), //i
    .io_inputs_0_payload_size  (inputsCmd_0_payload_size[2:0]          ), //i
    .io_inputs_0_payload_burst (inputsCmd_0_payload_burst[1:0]         ), //i
    .io_inputs_0_payload_write (inputsCmd_0_payload_write              ), //i
    .io_inputs_1_valid         (inputsCmd_1_valid                      ), //i
    .io_inputs_1_ready         (cmdArbiter_io_inputs_1_ready           ), //o
    .io_inputs_1_payload_addr  (inputsCmd_1_payload_addr[19:0]         ), //i
    .io_inputs_1_payload_id    (inputsCmd_1_payload_id[3:0]            ), //i
    .io_inputs_1_payload_len   (inputsCmd_1_payload_len[7:0]           ), //i
    .io_inputs_1_payload_size  (inputsCmd_1_payload_size[2:0]          ), //i
    .io_inputs_1_payload_burst (inputsCmd_1_payload_burst[1:0]         ), //i
    .io_inputs_1_payload_write (inputsCmd_1_payload_write              ), //i
    .io_output_valid           (cmdArbiter_io_output_valid             ), //o
    .io_output_ready           (cmdArbiter_io_output_ready             ), //i
    .io_output_payload_addr    (cmdArbiter_io_output_payload_addr[19:0]), //o
    .io_output_payload_id      (cmdArbiter_io_output_payload_id[3:0]   ), //o
    .io_output_payload_len     (cmdArbiter_io_output_payload_len[7:0]  ), //o
    .io_output_payload_size    (cmdArbiter_io_output_payload_size[2:0] ), //o
    .io_output_payload_burst   (cmdArbiter_io_output_payload_burst[1:0]), //o
    .io_output_payload_write   (cmdArbiter_io_output_payload_write     ), //o
    .io_chosen                 (cmdArbiter_io_chosen                   ), //o
    .io_chosenOH               (cmdArbiter_io_chosenOH[1:0]            ), //o
    .io_axiClk                 (io_axiClk                              ), //i
    .tmp_io_resetn             (tmp_io_resetn                          )  //i
  );
  StreamFifoLowLatency cmdRouteFork_thrown_translated_fifo (
    .io_push_valid (cmdRouteFork_thrown_translated_valid                 ), //i
    .io_push_ready (cmdRouteFork_thrown_translated_fifo_io_push_ready    ), //o
    .io_pop_valid  (cmdRouteFork_thrown_translated_fifo_io_pop_valid     ), //o
    .io_pop_ready  (cmdRouteFork_thrown_translated_fifo_io_pop_ready     ), //i
    .io_flush      (1'b0                                                 ), //i
    .io_occupancy  (cmdRouteFork_thrown_translated_fifo_io_occupancy[2:0]), //o
    .io_axiClk     (io_axiClk                                            ), //i
    .tmp_io_resetn (tmp_io_resetn                                        )  //i
  );
  assign inputsCmd_0_valid = io_readInputs_0_ar_valid; // @ Stream.scala l303
  assign io_readInputs_0_ar_ready = inputsCmd_0_ready; // @ Stream.scala l304
  assign inputsCmd_0_payload_addr = io_readInputs_0_ar_payload_addr; // @ Stream.scala l324
  assign inputsCmd_0_payload_id = io_readInputs_0_ar_payload_id; // @ Stream.scala l324
  assign inputsCmd_0_payload_len = io_readInputs_0_ar_payload_len; // @ Stream.scala l324
  assign inputsCmd_0_payload_size = io_readInputs_0_ar_payload_size; // @ Stream.scala l324
  assign inputsCmd_0_payload_burst = io_readInputs_0_ar_payload_burst; // @ Stream.scala l324
  assign inputsCmd_0_payload_write = 1'b0; // @ Stream.scala l324
  assign inputsCmd_1_valid = io_writeInputs_0_aw_valid; // @ Stream.scala l303
  assign io_writeInputs_0_aw_ready = inputsCmd_1_ready; // @ Stream.scala l304
  assign inputsCmd_1_payload_addr = io_writeInputs_0_aw_payload_addr; // @ Stream.scala l324
  assign inputsCmd_1_payload_id = io_writeInputs_0_aw_payload_id; // @ Stream.scala l324
  assign inputsCmd_1_payload_len = io_writeInputs_0_aw_payload_len; // @ Stream.scala l324
  assign inputsCmd_1_payload_size = io_writeInputs_0_aw_payload_size; // @ Stream.scala l324
  assign inputsCmd_1_payload_burst = io_writeInputs_0_aw_payload_burst; // @ Stream.scala l324
  assign inputsCmd_1_payload_write = 1'b1; // @ Stream.scala l324
  assign inputsCmd_0_ready = cmdArbiter_io_inputs_0_ready; // @ Stream.scala l304
  assign inputsCmd_1_ready = cmdArbiter_io_inputs_1_ready; // @ Stream.scala l304
  always @(*) begin
    cmdArbiter_io_output_ready = 1'b1; // @ Stream.scala l990
    if(((! cmdOutputFork_ready) && axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_0)) begin
      cmdArbiter_io_output_ready = 1'b0; // @ Stream.scala l993
    end
    if(((! cmdRouteFork_ready) && axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_1)) begin
      cmdArbiter_io_output_ready = 1'b0; // @ Stream.scala l993
    end
  end

  assign cmdOutputFork_valid = (cmdArbiter_io_output_valid && axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_0); // @ Stream.scala l1000
  assign cmdOutputFork_payload_addr = cmdArbiter_io_output_payload_addr; // @ Stream.scala l1001
  assign cmdOutputFork_payload_id = cmdArbiter_io_output_payload_id; // @ Stream.scala l1001
  assign cmdOutputFork_payload_len = cmdArbiter_io_output_payload_len; // @ Stream.scala l1001
  assign cmdOutputFork_payload_size = cmdArbiter_io_output_payload_size; // @ Stream.scala l1001
  assign cmdOutputFork_payload_burst = cmdArbiter_io_output_payload_burst; // @ Stream.scala l1001
  assign cmdOutputFork_payload_write = cmdArbiter_io_output_payload_write; // @ Stream.scala l1001
  assign cmdOutputFork_fire = (cmdOutputFork_valid && cmdOutputFork_ready); // @ BaseType.scala l305
  assign cmdRouteFork_valid = (cmdArbiter_io_output_valid && axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_1); // @ Stream.scala l1000
  assign cmdRouteFork_payload_addr = cmdArbiter_io_output_payload_addr; // @ Stream.scala l1001
  assign cmdRouteFork_payload_id = cmdArbiter_io_output_payload_id; // @ Stream.scala l1001
  assign cmdRouteFork_payload_len = cmdArbiter_io_output_payload_len; // @ Stream.scala l1001
  assign cmdRouteFork_payload_size = cmdArbiter_io_output_payload_size; // @ Stream.scala l1001
  assign cmdRouteFork_payload_burst = cmdArbiter_io_output_payload_burst; // @ Stream.scala l1001
  assign cmdRouteFork_payload_write = cmdArbiter_io_output_payload_write; // @ Stream.scala l1001
  assign cmdRouteFork_fire = (cmdRouteFork_valid && cmdRouteFork_ready); // @ BaseType.scala l305
  assign io_output_arw_valid = cmdOutputFork_valid; // @ Stream.scala l294
  assign cmdOutputFork_ready = io_output_arw_ready; // @ Stream.scala l295
  assign io_output_arw_payload_addr = cmdOutputFork_payload_addr; // @ Stream.scala l296
  assign io_output_arw_payload_len = cmdOutputFork_payload_len; // @ Stream.scala l296
  assign io_output_arw_payload_size = cmdOutputFork_payload_size; // @ Stream.scala l296
  assign io_output_arw_payload_burst = cmdOutputFork_payload_burst; // @ Stream.scala l296
  assign io_output_arw_payload_write = cmdOutputFork_payload_write; // @ Stream.scala l296
  assign io_output_arw_payload_id = (cmdOutputFork_payload_write ? cmdOutputFork_payload_id : cmdOutputFork_payload_id); // @ Axi4Arbiter.scala l162
  always @(*) begin
    cmdRouteFork_thrown_valid = cmdRouteFork_valid; // @ Stream.scala l294
    if(tmp_when) begin
      cmdRouteFork_thrown_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    cmdRouteFork_ready = cmdRouteFork_thrown_ready; // @ Stream.scala l295
    if(tmp_when) begin
      cmdRouteFork_ready = 1'b1; // @ Stream.scala l440
    end
  end

  assign cmdRouteFork_thrown_payload_addr = cmdRouteFork_payload_addr; // @ Stream.scala l296
  assign cmdRouteFork_thrown_payload_id = cmdRouteFork_payload_id; // @ Stream.scala l296
  assign cmdRouteFork_thrown_payload_len = cmdRouteFork_payload_len; // @ Stream.scala l296
  assign cmdRouteFork_thrown_payload_size = cmdRouteFork_payload_size; // @ Stream.scala l296
  assign cmdRouteFork_thrown_payload_burst = cmdRouteFork_payload_burst; // @ Stream.scala l296
  assign cmdRouteFork_thrown_payload_write = cmdRouteFork_payload_write; // @ Stream.scala l296
  assign cmdRouteFork_thrown_translated_valid = cmdRouteFork_thrown_valid; // @ Stream.scala l303
  assign cmdRouteFork_thrown_ready = cmdRouteFork_thrown_translated_ready; // @ Stream.scala l304
  assign cmdRouteFork_thrown_translated_ready = cmdRouteFork_thrown_translated_fifo_io_push_ready; // @ Stream.scala l295
  assign writeLogic_routeDataInput_valid = io_writeInputs_0_w_valid; // @ Vec.scala l169
  assign writeLogic_routeDataInput_ready = io_writeInputs_0_w_ready; // @ Vec.scala l169
  assign writeLogic_routeDataInput_payload_data = io_writeInputs_0_w_payload_data; // @ Vec.scala l169
  assign writeLogic_routeDataInput_payload_strb = io_writeInputs_0_w_payload_strb; // @ Vec.scala l169
  assign writeLogic_routeDataInput_payload_last = io_writeInputs_0_w_payload_last; // @ Vec.scala l169
  assign io_output_w_valid = (cmdRouteFork_thrown_translated_fifo_io_pop_valid && writeLogic_routeDataInput_valid); // @ Axi4Arbiter.scala l175
  assign io_output_w_payload_data = writeLogic_routeDataInput_payload_data; // @ Axi4Arbiter.scala l176
  assign io_output_w_payload_strb = writeLogic_routeDataInput_payload_strb; // @ Axi4Arbiter.scala l176
  assign io_output_w_payload_last = writeLogic_routeDataInput_payload_last; // @ Axi4Arbiter.scala l176
  assign io_writeInputs_0_w_ready = ((cmdRouteFork_thrown_translated_fifo_io_pop_valid && io_output_w_ready) && 1'b1); // @ Axi4Arbiter.scala l178
  assign io_output_w_fire = (io_output_w_valid && io_output_w_ready); // @ BaseType.scala l305
  assign cmdRouteFork_thrown_translated_fifo_io_pop_ready = (io_output_w_fire && io_output_w_payload_last); // @ Axi4Arbiter.scala l180
  assign writeLogic_writeRspSels_0 = 1'b1; // @ BaseType.scala l305
  assign io_writeInputs_0_b_valid = (io_output_b_valid && writeLogic_writeRspSels_0); // @ Axi4Arbiter.scala l188
  assign io_writeInputs_0_b_payload_resp = io_output_b_payload_resp; // @ Axi4Arbiter.scala l189
  assign io_writeInputs_0_b_payload_id = io_output_b_payload_id; // @ Axi4Arbiter.scala l191
  assign io_output_b_ready = io_writeInputs_0_b_ready; // @ Axi4Arbiter.scala l193
  assign readRspSels_0 = 1'b1; // @ BaseType.scala l305
  assign io_readInputs_0_r_valid = (io_output_r_valid && readRspSels_0); // @ Axi4Arbiter.scala l207
  assign io_readInputs_0_r_payload_data = io_output_r_payload_data; // @ Axi4Arbiter.scala l208
  assign io_readInputs_0_r_payload_resp = io_output_r_payload_resp; // @ Axi4Arbiter.scala l208
  assign io_readInputs_0_r_payload_last = io_output_r_payload_last; // @ Axi4Arbiter.scala l208
  assign io_readInputs_0_r_payload_id = io_output_r_payload_id; // @ Axi4Arbiter.scala l210
  assign io_output_r_ready = io_readInputs_0_r_ready; // @ Axi4Arbiter.scala l212
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_0 <= 1'b1; // @ Data.scala l400
      axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_1 <= 1'b1; // @ Data.scala l400
    end else begin
      if(cmdOutputFork_fire) begin
        axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_0 <= 1'b0; // @ Stream.scala l1003
      end
      if(cmdRouteFork_fire) begin
        axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_1 <= 1'b0; // @ Stream.scala l1003
      end
      if(cmdArbiter_io_output_ready) begin
        axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_0 <= 1'b1; // @ Stream.scala l1009
        axi_apbBridge_io_axi_arbiter_cmdArbiter_io_output_fork2_logic_linkEnable_1 <= 1'b1; // @ Stream.scala l1009
      end
    end
  end


endmodule

module Axi4WriteOnlyDecoder_2 (
  input               io_input_aw_valid,
  output              io_input_aw_ready,
  input      [31:0]   io_input_aw_payload_addr,
  input      [3:0]    io_input_aw_payload_id,
  input      [3:0]    io_input_aw_payload_region,
  input      [7:0]    io_input_aw_payload_len,
  input      [2:0]    io_input_aw_payload_size,
  input      [1:0]    io_input_aw_payload_burst,
  input      [0:0]    io_input_aw_payload_lock,
  input      [3:0]    io_input_aw_payload_cache,
  input      [3:0]    io_input_aw_payload_qos,
  input      [2:0]    io_input_aw_payload_prot,
  input               io_input_w_valid,
  output              io_input_w_ready,
  input      [31:0]   io_input_w_payload_data,
  input      [3:0]    io_input_w_payload_strb,
  input               io_input_w_payload_last,
  output              io_input_b_valid,
  input               io_input_b_ready,
  output reg [3:0]    io_input_b_payload_id,
  output reg [1:0]    io_input_b_payload_resp,
  output              io_outputs_0_aw_valid,
  input               io_outputs_0_aw_ready,
  output     [31:0]   io_outputs_0_aw_payload_addr,
  output     [3:0]    io_outputs_0_aw_payload_id,
  output     [3:0]    io_outputs_0_aw_payload_region,
  output     [7:0]    io_outputs_0_aw_payload_len,
  output     [2:0]    io_outputs_0_aw_payload_size,
  output     [1:0]    io_outputs_0_aw_payload_burst,
  output     [0:0]    io_outputs_0_aw_payload_lock,
  output     [3:0]    io_outputs_0_aw_payload_cache,
  output     [3:0]    io_outputs_0_aw_payload_qos,
  output     [2:0]    io_outputs_0_aw_payload_prot,
  output              io_outputs_0_w_valid,
  input               io_outputs_0_w_ready,
  output     [31:0]   io_outputs_0_w_payload_data,
  output     [3:0]    io_outputs_0_w_payload_strb,
  output              io_outputs_0_w_payload_last,
  input               io_outputs_0_b_valid,
  output              io_outputs_0_b_ready,
  input      [3:0]    io_outputs_0_b_payload_id,
  input      [1:0]    io_outputs_0_b_payload_resp,
  output              io_outputs_1_aw_valid,
  input               io_outputs_1_aw_ready,
  output     [31:0]   io_outputs_1_aw_payload_addr,
  output     [3:0]    io_outputs_1_aw_payload_id,
  output     [3:0]    io_outputs_1_aw_payload_region,
  output     [7:0]    io_outputs_1_aw_payload_len,
  output     [2:0]    io_outputs_1_aw_payload_size,
  output     [1:0]    io_outputs_1_aw_payload_burst,
  output     [0:0]    io_outputs_1_aw_payload_lock,
  output     [3:0]    io_outputs_1_aw_payload_cache,
  output     [3:0]    io_outputs_1_aw_payload_qos,
  output     [2:0]    io_outputs_1_aw_payload_prot,
  output              io_outputs_1_w_valid,
  input               io_outputs_1_w_ready,
  output     [31:0]   io_outputs_1_w_payload_data,
  output     [3:0]    io_outputs_1_w_payload_strb,
  output              io_outputs_1_w_payload_last,
  input               io_outputs_1_b_valid,
  output              io_outputs_1_b_ready,
  input      [3:0]    io_outputs_1_b_payload_id,
  input      [1:0]    io_outputs_1_b_payload_resp,
  output              io_outputs_2_aw_valid,
  input               io_outputs_2_aw_ready,
  output     [31:0]   io_outputs_2_aw_payload_addr,
  output     [3:0]    io_outputs_2_aw_payload_id,
  output     [3:0]    io_outputs_2_aw_payload_region,
  output     [7:0]    io_outputs_2_aw_payload_len,
  output     [2:0]    io_outputs_2_aw_payload_size,
  output     [1:0]    io_outputs_2_aw_payload_burst,
  output     [0:0]    io_outputs_2_aw_payload_lock,
  output     [3:0]    io_outputs_2_aw_payload_cache,
  output     [3:0]    io_outputs_2_aw_payload_qos,
  output     [2:0]    io_outputs_2_aw_payload_prot,
  output              io_outputs_2_w_valid,
  input               io_outputs_2_w_ready,
  output     [31:0]   io_outputs_2_w_payload_data,
  output     [3:0]    io_outputs_2_w_payload_strb,
  output              io_outputs_2_w_payload_last,
  input               io_outputs_2_b_valid,
  output              io_outputs_2_b_ready,
  input      [3:0]    io_outputs_2_b_payload_id,
  input      [1:0]    io_outputs_2_b_payload_resp,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                errorSlave_io_axi_aw_valid;
  wire                errorSlave_io_axi_w_valid;
  wire                errorSlave_io_axi_aw_ready;
  wire                errorSlave_io_axi_w_ready;
  wire                errorSlave_io_axi_b_valid;
  wire       [3:0]    errorSlave_io_axi_b_payload_id;
  wire       [1:0]    errorSlave_io_axi_b_payload_resp;
  reg        [3:0]    tmp_io_input_b_payload_id;
  reg        [1:0]    tmp_io_input_b_payload_resp;
  wire                cmdAllowedStart;
  wire                io_input_aw_fire;
  wire                io_input_b_fire;
  reg                 pendingCmdCounter_incrementIt;
  reg                 pendingCmdCounter_decrementIt;
  wire       [2:0]    pendingCmdCounter_valueNext;
  reg        [2:0]    pendingCmdCounter_value;
  wire                pendingCmdCounter_willOverflowIfInc;
  wire                pendingCmdCounter_willOverflow;
  reg        [2:0]    pendingCmdCounter_finalIncrement;
  wire                io_input_w_fire;
  reg                 pendingDataCounter_incrementIt;
  reg                 pendingDataCounter_decrementIt;
  wire       [2:0]    pendingDataCounter_valueNext;
  reg        [2:0]    pendingDataCounter_value;
  wire                pendingDataCounter_willOverflowIfInc;
  wire                pendingDataCounter_willOverflow;
  reg        [2:0]    pendingDataCounter_finalIncrement;
  wire       [2:0]    decodedCmdSels;
  wire                decodedCmdError;
  reg        [2:0]    pendingSels;
  reg                 pendingError;
  wire                allowCmd;
  wire                allowData;
  reg                 tmp_cmdAllowedStart;
  wire                tmp_io_outputs_1_w_valid;
  wire                tmp_io_outputs_2_w_valid;
  wire       [1:0]    writeRspIndex;

  Axi4WriteOnlyErrorSlave errorSlave (
    .io_axi_aw_valid          (errorSlave_io_axi_aw_valid           ), //i
    .io_axi_aw_ready          (errorSlave_io_axi_aw_ready           ), //o
    .io_axi_aw_payload_addr   (io_input_aw_payload_addr[31:0]       ), //i
    .io_axi_aw_payload_id     (io_input_aw_payload_id[3:0]          ), //i
    .io_axi_aw_payload_region (io_input_aw_payload_region[3:0]      ), //i
    .io_axi_aw_payload_len    (io_input_aw_payload_len[7:0]         ), //i
    .io_axi_aw_payload_size   (io_input_aw_payload_size[2:0]        ), //i
    .io_axi_aw_payload_burst  (io_input_aw_payload_burst[1:0]       ), //i
    .io_axi_aw_payload_lock   (io_input_aw_payload_lock             ), //i
    .io_axi_aw_payload_cache  (io_input_aw_payload_cache[3:0]       ), //i
    .io_axi_aw_payload_qos    (io_input_aw_payload_qos[3:0]         ), //i
    .io_axi_aw_payload_prot   (io_input_aw_payload_prot[2:0]        ), //i
    .io_axi_w_valid           (errorSlave_io_axi_w_valid            ), //i
    .io_axi_w_ready           (errorSlave_io_axi_w_ready            ), //o
    .io_axi_w_payload_data    (io_input_w_payload_data[31:0]        ), //i
    .io_axi_w_payload_strb    (io_input_w_payload_strb[3:0]         ), //i
    .io_axi_w_payload_last    (io_input_w_payload_last              ), //i
    .io_axi_b_valid           (errorSlave_io_axi_b_valid            ), //o
    .io_axi_b_ready           (io_input_b_ready                     ), //i
    .io_axi_b_payload_id      (errorSlave_io_axi_b_payload_id[3:0]  ), //o
    .io_axi_b_payload_resp    (errorSlave_io_axi_b_payload_resp[1:0]), //o
    .io_axiClk                (io_axiClk                            ), //i
    .tmp_io_resetn            (tmp_io_resetn                        )  //i
  );
  always @(*) begin
    case(writeRspIndex)
      2'b00 : begin
        tmp_io_input_b_payload_id = io_outputs_0_b_payload_id;
        tmp_io_input_b_payload_resp = io_outputs_0_b_payload_resp;
      end
      2'b01 : begin
        tmp_io_input_b_payload_id = io_outputs_1_b_payload_id;
        tmp_io_input_b_payload_resp = io_outputs_1_b_payload_resp;
      end
      default : begin
        tmp_io_input_b_payload_id = io_outputs_2_b_payload_id;
        tmp_io_input_b_payload_resp = io_outputs_2_b_payload_resp;
      end
    endcase
  end

  assign io_input_aw_fire = (io_input_aw_valid && io_input_aw_ready); // @ BaseType.scala l305
  assign io_input_b_fire = (io_input_b_valid && io_input_b_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingCmdCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(io_input_aw_fire) begin
      pendingCmdCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingCmdCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if(io_input_b_fire) begin
      pendingCmdCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingCmdCounter_willOverflowIfInc = ((pendingCmdCounter_value == 3'b111) && (! pendingCmdCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingCmdCounter_willOverflow = (pendingCmdCounter_willOverflowIfInc && pendingCmdCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingCmdCounter_incrementIt && (! pendingCmdCounter_decrementIt))) begin
      pendingCmdCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingCmdCounter_incrementIt) && pendingCmdCounter_decrementIt)) begin
        pendingCmdCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingCmdCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingCmdCounter_valueNext = (pendingCmdCounter_value + pendingCmdCounter_finalIncrement); // @ Utils.scala l678
  assign io_input_w_fire = (io_input_w_valid && io_input_w_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingDataCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(cmdAllowedStart) begin
      pendingDataCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingDataCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if((io_input_w_fire && io_input_w_payload_last)) begin
      pendingDataCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingDataCounter_willOverflowIfInc = ((pendingDataCounter_value == 3'b111) && (! pendingDataCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingDataCounter_willOverflow = (pendingDataCounter_willOverflowIfInc && pendingDataCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingDataCounter_incrementIt && (! pendingDataCounter_decrementIt))) begin
      pendingDataCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingDataCounter_incrementIt) && pendingDataCounter_decrementIt)) begin
        pendingDataCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingDataCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingDataCounter_valueNext = (pendingDataCounter_value + pendingDataCounter_finalIncrement); // @ Utils.scala l678
  assign decodedCmdSels = {(((io_input_aw_payload_addr & (~ 32'h0fffffff)) == 32'h80000000) && io_input_aw_valid),{(((io_input_aw_payload_addr & (~ 32'h001fffff)) == 32'h11000000) && io_input_aw_valid),(((io_input_aw_payload_addr & (~ 32'h0000007f)) == 32'h10000000) && io_input_aw_valid)}}; // @ BaseType.scala l299
  assign decodedCmdError = (decodedCmdSels == 3'b000); // @ BaseType.scala l305
  assign allowCmd = ((pendingCmdCounter_value == 3'b000) || ((pendingCmdCounter_value != 3'b111) && (pendingSels == decodedCmdSels))); // @ BaseType.scala l305
  assign allowData = (pendingDataCounter_value != 3'b000); // @ BaseType.scala l305
  assign cmdAllowedStart = ((io_input_aw_valid && allowCmd) && tmp_cmdAllowedStart); // @ Axi4Decoder.scala l89
  assign io_input_aw_ready = (((|(decodedCmdSels & {io_outputs_2_aw_ready,{io_outputs_1_aw_ready,io_outputs_0_aw_ready}})) || (decodedCmdError && errorSlave_io_axi_aw_ready)) && allowCmd); // @ Axi4Decoder.scala l96
  assign errorSlave_io_axi_aw_valid = ((io_input_aw_valid && decodedCmdError) && allowCmd); // @ Axi4Decoder.scala l98
  assign io_outputs_0_aw_valid = ((io_input_aw_valid && decodedCmdSels[0]) && allowCmd); // @ Axi4Decoder.scala l102
  assign io_outputs_0_aw_payload_addr = io_input_aw_payload_addr; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_id = io_input_aw_payload_id; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_region = io_input_aw_payload_region; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_len = io_input_aw_payload_len; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_size = io_input_aw_payload_size; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_burst = io_input_aw_payload_burst; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_lock = io_input_aw_payload_lock; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_cache = io_input_aw_payload_cache; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_qos = io_input_aw_payload_qos; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_prot = io_input_aw_payload_prot; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_valid = ((io_input_aw_valid && decodedCmdSels[1]) && allowCmd); // @ Axi4Decoder.scala l102
  assign io_outputs_1_aw_payload_addr = io_input_aw_payload_addr; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_id = io_input_aw_payload_id; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_region = io_input_aw_payload_region; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_len = io_input_aw_payload_len; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_size = io_input_aw_payload_size; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_burst = io_input_aw_payload_burst; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_lock = io_input_aw_payload_lock; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_cache = io_input_aw_payload_cache; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_qos = io_input_aw_payload_qos; // @ Axi4Decoder.scala l103
  assign io_outputs_1_aw_payload_prot = io_input_aw_payload_prot; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_valid = ((io_input_aw_valid && decodedCmdSels[2]) && allowCmd); // @ Axi4Decoder.scala l102
  assign io_outputs_2_aw_payload_addr = io_input_aw_payload_addr; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_id = io_input_aw_payload_id; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_region = io_input_aw_payload_region; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_len = io_input_aw_payload_len; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_size = io_input_aw_payload_size; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_burst = io_input_aw_payload_burst; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_lock = io_input_aw_payload_lock; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_cache = io_input_aw_payload_cache; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_qos = io_input_aw_payload_qos; // @ Axi4Decoder.scala l103
  assign io_outputs_2_aw_payload_prot = io_input_aw_payload_prot; // @ Axi4Decoder.scala l103
  assign io_input_w_ready = (((|(pendingSels & {io_outputs_2_w_ready,{io_outputs_1_w_ready,io_outputs_0_w_ready}})) || (pendingError && errorSlave_io_axi_w_ready)) && allowData); // @ Axi4Decoder.scala l107
  assign errorSlave_io_axi_w_valid = ((io_input_w_valid && pendingError) && allowData); // @ Axi4Decoder.scala l109
  assign tmp_io_outputs_1_w_valid = pendingSels[1]; // @ BaseType.scala l305
  assign tmp_io_outputs_2_w_valid = pendingSels[2]; // @ BaseType.scala l305
  assign io_outputs_0_w_valid = ((io_input_w_valid && pendingSels[0]) && allowData); // @ Axi4Decoder.scala l113
  assign io_outputs_0_w_payload_data = io_input_w_payload_data; // @ Axi4Decoder.scala l114
  assign io_outputs_0_w_payload_strb = io_input_w_payload_strb; // @ Axi4Decoder.scala l114
  assign io_outputs_0_w_payload_last = io_input_w_payload_last; // @ Axi4Decoder.scala l114
  assign io_outputs_1_w_valid = ((io_input_w_valid && tmp_io_outputs_1_w_valid) && allowData); // @ Axi4Decoder.scala l113
  assign io_outputs_1_w_payload_data = io_input_w_payload_data; // @ Axi4Decoder.scala l114
  assign io_outputs_1_w_payload_strb = io_input_w_payload_strb; // @ Axi4Decoder.scala l114
  assign io_outputs_1_w_payload_last = io_input_w_payload_last; // @ Axi4Decoder.scala l114
  assign io_outputs_2_w_valid = ((io_input_w_valid && tmp_io_outputs_2_w_valid) && allowData); // @ Axi4Decoder.scala l113
  assign io_outputs_2_w_payload_data = io_input_w_payload_data; // @ Axi4Decoder.scala l114
  assign io_outputs_2_w_payload_strb = io_input_w_payload_strb; // @ Axi4Decoder.scala l114
  assign io_outputs_2_w_payload_last = io_input_w_payload_last; // @ Axi4Decoder.scala l114
  assign writeRspIndex = {tmp_io_outputs_2_w_valid,tmp_io_outputs_1_w_valid}; // @ BaseType.scala l318
  assign io_input_b_valid = ((|{io_outputs_2_b_valid,{io_outputs_1_b_valid,io_outputs_0_b_valid}}) || errorSlave_io_axi_b_valid); // @ Axi4Decoder.scala l119
  always @(*) begin
    io_input_b_payload_id = tmp_io_input_b_payload_id; // @ Axi4Decoder.scala l120
    if(pendingError) begin
      io_input_b_payload_id = errorSlave_io_axi_b_payload_id; // @ Axi4Decoder.scala l123
    end
  end

  always @(*) begin
    io_input_b_payload_resp = tmp_io_input_b_payload_resp; // @ Axi4Decoder.scala l120
    if(pendingError) begin
      io_input_b_payload_resp = errorSlave_io_axi_b_payload_resp; // @ Axi4Decoder.scala l124
    end
  end

  assign io_outputs_0_b_ready = io_input_b_ready; // @ Axi4Decoder.scala l128
  assign io_outputs_1_b_ready = io_input_b_ready; // @ Axi4Decoder.scala l128
  assign io_outputs_2_b_ready = io_input_b_ready; // @ Axi4Decoder.scala l128
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pendingCmdCounter_value <= 3'b000; // @ Data.scala l400
      pendingDataCounter_value <= 3'b000; // @ Data.scala l400
      pendingSels <= 3'b000; // @ Data.scala l400
      pendingError <= 1'b0; // @ Data.scala l400
      tmp_cmdAllowedStart <= 1'b1; // @ Data.scala l400
    end else begin
      pendingCmdCounter_value <= pendingCmdCounter_valueNext; // @ Reg.scala l39
      pendingDataCounter_value <= pendingDataCounter_valueNext; // @ Reg.scala l39
      if(cmdAllowedStart) begin
        pendingSels <= decodedCmdSels; // @ Axi4Decoder.scala l85
      end
      if(cmdAllowedStart) begin
        pendingError <= decodedCmdError; // @ Axi4Decoder.scala l86
      end
      if(cmdAllowedStart) begin
        tmp_cmdAllowedStart <= 1'b0; // @ Axi4Decoder.scala l89
      end
      if(io_input_aw_ready) begin
        tmp_cmdAllowedStart <= 1'b1; // @ Axi4Decoder.scala l89
      end
    end
  end


endmodule

module Axi4ReadOnlyDecoder_3 (
  input               io_input_ar_valid,
  output              io_input_ar_ready,
  input      [31:0]   io_input_ar_payload_addr,
  input      [3:0]    io_input_ar_payload_id,
  input      [3:0]    io_input_ar_payload_region,
  input      [7:0]    io_input_ar_payload_len,
  input      [2:0]    io_input_ar_payload_size,
  input      [1:0]    io_input_ar_payload_burst,
  input      [0:0]    io_input_ar_payload_lock,
  input      [3:0]    io_input_ar_payload_cache,
  input      [3:0]    io_input_ar_payload_qos,
  input      [2:0]    io_input_ar_payload_prot,
  output reg          io_input_r_valid,
  input               io_input_r_ready,
  output     [31:0]   io_input_r_payload_data,
  output reg [3:0]    io_input_r_payload_id,
  output reg [1:0]    io_input_r_payload_resp,
  output reg          io_input_r_payload_last,
  output              io_outputs_0_ar_valid,
  input               io_outputs_0_ar_ready,
  output     [31:0]   io_outputs_0_ar_payload_addr,
  output     [3:0]    io_outputs_0_ar_payload_id,
  output     [3:0]    io_outputs_0_ar_payload_region,
  output     [7:0]    io_outputs_0_ar_payload_len,
  output     [2:0]    io_outputs_0_ar_payload_size,
  output     [1:0]    io_outputs_0_ar_payload_burst,
  output     [0:0]    io_outputs_0_ar_payload_lock,
  output     [3:0]    io_outputs_0_ar_payload_cache,
  output     [3:0]    io_outputs_0_ar_payload_qos,
  output     [2:0]    io_outputs_0_ar_payload_prot,
  input               io_outputs_0_r_valid,
  output              io_outputs_0_r_ready,
  input      [31:0]   io_outputs_0_r_payload_data,
  input      [3:0]    io_outputs_0_r_payload_id,
  input      [1:0]    io_outputs_0_r_payload_resp,
  input               io_outputs_0_r_payload_last,
  output              io_outputs_1_ar_valid,
  input               io_outputs_1_ar_ready,
  output     [31:0]   io_outputs_1_ar_payload_addr,
  output     [3:0]    io_outputs_1_ar_payload_id,
  output     [3:0]    io_outputs_1_ar_payload_region,
  output     [7:0]    io_outputs_1_ar_payload_len,
  output     [2:0]    io_outputs_1_ar_payload_size,
  output     [1:0]    io_outputs_1_ar_payload_burst,
  output     [0:0]    io_outputs_1_ar_payload_lock,
  output     [3:0]    io_outputs_1_ar_payload_cache,
  output     [3:0]    io_outputs_1_ar_payload_qos,
  output     [2:0]    io_outputs_1_ar_payload_prot,
  input               io_outputs_1_r_valid,
  output              io_outputs_1_r_ready,
  input      [31:0]   io_outputs_1_r_payload_data,
  input      [3:0]    io_outputs_1_r_payload_id,
  input      [1:0]    io_outputs_1_r_payload_resp,
  input               io_outputs_1_r_payload_last,
  output              io_outputs_2_ar_valid,
  input               io_outputs_2_ar_ready,
  output     [31:0]   io_outputs_2_ar_payload_addr,
  output     [3:0]    io_outputs_2_ar_payload_id,
  output     [3:0]    io_outputs_2_ar_payload_region,
  output     [7:0]    io_outputs_2_ar_payload_len,
  output     [2:0]    io_outputs_2_ar_payload_size,
  output     [1:0]    io_outputs_2_ar_payload_burst,
  output     [0:0]    io_outputs_2_ar_payload_lock,
  output     [3:0]    io_outputs_2_ar_payload_cache,
  output     [3:0]    io_outputs_2_ar_payload_qos,
  output     [2:0]    io_outputs_2_ar_payload_prot,
  input               io_outputs_2_r_valid,
  output              io_outputs_2_r_ready,
  input      [31:0]   io_outputs_2_r_payload_data,
  input      [3:0]    io_outputs_2_r_payload_id,
  input      [1:0]    io_outputs_2_r_payload_resp,
  input               io_outputs_2_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                errorSlave_io_axi_ar_valid;
  wire                errorSlave_io_axi_ar_ready;
  wire                errorSlave_io_axi_r_valid;
  wire       [31:0]   errorSlave_io_axi_r_payload_data;
  wire       [3:0]    errorSlave_io_axi_r_payload_id;
  wire       [1:0]    errorSlave_io_axi_r_payload_resp;
  wire                errorSlave_io_axi_r_payload_last;
  reg        [31:0]   tmp_io_input_r_payload_data;
  reg        [3:0]    tmp_io_input_r_payload_id;
  reg        [1:0]    tmp_io_input_r_payload_resp;
  reg                 tmp_io_input_r_payload_last;
  wire                io_input_ar_fire;
  wire                io_input_r_fire;
  reg                 pendingCmdCounter_incrementIt;
  reg                 pendingCmdCounter_decrementIt;
  wire       [2:0]    pendingCmdCounter_valueNext;
  reg        [2:0]    pendingCmdCounter_value;
  wire                pendingCmdCounter_willOverflowIfInc;
  wire                pendingCmdCounter_willOverflow;
  reg        [2:0]    pendingCmdCounter_finalIncrement;
  wire       [2:0]    decodedCmdSels;
  wire                decodedCmdError;
  reg        [2:0]    pendingSels;
  reg                 pendingError;
  wire                allowCmd;
  wire                tmp_readRspIndex;
  wire                tmp_readRspIndex_1;
  wire       [1:0]    readRspIndex;

  Axi4ReadOnlyErrorSlave errorSlave (
    .io_axi_ar_valid          (errorSlave_io_axi_ar_valid            ), //i
    .io_axi_ar_ready          (errorSlave_io_axi_ar_ready            ), //o
    .io_axi_ar_payload_addr   (io_input_ar_payload_addr[31:0]        ), //i
    .io_axi_ar_payload_id     (io_input_ar_payload_id[3:0]           ), //i
    .io_axi_ar_payload_region (io_input_ar_payload_region[3:0]       ), //i
    .io_axi_ar_payload_len    (io_input_ar_payload_len[7:0]          ), //i
    .io_axi_ar_payload_size   (io_input_ar_payload_size[2:0]         ), //i
    .io_axi_ar_payload_burst  (io_input_ar_payload_burst[1:0]        ), //i
    .io_axi_ar_payload_lock   (io_input_ar_payload_lock              ), //i
    .io_axi_ar_payload_cache  (io_input_ar_payload_cache[3:0]        ), //i
    .io_axi_ar_payload_qos    (io_input_ar_payload_qos[3:0]          ), //i
    .io_axi_ar_payload_prot   (io_input_ar_payload_prot[2:0]         ), //i
    .io_axi_r_valid           (errorSlave_io_axi_r_valid             ), //o
    .io_axi_r_ready           (io_input_r_ready                      ), //i
    .io_axi_r_payload_data    (errorSlave_io_axi_r_payload_data[31:0]), //o
    .io_axi_r_payload_id      (errorSlave_io_axi_r_payload_id[3:0]   ), //o
    .io_axi_r_payload_resp    (errorSlave_io_axi_r_payload_resp[1:0] ), //o
    .io_axi_r_payload_last    (errorSlave_io_axi_r_payload_last      ), //o
    .io_axiClk                (io_axiClk                             ), //i
    .tmp_io_resetn            (tmp_io_resetn                         )  //i
  );
  always @(*) begin
    case(readRspIndex)
      2'b00 : begin
        tmp_io_input_r_payload_data = io_outputs_0_r_payload_data;
        tmp_io_input_r_payload_id = io_outputs_0_r_payload_id;
        tmp_io_input_r_payload_resp = io_outputs_0_r_payload_resp;
        tmp_io_input_r_payload_last = io_outputs_0_r_payload_last;
      end
      2'b01 : begin
        tmp_io_input_r_payload_data = io_outputs_1_r_payload_data;
        tmp_io_input_r_payload_id = io_outputs_1_r_payload_id;
        tmp_io_input_r_payload_resp = io_outputs_1_r_payload_resp;
        tmp_io_input_r_payload_last = io_outputs_1_r_payload_last;
      end
      default : begin
        tmp_io_input_r_payload_data = io_outputs_2_r_payload_data;
        tmp_io_input_r_payload_id = io_outputs_2_r_payload_id;
        tmp_io_input_r_payload_resp = io_outputs_2_r_payload_resp;
        tmp_io_input_r_payload_last = io_outputs_2_r_payload_last;
      end
    endcase
  end

  assign io_input_ar_fire = (io_input_ar_valid && io_input_ar_ready); // @ BaseType.scala l305
  assign io_input_r_fire = (io_input_r_valid && io_input_r_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingCmdCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(io_input_ar_fire) begin
      pendingCmdCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingCmdCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if((io_input_r_fire && io_input_r_payload_last)) begin
      pendingCmdCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingCmdCounter_willOverflowIfInc = ((pendingCmdCounter_value == 3'b111) && (! pendingCmdCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingCmdCounter_willOverflow = (pendingCmdCounter_willOverflowIfInc && pendingCmdCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingCmdCounter_incrementIt && (! pendingCmdCounter_decrementIt))) begin
      pendingCmdCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingCmdCounter_incrementIt) && pendingCmdCounter_decrementIt)) begin
        pendingCmdCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingCmdCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingCmdCounter_valueNext = (pendingCmdCounter_value + pendingCmdCounter_finalIncrement); // @ Utils.scala l678
  assign decodedCmdSels = {(((io_input_ar_payload_addr & (~ 32'h0fffffff)) == 32'h80000000) && io_input_ar_valid),{(((io_input_ar_payload_addr & (~ 32'h001fffff)) == 32'h11000000) && io_input_ar_valid),(((io_input_ar_payload_addr & (~ 32'h0000007f)) == 32'h10000000) && io_input_ar_valid)}}; // @ BaseType.scala l299
  assign decodedCmdError = (decodedCmdSels == 3'b000); // @ BaseType.scala l305
  assign allowCmd = ((pendingCmdCounter_value == 3'b000) || ((pendingCmdCounter_value != 3'b111) && (pendingSels == decodedCmdSels))); // @ BaseType.scala l305
  assign io_input_ar_ready = (((|(decodedCmdSels & {io_outputs_2_ar_ready,{io_outputs_1_ar_ready,io_outputs_0_ar_ready}})) || (decodedCmdError && errorSlave_io_axi_ar_ready)) && allowCmd); // @ Axi4Decoder.scala l33
  assign errorSlave_io_axi_ar_valid = ((io_input_ar_valid && decodedCmdError) && allowCmd); // @ Axi4Decoder.scala l35
  assign io_outputs_0_ar_valid = ((io_input_ar_valid && decodedCmdSels[0]) && allowCmd); // @ Axi4Decoder.scala l39
  assign io_outputs_0_ar_payload_addr = io_input_ar_payload_addr; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_id = io_input_ar_payload_id; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_region = io_input_ar_payload_region; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_len = io_input_ar_payload_len; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_size = io_input_ar_payload_size; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_burst = io_input_ar_payload_burst; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_lock = io_input_ar_payload_lock; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_cache = io_input_ar_payload_cache; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_qos = io_input_ar_payload_qos; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_prot = io_input_ar_payload_prot; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_valid = ((io_input_ar_valid && decodedCmdSels[1]) && allowCmd); // @ Axi4Decoder.scala l39
  assign io_outputs_1_ar_payload_addr = io_input_ar_payload_addr; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_id = io_input_ar_payload_id; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_region = io_input_ar_payload_region; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_len = io_input_ar_payload_len; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_size = io_input_ar_payload_size; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_burst = io_input_ar_payload_burst; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_lock = io_input_ar_payload_lock; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_cache = io_input_ar_payload_cache; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_qos = io_input_ar_payload_qos; // @ Axi4Decoder.scala l40
  assign io_outputs_1_ar_payload_prot = io_input_ar_payload_prot; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_valid = ((io_input_ar_valid && decodedCmdSels[2]) && allowCmd); // @ Axi4Decoder.scala l39
  assign io_outputs_2_ar_payload_addr = io_input_ar_payload_addr; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_id = io_input_ar_payload_id; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_region = io_input_ar_payload_region; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_len = io_input_ar_payload_len; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_size = io_input_ar_payload_size; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_burst = io_input_ar_payload_burst; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_lock = io_input_ar_payload_lock; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_cache = io_input_ar_payload_cache; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_qos = io_input_ar_payload_qos; // @ Axi4Decoder.scala l40
  assign io_outputs_2_ar_payload_prot = io_input_ar_payload_prot; // @ Axi4Decoder.scala l40
  assign tmp_readRspIndex = pendingSels[1]; // @ BaseType.scala l305
  assign tmp_readRspIndex_1 = pendingSels[2]; // @ BaseType.scala l305
  assign readRspIndex = {tmp_readRspIndex_1,tmp_readRspIndex}; // @ BaseType.scala l318
  always @(*) begin
    io_input_r_valid = (|{io_outputs_2_r_valid,{io_outputs_1_r_valid,io_outputs_0_r_valid}}); // @ Axi4Decoder.scala l46
    if(errorSlave_io_axi_r_valid) begin
      io_input_r_valid = 1'b1; // @ Axi4Decoder.scala l49
    end
  end

  assign io_input_r_payload_data = tmp_io_input_r_payload_data; // @ Axi4Decoder.scala l47
  always @(*) begin
    io_input_r_payload_id = tmp_io_input_r_payload_id; // @ Axi4Decoder.scala l47
    if(pendingError) begin
      io_input_r_payload_id = errorSlave_io_axi_r_payload_id; // @ Axi4Decoder.scala l51
    end
  end

  always @(*) begin
    io_input_r_payload_resp = tmp_io_input_r_payload_resp; // @ Axi4Decoder.scala l47
    if(pendingError) begin
      io_input_r_payload_resp = errorSlave_io_axi_r_payload_resp; // @ Axi4Decoder.scala l52
    end
  end

  always @(*) begin
    io_input_r_payload_last = tmp_io_input_r_payload_last; // @ Axi4Decoder.scala l47
    if(pendingError) begin
      io_input_r_payload_last = errorSlave_io_axi_r_payload_last; // @ Axi4Decoder.scala l53
    end
  end

  assign io_outputs_0_r_ready = io_input_r_ready; // @ Axi4Decoder.scala l57
  assign io_outputs_1_r_ready = io_input_r_ready; // @ Axi4Decoder.scala l57
  assign io_outputs_2_r_ready = io_input_r_ready; // @ Axi4Decoder.scala l57
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pendingCmdCounter_value <= 3'b000; // @ Data.scala l400
      pendingSels <= 3'b000; // @ Data.scala l400
      pendingError <= 1'b0; // @ Data.scala l400
    end else begin
      pendingCmdCounter_value <= pendingCmdCounter_valueNext; // @ Reg.scala l39
      if(io_input_ar_ready) begin
        pendingSels <= decodedCmdSels; // @ Axi4Decoder.scala l24
      end
      if(io_input_ar_ready) begin
        pendingError <= decodedCmdError; // @ Axi4Decoder.scala l25
      end
    end
  end


endmodule

module Axi4WriteOnlyArbiter (
  input               io_inputs_0_aw_valid,
  output              io_inputs_0_aw_ready,
  input      [31:0]   io_inputs_0_aw_payload_addr,
  input      [2:0]    io_inputs_0_aw_payload_id,
  input      [3:0]    io_inputs_0_aw_payload_region,
  input      [7:0]    io_inputs_0_aw_payload_len,
  input      [2:0]    io_inputs_0_aw_payload_size,
  input      [1:0]    io_inputs_0_aw_payload_burst,
  input      [0:0]    io_inputs_0_aw_payload_lock,
  input      [3:0]    io_inputs_0_aw_payload_cache,
  input      [3:0]    io_inputs_0_aw_payload_qos,
  input      [2:0]    io_inputs_0_aw_payload_prot,
  input               io_inputs_0_w_valid,
  output              io_inputs_0_w_ready,
  input      [63:0]   io_inputs_0_w_payload_data,
  input      [7:0]    io_inputs_0_w_payload_strb,
  input               io_inputs_0_w_payload_last,
  output              io_inputs_0_b_valid,
  input               io_inputs_0_b_ready,
  output     [2:0]    io_inputs_0_b_payload_id,
  output     [1:0]    io_inputs_0_b_payload_resp,
  input               io_inputs_1_aw_valid,
  output              io_inputs_1_aw_ready,
  input      [31:0]   io_inputs_1_aw_payload_addr,
  input      [2:0]    io_inputs_1_aw_payload_id,
  input      [3:0]    io_inputs_1_aw_payload_region,
  input      [7:0]    io_inputs_1_aw_payload_len,
  input      [2:0]    io_inputs_1_aw_payload_size,
  input      [1:0]    io_inputs_1_aw_payload_burst,
  input      [0:0]    io_inputs_1_aw_payload_lock,
  input      [3:0]    io_inputs_1_aw_payload_cache,
  input      [3:0]    io_inputs_1_aw_payload_qos,
  input      [2:0]    io_inputs_1_aw_payload_prot,
  input               io_inputs_1_w_valid,
  output              io_inputs_1_w_ready,
  input      [63:0]   io_inputs_1_w_payload_data,
  input      [7:0]    io_inputs_1_w_payload_strb,
  input               io_inputs_1_w_payload_last,
  output              io_inputs_1_b_valid,
  input               io_inputs_1_b_ready,
  output     [2:0]    io_inputs_1_b_payload_id,
  output     [1:0]    io_inputs_1_b_payload_resp,
  output              io_output_aw_valid,
  input               io_output_aw_ready,
  output     [31:0]   io_output_aw_payload_addr,
  output     [3:0]    io_output_aw_payload_id,
  output     [3:0]    io_output_aw_payload_region,
  output     [7:0]    io_output_aw_payload_len,
  output     [2:0]    io_output_aw_payload_size,
  output     [1:0]    io_output_aw_payload_burst,
  output     [0:0]    io_output_aw_payload_lock,
  output     [3:0]    io_output_aw_payload_cache,
  output     [3:0]    io_output_aw_payload_qos,
  output     [2:0]    io_output_aw_payload_prot,
  output              io_output_w_valid,
  input               io_output_w_ready,
  output     [63:0]   io_output_w_payload_data,
  output     [7:0]    io_output_w_payload_strb,
  output              io_output_w_payload_last,
  input               io_output_b_valid,
  output              io_output_b_ready,
  input      [3:0]    io_output_b_payload_id,
  input      [1:0]    io_output_b_payload_resp,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg                 cmdArbiter_io_output_ready;
  wire                cmdRouteFork_translated_fifo_io_pop_ready;
  wire                cmdArbiter_io_inputs_0_ready;
  wire                cmdArbiter_io_inputs_1_ready;
  wire                cmdArbiter_io_output_valid;
  wire       [31:0]   cmdArbiter_io_output_payload_addr;
  wire       [2:0]    cmdArbiter_io_output_payload_id;
  wire       [3:0]    cmdArbiter_io_output_payload_region;
  wire       [7:0]    cmdArbiter_io_output_payload_len;
  wire       [2:0]    cmdArbiter_io_output_payload_size;
  wire       [1:0]    cmdArbiter_io_output_payload_burst;
  wire       [0:0]    cmdArbiter_io_output_payload_lock;
  wire       [3:0]    cmdArbiter_io_output_payload_cache;
  wire       [3:0]    cmdArbiter_io_output_payload_qos;
  wire       [2:0]    cmdArbiter_io_output_payload_prot;
  wire       [0:0]    cmdArbiter_io_chosen;
  wire       [1:0]    cmdArbiter_io_chosenOH;
  wire                cmdRouteFork_translated_fifo_io_push_ready;
  wire                cmdRouteFork_translated_fifo_io_pop_valid;
  wire       [0:0]    cmdRouteFork_translated_fifo_io_pop_payload;
  wire       [2:0]    cmdRouteFork_translated_fifo_io_occupancy;
  reg                 tmp_io_output_w_valid;
  reg        [63:0]   tmp_io_output_w_payload_data;
  reg        [7:0]    tmp_io_output_w_payload_strb;
  reg                 tmp_io_output_w_payload_last;
  reg                 tmp_io_output_b_ready;
  wire                cmdOutputFork_valid;
  wire                cmdOutputFork_ready;
  wire       [31:0]   cmdOutputFork_payload_addr;
  wire       [2:0]    cmdOutputFork_payload_id;
  wire       [3:0]    cmdOutputFork_payload_region;
  wire       [7:0]    cmdOutputFork_payload_len;
  wire       [2:0]    cmdOutputFork_payload_size;
  wire       [1:0]    cmdOutputFork_payload_burst;
  wire       [0:0]    cmdOutputFork_payload_lock;
  wire       [3:0]    cmdOutputFork_payload_cache;
  wire       [3:0]    cmdOutputFork_payload_qos;
  wire       [2:0]    cmdOutputFork_payload_prot;
  wire                cmdRouteFork_valid;
  wire                cmdRouteFork_ready;
  wire       [31:0]   cmdRouteFork_payload_addr;
  wire       [2:0]    cmdRouteFork_payload_id;
  wire       [3:0]    cmdRouteFork_payload_region;
  wire       [7:0]    cmdRouteFork_payload_len;
  wire       [2:0]    cmdRouteFork_payload_size;
  wire       [1:0]    cmdRouteFork_payload_burst;
  wire       [0:0]    cmdRouteFork_payload_lock;
  wire       [3:0]    cmdRouteFork_payload_cache;
  wire       [3:0]    cmdRouteFork_payload_qos;
  wire       [2:0]    cmdRouteFork_payload_prot;
  reg                 axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_0;
  reg                 axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_1;
  wire                cmdOutputFork_fire;
  wire                cmdRouteFork_fire;
  wire                cmdRouteFork_translated_valid;
  wire                cmdRouteFork_translated_ready;
  wire       [0:0]    cmdRouteFork_translated_payload;
  wire                io_output_w_fire;
  wire       [0:0]    writeRspIndex;
  wire                writeRspSels_0;
  wire                writeRspSels_1;

  StreamArbiter_1 cmdArbiter (
    .io_inputs_0_valid          (io_inputs_0_aw_valid                    ), //i
    .io_inputs_0_ready          (cmdArbiter_io_inputs_0_ready            ), //o
    .io_inputs_0_payload_addr   (io_inputs_0_aw_payload_addr[31:0]       ), //i
    .io_inputs_0_payload_id     (io_inputs_0_aw_payload_id[2:0]          ), //i
    .io_inputs_0_payload_region (io_inputs_0_aw_payload_region[3:0]      ), //i
    .io_inputs_0_payload_len    (io_inputs_0_aw_payload_len[7:0]         ), //i
    .io_inputs_0_payload_size   (io_inputs_0_aw_payload_size[2:0]        ), //i
    .io_inputs_0_payload_burst  (io_inputs_0_aw_payload_burst[1:0]       ), //i
    .io_inputs_0_payload_lock   (io_inputs_0_aw_payload_lock             ), //i
    .io_inputs_0_payload_cache  (io_inputs_0_aw_payload_cache[3:0]       ), //i
    .io_inputs_0_payload_qos    (io_inputs_0_aw_payload_qos[3:0]         ), //i
    .io_inputs_0_payload_prot   (io_inputs_0_aw_payload_prot[2:0]        ), //i
    .io_inputs_1_valid          (io_inputs_1_aw_valid                    ), //i
    .io_inputs_1_ready          (cmdArbiter_io_inputs_1_ready            ), //o
    .io_inputs_1_payload_addr   (io_inputs_1_aw_payload_addr[31:0]       ), //i
    .io_inputs_1_payload_id     (io_inputs_1_aw_payload_id[2:0]          ), //i
    .io_inputs_1_payload_region (io_inputs_1_aw_payload_region[3:0]      ), //i
    .io_inputs_1_payload_len    (io_inputs_1_aw_payload_len[7:0]         ), //i
    .io_inputs_1_payload_size   (io_inputs_1_aw_payload_size[2:0]        ), //i
    .io_inputs_1_payload_burst  (io_inputs_1_aw_payload_burst[1:0]       ), //i
    .io_inputs_1_payload_lock   (io_inputs_1_aw_payload_lock             ), //i
    .io_inputs_1_payload_cache  (io_inputs_1_aw_payload_cache[3:0]       ), //i
    .io_inputs_1_payload_qos    (io_inputs_1_aw_payload_qos[3:0]         ), //i
    .io_inputs_1_payload_prot   (io_inputs_1_aw_payload_prot[2:0]        ), //i
    .io_output_valid            (cmdArbiter_io_output_valid              ), //o
    .io_output_ready            (cmdArbiter_io_output_ready              ), //i
    .io_output_payload_addr     (cmdArbiter_io_output_payload_addr[31:0] ), //o
    .io_output_payload_id       (cmdArbiter_io_output_payload_id[2:0]    ), //o
    .io_output_payload_region   (cmdArbiter_io_output_payload_region[3:0]), //o
    .io_output_payload_len      (cmdArbiter_io_output_payload_len[7:0]   ), //o
    .io_output_payload_size     (cmdArbiter_io_output_payload_size[2:0]  ), //o
    .io_output_payload_burst    (cmdArbiter_io_output_payload_burst[1:0] ), //o
    .io_output_payload_lock     (cmdArbiter_io_output_payload_lock       ), //o
    .io_output_payload_cache    (cmdArbiter_io_output_payload_cache[3:0] ), //o
    .io_output_payload_qos      (cmdArbiter_io_output_payload_qos[3:0]   ), //o
    .io_output_payload_prot     (cmdArbiter_io_output_payload_prot[2:0]  ), //o
    .io_chosen                  (cmdArbiter_io_chosen                    ), //o
    .io_chosenOH                (cmdArbiter_io_chosenOH[1:0]             ), //o
    .io_axiClk                  (io_axiClk                               ), //i
    .tmp_io_resetn              (tmp_io_resetn                           )  //i
  );
  StreamFifoLowLatency_1 cmdRouteFork_translated_fifo (
    .io_push_valid   (cmdRouteFork_translated_valid                 ), //i
    .io_push_ready   (cmdRouteFork_translated_fifo_io_push_ready    ), //o
    .io_push_payload (cmdRouteFork_translated_payload               ), //i
    .io_pop_valid    (cmdRouteFork_translated_fifo_io_pop_valid     ), //o
    .io_pop_ready    (cmdRouteFork_translated_fifo_io_pop_ready     ), //i
    .io_pop_payload  (cmdRouteFork_translated_fifo_io_pop_payload   ), //o
    .io_flush        (1'b0                                          ), //i
    .io_occupancy    (cmdRouteFork_translated_fifo_io_occupancy[2:0]), //o
    .io_axiClk       (io_axiClk                                     ), //i
    .tmp_io_resetn   (tmp_io_resetn                                 )  //i
  );
  always @(*) begin
    case(cmdRouteFork_translated_fifo_io_pop_payload)
      1'b0 : begin
        tmp_io_output_w_valid = io_inputs_0_w_valid;
        tmp_io_output_w_payload_data = io_inputs_0_w_payload_data;
        tmp_io_output_w_payload_strb = io_inputs_0_w_payload_strb;
        tmp_io_output_w_payload_last = io_inputs_0_w_payload_last;
      end
      default : begin
        tmp_io_output_w_valid = io_inputs_1_w_valid;
        tmp_io_output_w_payload_data = io_inputs_1_w_payload_data;
        tmp_io_output_w_payload_strb = io_inputs_1_w_payload_strb;
        tmp_io_output_w_payload_last = io_inputs_1_w_payload_last;
      end
    endcase
  end

  always @(*) begin
    case(writeRspIndex)
      1'b0 : tmp_io_output_b_ready = io_inputs_0_b_ready;
      default : tmp_io_output_b_ready = io_inputs_1_b_ready;
    endcase
  end

  assign io_inputs_0_aw_ready = cmdArbiter_io_inputs_0_ready; // @ Axi4Arbiter.scala l65
  assign io_inputs_1_aw_ready = cmdArbiter_io_inputs_1_ready; // @ Axi4Arbiter.scala l65
  always @(*) begin
    cmdArbiter_io_output_ready = 1'b1; // @ Stream.scala l990
    if(((! cmdOutputFork_ready) && axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_0)) begin
      cmdArbiter_io_output_ready = 1'b0; // @ Stream.scala l993
    end
    if(((! cmdRouteFork_ready) && axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_1)) begin
      cmdArbiter_io_output_ready = 1'b0; // @ Stream.scala l993
    end
  end

  assign cmdOutputFork_valid = (cmdArbiter_io_output_valid && axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_0); // @ Stream.scala l1000
  assign cmdOutputFork_payload_addr = cmdArbiter_io_output_payload_addr; // @ Stream.scala l1001
  assign cmdOutputFork_payload_id = cmdArbiter_io_output_payload_id; // @ Stream.scala l1001
  assign cmdOutputFork_payload_region = cmdArbiter_io_output_payload_region; // @ Stream.scala l1001
  assign cmdOutputFork_payload_len = cmdArbiter_io_output_payload_len; // @ Stream.scala l1001
  assign cmdOutputFork_payload_size = cmdArbiter_io_output_payload_size; // @ Stream.scala l1001
  assign cmdOutputFork_payload_burst = cmdArbiter_io_output_payload_burst; // @ Stream.scala l1001
  assign cmdOutputFork_payload_lock = cmdArbiter_io_output_payload_lock; // @ Stream.scala l1001
  assign cmdOutputFork_payload_cache = cmdArbiter_io_output_payload_cache; // @ Stream.scala l1001
  assign cmdOutputFork_payload_qos = cmdArbiter_io_output_payload_qos; // @ Stream.scala l1001
  assign cmdOutputFork_payload_prot = cmdArbiter_io_output_payload_prot; // @ Stream.scala l1001
  assign cmdOutputFork_fire = (cmdOutputFork_valid && cmdOutputFork_ready); // @ BaseType.scala l305
  assign cmdRouteFork_valid = (cmdArbiter_io_output_valid && axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_1); // @ Stream.scala l1000
  assign cmdRouteFork_payload_addr = cmdArbiter_io_output_payload_addr; // @ Stream.scala l1001
  assign cmdRouteFork_payload_id = cmdArbiter_io_output_payload_id; // @ Stream.scala l1001
  assign cmdRouteFork_payload_region = cmdArbiter_io_output_payload_region; // @ Stream.scala l1001
  assign cmdRouteFork_payload_len = cmdArbiter_io_output_payload_len; // @ Stream.scala l1001
  assign cmdRouteFork_payload_size = cmdArbiter_io_output_payload_size; // @ Stream.scala l1001
  assign cmdRouteFork_payload_burst = cmdArbiter_io_output_payload_burst; // @ Stream.scala l1001
  assign cmdRouteFork_payload_lock = cmdArbiter_io_output_payload_lock; // @ Stream.scala l1001
  assign cmdRouteFork_payload_cache = cmdArbiter_io_output_payload_cache; // @ Stream.scala l1001
  assign cmdRouteFork_payload_qos = cmdArbiter_io_output_payload_qos; // @ Stream.scala l1001
  assign cmdRouteFork_payload_prot = cmdArbiter_io_output_payload_prot; // @ Stream.scala l1001
  assign cmdRouteFork_fire = (cmdRouteFork_valid && cmdRouteFork_ready); // @ BaseType.scala l305
  assign io_output_aw_valid = cmdOutputFork_valid; // @ Stream.scala l294
  assign cmdOutputFork_ready = io_output_aw_ready; // @ Stream.scala l295
  assign io_output_aw_payload_addr = cmdOutputFork_payload_addr; // @ Stream.scala l296
  assign io_output_aw_payload_region = cmdOutputFork_payload_region; // @ Stream.scala l296
  assign io_output_aw_payload_len = cmdOutputFork_payload_len; // @ Stream.scala l296
  assign io_output_aw_payload_size = cmdOutputFork_payload_size; // @ Stream.scala l296
  assign io_output_aw_payload_burst = cmdOutputFork_payload_burst; // @ Stream.scala l296
  assign io_output_aw_payload_lock = cmdOutputFork_payload_lock; // @ Stream.scala l296
  assign io_output_aw_payload_cache = cmdOutputFork_payload_cache; // @ Stream.scala l296
  assign io_output_aw_payload_qos = cmdOutputFork_payload_qos; // @ Stream.scala l296
  assign io_output_aw_payload_prot = cmdOutputFork_payload_prot; // @ Stream.scala l296
  assign io_output_aw_payload_id = {cmdArbiter_io_chosen,cmdArbiter_io_output_payload_id}; // @ Axi4Arbiter.scala l69
  assign cmdRouteFork_translated_valid = cmdRouteFork_valid; // @ Stream.scala l303
  assign cmdRouteFork_ready = cmdRouteFork_translated_ready; // @ Stream.scala l304
  assign cmdRouteFork_translated_payload = cmdArbiter_io_chosen; // @ Stream.scala l324
  assign cmdRouteFork_translated_ready = cmdRouteFork_translated_fifo_io_push_ready; // @ Stream.scala l295
  assign io_output_w_valid = (cmdRouteFork_translated_fifo_io_pop_valid && tmp_io_output_w_valid); // @ Axi4Arbiter.scala l76
  assign io_output_w_payload_data = tmp_io_output_w_payload_data; // @ Axi4Arbiter.scala l77
  assign io_output_w_payload_strb = tmp_io_output_w_payload_strb; // @ Axi4Arbiter.scala l77
  assign io_output_w_payload_last = tmp_io_output_w_payload_last; // @ Axi4Arbiter.scala l77
  assign io_inputs_0_w_ready = ((cmdRouteFork_translated_fifo_io_pop_valid && io_output_w_ready) && (cmdRouteFork_translated_fifo_io_pop_payload == 1'b0)); // @ Axi4Arbiter.scala l79
  assign io_inputs_1_w_ready = ((cmdRouteFork_translated_fifo_io_pop_valid && io_output_w_ready) && (cmdRouteFork_translated_fifo_io_pop_payload == 1'b1)); // @ Axi4Arbiter.scala l79
  assign io_output_w_fire = (io_output_w_valid && io_output_w_ready); // @ BaseType.scala l305
  assign cmdRouteFork_translated_fifo_io_pop_ready = (io_output_w_fire && io_output_w_payload_last); // @ Axi4Arbiter.scala l81
  assign writeRspIndex = io_output_b_payload_id[3 : 3]; // @ BaseType.scala l299
  assign writeRspSels_0 = (writeRspIndex == 1'b0); // @ BaseType.scala l305
  assign writeRspSels_1 = (writeRspIndex == 1'b1); // @ BaseType.scala l305
  assign io_inputs_0_b_valid = (io_output_b_valid && writeRspSels_0); // @ Axi4Arbiter.scala l88
  assign io_inputs_0_b_payload_resp = io_output_b_payload_resp; // @ Axi4Arbiter.scala l89
  assign io_inputs_0_b_payload_id = io_output_b_payload_id[2 : 0]; // @ Axi4Arbiter.scala l91
  assign io_inputs_1_b_valid = (io_output_b_valid && writeRspSels_1); // @ Axi4Arbiter.scala l88
  assign io_inputs_1_b_payload_resp = io_output_b_payload_resp; // @ Axi4Arbiter.scala l89
  assign io_inputs_1_b_payload_id = io_output_b_payload_id[2 : 0]; // @ Axi4Arbiter.scala l91
  assign io_output_b_ready = tmp_io_output_b_ready; // @ Axi4Arbiter.scala l93
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_0 <= 1'b1; // @ Data.scala l400
      axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_1 <= 1'b1; // @ Data.scala l400
    end else begin
      if(cmdOutputFork_fire) begin
        axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_0 <= 1'b0; // @ Stream.scala l1003
      end
      if(cmdRouteFork_fire) begin
        axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_1 <= 1'b0; // @ Stream.scala l1003
      end
      if(cmdArbiter_io_output_ready) begin
        axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_0 <= 1'b1; // @ Stream.scala l1009
        axi4WriteOnlyArbiter_1_cmdArbiter_io_output_fork2_logic_linkEnable_1 <= 1'b1; // @ Stream.scala l1009
      end
    end
  end


endmodule

module Axi4ReadOnlyArbiter (
  input               io_inputs_0_ar_valid,
  output              io_inputs_0_ar_ready,
  input      [31:0]   io_inputs_0_ar_payload_addr,
  input      [1:0]    io_inputs_0_ar_payload_id,
  input      [3:0]    io_inputs_0_ar_payload_region,
  input      [7:0]    io_inputs_0_ar_payload_len,
  input      [2:0]    io_inputs_0_ar_payload_size,
  input      [1:0]    io_inputs_0_ar_payload_burst,
  input      [0:0]    io_inputs_0_ar_payload_lock,
  input      [3:0]    io_inputs_0_ar_payload_cache,
  input      [3:0]    io_inputs_0_ar_payload_qos,
  input      [2:0]    io_inputs_0_ar_payload_prot,
  output              io_inputs_0_r_valid,
  input               io_inputs_0_r_ready,
  output     [63:0]   io_inputs_0_r_payload_data,
  output     [1:0]    io_inputs_0_r_payload_id,
  output     [1:0]    io_inputs_0_r_payload_resp,
  output              io_inputs_0_r_payload_last,
  input               io_inputs_1_ar_valid,
  output              io_inputs_1_ar_ready,
  input      [31:0]   io_inputs_1_ar_payload_addr,
  input      [1:0]    io_inputs_1_ar_payload_id,
  input      [3:0]    io_inputs_1_ar_payload_region,
  input      [7:0]    io_inputs_1_ar_payload_len,
  input      [2:0]    io_inputs_1_ar_payload_size,
  input      [1:0]    io_inputs_1_ar_payload_burst,
  input      [0:0]    io_inputs_1_ar_payload_lock,
  input      [3:0]    io_inputs_1_ar_payload_cache,
  input      [3:0]    io_inputs_1_ar_payload_qos,
  input      [2:0]    io_inputs_1_ar_payload_prot,
  output              io_inputs_1_r_valid,
  input               io_inputs_1_r_ready,
  output     [63:0]   io_inputs_1_r_payload_data,
  output     [1:0]    io_inputs_1_r_payload_id,
  output     [1:0]    io_inputs_1_r_payload_resp,
  output              io_inputs_1_r_payload_last,
  input               io_inputs_2_ar_valid,
  output              io_inputs_2_ar_ready,
  input      [31:0]   io_inputs_2_ar_payload_addr,
  input      [1:0]    io_inputs_2_ar_payload_id,
  input      [3:0]    io_inputs_2_ar_payload_region,
  input      [7:0]    io_inputs_2_ar_payload_len,
  input      [2:0]    io_inputs_2_ar_payload_size,
  input      [1:0]    io_inputs_2_ar_payload_burst,
  input      [0:0]    io_inputs_2_ar_payload_lock,
  input      [3:0]    io_inputs_2_ar_payload_cache,
  input      [3:0]    io_inputs_2_ar_payload_qos,
  input      [2:0]    io_inputs_2_ar_payload_prot,
  output              io_inputs_2_r_valid,
  input               io_inputs_2_r_ready,
  output     [63:0]   io_inputs_2_r_payload_data,
  output     [1:0]    io_inputs_2_r_payload_id,
  output     [1:0]    io_inputs_2_r_payload_resp,
  output              io_inputs_2_r_payload_last,
  output              io_output_ar_valid,
  input               io_output_ar_ready,
  output     [31:0]   io_output_ar_payload_addr,
  output     [3:0]    io_output_ar_payload_id,
  output     [3:0]    io_output_ar_payload_region,
  output     [7:0]    io_output_ar_payload_len,
  output     [2:0]    io_output_ar_payload_size,
  output     [1:0]    io_output_ar_payload_burst,
  output     [0:0]    io_output_ar_payload_lock,
  output     [3:0]    io_output_ar_payload_cache,
  output     [3:0]    io_output_ar_payload_qos,
  output     [2:0]    io_output_ar_payload_prot,
  input               io_output_r_valid,
  output              io_output_r_ready,
  input      [63:0]   io_output_r_payload_data,
  input      [3:0]    io_output_r_payload_id,
  input      [1:0]    io_output_r_payload_resp,
  input               io_output_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                cmdArbiter_io_inputs_0_ready;
  wire                cmdArbiter_io_inputs_1_ready;
  wire                cmdArbiter_io_inputs_2_ready;
  wire                cmdArbiter_io_output_valid;
  wire       [31:0]   cmdArbiter_io_output_payload_addr;
  wire       [1:0]    cmdArbiter_io_output_payload_id;
  wire       [3:0]    cmdArbiter_io_output_payload_region;
  wire       [7:0]    cmdArbiter_io_output_payload_len;
  wire       [2:0]    cmdArbiter_io_output_payload_size;
  wire       [1:0]    cmdArbiter_io_output_payload_burst;
  wire       [0:0]    cmdArbiter_io_output_payload_lock;
  wire       [3:0]    cmdArbiter_io_output_payload_cache;
  wire       [3:0]    cmdArbiter_io_output_payload_qos;
  wire       [2:0]    cmdArbiter_io_output_payload_prot;
  wire       [1:0]    cmdArbiter_io_chosen;
  wire       [2:0]    cmdArbiter_io_chosenOH;
  reg                 tmp_io_output_r_ready;
  wire       [1:0]    readRspIndex;
  wire                readRspSels_0;
  wire                readRspSels_1;
  wire                readRspSels_2;

  StreamArbiter_2 cmdArbiter (
    .io_inputs_0_valid          (io_inputs_0_ar_valid                    ), //i
    .io_inputs_0_ready          (cmdArbiter_io_inputs_0_ready            ), //o
    .io_inputs_0_payload_addr   (io_inputs_0_ar_payload_addr[31:0]       ), //i
    .io_inputs_0_payload_id     (io_inputs_0_ar_payload_id[1:0]          ), //i
    .io_inputs_0_payload_region (io_inputs_0_ar_payload_region[3:0]      ), //i
    .io_inputs_0_payload_len    (io_inputs_0_ar_payload_len[7:0]         ), //i
    .io_inputs_0_payload_size   (io_inputs_0_ar_payload_size[2:0]        ), //i
    .io_inputs_0_payload_burst  (io_inputs_0_ar_payload_burst[1:0]       ), //i
    .io_inputs_0_payload_lock   (io_inputs_0_ar_payload_lock             ), //i
    .io_inputs_0_payload_cache  (io_inputs_0_ar_payload_cache[3:0]       ), //i
    .io_inputs_0_payload_qos    (io_inputs_0_ar_payload_qos[3:0]         ), //i
    .io_inputs_0_payload_prot   (io_inputs_0_ar_payload_prot[2:0]        ), //i
    .io_inputs_1_valid          (io_inputs_1_ar_valid                    ), //i
    .io_inputs_1_ready          (cmdArbiter_io_inputs_1_ready            ), //o
    .io_inputs_1_payload_addr   (io_inputs_1_ar_payload_addr[31:0]       ), //i
    .io_inputs_1_payload_id     (io_inputs_1_ar_payload_id[1:0]          ), //i
    .io_inputs_1_payload_region (io_inputs_1_ar_payload_region[3:0]      ), //i
    .io_inputs_1_payload_len    (io_inputs_1_ar_payload_len[7:0]         ), //i
    .io_inputs_1_payload_size   (io_inputs_1_ar_payload_size[2:0]        ), //i
    .io_inputs_1_payload_burst  (io_inputs_1_ar_payload_burst[1:0]       ), //i
    .io_inputs_1_payload_lock   (io_inputs_1_ar_payload_lock             ), //i
    .io_inputs_1_payload_cache  (io_inputs_1_ar_payload_cache[3:0]       ), //i
    .io_inputs_1_payload_qos    (io_inputs_1_ar_payload_qos[3:0]         ), //i
    .io_inputs_1_payload_prot   (io_inputs_1_ar_payload_prot[2:0]        ), //i
    .io_inputs_2_valid          (io_inputs_2_ar_valid                    ), //i
    .io_inputs_2_ready          (cmdArbiter_io_inputs_2_ready            ), //o
    .io_inputs_2_payload_addr   (io_inputs_2_ar_payload_addr[31:0]       ), //i
    .io_inputs_2_payload_id     (io_inputs_2_ar_payload_id[1:0]          ), //i
    .io_inputs_2_payload_region (io_inputs_2_ar_payload_region[3:0]      ), //i
    .io_inputs_2_payload_len    (io_inputs_2_ar_payload_len[7:0]         ), //i
    .io_inputs_2_payload_size   (io_inputs_2_ar_payload_size[2:0]        ), //i
    .io_inputs_2_payload_burst  (io_inputs_2_ar_payload_burst[1:0]       ), //i
    .io_inputs_2_payload_lock   (io_inputs_2_ar_payload_lock             ), //i
    .io_inputs_2_payload_cache  (io_inputs_2_ar_payload_cache[3:0]       ), //i
    .io_inputs_2_payload_qos    (io_inputs_2_ar_payload_qos[3:0]         ), //i
    .io_inputs_2_payload_prot   (io_inputs_2_ar_payload_prot[2:0]        ), //i
    .io_output_valid            (cmdArbiter_io_output_valid              ), //o
    .io_output_ready            (io_output_ar_ready                      ), //i
    .io_output_payload_addr     (cmdArbiter_io_output_payload_addr[31:0] ), //o
    .io_output_payload_id       (cmdArbiter_io_output_payload_id[1:0]    ), //o
    .io_output_payload_region   (cmdArbiter_io_output_payload_region[3:0]), //o
    .io_output_payload_len      (cmdArbiter_io_output_payload_len[7:0]   ), //o
    .io_output_payload_size     (cmdArbiter_io_output_payload_size[2:0]  ), //o
    .io_output_payload_burst    (cmdArbiter_io_output_payload_burst[1:0] ), //o
    .io_output_payload_lock     (cmdArbiter_io_output_payload_lock       ), //o
    .io_output_payload_cache    (cmdArbiter_io_output_payload_cache[3:0] ), //o
    .io_output_payload_qos      (cmdArbiter_io_output_payload_qos[3:0]   ), //o
    .io_output_payload_prot     (cmdArbiter_io_output_payload_prot[2:0]  ), //o
    .io_chosen                  (cmdArbiter_io_chosen[1:0]               ), //o
    .io_chosenOH                (cmdArbiter_io_chosenOH[2:0]             ), //o
    .io_axiClk                  (io_axiClk                               ), //i
    .tmp_io_resetn              (tmp_io_resetn                           )  //i
  );
  always @(*) begin
    case(readRspIndex)
      2'b00 : tmp_io_output_r_ready = io_inputs_0_r_ready;
      2'b01 : tmp_io_output_r_ready = io_inputs_1_r_ready;
      default : tmp_io_output_r_ready = io_inputs_2_r_ready;
    endcase
  end

  assign io_inputs_0_ar_ready = cmdArbiter_io_inputs_0_ready; // @ Axi4Arbiter.scala l20
  assign io_inputs_1_ar_ready = cmdArbiter_io_inputs_1_ready; // @ Axi4Arbiter.scala l20
  assign io_inputs_2_ar_ready = cmdArbiter_io_inputs_2_ready; // @ Axi4Arbiter.scala l20
  assign io_output_ar_valid = cmdArbiter_io_output_valid; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_addr = cmdArbiter_io_output_payload_addr; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_region = cmdArbiter_io_output_payload_region; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_len = cmdArbiter_io_output_payload_len; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_size = cmdArbiter_io_output_payload_size; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_burst = cmdArbiter_io_output_payload_burst; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_lock = cmdArbiter_io_output_payload_lock; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_cache = cmdArbiter_io_output_payload_cache; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_qos = cmdArbiter_io_output_payload_qos; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_prot = cmdArbiter_io_output_payload_prot; // @ Axi4Arbiter.scala l21
  assign io_output_ar_payload_id = {cmdArbiter_io_chosen,cmdArbiter_io_output_payload_id}; // @ Axi4Arbiter.scala l24
  assign readRspIndex = io_output_r_payload_id[3 : 2]; // @ BaseType.scala l299
  assign readRspSels_0 = (readRspIndex == 2'b00); // @ BaseType.scala l305
  assign readRspSels_1 = (readRspIndex == 2'b01); // @ BaseType.scala l305
  assign readRspSels_2 = (readRspIndex == 2'b10); // @ BaseType.scala l305
  assign io_inputs_0_r_valid = (io_output_r_valid && readRspSels_0); // @ Axi4Arbiter.scala l31
  assign io_inputs_0_r_payload_data = io_output_r_payload_data; // @ Axi4Arbiter.scala l32
  assign io_inputs_0_r_payload_resp = io_output_r_payload_resp; // @ Axi4Arbiter.scala l32
  assign io_inputs_0_r_payload_last = io_output_r_payload_last; // @ Axi4Arbiter.scala l32
  assign io_inputs_0_r_payload_id = io_output_r_payload_id[1 : 0]; // @ Axi4Arbiter.scala l34
  assign io_inputs_1_r_valid = (io_output_r_valid && readRspSels_1); // @ Axi4Arbiter.scala l31
  assign io_inputs_1_r_payload_data = io_output_r_payload_data; // @ Axi4Arbiter.scala l32
  assign io_inputs_1_r_payload_resp = io_output_r_payload_resp; // @ Axi4Arbiter.scala l32
  assign io_inputs_1_r_payload_last = io_output_r_payload_last; // @ Axi4Arbiter.scala l32
  assign io_inputs_1_r_payload_id = io_output_r_payload_id[1 : 0]; // @ Axi4Arbiter.scala l34
  assign io_inputs_2_r_valid = (io_output_r_valid && readRspSels_2); // @ Axi4Arbiter.scala l31
  assign io_inputs_2_r_payload_data = io_output_r_payload_data; // @ Axi4Arbiter.scala l32
  assign io_inputs_2_r_payload_resp = io_output_r_payload_resp; // @ Axi4Arbiter.scala l32
  assign io_inputs_2_r_payload_last = io_output_r_payload_last; // @ Axi4Arbiter.scala l32
  assign io_inputs_2_r_payload_id = io_output_r_payload_id[1 : 0]; // @ Axi4Arbiter.scala l34
  assign io_output_r_ready = tmp_io_output_r_ready; // @ Axi4Arbiter.scala l36

endmodule

module Axi4WriteOnlyDecoder_1 (
  input               io_input_aw_valid,
  output              io_input_aw_ready,
  input      [31:0]   io_input_aw_payload_addr,
  input      [1:0]    io_input_aw_payload_id,
  input      [3:0]    io_input_aw_payload_region,
  input      [7:0]    io_input_aw_payload_len,
  input      [2:0]    io_input_aw_payload_size,
  input      [1:0]    io_input_aw_payload_burst,
  input      [0:0]    io_input_aw_payload_lock,
  input      [3:0]    io_input_aw_payload_cache,
  input      [3:0]    io_input_aw_payload_qos,
  input      [2:0]    io_input_aw_payload_prot,
  input               io_input_w_valid,
  output              io_input_w_ready,
  input      [63:0]   io_input_w_payload_data,
  input      [7:0]    io_input_w_payload_strb,
  input               io_input_w_payload_last,
  output              io_input_b_valid,
  input               io_input_b_ready,
  output     [1:0]    io_input_b_payload_id,
  output     [1:0]    io_input_b_payload_resp,
  output              io_outputs_0_aw_valid,
  input               io_outputs_0_aw_ready,
  output     [31:0]   io_outputs_0_aw_payload_addr,
  output     [1:0]    io_outputs_0_aw_payload_id,
  output     [3:0]    io_outputs_0_aw_payload_region,
  output     [7:0]    io_outputs_0_aw_payload_len,
  output     [2:0]    io_outputs_0_aw_payload_size,
  output     [1:0]    io_outputs_0_aw_payload_burst,
  output     [0:0]    io_outputs_0_aw_payload_lock,
  output     [3:0]    io_outputs_0_aw_payload_cache,
  output     [3:0]    io_outputs_0_aw_payload_qos,
  output     [2:0]    io_outputs_0_aw_payload_prot,
  output              io_outputs_0_w_valid,
  input               io_outputs_0_w_ready,
  output     [63:0]   io_outputs_0_w_payload_data,
  output     [7:0]    io_outputs_0_w_payload_strb,
  output              io_outputs_0_w_payload_last,
  input               io_outputs_0_b_valid,
  output              io_outputs_0_b_ready,
  input      [1:0]    io_outputs_0_b_payload_id,
  input      [1:0]    io_outputs_0_b_payload_resp,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                cmdAllowedStart;
  wire                io_input_aw_fire;
  wire                io_input_b_fire;
  reg                 pendingCmdCounter_incrementIt;
  reg                 pendingCmdCounter_decrementIt;
  wire       [2:0]    pendingCmdCounter_valueNext;
  reg        [2:0]    pendingCmdCounter_value;
  wire                pendingCmdCounter_willOverflowIfInc;
  wire                pendingCmdCounter_willOverflow;
  reg        [2:0]    pendingCmdCounter_finalIncrement;
  wire                io_input_w_fire;
  reg                 pendingDataCounter_incrementIt;
  reg                 pendingDataCounter_decrementIt;
  wire       [2:0]    pendingDataCounter_valueNext;
  reg        [2:0]    pendingDataCounter_value;
  wire                pendingDataCounter_willOverflowIfInc;
  wire                pendingDataCounter_willOverflow;
  reg        [2:0]    pendingDataCounter_finalIncrement;
  wire       [0:0]    decodedCmdSels;
  wire                decodedCmdError;
  reg        [0:0]    pendingSels;
  reg                 pendingError;
  wire                allowCmd;
  wire                allowData;
  reg                 tmp_cmdAllowedStart;

  assign io_input_aw_fire = (io_input_aw_valid && io_input_aw_ready); // @ BaseType.scala l305
  assign io_input_b_fire = (io_input_b_valid && io_input_b_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingCmdCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(io_input_aw_fire) begin
      pendingCmdCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingCmdCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if(io_input_b_fire) begin
      pendingCmdCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingCmdCounter_willOverflowIfInc = ((pendingCmdCounter_value == 3'b111) && (! pendingCmdCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingCmdCounter_willOverflow = (pendingCmdCounter_willOverflowIfInc && pendingCmdCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingCmdCounter_incrementIt && (! pendingCmdCounter_decrementIt))) begin
      pendingCmdCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingCmdCounter_incrementIt) && pendingCmdCounter_decrementIt)) begin
        pendingCmdCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingCmdCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingCmdCounter_valueNext = (pendingCmdCounter_value + pendingCmdCounter_finalIncrement); // @ Utils.scala l678
  assign io_input_w_fire = (io_input_w_valid && io_input_w_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingDataCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(cmdAllowedStart) begin
      pendingDataCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingDataCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if((io_input_w_fire && io_input_w_payload_last)) begin
      pendingDataCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingDataCounter_willOverflowIfInc = ((pendingDataCounter_value == 3'b111) && (! pendingDataCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingDataCounter_willOverflow = (pendingDataCounter_willOverflowIfInc && pendingDataCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingDataCounter_incrementIt && (! pendingDataCounter_decrementIt))) begin
      pendingDataCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingDataCounter_incrementIt) && pendingDataCounter_decrementIt)) begin
        pendingDataCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingDataCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingDataCounter_valueNext = (pendingDataCounter_value + pendingDataCounter_finalIncrement); // @ Utils.scala l678
  assign decodedCmdSels = (((io_input_aw_payload_addr & (~ 32'hffffffff)) == 32'h0) && io_input_aw_valid); // @ BaseType.scala l318
  assign decodedCmdError = (decodedCmdSels == 1'b0); // @ BaseType.scala l305
  assign allowCmd = ((pendingCmdCounter_value == 3'b000) || ((pendingCmdCounter_value != 3'b111) && (pendingSels == decodedCmdSels))); // @ BaseType.scala l305
  assign allowData = (pendingDataCounter_value != 3'b000); // @ BaseType.scala l305
  assign cmdAllowedStart = ((io_input_aw_valid && allowCmd) && tmp_cmdAllowedStart); // @ Axi4Decoder.scala l89
  assign io_input_aw_ready = (((|(decodedCmdSels & io_outputs_0_aw_ready)) || 1'b0) && allowCmd); // @ Axi4Decoder.scala l96
  assign io_outputs_0_aw_valid = ((io_input_aw_valid && decodedCmdSels[0]) && allowCmd); // @ Axi4Decoder.scala l102
  assign io_outputs_0_aw_payload_addr = io_input_aw_payload_addr; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_id = io_input_aw_payload_id; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_region = io_input_aw_payload_region; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_len = io_input_aw_payload_len; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_size = io_input_aw_payload_size; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_burst = io_input_aw_payload_burst; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_lock = io_input_aw_payload_lock; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_cache = io_input_aw_payload_cache; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_qos = io_input_aw_payload_qos; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_prot = io_input_aw_payload_prot; // @ Axi4Decoder.scala l103
  assign io_input_w_ready = (((|(pendingSels & io_outputs_0_w_ready)) || 1'b0) && allowData); // @ Axi4Decoder.scala l107
  assign io_outputs_0_w_valid = ((io_input_w_valid && pendingSels[0]) && allowData); // @ Axi4Decoder.scala l113
  assign io_outputs_0_w_payload_data = io_input_w_payload_data; // @ Axi4Decoder.scala l114
  assign io_outputs_0_w_payload_strb = io_input_w_payload_strb; // @ Axi4Decoder.scala l114
  assign io_outputs_0_w_payload_last = io_input_w_payload_last; // @ Axi4Decoder.scala l114
  assign io_input_b_valid = ((|io_outputs_0_b_valid) || 1'b0); // @ Axi4Decoder.scala l119
  assign io_input_b_payload_id = io_outputs_0_b_payload_id; // @ Axi4Decoder.scala l120
  assign io_input_b_payload_resp = io_outputs_0_b_payload_resp; // @ Axi4Decoder.scala l120
  assign io_outputs_0_b_ready = io_input_b_ready; // @ Axi4Decoder.scala l128
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pendingCmdCounter_value <= 3'b000; // @ Data.scala l400
      pendingDataCounter_value <= 3'b000; // @ Data.scala l400
      pendingSels <= 1'b0; // @ Data.scala l400
      pendingError <= 1'b0; // @ Data.scala l400
      tmp_cmdAllowedStart <= 1'b1; // @ Data.scala l400
    end else begin
      pendingCmdCounter_value <= pendingCmdCounter_valueNext; // @ Reg.scala l39
      pendingDataCounter_value <= pendingDataCounter_valueNext; // @ Reg.scala l39
      if(cmdAllowedStart) begin
        pendingSels <= decodedCmdSels; // @ Axi4Decoder.scala l85
      end
      if(cmdAllowedStart) begin
        pendingError <= decodedCmdError; // @ Axi4Decoder.scala l86
      end
      if(cmdAllowedStart) begin
        tmp_cmdAllowedStart <= 1'b0; // @ Axi4Decoder.scala l89
      end
      if(io_input_aw_ready) begin
        tmp_cmdAllowedStart <= 1'b1; // @ Axi4Decoder.scala l89
      end
    end
  end


endmodule

module Axi4ReadOnlyDecoder_2 (
  input               io_input_ar_valid,
  output              io_input_ar_ready,
  input      [31:0]   io_input_ar_payload_addr,
  input      [1:0]    io_input_ar_payload_id,
  input      [3:0]    io_input_ar_payload_region,
  input      [7:0]    io_input_ar_payload_len,
  input      [2:0]    io_input_ar_payload_size,
  input      [1:0]    io_input_ar_payload_burst,
  input      [0:0]    io_input_ar_payload_lock,
  input      [3:0]    io_input_ar_payload_cache,
  input      [3:0]    io_input_ar_payload_qos,
  input      [2:0]    io_input_ar_payload_prot,
  output              io_input_r_valid,
  input               io_input_r_ready,
  output     [63:0]   io_input_r_payload_data,
  output     [1:0]    io_input_r_payload_id,
  output     [1:0]    io_input_r_payload_resp,
  output              io_input_r_payload_last,
  output              io_outputs_0_ar_valid,
  input               io_outputs_0_ar_ready,
  output     [31:0]   io_outputs_0_ar_payload_addr,
  output     [1:0]    io_outputs_0_ar_payload_id,
  output     [3:0]    io_outputs_0_ar_payload_region,
  output     [7:0]    io_outputs_0_ar_payload_len,
  output     [2:0]    io_outputs_0_ar_payload_size,
  output     [1:0]    io_outputs_0_ar_payload_burst,
  output     [0:0]    io_outputs_0_ar_payload_lock,
  output     [3:0]    io_outputs_0_ar_payload_cache,
  output     [3:0]    io_outputs_0_ar_payload_qos,
  output     [2:0]    io_outputs_0_ar_payload_prot,
  input               io_outputs_0_r_valid,
  output              io_outputs_0_r_ready,
  input      [63:0]   io_outputs_0_r_payload_data,
  input      [1:0]    io_outputs_0_r_payload_id,
  input      [1:0]    io_outputs_0_r_payload_resp,
  input               io_outputs_0_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                io_input_ar_fire;
  wire                io_input_r_fire;
  reg                 pendingCmdCounter_incrementIt;
  reg                 pendingCmdCounter_decrementIt;
  wire       [2:0]    pendingCmdCounter_valueNext;
  reg        [2:0]    pendingCmdCounter_value;
  wire                pendingCmdCounter_willOverflowIfInc;
  wire                pendingCmdCounter_willOverflow;
  reg        [2:0]    pendingCmdCounter_finalIncrement;
  wire       [0:0]    decodedCmdSels;
  wire                decodedCmdError;
  reg        [0:0]    pendingSels;
  reg                 pendingError;
  wire                allowCmd;

  assign io_input_ar_fire = (io_input_ar_valid && io_input_ar_ready); // @ BaseType.scala l305
  assign io_input_r_fire = (io_input_r_valid && io_input_r_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingCmdCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(io_input_ar_fire) begin
      pendingCmdCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingCmdCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if((io_input_r_fire && io_input_r_payload_last)) begin
      pendingCmdCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingCmdCounter_willOverflowIfInc = ((pendingCmdCounter_value == 3'b111) && (! pendingCmdCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingCmdCounter_willOverflow = (pendingCmdCounter_willOverflowIfInc && pendingCmdCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingCmdCounter_incrementIt && (! pendingCmdCounter_decrementIt))) begin
      pendingCmdCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingCmdCounter_incrementIt) && pendingCmdCounter_decrementIt)) begin
        pendingCmdCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingCmdCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingCmdCounter_valueNext = (pendingCmdCounter_value + pendingCmdCounter_finalIncrement); // @ Utils.scala l678
  assign decodedCmdSels = (((io_input_ar_payload_addr & (~ 32'hffffffff)) == 32'h0) && io_input_ar_valid); // @ BaseType.scala l318
  assign decodedCmdError = (decodedCmdSels == 1'b0); // @ BaseType.scala l305
  assign allowCmd = ((pendingCmdCounter_value == 3'b000) || ((pendingCmdCounter_value != 3'b111) && (pendingSels == decodedCmdSels))); // @ BaseType.scala l305
  assign io_input_ar_ready = (((|(decodedCmdSels & io_outputs_0_ar_ready)) || 1'b0) && allowCmd); // @ Axi4Decoder.scala l33
  assign io_outputs_0_ar_valid = ((io_input_ar_valid && decodedCmdSels[0]) && allowCmd); // @ Axi4Decoder.scala l39
  assign io_outputs_0_ar_payload_addr = io_input_ar_payload_addr; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_id = io_input_ar_payload_id; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_region = io_input_ar_payload_region; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_len = io_input_ar_payload_len; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_size = io_input_ar_payload_size; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_burst = io_input_ar_payload_burst; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_lock = io_input_ar_payload_lock; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_cache = io_input_ar_payload_cache; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_qos = io_input_ar_payload_qos; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_prot = io_input_ar_payload_prot; // @ Axi4Decoder.scala l40
  assign io_input_r_valid = (|io_outputs_0_r_valid); // @ Axi4Decoder.scala l46
  assign io_input_r_payload_data = io_outputs_0_r_payload_data; // @ Axi4Decoder.scala l47
  assign io_input_r_payload_id = io_outputs_0_r_payload_id; // @ Axi4Decoder.scala l47
  assign io_input_r_payload_resp = io_outputs_0_r_payload_resp; // @ Axi4Decoder.scala l47
  assign io_input_r_payload_last = io_outputs_0_r_payload_last; // @ Axi4Decoder.scala l47
  assign io_outputs_0_r_ready = io_input_r_ready; // @ Axi4Decoder.scala l57
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pendingCmdCounter_value <= 3'b000; // @ Data.scala l400
      pendingSels <= 1'b0; // @ Data.scala l400
      pendingError <= 1'b0; // @ Data.scala l400
    end else begin
      pendingCmdCounter_value <= pendingCmdCounter_valueNext; // @ Reg.scala l39
      if(io_input_ar_ready) begin
        pendingSels <= decodedCmdSels; // @ Axi4Decoder.scala l24
      end
      if(io_input_ar_ready) begin
        pendingError <= decodedCmdError; // @ Axi4Decoder.scala l25
      end
    end
  end


endmodule

module Axi4WriteOnlyDecoder (
  input               io_input_aw_valid,
  output              io_input_aw_ready,
  input      [31:0]   io_input_aw_payload_addr,
  input      [1:0]    io_input_aw_payload_id,
  input      [7:0]    io_input_aw_payload_len,
  input      [2:0]    io_input_aw_payload_size,
  input      [1:0]    io_input_aw_payload_burst,
  input               io_input_w_valid,
  output              io_input_w_ready,
  input      [63:0]   io_input_w_payload_data,
  input      [7:0]    io_input_w_payload_strb,
  input               io_input_w_payload_last,
  output              io_input_b_valid,
  input               io_input_b_ready,
  output     [1:0]    io_input_b_payload_id,
  output     [1:0]    io_input_b_payload_resp,
  output              io_outputs_0_aw_valid,
  input               io_outputs_0_aw_ready,
  output     [31:0]   io_outputs_0_aw_payload_addr,
  output     [1:0]    io_outputs_0_aw_payload_id,
  output     [7:0]    io_outputs_0_aw_payload_len,
  output     [2:0]    io_outputs_0_aw_payload_size,
  output     [1:0]    io_outputs_0_aw_payload_burst,
  output              io_outputs_0_w_valid,
  input               io_outputs_0_w_ready,
  output     [63:0]   io_outputs_0_w_payload_data,
  output     [7:0]    io_outputs_0_w_payload_strb,
  output              io_outputs_0_w_payload_last,
  input               io_outputs_0_b_valid,
  output              io_outputs_0_b_ready,
  input      [1:0]    io_outputs_0_b_payload_id,
  input      [1:0]    io_outputs_0_b_payload_resp,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                cmdAllowedStart;
  wire                io_input_aw_fire;
  wire                io_input_b_fire;
  reg                 pendingCmdCounter_incrementIt;
  reg                 pendingCmdCounter_decrementIt;
  wire       [2:0]    pendingCmdCounter_valueNext;
  reg        [2:0]    pendingCmdCounter_value;
  wire                pendingCmdCounter_willOverflowIfInc;
  wire                pendingCmdCounter_willOverflow;
  reg        [2:0]    pendingCmdCounter_finalIncrement;
  wire                io_input_w_fire;
  reg                 pendingDataCounter_incrementIt;
  reg                 pendingDataCounter_decrementIt;
  wire       [2:0]    pendingDataCounter_valueNext;
  reg        [2:0]    pendingDataCounter_value;
  wire                pendingDataCounter_willOverflowIfInc;
  wire                pendingDataCounter_willOverflow;
  reg        [2:0]    pendingDataCounter_finalIncrement;
  wire       [0:0]    decodedCmdSels;
  wire                decodedCmdError;
  reg        [0:0]    pendingSels;
  reg                 pendingError;
  wire                allowCmd;
  wire                allowData;
  reg                 tmp_cmdAllowedStart;

  assign io_input_aw_fire = (io_input_aw_valid && io_input_aw_ready); // @ BaseType.scala l305
  assign io_input_b_fire = (io_input_b_valid && io_input_b_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingCmdCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(io_input_aw_fire) begin
      pendingCmdCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingCmdCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if(io_input_b_fire) begin
      pendingCmdCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingCmdCounter_willOverflowIfInc = ((pendingCmdCounter_value == 3'b111) && (! pendingCmdCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingCmdCounter_willOverflow = (pendingCmdCounter_willOverflowIfInc && pendingCmdCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingCmdCounter_incrementIt && (! pendingCmdCounter_decrementIt))) begin
      pendingCmdCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingCmdCounter_incrementIt) && pendingCmdCounter_decrementIt)) begin
        pendingCmdCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingCmdCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingCmdCounter_valueNext = (pendingCmdCounter_value + pendingCmdCounter_finalIncrement); // @ Utils.scala l678
  assign io_input_w_fire = (io_input_w_valid && io_input_w_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingDataCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(cmdAllowedStart) begin
      pendingDataCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingDataCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if((io_input_w_fire && io_input_w_payload_last)) begin
      pendingDataCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingDataCounter_willOverflowIfInc = ((pendingDataCounter_value == 3'b111) && (! pendingDataCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingDataCounter_willOverflow = (pendingDataCounter_willOverflowIfInc && pendingDataCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingDataCounter_incrementIt && (! pendingDataCounter_decrementIt))) begin
      pendingDataCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingDataCounter_incrementIt) && pendingDataCounter_decrementIt)) begin
        pendingDataCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingDataCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingDataCounter_valueNext = (pendingDataCounter_value + pendingDataCounter_finalIncrement); // @ Utils.scala l678
  assign decodedCmdSels = (((io_input_aw_payload_addr & (~ 32'hffffffff)) == 32'h0) && io_input_aw_valid); // @ BaseType.scala l318
  assign decodedCmdError = (decodedCmdSels == 1'b0); // @ BaseType.scala l305
  assign allowCmd = ((pendingCmdCounter_value == 3'b000) || ((pendingCmdCounter_value != 3'b111) && (pendingSels == decodedCmdSels))); // @ BaseType.scala l305
  assign allowData = (pendingDataCounter_value != 3'b000); // @ BaseType.scala l305
  assign cmdAllowedStart = ((io_input_aw_valid && allowCmd) && tmp_cmdAllowedStart); // @ Axi4Decoder.scala l89
  assign io_input_aw_ready = (((|(decodedCmdSels & io_outputs_0_aw_ready)) || 1'b0) && allowCmd); // @ Axi4Decoder.scala l96
  assign io_outputs_0_aw_valid = ((io_input_aw_valid && decodedCmdSels[0]) && allowCmd); // @ Axi4Decoder.scala l102
  assign io_outputs_0_aw_payload_addr = io_input_aw_payload_addr; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_id = io_input_aw_payload_id; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_len = io_input_aw_payload_len; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_size = io_input_aw_payload_size; // @ Axi4Decoder.scala l103
  assign io_outputs_0_aw_payload_burst = io_input_aw_payload_burst; // @ Axi4Decoder.scala l103
  assign io_input_w_ready = (((|(pendingSels & io_outputs_0_w_ready)) || 1'b0) && allowData); // @ Axi4Decoder.scala l107
  assign io_outputs_0_w_valid = ((io_input_w_valid && pendingSels[0]) && allowData); // @ Axi4Decoder.scala l113
  assign io_outputs_0_w_payload_data = io_input_w_payload_data; // @ Axi4Decoder.scala l114
  assign io_outputs_0_w_payload_strb = io_input_w_payload_strb; // @ Axi4Decoder.scala l114
  assign io_outputs_0_w_payload_last = io_input_w_payload_last; // @ Axi4Decoder.scala l114
  assign io_input_b_valid = ((|io_outputs_0_b_valid) || 1'b0); // @ Axi4Decoder.scala l119
  assign io_input_b_payload_id = io_outputs_0_b_payload_id; // @ Axi4Decoder.scala l120
  assign io_input_b_payload_resp = io_outputs_0_b_payload_resp; // @ Axi4Decoder.scala l120
  assign io_outputs_0_b_ready = io_input_b_ready; // @ Axi4Decoder.scala l128
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pendingCmdCounter_value <= 3'b000; // @ Data.scala l400
      pendingDataCounter_value <= 3'b000; // @ Data.scala l400
      pendingSels <= 1'b0; // @ Data.scala l400
      pendingError <= 1'b0; // @ Data.scala l400
      tmp_cmdAllowedStart <= 1'b1; // @ Data.scala l400
    end else begin
      pendingCmdCounter_value <= pendingCmdCounter_valueNext; // @ Reg.scala l39
      pendingDataCounter_value <= pendingDataCounter_valueNext; // @ Reg.scala l39
      if(cmdAllowedStart) begin
        pendingSels <= decodedCmdSels; // @ Axi4Decoder.scala l85
      end
      if(cmdAllowedStart) begin
        pendingError <= decodedCmdError; // @ Axi4Decoder.scala l86
      end
      if(cmdAllowedStart) begin
        tmp_cmdAllowedStart <= 1'b0; // @ Axi4Decoder.scala l89
      end
      if(io_input_aw_ready) begin
        tmp_cmdAllowedStart <= 1'b1; // @ Axi4Decoder.scala l89
      end
    end
  end


endmodule

//Axi4ReadOnlyDecoder_1 replaced by Axi4ReadOnlyDecoder

module Axi4ReadOnlyDecoder (
  input               io_input_ar_valid,
  output              io_input_ar_ready,
  input      [31:0]   io_input_ar_payload_addr,
  input      [1:0]    io_input_ar_payload_id,
  input      [7:0]    io_input_ar_payload_len,
  input      [2:0]    io_input_ar_payload_size,
  input      [1:0]    io_input_ar_payload_burst,
  output              io_input_r_valid,
  input               io_input_r_ready,
  output     [63:0]   io_input_r_payload_data,
  output     [1:0]    io_input_r_payload_id,
  output     [1:0]    io_input_r_payload_resp,
  output              io_input_r_payload_last,
  output              io_outputs_0_ar_valid,
  input               io_outputs_0_ar_ready,
  output     [31:0]   io_outputs_0_ar_payload_addr,
  output     [1:0]    io_outputs_0_ar_payload_id,
  output     [7:0]    io_outputs_0_ar_payload_len,
  output     [2:0]    io_outputs_0_ar_payload_size,
  output     [1:0]    io_outputs_0_ar_payload_burst,
  input               io_outputs_0_r_valid,
  output              io_outputs_0_r_ready,
  input      [63:0]   io_outputs_0_r_payload_data,
  input      [1:0]    io_outputs_0_r_payload_id,
  input      [1:0]    io_outputs_0_r_payload_resp,
  input               io_outputs_0_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                io_input_ar_fire;
  wire                io_input_r_fire;
  reg                 pendingCmdCounter_incrementIt;
  reg                 pendingCmdCounter_decrementIt;
  wire       [2:0]    pendingCmdCounter_valueNext;
  reg        [2:0]    pendingCmdCounter_value;
  wire                pendingCmdCounter_willOverflowIfInc;
  wire                pendingCmdCounter_willOverflow;
  reg        [2:0]    pendingCmdCounter_finalIncrement;
  wire       [0:0]    decodedCmdSels;
  wire                decodedCmdError;
  reg        [0:0]    pendingSels;
  reg                 pendingError;
  wire                allowCmd;

  assign io_input_ar_fire = (io_input_ar_valid && io_input_ar_ready); // @ BaseType.scala l305
  assign io_input_r_fire = (io_input_r_valid && io_input_r_ready); // @ BaseType.scala l305
  always @(*) begin
    pendingCmdCounter_incrementIt = 1'b0; // @ Utils.scala l653
    if(io_input_ar_fire) begin
      pendingCmdCounter_incrementIt = 1'b1; // @ Utils.scala l656
    end
  end

  always @(*) begin
    pendingCmdCounter_decrementIt = 1'b0; // @ Utils.scala l654
    if((io_input_r_fire && io_input_r_payload_last)) begin
      pendingCmdCounter_decrementIt = 1'b1; // @ Utils.scala l657
    end
  end

  assign pendingCmdCounter_willOverflowIfInc = ((pendingCmdCounter_value == 3'b111) && (! pendingCmdCounter_decrementIt)); // @ BaseType.scala l305
  assign pendingCmdCounter_willOverflow = (pendingCmdCounter_willOverflowIfInc && pendingCmdCounter_incrementIt); // @ BaseType.scala l305
  always @(*) begin
    if((pendingCmdCounter_incrementIt && (! pendingCmdCounter_decrementIt))) begin
      pendingCmdCounter_finalIncrement = 3'b001; // @ Utils.scala l670
    end else begin
      if(((! pendingCmdCounter_incrementIt) && pendingCmdCounter_decrementIt)) begin
        pendingCmdCounter_finalIncrement = 3'b111; // @ Utils.scala l672
      end else begin
        pendingCmdCounter_finalIncrement = 3'b000; // @ Utils.scala l674
      end
    end
  end

  assign pendingCmdCounter_valueNext = (pendingCmdCounter_value + pendingCmdCounter_finalIncrement); // @ Utils.scala l678
  assign decodedCmdSels = (((io_input_ar_payload_addr & (~ 32'hffffffff)) == 32'h0) && io_input_ar_valid); // @ BaseType.scala l318
  assign decodedCmdError = (decodedCmdSels == 1'b0); // @ BaseType.scala l305
  assign allowCmd = ((pendingCmdCounter_value == 3'b000) || ((pendingCmdCounter_value != 3'b111) && (pendingSels == decodedCmdSels))); // @ BaseType.scala l305
  assign io_input_ar_ready = (((|(decodedCmdSels & io_outputs_0_ar_ready)) || 1'b0) && allowCmd); // @ Axi4Decoder.scala l33
  assign io_outputs_0_ar_valid = ((io_input_ar_valid && decodedCmdSels[0]) && allowCmd); // @ Axi4Decoder.scala l39
  assign io_outputs_0_ar_payload_addr = io_input_ar_payload_addr; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_id = io_input_ar_payload_id; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_len = io_input_ar_payload_len; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_size = io_input_ar_payload_size; // @ Axi4Decoder.scala l40
  assign io_outputs_0_ar_payload_burst = io_input_ar_payload_burst; // @ Axi4Decoder.scala l40
  assign io_input_r_valid = (|io_outputs_0_r_valid); // @ Axi4Decoder.scala l46
  assign io_input_r_payload_data = io_outputs_0_r_payload_data; // @ Axi4Decoder.scala l47
  assign io_input_r_payload_id = io_outputs_0_r_payload_id; // @ Axi4Decoder.scala l47
  assign io_input_r_payload_resp = io_outputs_0_r_payload_resp; // @ Axi4Decoder.scala l47
  assign io_input_r_payload_last = io_outputs_0_r_payload_last; // @ Axi4Decoder.scala l47
  assign io_outputs_0_r_ready = io_input_r_ready; // @ Axi4Decoder.scala l57
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pendingCmdCounter_value <= 3'b000; // @ Data.scala l400
      pendingSels <= 1'b0; // @ Data.scala l400
      pendingError <= 1'b0; // @ Data.scala l400
    end else begin
      pendingCmdCounter_value <= pendingCmdCounter_valueNext; // @ Reg.scala l39
      if(io_input_ar_ready) begin
        pendingSels <= decodedCmdSels; // @ Axi4Decoder.scala l24
      end
      if(io_input_ar_ready) begin
        pendingError <= decodedCmdError; // @ Axi4Decoder.scala l25
      end
    end
  end


endmodule

module Apb3Timer (
  input      [7:0]    io_apb_PADDR,
  input      [0:0]    io_apb_PSEL,
  input               io_apb_PENABLE,
  output              io_apb_PREADY,
  input               io_apb_PWRITE,
  input      [31:0]   io_apb_PWDATA,
  output reg [31:0]   io_apb_PRDATA,
  output              io_apb_PSLVERROR,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg        [63:0]   timer_1;
  reg        [31:0]   cycle_cnt;

  assign io_apb_PREADY = 1'b1; // @ ApbTimer.scala l50
  always @(*) begin
    if((io_apb_PADDR == 8'h40)) begin
      io_apb_PRDATA = timer_1[31 : 0]; // @ ApbTimer.scala l52
    end else begin
      if((io_apb_PADDR == 8'h44)) begin
        io_apb_PRDATA = timer_1[63 : 32]; // @ ApbTimer.scala l54
      end else begin
        io_apb_PRDATA = 32'h0; // @ ApbTimer.scala l56
      end
    end
  end

  assign io_apb_PSLVERROR = 1'b0; // @ ApbTimer.scala l58
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      timer_1 <= 64'h0; // @ Data.scala l400
      cycle_cnt <= 32'h0; // @ Data.scala l400
    end else begin
      if((cycle_cnt == 32'h00000063)) begin
        cycle_cnt <= 32'h0; // @ ApbTimer.scala l43
        timer_1 <= (timer_1 + 64'h0000000000000001); // @ ApbTimer.scala l44
      end else begin
        cycle_cnt <= (cycle_cnt + 32'h00000001); // @ ApbTimer.scala l46
      end
    end
  end


endmodule

module Apb3Uart (
  input      [15:0]   io_apb_PADDR /* verilator public */ ,
  input      [0:0]    io_apb_PSEL /* verilator public */ ,
  input               io_apb_PENABLE /* verilator public */ ,
  output              io_apb_PREADY /* verilator public */ ,
  input               io_apb_PWRITE /* verilator public */ ,
  input      [31:0]   io_apb_PWDATA /* verilator public */ ,
  output     [31:0]   io_apb_PRDATA /* verilator public */ ,
  output              io_apb_PSLVERROR /* verilator public */ ,
  output              io_uart_txd,
  input               io_uart_rxd,
  input               io_clock,
  input               io_resetn
);

  wire       [31:0]   uartCtrl_in_paddr;
  wire                uartCtrl_in_pwrite;
  wire                uartCtrl_in_pready;
  wire                uartCtrl_in_pslverr;
  wire       [31:0]   uartCtrl_in_prdata;
  wire                uartCtrl_uart_tx;

  uart_apb uartCtrl (
    .clk        (io_clock                ), //i
    .resetn     (io_resetn               ), //i
    .in_psel    (io_apb_PSEL             ), //i
    .in_penable (io_apb_PENABLE          ), //i
    .in_pprot   (3'b000                  ), //i
    .in_pready  (uartCtrl_in_pready      ), //o
    .in_pslverr (uartCtrl_in_pslverr     ), //o
    .in_paddr   (uartCtrl_in_paddr[31:0] ), //i
    .in_pwrite  (uartCtrl_in_pwrite      ), //i
    .in_prdata  (uartCtrl_in_prdata[31:0]), //o
    .in_pwdata  (io_apb_PWDATA[31:0]     ), //i
    .in_pstrb   (4'b1111                 ), //i
    .uart_rx    (io_uart_rxd             ), //i
    .uart_tx    (uartCtrl_uart_tx        )  //o
  );
  assign io_uart_txd = uartCtrl_uart_tx; // @ Uart.scala l62
  assign io_apb_PREADY = uartCtrl_in_pready; // @ Uart.scala l71
  assign io_apb_PSLVERROR = uartCtrl_in_pslverr; // @ Uart.scala l72
  assign uartCtrl_in_paddr = {16'd0, io_apb_PADDR}; // @ Uart.scala l73
  assign uartCtrl_in_pwrite = ((io_apb_PWRITE && io_apb_PENABLE) && io_apb_PSEL[0]); // @ Uart.scala l74
  assign io_apb_PRDATA = uartCtrl_in_prdata; // @ Uart.scala l75

endmodule

module DandMaxFreq (
  output              icache_ar_valid,
  input               icache_ar_ready,
  output     [31:0]   icache_ar_payload_addr,
  output     [1:0]    icache_ar_payload_id,
  output     [7:0]    icache_ar_payload_len,
  output     [2:0]    icache_ar_payload_size,
  output     [1:0]    icache_ar_payload_burst,
  input               icache_r_valid,
  output              icache_r_ready,
  input      [63:0]   icache_r_payload_data,
  input      [1:0]    icache_r_payload_id,
  input      [1:0]    icache_r_payload_resp,
  input               icache_r_payload_last,
  output              dcache_ar_valid,
  input               dcache_ar_ready,
  output     [31:0]   dcache_ar_payload_addr,
  output     [1:0]    dcache_ar_payload_id,
  output     [7:0]    dcache_ar_payload_len,
  output     [2:0]    dcache_ar_payload_size,
  output     [1:0]    dcache_ar_payload_burst,
  input               dcache_r_valid,
  output              dcache_r_ready,
  input      [63:0]   dcache_r_payload_data,
  input      [1:0]    dcache_r_payload_id,
  input      [1:0]    dcache_r_payload_resp,
  input               dcache_r_payload_last,
  output              dcache_aw_valid,
  input               dcache_aw_ready,
  output     [31:0]   dcache_aw_payload_addr,
  output     [1:0]    dcache_aw_payload_id,
  output     [7:0]    dcache_aw_payload_len,
  output     [2:0]    dcache_aw_payload_size,
  output     [1:0]    dcache_aw_payload_burst,
  output              dcache_w_valid,
  input               dcache_w_ready,
  output     [63:0]   dcache_w_payload_data,
  output     [7:0]    dcache_w_payload_strb,
  output              dcache_w_payload_last,
  input               dcache_b_valid,
  output              dcache_b_ready,
  input      [1:0]    dcache_b_payload_id,
  input      [1:0]    dcache_b_payload_resp,
  input               io_axiClk,
  input               cpu_rst
);
  localparam AluCtrlEnum_IDLE = 5'd0;
  localparam AluCtrlEnum_ADD = 5'd1;
  localparam AluCtrlEnum_SUB = 5'd2;
  localparam AluCtrlEnum_SLT = 5'd3;
  localparam AluCtrlEnum_SLTU = 5'd4;
  localparam AluCtrlEnum_XOR_1 = 5'd5;
  localparam AluCtrlEnum_SLL_1 = 5'd6;
  localparam AluCtrlEnum_SRL_1 = 5'd7;
  localparam AluCtrlEnum_SRA_1 = 5'd8;
  localparam AluCtrlEnum_AND_1 = 5'd9;
  localparam AluCtrlEnum_OR_1 = 5'd10;
  localparam AluCtrlEnum_LUI = 5'd11;
  localparam AluCtrlEnum_MUL = 5'd12;
  localparam AluCtrlEnum_MULH = 5'd13;
  localparam AluCtrlEnum_MULHSU = 5'd14;
  localparam AluCtrlEnum_MULHU = 5'd15;
  localparam AluCtrlEnum_DIV = 5'd16;
  localparam AluCtrlEnum_DIVU = 5'd17;
  localparam AluCtrlEnum_REM_1 = 5'd18;
  localparam AluCtrlEnum_REMU = 5'd19;
  localparam AluCtrlEnum_MULW = 5'd20;
  localparam AluCtrlEnum_DIVW = 5'd21;
  localparam AluCtrlEnum_DIVUW = 5'd22;
  localparam AluCtrlEnum_REMW = 5'd23;
  localparam AluCtrlEnum_REMUW = 5'd24;
  localparam BjuCtrlEnum_IDLE = 4'd0;
  localparam BjuCtrlEnum_AUIPC = 4'd1;
  localparam BjuCtrlEnum_JAL = 4'd2;
  localparam BjuCtrlEnum_JALR = 4'd3;
  localparam BjuCtrlEnum_BEQ = 4'd4;
  localparam BjuCtrlEnum_BNE = 4'd5;
  localparam BjuCtrlEnum_BLT = 4'd6;
  localparam BjuCtrlEnum_BGE = 4'd7;
  localparam BjuCtrlEnum_BLTU = 4'd8;
  localparam BjuCtrlEnum_BGEU = 4'd9;
  localparam BjuCtrlEnum_CSR = 4'd10;
  localparam ExpCtrlEnum_IDLE = 4'd0;
  localparam ExpCtrlEnum_ECALL = 4'd1;
  localparam ExpCtrlEnum_EBREAK = 4'd2;
  localparam ExpCtrlEnum_MRET = 4'd3;
  localparam ExpCtrlEnum_CSRRW = 4'd4;
  localparam ExpCtrlEnum_CSRRS = 4'd5;
  localparam ExpCtrlEnum_CSRRC = 4'd6;
  localparam ExpCtrlEnum_CSRRWI = 4'd7;
  localparam ExpCtrlEnum_CSRRSI = 4'd8;
  localparam ExpCtrlEnum_CSRRCI = 4'd9;
  localparam LsuCtrlEnum_IDLE = 4'd0;
  localparam LsuCtrlEnum_LB = 4'd1;
  localparam LsuCtrlEnum_LBU = 4'd2;
  localparam LsuCtrlEnum_LH = 4'd3;
  localparam LsuCtrlEnum_LHU = 4'd4;
  localparam LsuCtrlEnum_LW = 4'd5;
  localparam LsuCtrlEnum_LWU = 4'd6;
  localparam LsuCtrlEnum_LD = 4'd7;
  localparam LsuCtrlEnum_SB = 4'd8;
  localparam LsuCtrlEnum_SH = 4'd9;
  localparam LsuCtrlEnum_SW = 4'd10;
  localparam LsuCtrlEnum_SD = 4'd11;

  wire       [31:0]   bpu_predict_imm;
  wire                fetch_1_icache_ports_cmd_valid;
  wire       [31:0]   fetch_1_icache_ports_cmd_payload_addr;
  wire       [31:0]   fetch_1_bpu_predict_pc;
  wire                fetch_1_bpu_predict_valid;
  wire                fetch_1_dst_ports_valid;
  wire       [31:0]   fetch_1_dst_ports_payload_pc;
  wire       [31:0]   fetch_1_dst_ports_payload_pc_next;
  wire                fetch_1_dst_ports_payload_bpu_pred_taken;
  wire       [31:0]   fetch_1_dst_ports_payload_instruction;
  wire       [63:0]   fetch_1_bpu_predict_imm;
  wire                fetch_1_bpu_predict_jal;
  wire                fetch_1_bpu_predict_branch;
  wire                icache_1_icache_ports_cmd_ready;
  wire                icache_1_icache_ports_rsp_valid;
  wire       [31:0]   icache_1_icache_ports_rsp_payload_data;
  wire                icache_1_icache_ar_valid;
  wire       [31:0]   icache_1_icache_ar_payload_addr;
  wire       [1:0]    icache_1_icache_ar_payload_id;
  wire       [7:0]    icache_1_icache_ar_payload_len;
  wire       [2:0]    icache_1_icache_ar_payload_size;
  wire       [1:0]    icache_1_icache_ar_payload_burst;
  wire                icache_1_icache_r_ready;
  wire                bpu_predict_taken;
  wire       [31:0]   bpu_target_pc;
  wire                control_1_src_ports_ready;
  wire                control_1_to_ports_alu_valid;
  wire       [3:0]    control_1_to_ports_alu_payload_rd_rob_ptr;
  wire                control_1_to_ports_alu_payload_micro_op_rd_wen;
  wire                control_1_to_ports_alu_payload_micro_op_src2_is_imm;
  wire       [4:0]    control_1_to_ports_alu_payload_micro_op_alu_ctrl_op;
  wire                control_1_to_ports_alu_payload_micro_op_alu_is_word;
  wire       [63:0]   control_1_to_ports_alu_payload_src1_data;
  wire       [63:0]   control_1_to_ports_alu_payload_src2_data;
  wire       [31:0]   control_1_to_ports_alu_payload_pc;
  wire       [31:0]   control_1_to_ports_alu_payload_instruction;
  wire                control_1_to_ports_bju_valid;
  wire       [3:0]    control_1_to_ports_bju_payload_rd_rob_ptr;
  wire                control_1_to_ports_bju_payload_micro_op_rd_wen;
  wire                control_1_to_ports_bju_payload_micro_op_src2_is_imm;
  wire       [3:0]    control_1_to_ports_bju_payload_micro_op_bju_ctrl_op;
  wire                control_1_to_ports_bju_payload_micro_op_bju_rd_eq_rs1;
  wire                control_1_to_ports_bju_payload_micro_op_bju_rd_is_link;
  wire                control_1_to_ports_bju_payload_micro_op_bju_rs1_is_link;
  wire       [3:0]    control_1_to_ports_bju_payload_micro_op_exp_ctrl_op;
  wire       [11:0]   control_1_to_ports_bju_payload_micro_op_exp_csr_addr;
  wire                control_1_to_ports_bju_payload_micro_op_exp_csr_wen;
  wire       [63:0]   control_1_to_ports_bju_payload_src1_data;
  wire       [63:0]   control_1_to_ports_bju_payload_src2_data;
  wire       [63:0]   control_1_to_ports_bju_payload_imm;
  wire       [31:0]   control_1_to_ports_bju_payload_pc;
  wire       [31:0]   control_1_to_ports_bju_payload_pc_next;
  wire                control_1_to_ports_bju_payload_bpu_pred_taken;
  wire       [31:0]   control_1_to_ports_bju_payload_instruction;
  wire                control_1_to_ports_lsu_valid;
  wire       [3:0]    control_1_to_ports_lsu_payload_rd_rob_ptr;
  wire                control_1_to_ports_lsu_payload_micro_op_rd_wen;
  wire                control_1_to_ports_lsu_payload_micro_op_src2_is_imm;
  wire       [3:0]    control_1_to_ports_lsu_payload_micro_op_lsu_ctrl_op;
  wire                control_1_to_ports_lsu_payload_micro_op_lsu_is_load;
  wire                control_1_to_ports_lsu_payload_micro_op_lsu_is_store;
  wire       [63:0]   control_1_to_ports_lsu_payload_src1_data;
  wire       [63:0]   control_1_to_ports_lsu_payload_src2_data;
  wire       [63:0]   control_1_to_ports_lsu_payload_imm;
  wire       [31:0]   control_1_to_ports_lsu_payload_pc;
  wire       [31:0]   control_1_to_ports_lsu_payload_instruction;
  wire                control_1_wb_ports_alu_ready;
  wire                control_1_wb_ports_bju_ready;
  wire                control_1_wb_ports_lsu_ready;
  wire                bju_1_src_ports_ready;
  wire                bju_1_dst_ports_valid;
  wire       [63:0]   bju_1_dst_ports_payload_result;
  wire                bju_1_dst_ports_payload_rd_wen;
  wire       [3:0]    bju_1_dst_ports_payload_rd_rob_ptr;
  wire       [31:0]   bju_1_dst_ports_payload_pc;
  wire       [31:0]   bju_1_dst_ports_payload_instruction;
  wire                bju_1_redirect_valid;
  wire       [31:0]   bju_1_redirect_pc;
  wire                bju_1_train_valid;
  wire       [31:0]   bju_1_train_pc;
  wire                bju_1_train_taken;
  wire                bju_1_train_mispred;
  wire       [4:0]    bju_1_train_history;
  wire       [31:0]   bju_1_train_pc_next;
  wire                bju_1_train_is_call;
  wire                bju_1_train_is_ret;
  wire                bju_1_train_is_jmp;
  wire                bju_1_interrupt_valid;
  wire       [31:0]   bju_1_interrupt_pc;
  wire                alu_1_src_ports_ready;
  wire                alu_1_dst_ports_valid;
  wire       [63:0]   alu_1_dst_ports_payload_result;
  wire                alu_1_dst_ports_payload_rd_wen;
  wire       [3:0]    alu_1_dst_ports_payload_rd_rob_ptr;
  wire       [31:0]   alu_1_dst_ports_payload_pc;
  wire       [31:0]   alu_1_dst_ports_payload_instruction;
  wire                lsu_1_src_ports_ready;
  wire                lsu_1_dst_ports_valid;
  wire       [63:0]   lsu_1_dst_ports_payload_result;
  wire                lsu_1_dst_ports_payload_rd_wen;
  wire       [3:0]    lsu_1_dst_ports_payload_rd_rob_ptr;
  wire       [31:0]   lsu_1_dst_ports_payload_pc;
  wire       [31:0]   lsu_1_dst_ports_payload_instruction;
  wire                lsu_1_dcache_ports_cmd_valid;
  wire       [31:0]   lsu_1_dcache_ports_cmd_payload_addr;
  wire                lsu_1_dcache_ports_cmd_payload_wen;
  wire       [63:0]   lsu_1_dcache_ports_cmd_payload_wdata;
  wire       [7:0]    lsu_1_dcache_ports_cmd_payload_wstrb;
  wire       [2:0]    lsu_1_dcache_ports_cmd_payload_size;
  wire                lsu_1_timer_cen;
  wire                lsu_1_timer_wen;
  wire       [31:0]   lsu_1_timer_addr;
  wire       [63:0]   lsu_1_timer_wdata;
  wire                dcache_stall;
  wire                dcache_dcache_ports_cmd_ready;
  wire                dcache_dcache_ports_rsp_valid;
  wire       [63:0]   dcache_dcache_ports_rsp_payload_data;
  wire                dcache_dcache_ar_valid;
  wire       [31:0]   dcache_dcache_ar_payload_addr;
  wire       [1:0]    dcache_dcache_ar_payload_id;
  wire       [7:0]    dcache_dcache_ar_payload_len;
  wire       [2:0]    dcache_dcache_ar_payload_size;
  wire       [1:0]    dcache_dcache_ar_payload_burst;
  wire                dcache_dcache_r_ready;
  wire                dcache_dcache_aw_valid;
  wire       [31:0]   dcache_dcache_aw_payload_addr;
  wire       [1:0]    dcache_dcache_aw_payload_id;
  wire       [7:0]    dcache_dcache_aw_payload_len;
  wire       [2:0]    dcache_dcache_aw_payload_size;
  wire       [1:0]    dcache_dcache_aw_payload_burst;
  wire                dcache_dcache_w_valid;
  wire       [63:0]   dcache_dcache_w_payload_data;
  wire       [7:0]    dcache_dcache_w_payload_strb;
  wire                dcache_dcache_w_payload_last;
  wire                dcache_dcache_b_ready;
  wire       [63:0]   timer_1_rdata;
  wire                timer_1_timer_int;
  wire                change_flow;

  FetchStage fetch_1 (
    .flush                            (change_flow                                 ), //i
    .stall                            (1'b0                                        ), //i
    .interrupt_vld                    (bju_1_interrupt_valid                       ), //i
    .interrupt_pc                     (bju_1_interrupt_pc[31:0]                    ), //i
    .redirect_vld                     (bju_1_redirect_valid                        ), //i
    .redirect_pc                      (bju_1_redirect_pc[31:0]                     ), //i
    .icache_ports_cmd_valid           (fetch_1_icache_ports_cmd_valid              ), //o
    .icache_ports_cmd_ready           (icache_1_icache_ports_cmd_ready             ), //i
    .icache_ports_cmd_payload_addr    (fetch_1_icache_ports_cmd_payload_addr[31:0] ), //o
    .icache_ports_rsp_valid           (icache_1_icache_ports_rsp_valid             ), //i
    .icache_ports_rsp_payload_data    (icache_1_icache_ports_rsp_payload_data[31:0]), //i
    .bpu_predict_pc                   (fetch_1_bpu_predict_pc[31:0]                ), //o
    .bpu_predict_valid                (fetch_1_bpu_predict_valid                   ), //o
    .bpu_predict_taken                (bpu_predict_taken                           ), //i
    .bpu_target_pc                    (bpu_target_pc[31:0]                         ), //i
    .dst_ports_valid                  (fetch_1_dst_ports_valid                     ), //o
    .dst_ports_ready                  (control_1_src_ports_ready                   ), //i
    .dst_ports_payload_pc             (fetch_1_dst_ports_payload_pc[31:0]          ), //o
    .dst_ports_payload_pc_next        (fetch_1_dst_ports_payload_pc_next[31:0]     ), //o
    .dst_ports_payload_bpu_pred_taken (fetch_1_dst_ports_payload_bpu_pred_taken    ), //o
    .dst_ports_payload_instruction    (fetch_1_dst_ports_payload_instruction[31:0] ), //o
    .bpu_predict_imm                  (fetch_1_bpu_predict_imm[63:0]               ), //o
    .bpu_predict_jal                  (fetch_1_bpu_predict_jal                     ), //o
    .bpu_predict_branch               (fetch_1_bpu_predict_branch                  ), //o
    .io_axiClk                        (io_axiClk                                   ), //i
    .cpu_rst                          (cpu_rst                                     )  //i
  );
  ICacheTop icache_1 (
    .flush                         (1'b0                                        ), //i
    .icache_ports_cmd_valid        (fetch_1_icache_ports_cmd_valid              ), //i
    .icache_ports_cmd_ready        (icache_1_icache_ports_cmd_ready             ), //o
    .icache_ports_cmd_payload_addr (fetch_1_icache_ports_cmd_payload_addr[31:0] ), //i
    .icache_ports_rsp_valid        (icache_1_icache_ports_rsp_valid             ), //o
    .icache_ports_rsp_payload_data (icache_1_icache_ports_rsp_payload_data[31:0]), //o
    .icache_ar_valid               (icache_1_icache_ar_valid                    ), //o
    .icache_ar_ready               (icache_ar_ready                             ), //i
    .icache_ar_payload_addr        (icache_1_icache_ar_payload_addr[31:0]       ), //o
    .icache_ar_payload_id          (icache_1_icache_ar_payload_id[1:0]          ), //o
    .icache_ar_payload_len         (icache_1_icache_ar_payload_len[7:0]         ), //o
    .icache_ar_payload_size        (icache_1_icache_ar_payload_size[2:0]        ), //o
    .icache_ar_payload_burst       (icache_1_icache_ar_payload_burst[1:0]       ), //o
    .icache_r_valid                (icache_r_valid                              ), //i
    .icache_r_ready                (icache_1_icache_r_ready                     ), //o
    .icache_r_payload_data         (icache_r_payload_data[63:0]                 ), //i
    .icache_r_payload_id           (icache_r_payload_id[1:0]                    ), //i
    .icache_r_payload_resp         (icache_r_payload_resp[1:0]                  ), //i
    .icache_r_payload_last         (icache_r_payload_last                       ), //i
    .io_axiClk                     (io_axiClk                                   ), //i
    .cpu_rst                       (cpu_rst                                     )  //i
  );
  static_predictor bpu (
    .predict_pc     (fetch_1_bpu_predict_pc[31:0]), //i
    .predict_imm    (bpu_predict_imm[31:0]       ), //i
    .predict_valid  (fetch_1_bpu_predict_valid   ), //i
    .predict_jal    (fetch_1_bpu_predict_jal     ), //i
    .predict_branch (fetch_1_bpu_predict_branch  ), //i
    .predict_taken  (bpu_predict_taken           ), //o
    .target_pc      (bpu_target_pc[31:0]         )  //o
  );
  Control control_1 (
    .flush                                         (change_flow                                               ), //i
    .src_ports_valid                               (fetch_1_dst_ports_valid                                   ), //i
    .src_ports_ready                               (control_1_src_ports_ready                                 ), //o
    .src_ports_payload_pc                          (fetch_1_dst_ports_payload_pc[31:0]                        ), //i
    .src_ports_payload_pc_next                     (fetch_1_dst_ports_payload_pc_next[31:0]                   ), //i
    .src_ports_payload_bpu_pred_taken              (fetch_1_dst_ports_payload_bpu_pred_taken                  ), //i
    .src_ports_payload_instruction                 (fetch_1_dst_ports_payload_instruction[31:0]               ), //i
    .to_ports_alu_valid                            (control_1_to_ports_alu_valid                              ), //o
    .to_ports_alu_ready                            (alu_1_src_ports_ready                                     ), //i
    .to_ports_alu_payload_rd_rob_ptr               (control_1_to_ports_alu_payload_rd_rob_ptr[3:0]            ), //o
    .to_ports_alu_payload_micro_op_rd_wen          (control_1_to_ports_alu_payload_micro_op_rd_wen            ), //o
    .to_ports_alu_payload_micro_op_src2_is_imm     (control_1_to_ports_alu_payload_micro_op_src2_is_imm       ), //o
    .to_ports_alu_payload_micro_op_alu_ctrl_op     (control_1_to_ports_alu_payload_micro_op_alu_ctrl_op[4:0]  ), //o
    .to_ports_alu_payload_micro_op_alu_is_word     (control_1_to_ports_alu_payload_micro_op_alu_is_word       ), //o
    .to_ports_alu_payload_src1_data                (control_1_to_ports_alu_payload_src1_data[63:0]            ), //o
    .to_ports_alu_payload_src2_data                (control_1_to_ports_alu_payload_src2_data[63:0]            ), //o
    .to_ports_alu_payload_pc                       (control_1_to_ports_alu_payload_pc[31:0]                   ), //o
    .to_ports_alu_payload_instruction              (control_1_to_ports_alu_payload_instruction[31:0]          ), //o
    .to_ports_bju_valid                            (control_1_to_ports_bju_valid                              ), //o
    .to_ports_bju_ready                            (bju_1_src_ports_ready                                     ), //i
    .to_ports_bju_payload_rd_rob_ptr               (control_1_to_ports_bju_payload_rd_rob_ptr[3:0]            ), //o
    .to_ports_bju_payload_micro_op_rd_wen          (control_1_to_ports_bju_payload_micro_op_rd_wen            ), //o
    .to_ports_bju_payload_micro_op_src2_is_imm     (control_1_to_ports_bju_payload_micro_op_src2_is_imm       ), //o
    .to_ports_bju_payload_micro_op_bju_ctrl_op     (control_1_to_ports_bju_payload_micro_op_bju_ctrl_op[3:0]  ), //o
    .to_ports_bju_payload_micro_op_bju_rd_eq_rs1   (control_1_to_ports_bju_payload_micro_op_bju_rd_eq_rs1     ), //o
    .to_ports_bju_payload_micro_op_bju_rd_is_link  (control_1_to_ports_bju_payload_micro_op_bju_rd_is_link    ), //o
    .to_ports_bju_payload_micro_op_bju_rs1_is_link (control_1_to_ports_bju_payload_micro_op_bju_rs1_is_link   ), //o
    .to_ports_bju_payload_micro_op_exp_ctrl_op     (control_1_to_ports_bju_payload_micro_op_exp_ctrl_op[3:0]  ), //o
    .to_ports_bju_payload_micro_op_exp_csr_addr    (control_1_to_ports_bju_payload_micro_op_exp_csr_addr[11:0]), //o
    .to_ports_bju_payload_micro_op_exp_csr_wen     (control_1_to_ports_bju_payload_micro_op_exp_csr_wen       ), //o
    .to_ports_bju_payload_src1_data                (control_1_to_ports_bju_payload_src1_data[63:0]            ), //o
    .to_ports_bju_payload_src2_data                (control_1_to_ports_bju_payload_src2_data[63:0]            ), //o
    .to_ports_bju_payload_imm                      (control_1_to_ports_bju_payload_imm[63:0]                  ), //o
    .to_ports_bju_payload_pc                       (control_1_to_ports_bju_payload_pc[31:0]                   ), //o
    .to_ports_bju_payload_pc_next                  (control_1_to_ports_bju_payload_pc_next[31:0]              ), //o
    .to_ports_bju_payload_bpu_pred_taken           (control_1_to_ports_bju_payload_bpu_pred_taken             ), //o
    .to_ports_bju_payload_instruction              (control_1_to_ports_bju_payload_instruction[31:0]          ), //o
    .to_ports_lsu_valid                            (control_1_to_ports_lsu_valid                              ), //o
    .to_ports_lsu_ready                            (lsu_1_src_ports_ready                                     ), //i
    .to_ports_lsu_payload_rd_rob_ptr               (control_1_to_ports_lsu_payload_rd_rob_ptr[3:0]            ), //o
    .to_ports_lsu_payload_micro_op_rd_wen          (control_1_to_ports_lsu_payload_micro_op_rd_wen            ), //o
    .to_ports_lsu_payload_micro_op_src2_is_imm     (control_1_to_ports_lsu_payload_micro_op_src2_is_imm       ), //o
    .to_ports_lsu_payload_micro_op_lsu_ctrl_op     (control_1_to_ports_lsu_payload_micro_op_lsu_ctrl_op[3:0]  ), //o
    .to_ports_lsu_payload_micro_op_lsu_is_load     (control_1_to_ports_lsu_payload_micro_op_lsu_is_load       ), //o
    .to_ports_lsu_payload_micro_op_lsu_is_store    (control_1_to_ports_lsu_payload_micro_op_lsu_is_store      ), //o
    .to_ports_lsu_payload_src1_data                (control_1_to_ports_lsu_payload_src1_data[63:0]            ), //o
    .to_ports_lsu_payload_src2_data                (control_1_to_ports_lsu_payload_src2_data[63:0]            ), //o
    .to_ports_lsu_payload_imm                      (control_1_to_ports_lsu_payload_imm[63:0]                  ), //o
    .to_ports_lsu_payload_pc                       (control_1_to_ports_lsu_payload_pc[31:0]                   ), //o
    .to_ports_lsu_payload_instruction              (control_1_to_ports_lsu_payload_instruction[31:0]          ), //o
    .wb_ports_alu_valid                            (alu_1_dst_ports_valid                                     ), //i
    .wb_ports_alu_ready                            (control_1_wb_ports_alu_ready                              ), //o
    .wb_ports_alu_payload_result                   (alu_1_dst_ports_payload_result[63:0]                      ), //i
    .wb_ports_alu_payload_rd_wen                   (alu_1_dst_ports_payload_rd_wen                            ), //i
    .wb_ports_alu_payload_rd_rob_ptr               (alu_1_dst_ports_payload_rd_rob_ptr[3:0]                   ), //i
    .wb_ports_alu_payload_pc                       (alu_1_dst_ports_payload_pc[31:0]                          ), //i
    .wb_ports_alu_payload_instruction              (alu_1_dst_ports_payload_instruction[31:0]                 ), //i
    .wb_ports_bju_valid                            (bju_1_dst_ports_valid                                     ), //i
    .wb_ports_bju_ready                            (control_1_wb_ports_bju_ready                              ), //o
    .wb_ports_bju_payload_result                   (bju_1_dst_ports_payload_result[63:0]                      ), //i
    .wb_ports_bju_payload_rd_wen                   (bju_1_dst_ports_payload_rd_wen                            ), //i
    .wb_ports_bju_payload_rd_rob_ptr               (bju_1_dst_ports_payload_rd_rob_ptr[3:0]                   ), //i
    .wb_ports_bju_payload_pc                       (bju_1_dst_ports_payload_pc[31:0]                          ), //i
    .wb_ports_bju_payload_instruction              (bju_1_dst_ports_payload_instruction[31:0]                 ), //i
    .wb_ports_lsu_valid                            (lsu_1_dst_ports_valid                                     ), //i
    .wb_ports_lsu_ready                            (control_1_wb_ports_lsu_ready                              ), //o
    .wb_ports_lsu_payload_result                   (lsu_1_dst_ports_payload_result[63:0]                      ), //i
    .wb_ports_lsu_payload_rd_wen                   (lsu_1_dst_ports_payload_rd_wen                            ), //i
    .wb_ports_lsu_payload_rd_rob_ptr               (lsu_1_dst_ports_payload_rd_rob_ptr[3:0]                   ), //i
    .wb_ports_lsu_payload_pc                       (lsu_1_dst_ports_payload_pc[31:0]                          ), //i
    .wb_ports_lsu_payload_instruction              (lsu_1_dst_ports_payload_instruction[31:0]                 ), //i
    .io_axiClk                                     (io_axiClk                                                 ), //i
    .cpu_rst                                       (cpu_rst                                                   )  //i
  );
  BJU bju_1 (
    .flush                                      (1'b0                                                      ), //i
    .stall                                      (1'b0                                                      ), //i
    .src_ports_valid                            (control_1_to_ports_bju_valid                              ), //i
    .src_ports_ready                            (bju_1_src_ports_ready                                     ), //o
    .src_ports_payload_rd_rob_ptr               (control_1_to_ports_bju_payload_rd_rob_ptr[3:0]            ), //i
    .src_ports_payload_micro_op_rd_wen          (control_1_to_ports_bju_payload_micro_op_rd_wen            ), //i
    .src_ports_payload_micro_op_src2_is_imm     (control_1_to_ports_bju_payload_micro_op_src2_is_imm       ), //i
    .src_ports_payload_micro_op_bju_ctrl_op     (control_1_to_ports_bju_payload_micro_op_bju_ctrl_op[3:0]  ), //i
    .src_ports_payload_micro_op_bju_rd_eq_rs1   (control_1_to_ports_bju_payload_micro_op_bju_rd_eq_rs1     ), //i
    .src_ports_payload_micro_op_bju_rd_is_link  (control_1_to_ports_bju_payload_micro_op_bju_rd_is_link    ), //i
    .src_ports_payload_micro_op_bju_rs1_is_link (control_1_to_ports_bju_payload_micro_op_bju_rs1_is_link   ), //i
    .src_ports_payload_micro_op_exp_ctrl_op     (control_1_to_ports_bju_payload_micro_op_exp_ctrl_op[3:0]  ), //i
    .src_ports_payload_micro_op_exp_csr_addr    (control_1_to_ports_bju_payload_micro_op_exp_csr_addr[11:0]), //i
    .src_ports_payload_micro_op_exp_csr_wen     (control_1_to_ports_bju_payload_micro_op_exp_csr_wen       ), //i
    .src_ports_payload_src1_data                (control_1_to_ports_bju_payload_src1_data[63:0]            ), //i
    .src_ports_payload_src2_data                (control_1_to_ports_bju_payload_src2_data[63:0]            ), //i
    .src_ports_payload_imm                      (control_1_to_ports_bju_payload_imm[63:0]                  ), //i
    .src_ports_payload_pc                       (control_1_to_ports_bju_payload_pc[31:0]                   ), //i
    .src_ports_payload_pc_next                  (control_1_to_ports_bju_payload_pc_next[31:0]              ), //i
    .src_ports_payload_bpu_pred_taken           (control_1_to_ports_bju_payload_bpu_pred_taken             ), //i
    .src_ports_payload_instruction              (control_1_to_ports_bju_payload_instruction[31:0]          ), //i
    .dst_ports_valid                            (bju_1_dst_ports_valid                                     ), //o
    .dst_ports_ready                            (control_1_wb_ports_bju_ready                              ), //i
    .dst_ports_payload_result                   (bju_1_dst_ports_payload_result[63:0]                      ), //o
    .dst_ports_payload_rd_wen                   (bju_1_dst_ports_payload_rd_wen                            ), //o
    .dst_ports_payload_rd_rob_ptr               (bju_1_dst_ports_payload_rd_rob_ptr[3:0]                   ), //o
    .dst_ports_payload_pc                       (bju_1_dst_ports_payload_pc[31:0]                          ), //o
    .dst_ports_payload_instruction              (bju_1_dst_ports_payload_instruction[31:0]                 ), //o
    .redirect_valid                             (bju_1_redirect_valid                                      ), //o
    .redirect_pc                                (bju_1_redirect_pc[31:0]                                   ), //o
    .train_valid                                (bju_1_train_valid                                         ), //o
    .train_pc                                   (bju_1_train_pc[31:0]                                      ), //o
    .train_taken                                (bju_1_train_taken                                         ), //o
    .train_mispred                              (bju_1_train_mispred                                       ), //o
    .train_history                              (bju_1_train_history[4:0]                                  ), //o
    .train_pc_next                              (bju_1_train_pc_next[31:0]                                 ), //o
    .train_is_call                              (bju_1_train_is_call                                       ), //o
    .train_is_ret                               (bju_1_train_is_ret                                        ), //o
    .train_is_jmp                               (bju_1_train_is_jmp                                        ), //o
    .interrupt_valid                            (bju_1_interrupt_valid                                     ), //o
    .interrupt_pc                               (bju_1_interrupt_pc[31:0]                                  ), //o
    .timer_int                                  (timer_1_timer_int                                         ), //i
    .io_axiClk                                  (io_axiClk                                                 ), //i
    .cpu_rst                                    (cpu_rst                                                   )  //i
  );
  ALU alu_1 (
    .flush                                  (1'b0                                                    ), //i
    .stall                                  (1'b0                                                    ), //i
    .src_ports_valid                        (control_1_to_ports_alu_valid                            ), //i
    .src_ports_ready                        (alu_1_src_ports_ready                                   ), //o
    .src_ports_payload_rd_rob_ptr           (control_1_to_ports_alu_payload_rd_rob_ptr[3:0]          ), //i
    .src_ports_payload_micro_op_rd_wen      (control_1_to_ports_alu_payload_micro_op_rd_wen          ), //i
    .src_ports_payload_micro_op_src2_is_imm (control_1_to_ports_alu_payload_micro_op_src2_is_imm     ), //i
    .src_ports_payload_micro_op_alu_ctrl_op (control_1_to_ports_alu_payload_micro_op_alu_ctrl_op[4:0]), //i
    .src_ports_payload_micro_op_alu_is_word (control_1_to_ports_alu_payload_micro_op_alu_is_word     ), //i
    .src_ports_payload_src1_data            (control_1_to_ports_alu_payload_src1_data[63:0]          ), //i
    .src_ports_payload_src2_data            (control_1_to_ports_alu_payload_src2_data[63:0]          ), //i
    .src_ports_payload_pc                   (control_1_to_ports_alu_payload_pc[31:0]                 ), //i
    .src_ports_payload_instruction          (control_1_to_ports_alu_payload_instruction[31:0]        ), //i
    .dst_ports_valid                        (alu_1_dst_ports_valid                                   ), //o
    .dst_ports_ready                        (control_1_wb_ports_alu_ready                            ), //i
    .dst_ports_payload_result               (alu_1_dst_ports_payload_result[63:0]                    ), //o
    .dst_ports_payload_rd_wen               (alu_1_dst_ports_payload_rd_wen                          ), //o
    .dst_ports_payload_rd_rob_ptr           (alu_1_dst_ports_payload_rd_rob_ptr[3:0]                 ), //o
    .dst_ports_payload_pc                   (alu_1_dst_ports_payload_pc[31:0]                        ), //o
    .dst_ports_payload_instruction          (alu_1_dst_ports_payload_instruction[31:0]               ), //o
    .io_axiClk                              (io_axiClk                                               ), //i
    .cpu_rst                                (cpu_rst                                                 )  //i
  );
  LSU lsu_1 (
    .flush                                   (1'b0                                                    ), //i
    .stall                                   (1'b0                                                    ), //i
    .src_ports_valid                         (control_1_to_ports_lsu_valid                            ), //i
    .src_ports_ready                         (lsu_1_src_ports_ready                                   ), //o
    .src_ports_payload_rd_rob_ptr            (control_1_to_ports_lsu_payload_rd_rob_ptr[3:0]          ), //i
    .src_ports_payload_micro_op_rd_wen       (control_1_to_ports_lsu_payload_micro_op_rd_wen          ), //i
    .src_ports_payload_micro_op_src2_is_imm  (control_1_to_ports_lsu_payload_micro_op_src2_is_imm     ), //i
    .src_ports_payload_micro_op_lsu_ctrl_op  (control_1_to_ports_lsu_payload_micro_op_lsu_ctrl_op[3:0]), //i
    .src_ports_payload_micro_op_lsu_is_load  (control_1_to_ports_lsu_payload_micro_op_lsu_is_load     ), //i
    .src_ports_payload_micro_op_lsu_is_store (control_1_to_ports_lsu_payload_micro_op_lsu_is_store    ), //i
    .src_ports_payload_src1_data             (control_1_to_ports_lsu_payload_src1_data[63:0]          ), //i
    .src_ports_payload_src2_data             (control_1_to_ports_lsu_payload_src2_data[63:0]          ), //i
    .src_ports_payload_imm                   (control_1_to_ports_lsu_payload_imm[63:0]                ), //i
    .src_ports_payload_pc                    (control_1_to_ports_lsu_payload_pc[31:0]                 ), //i
    .src_ports_payload_instruction           (control_1_to_ports_lsu_payload_instruction[31:0]        ), //i
    .dst_ports_valid                         (lsu_1_dst_ports_valid                                   ), //o
    .dst_ports_ready                         (control_1_wb_ports_lsu_ready                            ), //i
    .dst_ports_payload_result                (lsu_1_dst_ports_payload_result[63:0]                    ), //o
    .dst_ports_payload_rd_wen                (lsu_1_dst_ports_payload_rd_wen                          ), //o
    .dst_ports_payload_rd_rob_ptr            (lsu_1_dst_ports_payload_rd_rob_ptr[3:0]                 ), //o
    .dst_ports_payload_pc                    (lsu_1_dst_ports_payload_pc[31:0]                        ), //o
    .dst_ports_payload_instruction           (lsu_1_dst_ports_payload_instruction[31:0]               ), //o
    .dcache_ports_cmd_valid                  (lsu_1_dcache_ports_cmd_valid                            ), //o
    .dcache_ports_cmd_ready                  (dcache_dcache_ports_cmd_ready                           ), //i
    .dcache_ports_cmd_payload_addr           (lsu_1_dcache_ports_cmd_payload_addr[31:0]               ), //o
    .dcache_ports_cmd_payload_wen            (lsu_1_dcache_ports_cmd_payload_wen                      ), //o
    .dcache_ports_cmd_payload_wdata          (lsu_1_dcache_ports_cmd_payload_wdata[63:0]              ), //o
    .dcache_ports_cmd_payload_wstrb          (lsu_1_dcache_ports_cmd_payload_wstrb[7:0]               ), //o
    .dcache_ports_cmd_payload_size           (lsu_1_dcache_ports_cmd_payload_size[2:0]                ), //o
    .dcache_ports_rsp_valid                  (dcache_dcache_ports_rsp_valid                           ), //i
    .dcache_ports_rsp_payload_data           (dcache_dcache_ports_rsp_payload_data[63:0]              ), //i
    .timer_cen                               (lsu_1_timer_cen                                         ), //o
    .timer_wen                               (lsu_1_timer_wen                                         ), //o
    .timer_addr                              (lsu_1_timer_addr[31:0]                                  ), //o
    .timer_wdata                             (lsu_1_timer_wdata[63:0]                                 ), //o
    .io_axiClk                               (io_axiClk                                               ), //i
    .cpu_rst                                 (cpu_rst                                                 )  //i
  );
  BIUTop dcache (
    .stall                          (dcache_stall                              ), //o
    .flush                          (1'b0                                      ), //i
    .dcache_ports_cmd_valid         (lsu_1_dcache_ports_cmd_valid              ), //i
    .dcache_ports_cmd_ready         (dcache_dcache_ports_cmd_ready             ), //o
    .dcache_ports_cmd_payload_addr  (lsu_1_dcache_ports_cmd_payload_addr[31:0] ), //i
    .dcache_ports_cmd_payload_wen   (lsu_1_dcache_ports_cmd_payload_wen        ), //i
    .dcache_ports_cmd_payload_wdata (lsu_1_dcache_ports_cmd_payload_wdata[63:0]), //i
    .dcache_ports_cmd_payload_wstrb (lsu_1_dcache_ports_cmd_payload_wstrb[7:0] ), //i
    .dcache_ports_cmd_payload_size  (lsu_1_dcache_ports_cmd_payload_size[2:0]  ), //i
    .dcache_ports_rsp_valid         (dcache_dcache_ports_rsp_valid             ), //o
    .dcache_ports_rsp_payload_data  (dcache_dcache_ports_rsp_payload_data[63:0]), //o
    .dcache_ar_valid                (dcache_dcache_ar_valid                    ), //o
    .dcache_ar_ready                (dcache_ar_ready                           ), //i
    .dcache_ar_payload_addr         (dcache_dcache_ar_payload_addr[31:0]       ), //o
    .dcache_ar_payload_id           (dcache_dcache_ar_payload_id[1:0]          ), //o
    .dcache_ar_payload_len          (dcache_dcache_ar_payload_len[7:0]         ), //o
    .dcache_ar_payload_size         (dcache_dcache_ar_payload_size[2:0]        ), //o
    .dcache_ar_payload_burst        (dcache_dcache_ar_payload_burst[1:0]       ), //o
    .dcache_r_valid                 (dcache_r_valid                            ), //i
    .dcache_r_ready                 (dcache_dcache_r_ready                     ), //o
    .dcache_r_payload_data          (dcache_r_payload_data[63:0]               ), //i
    .dcache_r_payload_id            (dcache_r_payload_id[1:0]                  ), //i
    .dcache_r_payload_resp          (dcache_r_payload_resp[1:0]                ), //i
    .dcache_r_payload_last          (dcache_r_payload_last                     ), //i
    .dcache_aw_valid                (dcache_dcache_aw_valid                    ), //o
    .dcache_aw_ready                (dcache_aw_ready                           ), //i
    .dcache_aw_payload_addr         (dcache_dcache_aw_payload_addr[31:0]       ), //o
    .dcache_aw_payload_id           (dcache_dcache_aw_payload_id[1:0]          ), //o
    .dcache_aw_payload_len          (dcache_dcache_aw_payload_len[7:0]         ), //o
    .dcache_aw_payload_size         (dcache_dcache_aw_payload_size[2:0]        ), //o
    .dcache_aw_payload_burst        (dcache_dcache_aw_payload_burst[1:0]       ), //o
    .dcache_w_valid                 (dcache_dcache_w_valid                     ), //o
    .dcache_w_ready                 (dcache_w_ready                            ), //i
    .dcache_w_payload_data          (dcache_dcache_w_payload_data[63:0]        ), //o
    .dcache_w_payload_strb          (dcache_dcache_w_payload_strb[7:0]         ), //o
    .dcache_w_payload_last          (dcache_dcache_w_payload_last              ), //o
    .dcache_b_valid                 (dcache_b_valid                            ), //i
    .dcache_b_ready                 (dcache_dcache_b_ready                     ), //o
    .dcache_b_payload_id            (dcache_b_payload_id[1:0]                  ), //i
    .dcache_b_payload_resp          (dcache_b_payload_resp[1:0]                ), //i
    .io_axiClk                      (io_axiClk                                 ), //i
    .cpu_rst                        (cpu_rst                                   )  //i
  );
  Timer timer_1 (
    .cen       (lsu_1_timer_cen        ), //i
    .wen       (lsu_1_timer_wen        ), //i
    .addr      (lsu_1_timer_addr[31:0] ), //i
    .wdata     (lsu_1_timer_wdata[63:0]), //i
    .rdata     (timer_1_rdata[63:0]    ), //o
    .timer_int (timer_1_timer_int      ), //o
    .io_axiClk (io_axiClk              ), //i
    .cpu_rst   (cpu_rst                )  //i
  );
  assign change_flow = (bju_1_interrupt_valid || bju_1_redirect_valid); // @ BaseType.scala l305
  assign bpu_predict_imm = fetch_1_bpu_predict_imm[31 : 0]; // @ DandMaxFreq.scala l115
  assign icache_ar_valid = icache_1_icache_ar_valid; // @ Stream.scala l294
  assign icache_ar_payload_addr = icache_1_icache_ar_payload_addr; // @ Stream.scala l296
  assign icache_ar_payload_id = icache_1_icache_ar_payload_id; // @ Stream.scala l296
  assign icache_ar_payload_len = icache_1_icache_ar_payload_len; // @ Stream.scala l296
  assign icache_ar_payload_size = icache_1_icache_ar_payload_size; // @ Stream.scala l296
  assign icache_ar_payload_burst = icache_1_icache_ar_payload_burst; // @ Stream.scala l296
  assign icache_r_ready = icache_1_icache_r_ready; // @ Stream.scala l295
  assign dcache_ar_valid = dcache_dcache_ar_valid; // @ Stream.scala l294
  assign dcache_ar_payload_addr = dcache_dcache_ar_payload_addr; // @ Stream.scala l296
  assign dcache_ar_payload_id = dcache_dcache_ar_payload_id; // @ Stream.scala l296
  assign dcache_ar_payload_len = dcache_dcache_ar_payload_len; // @ Stream.scala l296
  assign dcache_ar_payload_size = dcache_dcache_ar_payload_size; // @ Stream.scala l296
  assign dcache_ar_payload_burst = dcache_dcache_ar_payload_burst; // @ Stream.scala l296
  assign dcache_r_ready = dcache_dcache_r_ready; // @ Stream.scala l295
  assign dcache_aw_valid = dcache_dcache_aw_valid; // @ Stream.scala l294
  assign dcache_aw_payload_addr = dcache_dcache_aw_payload_addr; // @ Stream.scala l296
  assign dcache_aw_payload_id = dcache_dcache_aw_payload_id; // @ Stream.scala l296
  assign dcache_aw_payload_len = dcache_dcache_aw_payload_len; // @ Stream.scala l296
  assign dcache_aw_payload_size = dcache_dcache_aw_payload_size; // @ Stream.scala l296
  assign dcache_aw_payload_burst = dcache_dcache_aw_payload_burst; // @ Stream.scala l296
  assign dcache_w_valid = dcache_dcache_w_valid; // @ Stream.scala l294
  assign dcache_w_payload_data = dcache_dcache_w_payload_data; // @ Stream.scala l296
  assign dcache_w_payload_strb = dcache_dcache_w_payload_strb; // @ Stream.scala l296
  assign dcache_w_payload_last = dcache_dcache_w_payload_last; // @ Stream.scala l296
  assign dcache_b_ready = dcache_dcache_b_ready; // @ Stream.scala l295

endmodule

module Axi4SharedToApb3Bridge (
  input               io_axi_arw_valid,
  output reg          io_axi_arw_ready,
  input      [19:0]   io_axi_arw_payload_addr,
  input      [3:0]    io_axi_arw_payload_id,
  input      [7:0]    io_axi_arw_payload_len,
  input      [2:0]    io_axi_arw_payload_size,
  input      [1:0]    io_axi_arw_payload_burst,
  input               io_axi_arw_payload_write,
  input               io_axi_w_valid,
  output reg          io_axi_w_ready,
  input      [31:0]   io_axi_w_payload_data,
  input      [3:0]    io_axi_w_payload_strb,
  input               io_axi_w_payload_last,
  output reg          io_axi_b_valid,
  input               io_axi_b_ready,
  output     [3:0]    io_axi_b_payload_id,
  output     [1:0]    io_axi_b_payload_resp,
  output reg          io_axi_r_valid,
  input               io_axi_r_ready,
  output     [31:0]   io_axi_r_payload_data,
  output     [3:0]    io_axi_r_payload_id,
  output     [1:0]    io_axi_r_payload_resp,
  output              io_axi_r_payload_last,
  output     [19:0]   io_apb_PADDR,
  output reg [0:0]    io_apb_PSEL,
  output reg          io_apb_PENABLE,
  input               io_apb_PREADY,
  output              io_apb_PWRITE,
  output     [31:0]   io_apb_PWDATA,
  input      [31:0]   io_apb_PRDATA,
  input               io_apb_PSLVERROR,
  input               io_axiClk,
  input               tmp_io_resetn
);
  localparam Axi4ToApb3BridgePhase_SETUP = 2'd0;
  localparam Axi4ToApb3BridgePhase_ACCESS_1 = 2'd1;
  localparam Axi4ToApb3BridgePhase_RESPONSE = 2'd2;

  wire                tmp_when;
  wire                tmp_when_1;
  reg        [1:0]    phase;
  reg                 write;
  reg        [31:0]   readedData;
  reg        [3:0]    id;
  `ifndef SYNTHESIS
  reg [63:0] phase_string;
  `endif


  assign tmp_when = (io_axi_arw_valid && ((! io_axi_arw_payload_write) || io_axi_w_valid));
  assign tmp_when_1 = (io_axi_arw_payload_write && (io_axi_w_payload_strb == 4'b0000));
  `ifndef SYNTHESIS
  always @(*) begin
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : phase_string = "SETUP   ";
      Axi4ToApb3BridgePhase_ACCESS_1 : phase_string = "ACCESS_1";
      Axi4ToApb3BridgePhase_RESPONSE : phase_string = "RESPONSE";
      default : phase_string = "????????";
    endcase
  end
  `endif

  always @(*) begin
    io_axi_arw_ready = 1'b0; // @ Axi4SharedToApb3Bridge.scala l78
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : begin
        if(tmp_when) begin
          if(tmp_when_1) begin
            io_axi_arw_ready = 1'b1; // @ Axi4SharedToApb3Bridge.scala l100
          end
        end
      end
      Axi4ToApb3BridgePhase_ACCESS_1 : begin
        if(io_apb_PREADY) begin
          io_axi_arw_ready = 1'b1; // @ Axi4SharedToApb3Bridge.scala l113
        end
      end
      default : begin
      end
    endcase
  end

  always @(*) begin
    io_axi_w_ready = 1'b0; // @ Axi4SharedToApb3Bridge.scala l79
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : begin
        if(tmp_when) begin
          if(tmp_when_1) begin
            io_axi_w_ready = 1'b1; // @ Axi4SharedToApb3Bridge.scala l101
          end
        end
      end
      Axi4ToApb3BridgePhase_ACCESS_1 : begin
        if(io_apb_PREADY) begin
          io_axi_w_ready = write; // @ Axi4SharedToApb3Bridge.scala l114
        end
      end
      default : begin
      end
    endcase
  end

  always @(*) begin
    io_axi_b_valid = 1'b0; // @ Axi4SharedToApb3Bridge.scala l80
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : begin
      end
      Axi4ToApb3BridgePhase_ACCESS_1 : begin
      end
      default : begin
        if(write) begin
          io_axi_b_valid = 1'b1; // @ Axi4SharedToApb3Bridge.scala l119
        end
      end
    endcase
  end

  always @(*) begin
    io_axi_r_valid = 1'b0; // @ Axi4SharedToApb3Bridge.scala l81
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : begin
      end
      Axi4ToApb3BridgePhase_ACCESS_1 : begin
      end
      default : begin
        if(!write) begin
          io_axi_r_valid = 1'b1; // @ Axi4SharedToApb3Bridge.scala l124
        end
      end
    endcase
  end

  always @(*) begin
    io_apb_PSEL[0] = 1'b0; // @ Axi4SharedToApb3Bridge.scala l83
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : begin
        if(tmp_when) begin
          io_apb_PSEL[0] = 1'b1; // @ Axi4SharedToApb3Bridge.scala l93
          if(tmp_when_1) begin
            io_apb_PSEL[0] = 1'b0; // @ Axi4SharedToApb3Bridge.scala l99
          end
        end
      end
      Axi4ToApb3BridgePhase_ACCESS_1 : begin
        io_apb_PSEL[0] = 1'b1; // @ Axi4SharedToApb3Bridge.scala l107
      end
      default : begin
      end
    endcase
  end

  always @(*) begin
    io_apb_PENABLE = 1'b0; // @ Axi4SharedToApb3Bridge.scala l84
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : begin
      end
      Axi4ToApb3BridgePhase_ACCESS_1 : begin
        io_apb_PENABLE = 1'b1; // @ Axi4SharedToApb3Bridge.scala l108
      end
      default : begin
      end
    endcase
  end

  assign io_apb_PADDR = io_axi_arw_payload_addr; // @ Axi4SharedToApb3Bridge.scala l132
  assign io_apb_PWDATA = io_axi_w_payload_data; // @ Axi4SharedToApb3Bridge.scala l133
  assign io_apb_PWRITE = io_axi_arw_payload_write; // @ Axi4SharedToApb3Bridge.scala l134
  assign io_axi_r_payload_resp = {io_apb_PSLVERROR,1'b0}; // @ Axi4SharedToApb3Bridge.scala l136
  assign io_axi_b_payload_resp = {io_apb_PSLVERROR,1'b0}; // @ Axi4SharedToApb3Bridge.scala l137
  assign io_axi_r_payload_id = id; // @ Axi4SharedToApb3Bridge.scala l138
  assign io_axi_b_payload_id = id; // @ Axi4SharedToApb3Bridge.scala l139
  assign io_axi_r_payload_data = readedData; // @ Axi4SharedToApb3Bridge.scala l140
  assign io_axi_r_payload_last = 1'b1; // @ Axi4SharedToApb3Bridge.scala l141
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      phase <= Axi4ToApb3BridgePhase_SETUP; // @ Data.scala l400
    end else begin
      case(phase)
        Axi4ToApb3BridgePhase_SETUP : begin
          if(tmp_when) begin
            phase <= Axi4ToApb3BridgePhase_ACCESS_1; // @ Enum.scala l151
            if(tmp_when_1) begin
              phase <= Axi4ToApb3BridgePhase_RESPONSE; // @ Enum.scala l151
            end
          end
        end
        Axi4ToApb3BridgePhase_ACCESS_1 : begin
          if(io_apb_PREADY) begin
            phase <= Axi4ToApb3BridgePhase_RESPONSE; // @ Enum.scala l151
          end
        end
        default : begin
          if(write) begin
            if(io_axi_b_ready) begin
              phase <= Axi4ToApb3BridgePhase_SETUP; // @ Enum.scala l151
            end
          end else begin
            if(io_axi_r_ready) begin
              phase <= Axi4ToApb3BridgePhase_SETUP; // @ Enum.scala l151
            end
          end
        end
      endcase
    end
  end

  always @(posedge io_axiClk) begin
    case(phase)
      Axi4ToApb3BridgePhase_SETUP : begin
        write <= io_axi_arw_payload_write; // @ Axi4SharedToApb3Bridge.scala l88
        id <= io_axi_arw_payload_id; // @ Axi4SharedToApb3Bridge.scala l89
      end
      Axi4ToApb3BridgePhase_ACCESS_1 : begin
        if(io_apb_PREADY) begin
          readedData <= io_apb_PRDATA; // @ Axi4SharedToApb3Bridge.scala l111
        end
      end
      default : begin
      end
    endcase
  end


endmodule

module Axi4Upsizer (
  input               io_input_aw_valid,
  output              io_input_aw_ready,
  input      [31:0]   io_input_aw_payload_addr,
  input      [1:0]    io_input_aw_payload_id,
  input      [3:0]    io_input_aw_payload_region,
  input      [7:0]    io_input_aw_payload_len,
  input      [2:0]    io_input_aw_payload_size,
  input      [1:0]    io_input_aw_payload_burst,
  input      [0:0]    io_input_aw_payload_lock,
  input      [3:0]    io_input_aw_payload_cache,
  input      [3:0]    io_input_aw_payload_qos,
  input      [2:0]    io_input_aw_payload_prot,
  input               io_input_w_valid,
  output              io_input_w_ready,
  input      [31:0]   io_input_w_payload_data,
  input      [3:0]    io_input_w_payload_strb,
  input               io_input_w_payload_last,
  output              io_input_b_valid,
  input               io_input_b_ready,
  output     [1:0]    io_input_b_payload_id,
  output     [1:0]    io_input_b_payload_resp,
  input               io_input_ar_valid,
  output              io_input_ar_ready,
  input      [31:0]   io_input_ar_payload_addr,
  input      [1:0]    io_input_ar_payload_id,
  input      [3:0]    io_input_ar_payload_region,
  input      [7:0]    io_input_ar_payload_len,
  input      [2:0]    io_input_ar_payload_size,
  input      [1:0]    io_input_ar_payload_burst,
  input      [0:0]    io_input_ar_payload_lock,
  input      [3:0]    io_input_ar_payload_cache,
  input      [3:0]    io_input_ar_payload_qos,
  input      [2:0]    io_input_ar_payload_prot,
  output              io_input_r_valid,
  input               io_input_r_ready,
  output     [31:0]   io_input_r_payload_data,
  output     [1:0]    io_input_r_payload_id,
  output     [1:0]    io_input_r_payload_resp,
  output              io_input_r_payload_last,
  output              io_output_aw_valid,
  input               io_output_aw_ready,
  output     [31:0]   io_output_aw_payload_addr,
  output     [1:0]    io_output_aw_payload_id,
  output     [3:0]    io_output_aw_payload_region,
  output     [7:0]    io_output_aw_payload_len,
  output     [2:0]    io_output_aw_payload_size,
  output     [1:0]    io_output_aw_payload_burst,
  output     [0:0]    io_output_aw_payload_lock,
  output     [3:0]    io_output_aw_payload_cache,
  output     [3:0]    io_output_aw_payload_qos,
  output     [2:0]    io_output_aw_payload_prot,
  output              io_output_w_valid,
  input               io_output_w_ready,
  output     [63:0]   io_output_w_payload_data,
  output     [7:0]    io_output_w_payload_strb,
  output              io_output_w_payload_last,
  input               io_output_b_valid,
  output              io_output_b_ready,
  input      [1:0]    io_output_b_payload_id,
  input      [1:0]    io_output_b_payload_resp,
  output              io_output_ar_valid,
  input               io_output_ar_ready,
  output     [31:0]   io_output_ar_payload_addr,
  output     [1:0]    io_output_ar_payload_id,
  output     [3:0]    io_output_ar_payload_region,
  output     [7:0]    io_output_ar_payload_len,
  output     [2:0]    io_output_ar_payload_size,
  output     [1:0]    io_output_ar_payload_burst,
  output     [0:0]    io_output_ar_payload_lock,
  output     [3:0]    io_output_ar_payload_cache,
  output     [3:0]    io_output_ar_payload_qos,
  output     [2:0]    io_output_ar_payload_prot,
  input               io_output_r_valid,
  output              io_output_r_ready,
  input      [63:0]   io_output_r_payload_data,
  input      [1:0]    io_output_r_payload_id,
  input      [1:0]    io_output_r_payload_resp,
  input               io_output_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                readOnly_io_input_ar_ready;
  wire                readOnly_io_input_r_valid;
  wire       [31:0]   readOnly_io_input_r_payload_data;
  wire       [1:0]    readOnly_io_input_r_payload_id;
  wire       [1:0]    readOnly_io_input_r_payload_resp;
  wire                readOnly_io_input_r_payload_last;
  wire                readOnly_io_output_ar_valid;
  wire       [31:0]   readOnly_io_output_ar_payload_addr;
  wire       [1:0]    readOnly_io_output_ar_payload_id;
  wire       [3:0]    readOnly_io_output_ar_payload_region;
  wire       [7:0]    readOnly_io_output_ar_payload_len;
  wire       [2:0]    readOnly_io_output_ar_payload_size;
  wire       [1:0]    readOnly_io_output_ar_payload_burst;
  wire       [0:0]    readOnly_io_output_ar_payload_lock;
  wire       [3:0]    readOnly_io_output_ar_payload_cache;
  wire       [3:0]    readOnly_io_output_ar_payload_qos;
  wire       [2:0]    readOnly_io_output_ar_payload_prot;
  wire                readOnly_io_output_r_ready;
  wire                writeOnly_io_input_aw_ready;
  wire                writeOnly_io_input_w_ready;
  wire                writeOnly_io_input_b_valid;
  wire       [1:0]    writeOnly_io_input_b_payload_id;
  wire       [1:0]    writeOnly_io_input_b_payload_resp;
  wire                writeOnly_io_output_aw_valid;
  wire       [31:0]   writeOnly_io_output_aw_payload_addr;
  wire       [1:0]    writeOnly_io_output_aw_payload_id;
  wire       [3:0]    writeOnly_io_output_aw_payload_region;
  wire       [7:0]    writeOnly_io_output_aw_payload_len;
  wire       [2:0]    writeOnly_io_output_aw_payload_size;
  wire       [1:0]    writeOnly_io_output_aw_payload_burst;
  wire       [0:0]    writeOnly_io_output_aw_payload_lock;
  wire       [3:0]    writeOnly_io_output_aw_payload_cache;
  wire       [3:0]    writeOnly_io_output_aw_payload_qos;
  wire       [2:0]    writeOnly_io_output_aw_payload_prot;
  wire                writeOnly_io_output_w_valid;
  wire       [63:0]   writeOnly_io_output_w_payload_data;
  wire       [7:0]    writeOnly_io_output_w_payload_strb;
  wire                writeOnly_io_output_w_payload_last;
  wire                writeOnly_io_output_b_ready;

  Axi4ReadOnlyUpsizer readOnly (
    .io_input_ar_valid           (io_input_ar_valid                        ), //i
    .io_input_ar_ready           (readOnly_io_input_ar_ready               ), //o
    .io_input_ar_payload_addr    (io_input_ar_payload_addr[31:0]           ), //i
    .io_input_ar_payload_id      (io_input_ar_payload_id[1:0]              ), //i
    .io_input_ar_payload_region  (io_input_ar_payload_region[3:0]          ), //i
    .io_input_ar_payload_len     (io_input_ar_payload_len[7:0]             ), //i
    .io_input_ar_payload_size    (io_input_ar_payload_size[2:0]            ), //i
    .io_input_ar_payload_burst   (io_input_ar_payload_burst[1:0]           ), //i
    .io_input_ar_payload_lock    (io_input_ar_payload_lock                 ), //i
    .io_input_ar_payload_cache   (io_input_ar_payload_cache[3:0]           ), //i
    .io_input_ar_payload_qos     (io_input_ar_payload_qos[3:0]             ), //i
    .io_input_ar_payload_prot    (io_input_ar_payload_prot[2:0]            ), //i
    .io_input_r_valid            (readOnly_io_input_r_valid                ), //o
    .io_input_r_ready            (io_input_r_ready                         ), //i
    .io_input_r_payload_data     (readOnly_io_input_r_payload_data[31:0]   ), //o
    .io_input_r_payload_id       (readOnly_io_input_r_payload_id[1:0]      ), //o
    .io_input_r_payload_resp     (readOnly_io_input_r_payload_resp[1:0]    ), //o
    .io_input_r_payload_last     (readOnly_io_input_r_payload_last         ), //o
    .io_output_ar_valid          (readOnly_io_output_ar_valid              ), //o
    .io_output_ar_ready          (io_output_ar_ready                       ), //i
    .io_output_ar_payload_addr   (readOnly_io_output_ar_payload_addr[31:0] ), //o
    .io_output_ar_payload_id     (readOnly_io_output_ar_payload_id[1:0]    ), //o
    .io_output_ar_payload_region (readOnly_io_output_ar_payload_region[3:0]), //o
    .io_output_ar_payload_len    (readOnly_io_output_ar_payload_len[7:0]   ), //o
    .io_output_ar_payload_size   (readOnly_io_output_ar_payload_size[2:0]  ), //o
    .io_output_ar_payload_burst  (readOnly_io_output_ar_payload_burst[1:0] ), //o
    .io_output_ar_payload_lock   (readOnly_io_output_ar_payload_lock       ), //o
    .io_output_ar_payload_cache  (readOnly_io_output_ar_payload_cache[3:0] ), //o
    .io_output_ar_payload_qos    (readOnly_io_output_ar_payload_qos[3:0]   ), //o
    .io_output_ar_payload_prot   (readOnly_io_output_ar_payload_prot[2:0]  ), //o
    .io_output_r_valid           (io_output_r_valid                        ), //i
    .io_output_r_ready           (readOnly_io_output_r_ready               ), //o
    .io_output_r_payload_data    (io_output_r_payload_data[63:0]           ), //i
    .io_output_r_payload_id      (io_output_r_payload_id[1:0]              ), //i
    .io_output_r_payload_resp    (io_output_r_payload_resp[1:0]            ), //i
    .io_output_r_payload_last    (io_output_r_payload_last                 ), //i
    .io_axiClk                   (io_axiClk                                ), //i
    .tmp_io_resetn               (tmp_io_resetn                            )  //i
  );
  Axi4WriteOnlyUpsizer writeOnly (
    .io_input_aw_valid           (io_input_aw_valid                         ), //i
    .io_input_aw_ready           (writeOnly_io_input_aw_ready               ), //o
    .io_input_aw_payload_addr    (io_input_aw_payload_addr[31:0]            ), //i
    .io_input_aw_payload_id      (io_input_aw_payload_id[1:0]               ), //i
    .io_input_aw_payload_region  (io_input_aw_payload_region[3:0]           ), //i
    .io_input_aw_payload_len     (io_input_aw_payload_len[7:0]              ), //i
    .io_input_aw_payload_size    (io_input_aw_payload_size[2:0]             ), //i
    .io_input_aw_payload_burst   (io_input_aw_payload_burst[1:0]            ), //i
    .io_input_aw_payload_lock    (io_input_aw_payload_lock                  ), //i
    .io_input_aw_payload_cache   (io_input_aw_payload_cache[3:0]            ), //i
    .io_input_aw_payload_qos     (io_input_aw_payload_qos[3:0]              ), //i
    .io_input_aw_payload_prot    (io_input_aw_payload_prot[2:0]             ), //i
    .io_input_w_valid            (io_input_w_valid                          ), //i
    .io_input_w_ready            (writeOnly_io_input_w_ready                ), //o
    .io_input_w_payload_data     (io_input_w_payload_data[31:0]             ), //i
    .io_input_w_payload_strb     (io_input_w_payload_strb[3:0]              ), //i
    .io_input_w_payload_last     (io_input_w_payload_last                   ), //i
    .io_input_b_valid            (writeOnly_io_input_b_valid                ), //o
    .io_input_b_ready            (io_input_b_ready                          ), //i
    .io_input_b_payload_id       (writeOnly_io_input_b_payload_id[1:0]      ), //o
    .io_input_b_payload_resp     (writeOnly_io_input_b_payload_resp[1:0]    ), //o
    .io_output_aw_valid          (writeOnly_io_output_aw_valid              ), //o
    .io_output_aw_ready          (io_output_aw_ready                        ), //i
    .io_output_aw_payload_addr   (writeOnly_io_output_aw_payload_addr[31:0] ), //o
    .io_output_aw_payload_id     (writeOnly_io_output_aw_payload_id[1:0]    ), //o
    .io_output_aw_payload_region (writeOnly_io_output_aw_payload_region[3:0]), //o
    .io_output_aw_payload_len    (writeOnly_io_output_aw_payload_len[7:0]   ), //o
    .io_output_aw_payload_size   (writeOnly_io_output_aw_payload_size[2:0]  ), //o
    .io_output_aw_payload_burst  (writeOnly_io_output_aw_payload_burst[1:0] ), //o
    .io_output_aw_payload_lock   (writeOnly_io_output_aw_payload_lock       ), //o
    .io_output_aw_payload_cache  (writeOnly_io_output_aw_payload_cache[3:0] ), //o
    .io_output_aw_payload_qos    (writeOnly_io_output_aw_payload_qos[3:0]   ), //o
    .io_output_aw_payload_prot   (writeOnly_io_output_aw_payload_prot[2:0]  ), //o
    .io_output_w_valid           (writeOnly_io_output_w_valid               ), //o
    .io_output_w_ready           (io_output_w_ready                         ), //i
    .io_output_w_payload_data    (writeOnly_io_output_w_payload_data[63:0]  ), //o
    .io_output_w_payload_strb    (writeOnly_io_output_w_payload_strb[7:0]   ), //o
    .io_output_w_payload_last    (writeOnly_io_output_w_payload_last        ), //o
    .io_output_b_valid           (io_output_b_valid                         ), //i
    .io_output_b_ready           (writeOnly_io_output_b_ready               ), //o
    .io_output_b_payload_id      (io_output_b_payload_id[1:0]               ), //i
    .io_output_b_payload_resp    (io_output_b_payload_resp[1:0]             ), //i
    .io_axiClk                   (io_axiClk                                 ), //i
    .tmp_io_resetn               (tmp_io_resetn                             )  //i
  );
  assign io_input_ar_ready = readOnly_io_input_ar_ready; // @ Axi4Upsizer.scala l163
  assign io_input_r_valid = readOnly_io_input_r_valid; // @ Axi4Upsizer.scala l164
  assign io_input_r_payload_data = readOnly_io_input_r_payload_data; // @ Axi4Upsizer.scala l164
  assign io_input_r_payload_id = readOnly_io_input_r_payload_id; // @ Axi4Upsizer.scala l164
  assign io_input_r_payload_resp = readOnly_io_input_r_payload_resp; // @ Axi4Upsizer.scala l164
  assign io_input_r_payload_last = readOnly_io_input_r_payload_last; // @ Axi4Upsizer.scala l164
  assign io_input_aw_ready = writeOnly_io_input_aw_ready; // @ Axi4Upsizer.scala l165
  assign io_input_w_ready = writeOnly_io_input_w_ready; // @ Axi4Upsizer.scala l166
  assign io_input_b_valid = writeOnly_io_input_b_valid; // @ Axi4Upsizer.scala l167
  assign io_input_b_payload_id = writeOnly_io_input_b_payload_id; // @ Axi4Upsizer.scala l167
  assign io_input_b_payload_resp = writeOnly_io_input_b_payload_resp; // @ Axi4Upsizer.scala l167
  assign io_output_ar_valid = readOnly_io_output_ar_valid; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_addr = readOnly_io_output_ar_payload_addr; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_id = readOnly_io_output_ar_payload_id; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_region = readOnly_io_output_ar_payload_region; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_len = readOnly_io_output_ar_payload_len; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_size = readOnly_io_output_ar_payload_size; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_burst = readOnly_io_output_ar_payload_burst; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_lock = readOnly_io_output_ar_payload_lock; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_cache = readOnly_io_output_ar_payload_cache; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_qos = readOnly_io_output_ar_payload_qos; // @ Axi4Upsizer.scala l169
  assign io_output_ar_payload_prot = readOnly_io_output_ar_payload_prot; // @ Axi4Upsizer.scala l169
  assign io_output_r_ready = readOnly_io_output_r_ready; // @ Axi4Upsizer.scala l170
  assign io_output_aw_valid = writeOnly_io_output_aw_valid; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_addr = writeOnly_io_output_aw_payload_addr; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_id = writeOnly_io_output_aw_payload_id; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_region = writeOnly_io_output_aw_payload_region; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_len = writeOnly_io_output_aw_payload_len; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_size = writeOnly_io_output_aw_payload_size; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_burst = writeOnly_io_output_aw_payload_burst; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_lock = writeOnly_io_output_aw_payload_lock; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_cache = writeOnly_io_output_aw_payload_cache; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_qos = writeOnly_io_output_aw_payload_qos; // @ Axi4Upsizer.scala l171
  assign io_output_aw_payload_prot = writeOnly_io_output_aw_payload_prot; // @ Axi4Upsizer.scala l171
  assign io_output_w_valid = writeOnly_io_output_w_valid; // @ Axi4Upsizer.scala l172
  assign io_output_w_payload_data = writeOnly_io_output_w_payload_data; // @ Axi4Upsizer.scala l172
  assign io_output_w_payload_strb = writeOnly_io_output_w_payload_strb; // @ Axi4Upsizer.scala l172
  assign io_output_w_payload_last = writeOnly_io_output_w_payload_last; // @ Axi4Upsizer.scala l172
  assign io_output_b_ready = writeOnly_io_output_b_ready; // @ Axi4Upsizer.scala l173

endmodule

module Axi4Downsizer (
  input               io_input_aw_valid,
  output              io_input_aw_ready,
  input      [31:0]   io_input_aw_payload_addr,
  input      [3:0]    io_input_aw_payload_id,
  input      [3:0]    io_input_aw_payload_region,
  input      [7:0]    io_input_aw_payload_len,
  input      [2:0]    io_input_aw_payload_size,
  input      [1:0]    io_input_aw_payload_burst,
  input      [0:0]    io_input_aw_payload_lock,
  input      [3:0]    io_input_aw_payload_cache,
  input      [3:0]    io_input_aw_payload_qos,
  input      [2:0]    io_input_aw_payload_prot,
  input               io_input_w_valid,
  output              io_input_w_ready,
  input      [63:0]   io_input_w_payload_data,
  input      [7:0]    io_input_w_payload_strb,
  input               io_input_w_payload_last,
  output              io_input_b_valid,
  input               io_input_b_ready,
  output     [3:0]    io_input_b_payload_id,
  output     [1:0]    io_input_b_payload_resp,
  input               io_input_ar_valid,
  output              io_input_ar_ready,
  input      [31:0]   io_input_ar_payload_addr,
  input      [3:0]    io_input_ar_payload_id,
  input      [3:0]    io_input_ar_payload_region,
  input      [7:0]    io_input_ar_payload_len,
  input      [2:0]    io_input_ar_payload_size,
  input      [1:0]    io_input_ar_payload_burst,
  input      [0:0]    io_input_ar_payload_lock,
  input      [3:0]    io_input_ar_payload_cache,
  input      [3:0]    io_input_ar_payload_qos,
  input      [2:0]    io_input_ar_payload_prot,
  output              io_input_r_valid,
  input               io_input_r_ready,
  output     [63:0]   io_input_r_payload_data,
  output     [3:0]    io_input_r_payload_id,
  output     [1:0]    io_input_r_payload_resp,
  output              io_input_r_payload_last,
  output              io_output_aw_valid,
  input               io_output_aw_ready,
  output     [31:0]   io_output_aw_payload_addr,
  output     [3:0]    io_output_aw_payload_id,
  output     [3:0]    io_output_aw_payload_region,
  output     [7:0]    io_output_aw_payload_len,
  output     [2:0]    io_output_aw_payload_size,
  output     [1:0]    io_output_aw_payload_burst,
  output     [0:0]    io_output_aw_payload_lock,
  output     [3:0]    io_output_aw_payload_cache,
  output     [3:0]    io_output_aw_payload_qos,
  output     [2:0]    io_output_aw_payload_prot,
  output              io_output_w_valid,
  input               io_output_w_ready,
  output     [31:0]   io_output_w_payload_data,
  output     [3:0]    io_output_w_payload_strb,
  output              io_output_w_payload_last,
  input               io_output_b_valid,
  output              io_output_b_ready,
  input      [3:0]    io_output_b_payload_id,
  input      [1:0]    io_output_b_payload_resp,
  output              io_output_ar_valid,
  input               io_output_ar_ready,
  output     [31:0]   io_output_ar_payload_addr,
  output     [3:0]    io_output_ar_payload_id,
  output     [3:0]    io_output_ar_payload_region,
  output     [7:0]    io_output_ar_payload_len,
  output     [2:0]    io_output_ar_payload_size,
  output     [1:0]    io_output_ar_payload_burst,
  output     [0:0]    io_output_ar_payload_lock,
  output     [3:0]    io_output_ar_payload_cache,
  output     [3:0]    io_output_ar_payload_qos,
  output     [2:0]    io_output_ar_payload_prot,
  input               io_output_r_valid,
  output              io_output_r_ready,
  input      [31:0]   io_output_r_payload_data,
  input      [3:0]    io_output_r_payload_id,
  input      [1:0]    io_output_r_payload_resp,
  input               io_output_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                readOnly_io_input_ar_ready;
  wire                readOnly_io_input_r_valid;
  wire       [63:0]   readOnly_io_input_r_payload_data;
  wire       [3:0]    readOnly_io_input_r_payload_id;
  wire       [1:0]    readOnly_io_input_r_payload_resp;
  wire                readOnly_io_input_r_payload_last;
  wire                readOnly_io_output_ar_valid;
  wire       [31:0]   readOnly_io_output_ar_payload_addr;
  wire       [3:0]    readOnly_io_output_ar_payload_id;
  wire       [3:0]    readOnly_io_output_ar_payload_region;
  wire       [7:0]    readOnly_io_output_ar_payload_len;
  wire       [2:0]    readOnly_io_output_ar_payload_size;
  wire       [1:0]    readOnly_io_output_ar_payload_burst;
  wire       [0:0]    readOnly_io_output_ar_payload_lock;
  wire       [3:0]    readOnly_io_output_ar_payload_cache;
  wire       [3:0]    readOnly_io_output_ar_payload_qos;
  wire       [2:0]    readOnly_io_output_ar_payload_prot;
  wire                readOnly_io_output_r_ready;
  wire                writeOnly_io_input_aw_ready;
  wire                writeOnly_io_input_w_ready;
  wire                writeOnly_io_input_b_valid;
  wire       [3:0]    writeOnly_io_input_b_payload_id;
  wire       [1:0]    writeOnly_io_input_b_payload_resp;
  wire                writeOnly_io_output_aw_valid;
  wire       [31:0]   writeOnly_io_output_aw_payload_addr;
  wire       [3:0]    writeOnly_io_output_aw_payload_id;
  wire       [3:0]    writeOnly_io_output_aw_payload_region;
  wire       [7:0]    writeOnly_io_output_aw_payload_len;
  wire       [2:0]    writeOnly_io_output_aw_payload_size;
  wire       [1:0]    writeOnly_io_output_aw_payload_burst;
  wire       [0:0]    writeOnly_io_output_aw_payload_lock;
  wire       [3:0]    writeOnly_io_output_aw_payload_cache;
  wire       [3:0]    writeOnly_io_output_aw_payload_qos;
  wire       [2:0]    writeOnly_io_output_aw_payload_prot;
  wire                writeOnly_io_output_w_valid;
  wire       [31:0]   writeOnly_io_output_w_payload_data;
  wire       [3:0]    writeOnly_io_output_w_payload_strb;
  wire                writeOnly_io_output_w_payload_last;
  wire                writeOnly_io_output_b_ready;

  Axi4ReadOnlyDownsizer readOnly (
    .io_input_ar_valid           (io_input_ar_valid                        ), //i
    .io_input_ar_ready           (readOnly_io_input_ar_ready               ), //o
    .io_input_ar_payload_addr    (io_input_ar_payload_addr[31:0]           ), //i
    .io_input_ar_payload_id      (io_input_ar_payload_id[3:0]              ), //i
    .io_input_ar_payload_region  (io_input_ar_payload_region[3:0]          ), //i
    .io_input_ar_payload_len     (io_input_ar_payload_len[7:0]             ), //i
    .io_input_ar_payload_size    (io_input_ar_payload_size[2:0]            ), //i
    .io_input_ar_payload_burst   (io_input_ar_payload_burst[1:0]           ), //i
    .io_input_ar_payload_lock    (io_input_ar_payload_lock                 ), //i
    .io_input_ar_payload_cache   (io_input_ar_payload_cache[3:0]           ), //i
    .io_input_ar_payload_qos     (io_input_ar_payload_qos[3:0]             ), //i
    .io_input_ar_payload_prot    (io_input_ar_payload_prot[2:0]            ), //i
    .io_input_r_valid            (readOnly_io_input_r_valid                ), //o
    .io_input_r_ready            (io_input_r_ready                         ), //i
    .io_input_r_payload_data     (readOnly_io_input_r_payload_data[63:0]   ), //o
    .io_input_r_payload_id       (readOnly_io_input_r_payload_id[3:0]      ), //o
    .io_input_r_payload_resp     (readOnly_io_input_r_payload_resp[1:0]    ), //o
    .io_input_r_payload_last     (readOnly_io_input_r_payload_last         ), //o
    .io_output_ar_valid          (readOnly_io_output_ar_valid              ), //o
    .io_output_ar_ready          (io_output_ar_ready                       ), //i
    .io_output_ar_payload_addr   (readOnly_io_output_ar_payload_addr[31:0] ), //o
    .io_output_ar_payload_id     (readOnly_io_output_ar_payload_id[3:0]    ), //o
    .io_output_ar_payload_region (readOnly_io_output_ar_payload_region[3:0]), //o
    .io_output_ar_payload_len    (readOnly_io_output_ar_payload_len[7:0]   ), //o
    .io_output_ar_payload_size   (readOnly_io_output_ar_payload_size[2:0]  ), //o
    .io_output_ar_payload_burst  (readOnly_io_output_ar_payload_burst[1:0] ), //o
    .io_output_ar_payload_lock   (readOnly_io_output_ar_payload_lock       ), //o
    .io_output_ar_payload_cache  (readOnly_io_output_ar_payload_cache[3:0] ), //o
    .io_output_ar_payload_qos    (readOnly_io_output_ar_payload_qos[3:0]   ), //o
    .io_output_ar_payload_prot   (readOnly_io_output_ar_payload_prot[2:0]  ), //o
    .io_output_r_valid           (io_output_r_valid                        ), //i
    .io_output_r_ready           (readOnly_io_output_r_ready               ), //o
    .io_output_r_payload_data    (io_output_r_payload_data[31:0]           ), //i
    .io_output_r_payload_id      (io_output_r_payload_id[3:0]              ), //i
    .io_output_r_payload_resp    (io_output_r_payload_resp[1:0]            ), //i
    .io_output_r_payload_last    (io_output_r_payload_last                 ), //i
    .io_axiClk                   (io_axiClk                                ), //i
    .tmp_io_resetn               (tmp_io_resetn                            )  //i
  );
  Axi4WriteOnlyDownsizer writeOnly (
    .io_input_aw_valid           (io_input_aw_valid                         ), //i
    .io_input_aw_ready           (writeOnly_io_input_aw_ready               ), //o
    .io_input_aw_payload_addr    (io_input_aw_payload_addr[31:0]            ), //i
    .io_input_aw_payload_id      (io_input_aw_payload_id[3:0]               ), //i
    .io_input_aw_payload_region  (io_input_aw_payload_region[3:0]           ), //i
    .io_input_aw_payload_len     (io_input_aw_payload_len[7:0]              ), //i
    .io_input_aw_payload_size    (io_input_aw_payload_size[2:0]             ), //i
    .io_input_aw_payload_burst   (io_input_aw_payload_burst[1:0]            ), //i
    .io_input_aw_payload_lock    (io_input_aw_payload_lock                  ), //i
    .io_input_aw_payload_cache   (io_input_aw_payload_cache[3:0]            ), //i
    .io_input_aw_payload_qos     (io_input_aw_payload_qos[3:0]              ), //i
    .io_input_aw_payload_prot    (io_input_aw_payload_prot[2:0]             ), //i
    .io_input_w_valid            (io_input_w_valid                          ), //i
    .io_input_w_ready            (writeOnly_io_input_w_ready                ), //o
    .io_input_w_payload_data     (io_input_w_payload_data[63:0]             ), //i
    .io_input_w_payload_strb     (io_input_w_payload_strb[7:0]              ), //i
    .io_input_w_payload_last     (io_input_w_payload_last                   ), //i
    .io_input_b_valid            (writeOnly_io_input_b_valid                ), //o
    .io_input_b_ready            (io_input_b_ready                          ), //i
    .io_input_b_payload_id       (writeOnly_io_input_b_payload_id[3:0]      ), //o
    .io_input_b_payload_resp     (writeOnly_io_input_b_payload_resp[1:0]    ), //o
    .io_output_aw_valid          (writeOnly_io_output_aw_valid              ), //o
    .io_output_aw_ready          (io_output_aw_ready                        ), //i
    .io_output_aw_payload_addr   (writeOnly_io_output_aw_payload_addr[31:0] ), //o
    .io_output_aw_payload_id     (writeOnly_io_output_aw_payload_id[3:0]    ), //o
    .io_output_aw_payload_region (writeOnly_io_output_aw_payload_region[3:0]), //o
    .io_output_aw_payload_len    (writeOnly_io_output_aw_payload_len[7:0]   ), //o
    .io_output_aw_payload_size   (writeOnly_io_output_aw_payload_size[2:0]  ), //o
    .io_output_aw_payload_burst  (writeOnly_io_output_aw_payload_burst[1:0] ), //o
    .io_output_aw_payload_lock   (writeOnly_io_output_aw_payload_lock       ), //o
    .io_output_aw_payload_cache  (writeOnly_io_output_aw_payload_cache[3:0] ), //o
    .io_output_aw_payload_qos    (writeOnly_io_output_aw_payload_qos[3:0]   ), //o
    .io_output_aw_payload_prot   (writeOnly_io_output_aw_payload_prot[2:0]  ), //o
    .io_output_w_valid           (writeOnly_io_output_w_valid               ), //o
    .io_output_w_ready           (io_output_w_ready                         ), //i
    .io_output_w_payload_data    (writeOnly_io_output_w_payload_data[31:0]  ), //o
    .io_output_w_payload_strb    (writeOnly_io_output_w_payload_strb[3:0]   ), //o
    .io_output_w_payload_last    (writeOnly_io_output_w_payload_last        ), //o
    .io_output_b_valid           (io_output_b_valid                         ), //i
    .io_output_b_ready           (writeOnly_io_output_b_ready               ), //o
    .io_output_b_payload_id      (io_output_b_payload_id[3:0]               ), //i
    .io_output_b_payload_resp    (io_output_b_payload_resp[1:0]             ), //i
    .io_axiClk                   (io_axiClk                                 ), //i
    .tmp_io_resetn               (tmp_io_resetn                             )  //i
  );
  assign io_input_ar_ready = readOnly_io_input_ar_ready; // @ Axi4Downsizer.scala l285
  assign io_input_r_valid = readOnly_io_input_r_valid; // @ Axi4Downsizer.scala l286
  assign io_input_r_payload_data = readOnly_io_input_r_payload_data; // @ Axi4Downsizer.scala l286
  assign io_input_r_payload_id = readOnly_io_input_r_payload_id; // @ Axi4Downsizer.scala l286
  assign io_input_r_payload_resp = readOnly_io_input_r_payload_resp; // @ Axi4Downsizer.scala l286
  assign io_input_r_payload_last = readOnly_io_input_r_payload_last; // @ Axi4Downsizer.scala l286
  assign io_input_aw_ready = writeOnly_io_input_aw_ready; // @ Axi4Downsizer.scala l287
  assign io_input_w_ready = writeOnly_io_input_w_ready; // @ Axi4Downsizer.scala l288
  assign io_input_b_valid = writeOnly_io_input_b_valid; // @ Axi4Downsizer.scala l289
  assign io_input_b_payload_id = writeOnly_io_input_b_payload_id; // @ Axi4Downsizer.scala l289
  assign io_input_b_payload_resp = writeOnly_io_input_b_payload_resp; // @ Axi4Downsizer.scala l289
  assign io_output_ar_valid = readOnly_io_output_ar_valid; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_addr = readOnly_io_output_ar_payload_addr; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_id = readOnly_io_output_ar_payload_id; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_region = readOnly_io_output_ar_payload_region; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_len = readOnly_io_output_ar_payload_len; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_size = readOnly_io_output_ar_payload_size; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_burst = readOnly_io_output_ar_payload_burst; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_lock = readOnly_io_output_ar_payload_lock; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_cache = readOnly_io_output_ar_payload_cache; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_qos = readOnly_io_output_ar_payload_qos; // @ Axi4Downsizer.scala l291
  assign io_output_ar_payload_prot = readOnly_io_output_ar_payload_prot; // @ Axi4Downsizer.scala l291
  assign io_output_r_ready = readOnly_io_output_r_ready; // @ Axi4Downsizer.scala l292
  assign io_output_aw_valid = writeOnly_io_output_aw_valid; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_addr = writeOnly_io_output_aw_payload_addr; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_id = writeOnly_io_output_aw_payload_id; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_region = writeOnly_io_output_aw_payload_region; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_len = writeOnly_io_output_aw_payload_len; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_size = writeOnly_io_output_aw_payload_size; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_burst = writeOnly_io_output_aw_payload_burst; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_lock = writeOnly_io_output_aw_payload_lock; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_cache = writeOnly_io_output_aw_payload_cache; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_qos = writeOnly_io_output_aw_payload_qos; // @ Axi4Downsizer.scala l293
  assign io_output_aw_payload_prot = writeOnly_io_output_aw_payload_prot; // @ Axi4Downsizer.scala l293
  assign io_output_w_valid = writeOnly_io_output_w_valid; // @ Axi4Downsizer.scala l294
  assign io_output_w_payload_data = writeOnly_io_output_w_payload_data; // @ Axi4Downsizer.scala l294
  assign io_output_w_payload_strb = writeOnly_io_output_w_payload_strb; // @ Axi4Downsizer.scala l294
  assign io_output_w_payload_last = writeOnly_io_output_w_payload_last; // @ Axi4Downsizer.scala l294
  assign io_output_b_ready = writeOnly_io_output_b_ready; // @ Axi4Downsizer.scala l295

endmodule

module BufferCC (
  input               io_dataIn,
  output              io_dataOut,
  input               io_axiClk,
  input               io_asyncResetn
);

  (* async_reg = "true" *) reg                 buffers_0;
  (* async_reg = "true" *) reg                 buffers_1;

  assign io_dataOut = buffers_1; // @ CrossClock.scala l58
  always @(posedge io_axiClk) begin
    buffers_0 <= io_dataIn; // @ CrossClock.scala l51
    buffers_1 <= buffers_0; // @ CrossClock.scala l54
  end


endmodule

module StreamFifoLowLatency (
  input               io_push_valid,
  output              io_push_ready,
  output reg          io_pop_valid,
  input               io_pop_ready,
  input               io_flush,
  output     [2:0]    io_occupancy,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [1:0]    tmp_pushPtr_valueNext;
  wire       [0:0]    tmp_pushPtr_valueNext_1;
  wire       [1:0]    tmp_popPtr_valueNext;
  wire       [0:0]    tmp_popPtr_valueNext_1;
  reg                 pushPtr_willIncrement;
  reg                 pushPtr_willClear;
  reg        [1:0]    pushPtr_valueNext;
  reg        [1:0]    pushPtr_value;
  wire                pushPtr_willOverflowIfInc;
  wire                pushPtr_willOverflow;
  reg                 popPtr_willIncrement;
  reg                 popPtr_willClear;
  reg        [1:0]    popPtr_valueNext;
  reg        [1:0]    popPtr_value;
  wire                popPtr_willOverflowIfInc;
  wire                popPtr_willOverflow;
  wire                ptrMatch;
  reg                 risingOccupancy;
  wire                empty;
  wire                full;
  wire                pushing;
  wire                popping;
  wire       [1:0]    ptrDif;

  assign tmp_pushPtr_valueNext_1 = pushPtr_willIncrement;
  assign tmp_pushPtr_valueNext = {1'd0, tmp_pushPtr_valueNext_1};
  assign tmp_popPtr_valueNext_1 = popPtr_willIncrement;
  assign tmp_popPtr_valueNext = {1'd0, tmp_popPtr_valueNext_1};
  always @(*) begin
    pushPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(pushing) begin
      pushPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    pushPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      pushPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign pushPtr_willOverflowIfInc = (pushPtr_value == 2'b11); // @ BaseType.scala l305
  assign pushPtr_willOverflow = (pushPtr_willOverflowIfInc && pushPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    pushPtr_valueNext = (pushPtr_value + tmp_pushPtr_valueNext); // @ Utils.scala l548
    if(pushPtr_willClear) begin
      pushPtr_valueNext = 2'b00; // @ Utils.scala l558
    end
  end

  always @(*) begin
    popPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(popping) begin
      popPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    popPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      popPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign popPtr_willOverflowIfInc = (popPtr_value == 2'b11); // @ BaseType.scala l305
  assign popPtr_willOverflow = (popPtr_willOverflowIfInc && popPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    popPtr_valueNext = (popPtr_value + tmp_popPtr_valueNext); // @ Utils.scala l548
    if(popPtr_willClear) begin
      popPtr_valueNext = 2'b00; // @ Utils.scala l558
    end
  end

  assign ptrMatch = (pushPtr_value == popPtr_value); // @ BaseType.scala l305
  assign empty = (ptrMatch && (! risingOccupancy)); // @ BaseType.scala l305
  assign full = (ptrMatch && risingOccupancy); // @ BaseType.scala l305
  assign pushing = (io_push_valid && io_push_ready); // @ BaseType.scala l305
  assign popping = (io_pop_valid && io_pop_ready); // @ BaseType.scala l305
  assign io_push_ready = (! full); // @ Stream.scala l1211
  always @(*) begin
    if((! empty)) begin
      io_pop_valid = 1'b1; // @ Stream.scala l1218
    end else begin
      io_pop_valid = io_push_valid; // @ Stream.scala l1221
    end
  end

  assign ptrDif = (pushPtr_value - popPtr_value); // @ BaseType.scala l299
  assign io_occupancy = {(risingOccupancy && ptrMatch),ptrDif}; // @ Stream.scala l1246
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pushPtr_value <= 2'b00; // @ Data.scala l400
      popPtr_value <= 2'b00; // @ Data.scala l400
      risingOccupancy <= 1'b0; // @ Data.scala l400
    end else begin
      pushPtr_value <= pushPtr_valueNext; // @ Reg.scala l39
      popPtr_value <= popPtr_valueNext; // @ Reg.scala l39
      if((pushing != popping)) begin
        risingOccupancy <= pushing; // @ Stream.scala l1231
      end
      if(io_flush) begin
        risingOccupancy <= 1'b0; // @ Stream.scala l1258
      end
    end
  end


endmodule

module StreamArbiter (
  input               io_inputs_0_valid,
  output              io_inputs_0_ready,
  input      [19:0]   io_inputs_0_payload_addr,
  input      [3:0]    io_inputs_0_payload_id,
  input      [7:0]    io_inputs_0_payload_len,
  input      [2:0]    io_inputs_0_payload_size,
  input      [1:0]    io_inputs_0_payload_burst,
  input               io_inputs_0_payload_write,
  input               io_inputs_1_valid,
  output              io_inputs_1_ready,
  input      [19:0]   io_inputs_1_payload_addr,
  input      [3:0]    io_inputs_1_payload_id,
  input      [7:0]    io_inputs_1_payload_len,
  input      [2:0]    io_inputs_1_payload_size,
  input      [1:0]    io_inputs_1_payload_burst,
  input               io_inputs_1_payload_write,
  output              io_output_valid,
  input               io_output_ready,
  output     [19:0]   io_output_payload_addr,
  output     [3:0]    io_output_payload_id,
  output     [7:0]    io_output_payload_len,
  output     [2:0]    io_output_payload_size,
  output     [1:0]    io_output_payload_burst,
  output              io_output_payload_write,
  output     [0:0]    io_chosen,
  output     [1:0]    io_chosenOH,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [3:0]    tmp_tmp_maskProposal_0_2;
  wire       [3:0]    tmp_tmp_maskProposal_0_2_1;
  wire       [1:0]    tmp_tmp_maskProposal_0_2_2;
  reg                 locked;
  wire                maskProposal_0;
  wire                maskProposal_1;
  reg                 maskLocked_0;
  reg                 maskLocked_1;
  wire                maskRouted_0;
  wire                maskRouted_1;
  wire       [1:0]    tmp_maskProposal_0;
  wire       [3:0]    tmp_maskProposal_0_1;
  wire       [3:0]    tmp_maskProposal_0_2;
  wire       [1:0]    tmp_maskProposal_0_3;
  wire                io_output_fire;
  wire                tmp_io_chosen;

  assign tmp_tmp_maskProposal_0_2 = (tmp_maskProposal_0_1 - tmp_tmp_maskProposal_0_2_1);
  assign tmp_tmp_maskProposal_0_2_2 = {maskLocked_0,maskLocked_1};
  assign tmp_tmp_maskProposal_0_2_1 = {2'd0, tmp_tmp_maskProposal_0_2_2};
  assign maskRouted_0 = (locked ? maskLocked_0 : maskProposal_0); // @ Expression.scala l1431
  assign maskRouted_1 = (locked ? maskLocked_1 : maskProposal_1); // @ Expression.scala l1431
  assign tmp_maskProposal_0 = {io_inputs_1_valid,io_inputs_0_valid}; // @ BaseType.scala l318
  assign tmp_maskProposal_0_1 = {tmp_maskProposal_0,tmp_maskProposal_0}; // @ BaseType.scala l318
  assign tmp_maskProposal_0_2 = (tmp_maskProposal_0_1 & (~ tmp_tmp_maskProposal_0_2)); // @ BaseType.scala l299
  assign tmp_maskProposal_0_3 = (tmp_maskProposal_0_2[3 : 2] | tmp_maskProposal_0_2[1 : 0]); // @ BaseType.scala l318
  assign maskProposal_0 = tmp_maskProposal_0_3[0]; // @ Stream.scala l631
  assign maskProposal_1 = tmp_maskProposal_0_3[1]; // @ Stream.scala l631
  assign io_output_fire = (io_output_valid && io_output_ready); // @ BaseType.scala l305
  assign io_output_valid = ((io_inputs_0_valid && maskRouted_0) || (io_inputs_1_valid && maskRouted_1)); // @ Stream.scala l693
  assign io_output_payload_addr = (maskRouted_0 ? io_inputs_0_payload_addr : io_inputs_1_payload_addr); // @ Stream.scala l694
  assign io_output_payload_id = (maskRouted_0 ? io_inputs_0_payload_id : io_inputs_1_payload_id); // @ Stream.scala l694
  assign io_output_payload_len = (maskRouted_0 ? io_inputs_0_payload_len : io_inputs_1_payload_len); // @ Stream.scala l694
  assign io_output_payload_size = (maskRouted_0 ? io_inputs_0_payload_size : io_inputs_1_payload_size); // @ Stream.scala l694
  assign io_output_payload_burst = (maskRouted_0 ? io_inputs_0_payload_burst : io_inputs_1_payload_burst); // @ Stream.scala l694
  assign io_output_payload_write = (maskRouted_0 ? io_inputs_0_payload_write : io_inputs_1_payload_write); // @ Stream.scala l694
  assign io_inputs_0_ready = (maskRouted_0 && io_output_ready); // @ Stream.scala l695
  assign io_inputs_1_ready = (maskRouted_1 && io_output_ready); // @ Stream.scala l695
  assign io_chosenOH = {maskRouted_1,maskRouted_0}; // @ Stream.scala l697
  assign tmp_io_chosen = io_chosenOH[1]; // @ BaseType.scala l305
  assign io_chosen = tmp_io_chosen; // @ Stream.scala l698
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      locked <= 1'b0; // @ Data.scala l400
      maskLocked_0 <= 1'b0; // @ Data.scala l400
      maskLocked_1 <= 1'b1; // @ Data.scala l400
    end else begin
      if(io_output_valid) begin
        maskLocked_0 <= maskRouted_0; // @ Stream.scala l687
        maskLocked_1 <= maskRouted_1; // @ Stream.scala l687
      end
      if(io_output_valid) begin
        locked <= 1'b1; // @ Stream.scala l649
      end
      if(io_output_fire) begin
        locked <= 1'b0; // @ Stream.scala l650
      end
    end
  end


endmodule

module Axi4WriteOnlyErrorSlave (
  input               io_axi_aw_valid,
  output              io_axi_aw_ready,
  input      [31:0]   io_axi_aw_payload_addr,
  input      [3:0]    io_axi_aw_payload_id,
  input      [3:0]    io_axi_aw_payload_region,
  input      [7:0]    io_axi_aw_payload_len,
  input      [2:0]    io_axi_aw_payload_size,
  input      [1:0]    io_axi_aw_payload_burst,
  input      [0:0]    io_axi_aw_payload_lock,
  input      [3:0]    io_axi_aw_payload_cache,
  input      [3:0]    io_axi_aw_payload_qos,
  input      [2:0]    io_axi_aw_payload_prot,
  input               io_axi_w_valid,
  output              io_axi_w_ready,
  input      [31:0]   io_axi_w_payload_data,
  input      [3:0]    io_axi_w_payload_strb,
  input               io_axi_w_payload_last,
  output              io_axi_b_valid,
  input               io_axi_b_ready,
  output     [3:0]    io_axi_b_payload_id,
  output     [1:0]    io_axi_b_payload_resp,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg                 consumeData;
  reg                 sendRsp;
  reg        [3:0]    id;
  wire                io_axi_aw_fire;
  wire                io_axi_w_fire;
  wire                io_axi_b_fire;

  assign io_axi_aw_ready = (! (consumeData || sendRsp)); // @ Axi4ErrorSlave.scala l17
  assign io_axi_aw_fire = (io_axi_aw_valid && io_axi_aw_ready); // @ BaseType.scala l305
  assign io_axi_w_ready = consumeData; // @ Axi4ErrorSlave.scala l23
  assign io_axi_w_fire = (io_axi_w_valid && io_axi_w_ready); // @ BaseType.scala l305
  assign io_axi_b_valid = sendRsp; // @ Axi4ErrorSlave.scala l29
  assign io_axi_b_payload_resp = 2'b11; // @ Axi4Channel.scala l195
  assign io_axi_b_payload_id = id; // @ Axi4ErrorSlave.scala l31
  assign io_axi_b_fire = (io_axi_b_valid && io_axi_b_ready); // @ BaseType.scala l305
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      consumeData <= 1'b0; // @ Data.scala l400
      sendRsp <= 1'b0; // @ Data.scala l400
    end else begin
      if(io_axi_aw_fire) begin
        consumeData <= 1'b1; // @ Axi4ErrorSlave.scala l19
      end
      if((io_axi_w_fire && io_axi_w_payload_last)) begin
        consumeData <= 1'b0; // @ Axi4ErrorSlave.scala l25
        sendRsp <= 1'b1; // @ Axi4ErrorSlave.scala l26
      end
      if(io_axi_b_fire) begin
        sendRsp <= 1'b0; // @ Axi4ErrorSlave.scala l33
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(io_axi_aw_fire) begin
      id <= io_axi_aw_payload_id; // @ Axi4ErrorSlave.scala l20
    end
  end


endmodule

module Axi4ReadOnlyErrorSlave (
  input               io_axi_ar_valid,
  output              io_axi_ar_ready,
  input      [31:0]   io_axi_ar_payload_addr,
  input      [3:0]    io_axi_ar_payload_id,
  input      [3:0]    io_axi_ar_payload_region,
  input      [7:0]    io_axi_ar_payload_len,
  input      [2:0]    io_axi_ar_payload_size,
  input      [1:0]    io_axi_ar_payload_burst,
  input      [0:0]    io_axi_ar_payload_lock,
  input      [3:0]    io_axi_ar_payload_cache,
  input      [3:0]    io_axi_ar_payload_qos,
  input      [2:0]    io_axi_ar_payload_prot,
  output              io_axi_r_valid,
  input               io_axi_r_ready,
  output     [31:0]   io_axi_r_payload_data,
  output     [3:0]    io_axi_r_payload_id,
  output     [1:0]    io_axi_r_payload_resp,
  output              io_axi_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg                 sendRsp;
  reg        [3:0]    id;
  reg        [7:0]    remaining;
  wire                remainingZero;
  wire                io_axi_ar_fire;

  assign remainingZero = (remaining == 8'h0); // @ BaseType.scala l305
  assign io_axi_ar_ready = (! sendRsp); // @ Axi4ErrorSlave.scala l48
  assign io_axi_ar_fire = (io_axi_ar_valid && io_axi_ar_ready); // @ BaseType.scala l305
  assign io_axi_r_valid = sendRsp; // @ Axi4ErrorSlave.scala l55
  assign io_axi_r_payload_id = id; // @ Axi4ErrorSlave.scala l56
  assign io_axi_r_payload_resp = 2'b11; // @ Axi4Channel.scala l225
  assign io_axi_r_payload_last = remainingZero; // @ Axi4ErrorSlave.scala l58
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      sendRsp <= 1'b0; // @ Data.scala l400
    end else begin
      if(io_axi_ar_fire) begin
        sendRsp <= 1'b1; // @ Axi4ErrorSlave.scala l50
      end
      if(sendRsp) begin
        if(io_axi_r_ready) begin
          if(remainingZero) begin
            sendRsp <= 1'b0; // @ Axi4ErrorSlave.scala l64
          end
        end
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(io_axi_ar_fire) begin
      remaining <= io_axi_ar_payload_len; // @ Axi4ErrorSlave.scala l51
      id <= io_axi_ar_payload_id; // @ Axi4ErrorSlave.scala l52
    end
    if(sendRsp) begin
      if(io_axi_r_ready) begin
        remaining <= (remaining - 8'h01); // @ Axi4ErrorSlave.scala l62
      end
    end
  end


endmodule

module StreamFifoLowLatency_1 (
  input               io_push_valid,
  output              io_push_ready,
  input      [0:0]    io_push_payload,
  output reg          io_pop_valid,
  input               io_pop_ready,
  output reg [0:0]    io_pop_payload,
  input               io_flush,
  output     [2:0]    io_occupancy,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [0:0]    tmp_ram_port0;
  wire       [1:0]    tmp_pushPtr_valueNext;
  wire       [0:0]    tmp_pushPtr_valueNext_1;
  wire       [1:0]    tmp_popPtr_valueNext;
  wire       [0:0]    tmp_popPtr_valueNext_1;
  wire                tmp_when;
  wire       [0:0]    tmp_ram_port;
  reg                 tmp_1;
  reg                 pushPtr_willIncrement;
  reg                 pushPtr_willClear;
  reg        [1:0]    pushPtr_valueNext;
  reg        [1:0]    pushPtr_value;
  wire                pushPtr_willOverflowIfInc;
  wire                pushPtr_willOverflow;
  reg                 popPtr_willIncrement;
  reg                 popPtr_willClear;
  reg        [1:0]    popPtr_valueNext;
  reg        [1:0]    popPtr_value;
  wire                popPtr_willOverflowIfInc;
  wire                popPtr_willOverflow;
  wire                ptrMatch;
  reg                 risingOccupancy;
  wire                empty;
  wire                full;
  wire                pushing;
  wire                popping;
  wire       [0:0]    readed;
  wire       [1:0]    ptrDif;
  (* ram_style = "distributed" *) reg [0:0] ram [0:3];

  assign tmp_when = (! empty);
  assign tmp_pushPtr_valueNext_1 = pushPtr_willIncrement;
  assign tmp_pushPtr_valueNext = {1'd0, tmp_pushPtr_valueNext_1};
  assign tmp_popPtr_valueNext_1 = popPtr_willIncrement;
  assign tmp_popPtr_valueNext = {1'd0, tmp_popPtr_valueNext_1};
  assign tmp_ram_port = io_push_payload;
  assign tmp_ram_port0 = ram[popPtr_value];
  always @(posedge io_axiClk) begin
    if(tmp_1) begin
      ram[pushPtr_value] <= tmp_ram_port;
    end
  end

  always @(*) begin
    tmp_1 = 1'b0; // @ when.scala l47
    if(pushing) begin
      tmp_1 = 1'b1; // @ when.scala l52
    end
  end

  always @(*) begin
    pushPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(pushing) begin
      pushPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    pushPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      pushPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign pushPtr_willOverflowIfInc = (pushPtr_value == 2'b11); // @ BaseType.scala l305
  assign pushPtr_willOverflow = (pushPtr_willOverflowIfInc && pushPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    pushPtr_valueNext = (pushPtr_value + tmp_pushPtr_valueNext); // @ Utils.scala l548
    if(pushPtr_willClear) begin
      pushPtr_valueNext = 2'b00; // @ Utils.scala l558
    end
  end

  always @(*) begin
    popPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(popping) begin
      popPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    popPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      popPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign popPtr_willOverflowIfInc = (popPtr_value == 2'b11); // @ BaseType.scala l305
  assign popPtr_willOverflow = (popPtr_willOverflowIfInc && popPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    popPtr_valueNext = (popPtr_value + tmp_popPtr_valueNext); // @ Utils.scala l548
    if(popPtr_willClear) begin
      popPtr_valueNext = 2'b00; // @ Utils.scala l558
    end
  end

  assign ptrMatch = (pushPtr_value == popPtr_value); // @ BaseType.scala l305
  assign empty = (ptrMatch && (! risingOccupancy)); // @ BaseType.scala l305
  assign full = (ptrMatch && risingOccupancy); // @ BaseType.scala l305
  assign pushing = (io_push_valid && io_push_ready); // @ BaseType.scala l305
  assign popping = (io_pop_valid && io_pop_ready); // @ BaseType.scala l305
  assign io_push_ready = (! full); // @ Stream.scala l1211
  assign readed = tmp_ram_port0; // @ UInt.scala l381
  always @(*) begin
    if(tmp_when) begin
      io_pop_valid = 1'b1; // @ Stream.scala l1218
    end else begin
      io_pop_valid = io_push_valid; // @ Stream.scala l1221
    end
  end

  always @(*) begin
    if(tmp_when) begin
      io_pop_payload = readed; // @ Stream.scala l1219
    end else begin
      io_pop_payload = io_push_payload; // @ Stream.scala l1222
    end
  end

  assign ptrDif = (pushPtr_value - popPtr_value); // @ BaseType.scala l299
  assign io_occupancy = {(risingOccupancy && ptrMatch),ptrDif}; // @ Stream.scala l1246
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      pushPtr_value <= 2'b00; // @ Data.scala l400
      popPtr_value <= 2'b00; // @ Data.scala l400
      risingOccupancy <= 1'b0; // @ Data.scala l400
    end else begin
      pushPtr_value <= pushPtr_valueNext; // @ Reg.scala l39
      popPtr_value <= popPtr_valueNext; // @ Reg.scala l39
      if((pushing != popping)) begin
        risingOccupancy <= pushing; // @ Stream.scala l1231
      end
      if(io_flush) begin
        risingOccupancy <= 1'b0; // @ Stream.scala l1258
      end
    end
  end


endmodule

module StreamArbiter_1 (
  input               io_inputs_0_valid,
  output              io_inputs_0_ready,
  input      [31:0]   io_inputs_0_payload_addr,
  input      [2:0]    io_inputs_0_payload_id,
  input      [3:0]    io_inputs_0_payload_region,
  input      [7:0]    io_inputs_0_payload_len,
  input      [2:0]    io_inputs_0_payload_size,
  input      [1:0]    io_inputs_0_payload_burst,
  input      [0:0]    io_inputs_0_payload_lock,
  input      [3:0]    io_inputs_0_payload_cache,
  input      [3:0]    io_inputs_0_payload_qos,
  input      [2:0]    io_inputs_0_payload_prot,
  input               io_inputs_1_valid,
  output              io_inputs_1_ready,
  input      [31:0]   io_inputs_1_payload_addr,
  input      [2:0]    io_inputs_1_payload_id,
  input      [3:0]    io_inputs_1_payload_region,
  input      [7:0]    io_inputs_1_payload_len,
  input      [2:0]    io_inputs_1_payload_size,
  input      [1:0]    io_inputs_1_payload_burst,
  input      [0:0]    io_inputs_1_payload_lock,
  input      [3:0]    io_inputs_1_payload_cache,
  input      [3:0]    io_inputs_1_payload_qos,
  input      [2:0]    io_inputs_1_payload_prot,
  output              io_output_valid,
  input               io_output_ready,
  output     [31:0]   io_output_payload_addr,
  output     [2:0]    io_output_payload_id,
  output     [3:0]    io_output_payload_region,
  output     [7:0]    io_output_payload_len,
  output     [2:0]    io_output_payload_size,
  output     [1:0]    io_output_payload_burst,
  output     [0:0]    io_output_payload_lock,
  output     [3:0]    io_output_payload_cache,
  output     [3:0]    io_output_payload_qos,
  output     [2:0]    io_output_payload_prot,
  output     [0:0]    io_chosen,
  output     [1:0]    io_chosenOH,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [3:0]    tmp_tmp_maskProposal_0_2;
  wire       [3:0]    tmp_tmp_maskProposal_0_2_1;
  wire       [1:0]    tmp_tmp_maskProposal_0_2_2;
  reg                 locked;
  wire                maskProposal_0;
  wire                maskProposal_1;
  reg                 maskLocked_0;
  reg                 maskLocked_1;
  wire                maskRouted_0;
  wire                maskRouted_1;
  wire       [1:0]    tmp_maskProposal_0;
  wire       [3:0]    tmp_maskProposal_0_1;
  wire       [3:0]    tmp_maskProposal_0_2;
  wire       [1:0]    tmp_maskProposal_0_3;
  wire                io_output_fire;
  wire                tmp_io_chosen;

  assign tmp_tmp_maskProposal_0_2 = (tmp_maskProposal_0_1 - tmp_tmp_maskProposal_0_2_1);
  assign tmp_tmp_maskProposal_0_2_2 = {maskLocked_0,maskLocked_1};
  assign tmp_tmp_maskProposal_0_2_1 = {2'd0, tmp_tmp_maskProposal_0_2_2};
  assign maskRouted_0 = (locked ? maskLocked_0 : maskProposal_0); // @ Expression.scala l1431
  assign maskRouted_1 = (locked ? maskLocked_1 : maskProposal_1); // @ Expression.scala l1431
  assign tmp_maskProposal_0 = {io_inputs_1_valid,io_inputs_0_valid}; // @ BaseType.scala l318
  assign tmp_maskProposal_0_1 = {tmp_maskProposal_0,tmp_maskProposal_0}; // @ BaseType.scala l318
  assign tmp_maskProposal_0_2 = (tmp_maskProposal_0_1 & (~ tmp_tmp_maskProposal_0_2)); // @ BaseType.scala l299
  assign tmp_maskProposal_0_3 = (tmp_maskProposal_0_2[3 : 2] | tmp_maskProposal_0_2[1 : 0]); // @ BaseType.scala l318
  assign maskProposal_0 = tmp_maskProposal_0_3[0]; // @ Stream.scala l631
  assign maskProposal_1 = tmp_maskProposal_0_3[1]; // @ Stream.scala l631
  assign io_output_fire = (io_output_valid && io_output_ready); // @ BaseType.scala l305
  assign io_output_valid = ((io_inputs_0_valid && maskRouted_0) || (io_inputs_1_valid && maskRouted_1)); // @ Stream.scala l693
  assign io_output_payload_addr = (maskRouted_0 ? io_inputs_0_payload_addr : io_inputs_1_payload_addr); // @ Stream.scala l694
  assign io_output_payload_id = (maskRouted_0 ? io_inputs_0_payload_id : io_inputs_1_payload_id); // @ Stream.scala l694
  assign io_output_payload_region = (maskRouted_0 ? io_inputs_0_payload_region : io_inputs_1_payload_region); // @ Stream.scala l694
  assign io_output_payload_len = (maskRouted_0 ? io_inputs_0_payload_len : io_inputs_1_payload_len); // @ Stream.scala l694
  assign io_output_payload_size = (maskRouted_0 ? io_inputs_0_payload_size : io_inputs_1_payload_size); // @ Stream.scala l694
  assign io_output_payload_burst = (maskRouted_0 ? io_inputs_0_payload_burst : io_inputs_1_payload_burst); // @ Stream.scala l694
  assign io_output_payload_lock = (maskRouted_0 ? io_inputs_0_payload_lock : io_inputs_1_payload_lock); // @ Stream.scala l694
  assign io_output_payload_cache = (maskRouted_0 ? io_inputs_0_payload_cache : io_inputs_1_payload_cache); // @ Stream.scala l694
  assign io_output_payload_qos = (maskRouted_0 ? io_inputs_0_payload_qos : io_inputs_1_payload_qos); // @ Stream.scala l694
  assign io_output_payload_prot = (maskRouted_0 ? io_inputs_0_payload_prot : io_inputs_1_payload_prot); // @ Stream.scala l694
  assign io_inputs_0_ready = (maskRouted_0 && io_output_ready); // @ Stream.scala l695
  assign io_inputs_1_ready = (maskRouted_1 && io_output_ready); // @ Stream.scala l695
  assign io_chosenOH = {maskRouted_1,maskRouted_0}; // @ Stream.scala l697
  assign tmp_io_chosen = io_chosenOH[1]; // @ BaseType.scala l305
  assign io_chosen = tmp_io_chosen; // @ Stream.scala l698
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      locked <= 1'b0; // @ Data.scala l400
      maskLocked_0 <= 1'b0; // @ Data.scala l400
      maskLocked_1 <= 1'b1; // @ Data.scala l400
    end else begin
      if(io_output_valid) begin
        maskLocked_0 <= maskRouted_0; // @ Stream.scala l687
        maskLocked_1 <= maskRouted_1; // @ Stream.scala l687
      end
      if(io_output_valid) begin
        locked <= 1'b1; // @ Stream.scala l649
      end
      if(io_output_fire) begin
        locked <= 1'b0; // @ Stream.scala l650
      end
    end
  end


endmodule

module StreamArbiter_2 (
  input               io_inputs_0_valid,
  output              io_inputs_0_ready,
  input      [31:0]   io_inputs_0_payload_addr,
  input      [1:0]    io_inputs_0_payload_id,
  input      [3:0]    io_inputs_0_payload_region,
  input      [7:0]    io_inputs_0_payload_len,
  input      [2:0]    io_inputs_0_payload_size,
  input      [1:0]    io_inputs_0_payload_burst,
  input      [0:0]    io_inputs_0_payload_lock,
  input      [3:0]    io_inputs_0_payload_cache,
  input      [3:0]    io_inputs_0_payload_qos,
  input      [2:0]    io_inputs_0_payload_prot,
  input               io_inputs_1_valid,
  output              io_inputs_1_ready,
  input      [31:0]   io_inputs_1_payload_addr,
  input      [1:0]    io_inputs_1_payload_id,
  input      [3:0]    io_inputs_1_payload_region,
  input      [7:0]    io_inputs_1_payload_len,
  input      [2:0]    io_inputs_1_payload_size,
  input      [1:0]    io_inputs_1_payload_burst,
  input      [0:0]    io_inputs_1_payload_lock,
  input      [3:0]    io_inputs_1_payload_cache,
  input      [3:0]    io_inputs_1_payload_qos,
  input      [2:0]    io_inputs_1_payload_prot,
  input               io_inputs_2_valid,
  output              io_inputs_2_ready,
  input      [31:0]   io_inputs_2_payload_addr,
  input      [1:0]    io_inputs_2_payload_id,
  input      [3:0]    io_inputs_2_payload_region,
  input      [7:0]    io_inputs_2_payload_len,
  input      [2:0]    io_inputs_2_payload_size,
  input      [1:0]    io_inputs_2_payload_burst,
  input      [0:0]    io_inputs_2_payload_lock,
  input      [3:0]    io_inputs_2_payload_cache,
  input      [3:0]    io_inputs_2_payload_qos,
  input      [2:0]    io_inputs_2_payload_prot,
  output              io_output_valid,
  input               io_output_ready,
  output     [31:0]   io_output_payload_addr,
  output     [1:0]    io_output_payload_id,
  output     [3:0]    io_output_payload_region,
  output     [7:0]    io_output_payload_len,
  output     [2:0]    io_output_payload_size,
  output     [1:0]    io_output_payload_burst,
  output     [0:0]    io_output_payload_lock,
  output     [3:0]    io_output_payload_cache,
  output     [3:0]    io_output_payload_qos,
  output     [2:0]    io_output_payload_prot,
  output     [1:0]    io_chosen,
  output     [2:0]    io_chosenOH,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [5:0]    tmp_tmp_maskProposal_0_2;
  wire       [5:0]    tmp_tmp_maskProposal_0_2_1;
  wire       [2:0]    tmp_tmp_maskProposal_0_2_2;
  reg        [31:0]   tmp_io_output_payload_addr_1;
  reg        [1:0]    tmp_io_output_payload_id;
  reg        [3:0]    tmp_io_output_payload_region;
  reg        [7:0]    tmp_io_output_payload_len;
  reg        [2:0]    tmp_io_output_payload_size;
  reg        [1:0]    tmp_io_output_payload_burst;
  reg        [0:0]    tmp_io_output_payload_lock;
  reg        [3:0]    tmp_io_output_payload_cache;
  reg        [3:0]    tmp_io_output_payload_qos;
  reg        [2:0]    tmp_io_output_payload_prot;
  reg                 locked;
  wire                maskProposal_0;
  wire                maskProposal_1;
  wire                maskProposal_2;
  reg                 maskLocked_0;
  reg                 maskLocked_1;
  reg                 maskLocked_2;
  wire                maskRouted_0;
  wire                maskRouted_1;
  wire                maskRouted_2;
  wire       [2:0]    tmp_maskProposal_0;
  wire       [5:0]    tmp_maskProposal_0_1;
  wire       [5:0]    tmp_maskProposal_0_2;
  wire       [2:0]    tmp_maskProposal_0_3;
  wire                io_output_fire;
  wire       [1:0]    tmp_io_output_payload_addr;
  wire                tmp_io_chosen;
  wire                tmp_io_chosen_1;

  assign tmp_tmp_maskProposal_0_2 = (tmp_maskProposal_0_1 - tmp_tmp_maskProposal_0_2_1);
  assign tmp_tmp_maskProposal_0_2_2 = {maskLocked_1,{maskLocked_0,maskLocked_2}};
  assign tmp_tmp_maskProposal_0_2_1 = {3'd0, tmp_tmp_maskProposal_0_2_2};
  always @(*) begin
    case(tmp_io_output_payload_addr)
      2'b00 : begin
        tmp_io_output_payload_addr_1 = io_inputs_0_payload_addr;
        tmp_io_output_payload_id = io_inputs_0_payload_id;
        tmp_io_output_payload_region = io_inputs_0_payload_region;
        tmp_io_output_payload_len = io_inputs_0_payload_len;
        tmp_io_output_payload_size = io_inputs_0_payload_size;
        tmp_io_output_payload_burst = io_inputs_0_payload_burst;
        tmp_io_output_payload_lock = io_inputs_0_payload_lock;
        tmp_io_output_payload_cache = io_inputs_0_payload_cache;
        tmp_io_output_payload_qos = io_inputs_0_payload_qos;
        tmp_io_output_payload_prot = io_inputs_0_payload_prot;
      end
      2'b01 : begin
        tmp_io_output_payload_addr_1 = io_inputs_1_payload_addr;
        tmp_io_output_payload_id = io_inputs_1_payload_id;
        tmp_io_output_payload_region = io_inputs_1_payload_region;
        tmp_io_output_payload_len = io_inputs_1_payload_len;
        tmp_io_output_payload_size = io_inputs_1_payload_size;
        tmp_io_output_payload_burst = io_inputs_1_payload_burst;
        tmp_io_output_payload_lock = io_inputs_1_payload_lock;
        tmp_io_output_payload_cache = io_inputs_1_payload_cache;
        tmp_io_output_payload_qos = io_inputs_1_payload_qos;
        tmp_io_output_payload_prot = io_inputs_1_payload_prot;
      end
      default : begin
        tmp_io_output_payload_addr_1 = io_inputs_2_payload_addr;
        tmp_io_output_payload_id = io_inputs_2_payload_id;
        tmp_io_output_payload_region = io_inputs_2_payload_region;
        tmp_io_output_payload_len = io_inputs_2_payload_len;
        tmp_io_output_payload_size = io_inputs_2_payload_size;
        tmp_io_output_payload_burst = io_inputs_2_payload_burst;
        tmp_io_output_payload_lock = io_inputs_2_payload_lock;
        tmp_io_output_payload_cache = io_inputs_2_payload_cache;
        tmp_io_output_payload_qos = io_inputs_2_payload_qos;
        tmp_io_output_payload_prot = io_inputs_2_payload_prot;
      end
    endcase
  end

  assign maskRouted_0 = (locked ? maskLocked_0 : maskProposal_0); // @ Expression.scala l1431
  assign maskRouted_1 = (locked ? maskLocked_1 : maskProposal_1); // @ Expression.scala l1431
  assign maskRouted_2 = (locked ? maskLocked_2 : maskProposal_2); // @ Expression.scala l1431
  assign tmp_maskProposal_0 = {io_inputs_2_valid,{io_inputs_1_valid,io_inputs_0_valid}}; // @ BaseType.scala l318
  assign tmp_maskProposal_0_1 = {tmp_maskProposal_0,tmp_maskProposal_0}; // @ BaseType.scala l318
  assign tmp_maskProposal_0_2 = (tmp_maskProposal_0_1 & (~ tmp_tmp_maskProposal_0_2)); // @ BaseType.scala l299
  assign tmp_maskProposal_0_3 = (tmp_maskProposal_0_2[5 : 3] | tmp_maskProposal_0_2[2 : 0]); // @ BaseType.scala l318
  assign maskProposal_0 = tmp_maskProposal_0_3[0]; // @ Stream.scala l631
  assign maskProposal_1 = tmp_maskProposal_0_3[1]; // @ Stream.scala l631
  assign maskProposal_2 = tmp_maskProposal_0_3[2]; // @ Stream.scala l631
  assign io_output_fire = (io_output_valid && io_output_ready); // @ BaseType.scala l305
  assign io_output_valid = (((io_inputs_0_valid && maskRouted_0) || (io_inputs_1_valid && maskRouted_1)) || (io_inputs_2_valid && maskRouted_2)); // @ Stream.scala l693
  assign tmp_io_output_payload_addr = {maskRouted_2,maskRouted_1}; // @ BaseType.scala l318
  assign io_output_payload_addr = tmp_io_output_payload_addr_1; // @ Stream.scala l694
  assign io_output_payload_id = tmp_io_output_payload_id; // @ Stream.scala l694
  assign io_output_payload_region = tmp_io_output_payload_region; // @ Stream.scala l694
  assign io_output_payload_len = tmp_io_output_payload_len; // @ Stream.scala l694
  assign io_output_payload_size = tmp_io_output_payload_size; // @ Stream.scala l694
  assign io_output_payload_burst = tmp_io_output_payload_burst; // @ Stream.scala l694
  assign io_output_payload_lock = tmp_io_output_payload_lock; // @ Stream.scala l694
  assign io_output_payload_cache = tmp_io_output_payload_cache; // @ Stream.scala l694
  assign io_output_payload_qos = tmp_io_output_payload_qos; // @ Stream.scala l694
  assign io_output_payload_prot = tmp_io_output_payload_prot; // @ Stream.scala l694
  assign io_inputs_0_ready = (maskRouted_0 && io_output_ready); // @ Stream.scala l695
  assign io_inputs_1_ready = (maskRouted_1 && io_output_ready); // @ Stream.scala l695
  assign io_inputs_2_ready = (maskRouted_2 && io_output_ready); // @ Stream.scala l695
  assign io_chosenOH = {maskRouted_2,{maskRouted_1,maskRouted_0}}; // @ Stream.scala l697
  assign tmp_io_chosen = io_chosenOH[1]; // @ BaseType.scala l305
  assign tmp_io_chosen_1 = io_chosenOH[2]; // @ BaseType.scala l305
  assign io_chosen = {tmp_io_chosen_1,tmp_io_chosen}; // @ Stream.scala l698
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      locked <= 1'b0; // @ Data.scala l400
      maskLocked_0 <= 1'b0; // @ Data.scala l400
      maskLocked_1 <= 1'b0; // @ Data.scala l400
      maskLocked_2 <= 1'b1; // @ Data.scala l400
    end else begin
      if(io_output_valid) begin
        maskLocked_0 <= maskRouted_0; // @ Stream.scala l687
        maskLocked_1 <= maskRouted_1; // @ Stream.scala l687
        maskLocked_2 <= maskRouted_2; // @ Stream.scala l687
      end
      if(io_output_valid) begin
        locked <= 1'b1; // @ Stream.scala l649
      end
      if(io_output_fire) begin
        locked <= 1'b0; // @ Stream.scala l650
      end
    end
  end


endmodule

module Timer (
  input               cen,
  input               wen,
  input      [31:0]   addr,
  input      [63:0]   wdata,
  output reg [63:0]   rdata,
  output              timer_int,
  input               io_axiClk,
  input               cpu_rst
);

  wire       [63:0]   tmp_mtime;
  reg        [63:0]   mtime;
  reg        [63:0]   mtimecmp;

  assign tmp_mtime = (mtime + 64'h0000000000000001);
  always @(*) begin
    if((addr == 32'h0200bff8)) begin
      rdata = mtime; // @ Exception.scala l236
    end else begin
      if((addr == 32'h02004000)) begin
        rdata = mtimecmp; // @ Exception.scala l238
      end else begin
        rdata = 64'h0; // @ Exception.scala l240
      end
    end
  end

  assign timer_int = (mtimecmp <= mtime); // @ Exception.scala l243
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      mtime <= 64'h0; // @ Data.scala l400
      mtimecmp <= 64'hffffffffffffffff; // @ Data.scala l400
    end else begin
      if((wen && cen)) begin
        case(addr)
          32'h0200bff8 : begin
            mtime <= wdata; // @ Exception.scala l225
          end
          32'h02004000 : begin
            mtimecmp <= wdata; // @ Exception.scala l228
          end
          default : begin
          end
        endcase
      end else begin
        mtime <= tmp_mtime; // @ Exception.scala l232
      end
    end
  end


endmodule

module BIUTop (
  output              stall,
  input               flush,
  input               dcache_ports_cmd_valid,
  output              dcache_ports_cmd_ready,
  input      [31:0]   dcache_ports_cmd_payload_addr,
  input               dcache_ports_cmd_payload_wen,
  input      [63:0]   dcache_ports_cmd_payload_wdata,
  input      [7:0]    dcache_ports_cmd_payload_wstrb,
  input      [2:0]    dcache_ports_cmd_payload_size,
  output              dcache_ports_rsp_valid,
  output     [63:0]   dcache_ports_rsp_payload_data,
  output reg          dcache_ar_valid,
  input               dcache_ar_ready,
  output reg [31:0]   dcache_ar_payload_addr,
  output reg [1:0]    dcache_ar_payload_id,
  output reg [7:0]    dcache_ar_payload_len,
  output reg [2:0]    dcache_ar_payload_size,
  output reg [1:0]    dcache_ar_payload_burst,
  input               dcache_r_valid,
  output              dcache_r_ready,
  input      [63:0]   dcache_r_payload_data,
  input      [1:0]    dcache_r_payload_id,
  input      [1:0]    dcache_r_payload_resp,
  input               dcache_r_payload_last,
  output reg          dcache_aw_valid,
  input               dcache_aw_ready,
  output reg [31:0]   dcache_aw_payload_addr,
  output reg [1:0]    dcache_aw_payload_id,
  output reg [7:0]    dcache_aw_payload_len,
  output reg [2:0]    dcache_aw_payload_size,
  output reg [1:0]    dcache_aw_payload_burst,
  output reg          dcache_w_valid,
  input               dcache_w_ready,
  output reg [63:0]   dcache_w_payload_data,
  output reg [7:0]    dcache_w_payload_strb,
  output reg          dcache_w_payload_last,
  input               dcache_b_valid,
  output              dcache_b_ready,
  input      [1:0]    dcache_b_payload_id,
  input      [1:0]    dcache_b_payload_resp,
  input               io_axiClk,
  input               cpu_rst
);

  wire                biu_1_cpu_bypass_rsp_valid;
  wire                biu_1_stall;
  wire                biu_1_cpu_cmd_ready;
  wire                biu_1_cpu_rsp_valid;
  wire       [63:0]   biu_1_cpu_rsp_payload_data;
  wire                biu_1_cpu_bypass_cmd_valid;
  wire       [31:0]   biu_1_cpu_bypass_cmd_payload_addr;
  wire                biu_1_cpu_bypass_cmd_payload_wen;
  wire       [63:0]   biu_1_cpu_bypass_cmd_payload_wdata;
  wire       [7:0]    biu_1_cpu_bypass_cmd_payload_wstrb;
  wire       [2:0]    biu_1_cpu_bypass_cmd_payload_size;
  wire                dcache_ports_stall;
  reg                 handshake_cnt;
  reg        [3:0]    ar_len_cnt;
  wire                bypass_read;
  wire                bypass_write;
  reg                 bypass_write_reg;
  reg                 bypass_reg;
  wire                dcache_ar_fire;
  wire                dcache_ar_fire_1;
  wire                dcache_ar_fire_2;
  wire                dcache_aw_fire;
  wire                dcache_w_fire;
  wire                dcache_aw_fire_1;
  wire                dcache_w_fire_1;
  wire                dcache_aw_fire_2;
  wire                dcache_w_fire_2;
  wire                dcache_aw_fire_3;
  wire                dcache_w_fire_3;
  wire                dcache_aw_fire_4;
  wire                dcache_w_fire_4;
  wire                dcache_aw_fire_5;
  wire                dcache_w_fire_5;
  wire                aw_and_w_fire;

  BIU biu_1 (
    .stall                        (biu_1_stall                             ), //o
    .flush                        (flush                                   ), //i
    .cpu_cmd_valid                (dcache_ports_cmd_valid                  ), //i
    .cpu_cmd_ready                (biu_1_cpu_cmd_ready                     ), //o
    .cpu_cmd_payload_addr         (dcache_ports_cmd_payload_addr[31:0]     ), //i
    .cpu_cmd_payload_wen          (dcache_ports_cmd_payload_wen            ), //i
    .cpu_cmd_payload_wdata        (dcache_ports_cmd_payload_wdata[63:0]    ), //i
    .cpu_cmd_payload_wstrb        (dcache_ports_cmd_payload_wstrb[7:0]     ), //i
    .cpu_cmd_payload_size         (dcache_ports_cmd_payload_size[2:0]      ), //i
    .cpu_rsp_valid                (biu_1_cpu_rsp_valid                     ), //o
    .cpu_rsp_payload_data         (biu_1_cpu_rsp_payload_data[63:0]        ), //o
    .cpu_bypass_cmd_valid         (biu_1_cpu_bypass_cmd_valid              ), //o
    .cpu_bypass_cmd_ready         (1'b1                                    ), //i
    .cpu_bypass_cmd_payload_addr  (biu_1_cpu_bypass_cmd_payload_addr[31:0] ), //o
    .cpu_bypass_cmd_payload_wen   (biu_1_cpu_bypass_cmd_payload_wen        ), //o
    .cpu_bypass_cmd_payload_wdata (biu_1_cpu_bypass_cmd_payload_wdata[63:0]), //o
    .cpu_bypass_cmd_payload_wstrb (biu_1_cpu_bypass_cmd_payload_wstrb[7:0] ), //o
    .cpu_bypass_cmd_payload_size  (biu_1_cpu_bypass_cmd_payload_size[2:0]  ), //o
    .cpu_bypass_rsp_valid         (biu_1_cpu_bypass_rsp_valid              ), //i
    .cpu_bypass_rsp_payload_data  (dcache_r_payload_data[63:0]             ), //i
    .io_axiClk                    (io_axiClk                               ), //i
    .cpu_rst                      (cpu_rst                                 )  //i
  );
  assign dcache_ports_cmd_ready = biu_1_cpu_cmd_ready; // @ DCache.scala l332
  assign dcache_ports_rsp_valid = biu_1_cpu_rsp_valid; // @ DCache.scala l333
  assign dcache_ports_rsp_payload_data = biu_1_cpu_rsp_payload_data; // @ DCache.scala l333
  assign dcache_ports_stall = biu_1_stall; // @ DCache.scala l335
  assign bypass_read = (biu_1_cpu_bypass_cmd_valid && (! biu_1_cpu_bypass_cmd_payload_wen)); // @ BaseType.scala l305
  assign bypass_write = (biu_1_cpu_bypass_cmd_valid && biu_1_cpu_bypass_cmd_payload_wen); // @ BaseType.scala l305
  assign dcache_ar_fire = (dcache_ar_valid && dcache_ar_ready); // @ BaseType.scala l305
  assign dcache_ar_fire_1 = (dcache_ar_valid && dcache_ar_ready); // @ BaseType.scala l305
  assign dcache_ar_fire_2 = (dcache_ar_valid && dcache_ar_ready); // @ BaseType.scala l305
  assign dcache_r_ready = 1'b1; // @ DCache.scala l394
  assign dcache_aw_fire = (dcache_aw_valid && dcache_aw_ready); // @ BaseType.scala l305
  assign dcache_w_fire = (dcache_w_valid && dcache_w_ready); // @ BaseType.scala l305
  assign dcache_b_ready = 1'b1; // @ DCache.scala l438
  assign dcache_aw_fire_1 = (dcache_aw_valid && dcache_aw_ready); // @ BaseType.scala l305
  assign dcache_w_fire_1 = (dcache_w_valid && dcache_w_ready); // @ BaseType.scala l305
  assign dcache_aw_fire_2 = (dcache_aw_valid && dcache_aw_ready); // @ BaseType.scala l305
  assign dcache_w_fire_2 = (dcache_w_valid && dcache_w_ready); // @ BaseType.scala l305
  assign dcache_aw_fire_3 = (dcache_aw_valid && dcache_aw_ready); // @ BaseType.scala l305
  assign dcache_w_fire_3 = (dcache_w_valid && dcache_w_ready); // @ BaseType.scala l305
  assign dcache_aw_fire_4 = (dcache_aw_valid && dcache_aw_ready); // @ BaseType.scala l305
  assign dcache_w_fire_4 = (dcache_w_valid && dcache_w_ready); // @ BaseType.scala l305
  assign dcache_aw_fire_5 = (dcache_aw_valid && dcache_aw_ready); // @ BaseType.scala l305
  assign dcache_w_fire_5 = (dcache_w_valid && dcache_w_ready); // @ BaseType.scala l305
  assign aw_and_w_fire = ((dcache_aw_fire_4 && dcache_w_fire_4) || (handshake_cnt && (dcache_aw_fire_5 || dcache_w_fire_5))); // @ BaseType.scala l305
  assign biu_1_cpu_bypass_rsp_valid = (bypass_reg ? (bypass_write_reg ? dcache_b_valid : (dcache_r_valid && (dcache_r_payload_id == 2'b01))) : 1'b0); // @ DCache.scala l455
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      handshake_cnt <= 1'b0; // @ Data.scala l400
      ar_len_cnt <= 4'b0000; // @ Data.scala l400
      bypass_write_reg <= 1'b0; // @ Data.scala l400
      bypass_reg <= 1'b0; // @ Data.scala l400
      dcache_ar_valid <= 1'b0; // @ Data.scala l400
      dcache_ar_payload_id <= 2'b00; // @ Data.scala l400
      dcache_ar_payload_len <= 8'h0; // @ Data.scala l400
      dcache_ar_payload_size <= 3'b000; // @ Data.scala l400
      dcache_ar_payload_burst <= 2'b00; // @ Data.scala l400
      dcache_ar_payload_addr <= 32'h0; // @ Data.scala l400
      dcache_aw_valid <= 1'b0; // @ Data.scala l400
      dcache_aw_payload_id <= 2'b00; // @ Data.scala l400
      dcache_aw_payload_len <= 8'h0; // @ Data.scala l400
      dcache_aw_payload_size <= 3'b000; // @ Data.scala l400
      dcache_aw_payload_burst <= 2'b00; // @ Data.scala l400
      dcache_aw_payload_addr <= 32'h0; // @ Data.scala l400
      dcache_w_valid <= 1'b0; // @ Data.scala l400
      dcache_w_payload_data <= 64'h0; // @ Data.scala l400
      dcache_w_payload_strb <= 8'h0; // @ Data.scala l400
      dcache_w_payload_last <= 1'b0; // @ Data.scala l400
    end else begin
      if(bypass_write) begin
        bypass_write_reg <= 1'b1; // @ DCache.scala l345
      end else begin
        if(biu_1_cpu_bypass_rsp_valid) begin
          bypass_write_reg <= 1'b0; // @ DCache.scala l348
        end
      end
      if((bypass_read || bypass_write)) begin
        bypass_reg <= 1'b1; // @ DCache.scala l351
      end else begin
        if(biu_1_cpu_bypass_rsp_valid) begin
          bypass_reg <= 1'b0; // @ DCache.scala l354
        end
      end
      if(bypass_read) begin
        dcache_ar_valid <= 1'b1; // @ DCache.scala l366
      end else begin
        if(dcache_ar_fire) begin
          if((4'b0000 < ar_len_cnt)) begin
            dcache_ar_valid <= 1'b1; // @ DCache.scala l370
          end else begin
            dcache_ar_valid <= 1'b0; // @ DCache.scala l372
          end
        end
      end
      if(bypass_read) begin
        ar_len_cnt <= 4'b0000; // @ DCache.scala l376
      end else begin
        if((dcache_ar_fire_1 && (4'b0000 < ar_len_cnt))) begin
          ar_len_cnt <= (ar_len_cnt - 4'b0001); // @ DCache.scala l378
        end
      end
      dcache_ar_payload_id <= 2'b01; // @ DCache.scala l380
      dcache_ar_payload_len <= 8'h0; // @ DCache.scala l381
      if(bypass_read) begin
        dcache_ar_payload_size <= biu_1_cpu_bypass_cmd_payload_size; // @ DCache.scala l383
      end
      dcache_ar_payload_burst <= 2'b01; // @ DCache.scala l386
      if(bypass_read) begin
        dcache_ar_payload_addr <= biu_1_cpu_bypass_cmd_payload_addr; // @ DCache.scala l389
      end else begin
        if(dcache_ar_fire_2) begin
          dcache_ar_payload_addr <= (dcache_ar_payload_addr + 32'h00000008); // @ DCache.scala l391
        end
      end
      if(bypass_write) begin
        dcache_aw_valid <= 1'b1; // @ DCache.scala l403
      end else begin
        if(dcache_aw_fire) begin
          dcache_aw_valid <= 1'b0; // @ DCache.scala l406
        end
      end
      dcache_aw_payload_id <= 2'b10; // @ DCache.scala l408
      if(bypass_write) begin
        dcache_aw_payload_len <= 8'h0; // @ DCache.scala l411
      end
      if(bypass_write) begin
        dcache_aw_payload_size <= biu_1_cpu_bypass_cmd_payload_size; // @ DCache.scala l415
      end
      dcache_aw_payload_burst <= 2'b01; // @ DCache.scala l417
      if(bypass_write) begin
        dcache_aw_payload_addr <= biu_1_cpu_bypass_cmd_payload_addr; // @ DCache.scala l420
      end
      if(bypass_write) begin
        dcache_w_valid <= 1'b1; // @ DCache.scala l428
        dcache_w_payload_data <= biu_1_cpu_bypass_cmd_payload_wdata; // @ DCache.scala l429
        dcache_w_payload_strb <= biu_1_cpu_bypass_cmd_payload_wstrb; // @ DCache.scala l430
        dcache_w_payload_last <= 1'b1; // @ DCache.scala l431
      end else begin
        if(dcache_w_fire) begin
          dcache_w_valid <= 1'b0; // @ DCache.scala l434
        end
      end
      if((handshake_cnt == 1'b0)) begin
        if((dcache_aw_fire_1 && dcache_w_fire_1)) begin
          handshake_cnt <= 1'b0; // @ DCache.scala l442
        end else begin
          if((dcache_aw_fire_2 || dcache_w_fire_2)) begin
            handshake_cnt <= 1'b1; // @ DCache.scala l444
          end
        end
      end else begin
        if((handshake_cnt == 1'b1)) begin
          if((dcache_aw_fire_3 || dcache_w_fire_3)) begin
            handshake_cnt <= 1'b0; // @ DCache.scala l449
          end
        end
      end
    end
  end


endmodule

module LSU (
  input               flush,
  input               stall,
  input               src_ports_valid,
  output              src_ports_ready,
  input      [3:0]    src_ports_payload_rd_rob_ptr,
  input               src_ports_payload_micro_op_rd_wen,
  input               src_ports_payload_micro_op_src2_is_imm,
  input      [3:0]    src_ports_payload_micro_op_lsu_ctrl_op,
  input               src_ports_payload_micro_op_lsu_is_load,
  input               src_ports_payload_micro_op_lsu_is_store,
  input      [63:0]   src_ports_payload_src1_data,
  input      [63:0]   src_ports_payload_src2_data,
  input      [63:0]   src_ports_payload_imm,
  input      [31:0]   src_ports_payload_pc,
  input      [31:0]   src_ports_payload_instruction,
  output              dst_ports_valid,
  input               dst_ports_ready,
  output     [63:0]   dst_ports_payload_result,
  output              dst_ports_payload_rd_wen,
  output     [3:0]    dst_ports_payload_rd_rob_ptr,
  output     [31:0]   dst_ports_payload_pc,
  output     [31:0]   dst_ports_payload_instruction,
  output              dcache_ports_cmd_valid,
  input               dcache_ports_cmd_ready,
  output     [31:0]   dcache_ports_cmd_payload_addr,
  output              dcache_ports_cmd_payload_wen,
  output     [63:0]   dcache_ports_cmd_payload_wdata,
  output     [7:0]    dcache_ports_cmd_payload_wstrb,
  output     [2:0]    dcache_ports_cmd_payload_size,
  input               dcache_ports_rsp_valid,
  input      [63:0]   dcache_ports_rsp_payload_data,
  output              timer_cen,
  output              timer_wen,
  output     [31:0]   timer_addr,
  output     [63:0]   timer_wdata,
  input               io_axiClk,
  input               cpu_rst
);
  localparam LsuCtrlEnum_IDLE = 4'd0;
  localparam LsuCtrlEnum_LB = 4'd1;
  localparam LsuCtrlEnum_LBU = 4'd2;
  localparam LsuCtrlEnum_LH = 4'd3;
  localparam LsuCtrlEnum_LHU = 4'd4;
  localparam LsuCtrlEnum_LW = 4'd5;
  localparam LsuCtrlEnum_LWU = 4'd6;
  localparam LsuCtrlEnum_LD = 4'd7;
  localparam LsuCtrlEnum_SB = 4'd8;
  localparam LsuCtrlEnum_SH = 4'd9;
  localparam LsuCtrlEnum_SW = 4'd10;
  localparam LsuCtrlEnum_SD = 4'd11;

  wire       [5:0]    tmp_dcache_rdata;
  wire       [5:0]    tmp_dcache_wdata;
  wire       [5:0]    tmp_dcache_wdata_1;
  wire       [5:0]    tmp_dcache_wdata_2;
  wire       [5:0]    tmp_dcache_wdata_3;
  wire                dcache_ports_stall;
  wire                tmp_src_ports_ready;
  reg                 tmp_src_ports_ready_1;
  wire       [3:0]    tmp_src_stream_payload_micro_op_lsu_ctrl_op;
  reg                 src_stream_valid;
  wire                src_stream_ready;
  wire       [3:0]    src_stream_payload_rd_rob_ptr;
  wire                src_stream_payload_micro_op_rd_wen;
  wire                src_stream_payload_micro_op_src2_is_imm;
  wire       [3:0]    src_stream_payload_micro_op_lsu_ctrl_op;
  wire                src_stream_payload_micro_op_lsu_is_load;
  wire                src_stream_payload_micro_op_lsu_is_store;
  wire       [63:0]   src_stream_payload_src1_data;
  wire       [63:0]   src_stream_payload_src2_data;
  wire       [63:0]   src_stream_payload_imm;
  wire       [31:0]   src_stream_payload_pc;
  wire       [31:0]   src_stream_payload_instruction;
  wire                dst_stream_valid;
  wire                dst_stream_ready;
  wire       [63:0]   dst_stream_payload_result;
  wire                dst_stream_payload_rd_wen;
  wire       [3:0]    dst_stream_payload_rd_rob_ptr;
  wire       [31:0]   dst_stream_payload_pc;
  wire       [31:0]   dst_stream_payload_instruction;
  wire                dcache_cmd_stream_valid;
  wire                dcache_cmd_stream_ready;
  wire       [31:0]   dcache_cmd_stream_payload_addr;
  wire                dcache_cmd_stream_payload_wen;
  wire       [63:0]   dcache_cmd_stream_payload_wdata;
  wire       [7:0]    dcache_cmd_stream_payload_wstrb;
  wire       [2:0]    dcache_cmd_stream_payload_size;
  wire                lsu_cen;
  wire       [63:0]   lsu_addr;
  wire       [2:0]    lsu_addr_offset;
  wire                lsu_addr_is_timer;
  wire                tmp_lsu_wdata_byte;
  reg        [55:0]   tmp_lsu_wdata_byte_1;
  wire       [63:0]   lsu_wdata_byte;
  wire                tmp_lsu_wdata_half;
  reg        [47:0]   tmp_lsu_wdata_half_1;
  wire       [63:0]   lsu_wdata_half;
  wire                tmp_lsu_wdata_word;
  reg        [31:0]   tmp_lsu_wdata_word_1;
  wire       [63:0]   lsu_wdata_word;
  wire                dcache_cen;
  wire       [63:0]   dcache_addr;
  reg        [63:0]   dcache_wdata;
  reg        [7:0]    dcache_wstrb;
  reg        [2:0]    dcache_size;
  wire                src_ports_fire;
  reg        [2:0]    lsu_addr_offset_reg;
  wire       [63:0]   dcache_rdata;
  wire                tmp_dcache_rdata_lb;
  reg        [55:0]   tmp_dcache_rdata_lb_1;
  wire       [63:0]   dcache_rdata_lb;
  reg        [55:0]   tmp_dcache_rdata_lbu;
  wire       [63:0]   dcache_rdata_lbu;
  wire                tmp_dcache_rdata_lh;
  reg        [47:0]   tmp_dcache_rdata_lh_1;
  wire       [63:0]   dcache_rdata_lh;
  reg        [47:0]   tmp_dcache_rdata_lhu;
  wire       [63:0]   dcache_rdata_lhu;
  wire                tmp_dcache_rdata_lw;
  reg        [31:0]   tmp_dcache_rdata_lw_1;
  wire       [63:0]   dcache_rdata_lw;
  reg        [31:0]   tmp_dcache_rdata_lwu;
  wire       [63:0]   dcache_rdata_lwu;
  reg        [63:0]   lsu_rdata;
  wire                src_ports_fire_1;
  reg        [3:0]    lsu_ctrl_op_reg;
  reg        [7:0]    tmp_dcache_wstrb;
  reg        [7:0]    tmp_dcache_wstrb_1;
  reg        [7:0]    tmp_dcache_wstrb_2;
  wire       [7:0]    tmp_dcache_wstrb_3;
  reg                 rd_wen_reg;
  reg        [3:0]    rd_rob_ptr_reg;
  wire                src_stream_fire;
  reg        [31:0]   tmp_dst_stream_payload_pc;
  reg        [31:0]   tmp_dst_stream_payload_instruction;
  wire                src_stream_fire_1;
  `ifndef SYNTHESIS
  reg [31:0] src_ports_payload_micro_op_lsu_ctrl_op_string;
  reg [31:0] tmp_src_stream_payload_micro_op_lsu_ctrl_op_string;
  reg [31:0] src_stream_payload_micro_op_lsu_ctrl_op_string;
  reg [31:0] lsu_ctrl_op_reg_string;
  `endif

  function [55:0] zz_tmp_dcache_rdata_lbu(input dummy);
    begin
      zz_tmp_dcache_rdata_lbu[55] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[54] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[53] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[52] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[51] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[50] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[49] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[48] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[47] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[46] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[45] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[44] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[43] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[42] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[41] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[40] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[39] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[38] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[37] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[36] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[35] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[34] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[33] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[32] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[31] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[30] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[29] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[28] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[27] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[26] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[25] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[24] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[23] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[22] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[21] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[20] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[19] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[18] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[17] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[16] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[15] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[14] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[13] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[12] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[11] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[10] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[9] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[8] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[7] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[6] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[5] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[4] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[3] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[2] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[1] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lbu[0] = 1'b0; // @ Literal.scala l87
    end
  endfunction
  wire [55:0] tmp_1;
  function [47:0] zz_tmp_dcache_rdata_lhu(input dummy);
    begin
      zz_tmp_dcache_rdata_lhu[47] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[46] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[45] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[44] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[43] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[42] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[41] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[40] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[39] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[38] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[37] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[36] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[35] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[34] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[33] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[32] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[31] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[30] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[29] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[28] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[27] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[26] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[25] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[24] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[23] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[22] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[21] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[20] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[19] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[18] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[17] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[16] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[15] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[14] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[13] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[12] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[11] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[10] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[9] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[8] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[7] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[6] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[5] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[4] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[3] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[2] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[1] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lhu[0] = 1'b0; // @ Literal.scala l87
    end
  endfunction
  wire [47:0] tmp_2;
  function [31:0] zz_tmp_dcache_rdata_lwu(input dummy);
    begin
      zz_tmp_dcache_rdata_lwu[31] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[30] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[29] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[28] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[27] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[26] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[25] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[24] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[23] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[22] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[21] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[20] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[19] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[18] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[17] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[16] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[15] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[14] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[13] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[12] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[11] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[10] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[9] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[8] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[7] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[6] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[5] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[4] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[3] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[2] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[1] = 1'b0; // @ Literal.scala l87
      zz_tmp_dcache_rdata_lwu[0] = 1'b0; // @ Literal.scala l87
    end
  endfunction
  wire [31:0] tmp_3;
  function [7:0] zz_tmp_dcache_wstrb(input dummy);
    begin
      zz_tmp_dcache_wstrb = 8'h0; // @ BitVector.scala l492
      zz_tmp_dcache_wstrb[0] = 1'b1; // @ Literal.scala l83
    end
  endfunction
  wire [7:0] tmp_4;
  function [7:0] zz_tmp_dcache_wstrb_1(input dummy);
    begin
      zz_tmp_dcache_wstrb_1 = 8'h0; // @ BitVector.scala l492
      zz_tmp_dcache_wstrb_1[1 : 0] = 2'b11; // @ Literal.scala l88
    end
  endfunction
  wire [7:0] tmp_5;
  function [7:0] zz_tmp_dcache_wstrb_2(input dummy);
    begin
      zz_tmp_dcache_wstrb_2 = 8'h0; // @ BitVector.scala l492
      zz_tmp_dcache_wstrb_2[3 : 0] = 4'b1111; // @ Literal.scala l88
    end
  endfunction
  wire [7:0] tmp_6;

  assign tmp_dcache_rdata = ({3'd0,lsu_addr_offset_reg} <<< 3);
  assign tmp_dcache_wdata = ({3'd0,lsu_addr_offset} <<< 3);
  assign tmp_dcache_wdata_1 = ({3'd0,lsu_addr_offset} <<< 3);
  assign tmp_dcache_wdata_2 = ({3'd0,lsu_addr_offset} <<< 3);
  assign tmp_dcache_wdata_3 = ({3'd0,lsu_addr_offset} <<< 3);
  `ifndef SYNTHESIS
  always @(*) begin
    case(src_ports_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : src_ports_payload_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : src_ports_payload_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : src_ports_payload_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : src_ports_payload_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : src_ports_payload_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : src_ports_payload_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : src_ports_payload_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : src_ports_payload_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : src_ports_payload_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : src_ports_payload_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : src_ports_payload_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : src_ports_payload_micro_op_lsu_ctrl_op_string = "SD  ";
      default : src_ports_payload_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_src_stream_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "SD  ";
      default : tmp_src_stream_payload_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(src_stream_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : src_stream_payload_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : src_stream_payload_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : src_stream_payload_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : src_stream_payload_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : src_stream_payload_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : src_stream_payload_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : src_stream_payload_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : src_stream_payload_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : src_stream_payload_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : src_stream_payload_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : src_stream_payload_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : src_stream_payload_micro_op_lsu_ctrl_op_string = "SD  ";
      default : src_stream_payload_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(lsu_ctrl_op_reg)
      LsuCtrlEnum_IDLE : lsu_ctrl_op_reg_string = "IDLE";
      LsuCtrlEnum_LB : lsu_ctrl_op_reg_string = "LB  ";
      LsuCtrlEnum_LBU : lsu_ctrl_op_reg_string = "LBU ";
      LsuCtrlEnum_LH : lsu_ctrl_op_reg_string = "LH  ";
      LsuCtrlEnum_LHU : lsu_ctrl_op_reg_string = "LHU ";
      LsuCtrlEnum_LW : lsu_ctrl_op_reg_string = "LW  ";
      LsuCtrlEnum_LWU : lsu_ctrl_op_reg_string = "LWU ";
      LsuCtrlEnum_LD : lsu_ctrl_op_reg_string = "LD  ";
      LsuCtrlEnum_SB : lsu_ctrl_op_reg_string = "SB  ";
      LsuCtrlEnum_SH : lsu_ctrl_op_reg_string = "SH  ";
      LsuCtrlEnum_SW : lsu_ctrl_op_reg_string = "SW  ";
      LsuCtrlEnum_SD : lsu_ctrl_op_reg_string = "SD  ";
      default : lsu_ctrl_op_reg_string = "????";
    endcase
  end
  `endif

  assign tmp_src_ports_ready = (! stall); // @ BaseType.scala l299
  assign src_ports_ready = (tmp_src_ports_ready_1 && tmp_src_ports_ready); // @ Stream.scala l427
  assign tmp_src_stream_payload_micro_op_lsu_ctrl_op = src_ports_payload_micro_op_lsu_ctrl_op; // @ Stream.scala l428
  always @(*) begin
    src_stream_valid = (src_ports_valid && tmp_src_ports_ready); // @ Stream.scala l294
    if(flush) begin
      src_stream_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    tmp_src_ports_ready_1 = src_stream_ready; // @ Stream.scala l295
    if(flush) begin
      tmp_src_ports_ready_1 = 1'b1; // @ Stream.scala l440
    end
  end

  assign src_stream_payload_rd_rob_ptr = src_ports_payload_rd_rob_ptr; // @ Stream.scala l296
  assign src_stream_payload_micro_op_rd_wen = src_ports_payload_micro_op_rd_wen; // @ Stream.scala l296
  assign src_stream_payload_micro_op_src2_is_imm = src_ports_payload_micro_op_src2_is_imm; // @ Stream.scala l296
  assign src_stream_payload_micro_op_lsu_ctrl_op = tmp_src_stream_payload_micro_op_lsu_ctrl_op; // @ Stream.scala l296
  assign src_stream_payload_micro_op_lsu_is_load = src_ports_payload_micro_op_lsu_is_load; // @ Stream.scala l296
  assign src_stream_payload_micro_op_lsu_is_store = src_ports_payload_micro_op_lsu_is_store; // @ Stream.scala l296
  assign src_stream_payload_src1_data = src_ports_payload_src1_data; // @ Stream.scala l296
  assign src_stream_payload_src2_data = src_ports_payload_src2_data; // @ Stream.scala l296
  assign src_stream_payload_imm = src_ports_payload_imm; // @ Stream.scala l296
  assign src_stream_payload_pc = src_ports_payload_pc; // @ Stream.scala l296
  assign src_stream_payload_instruction = src_ports_payload_instruction; // @ Stream.scala l296
  assign lsu_cen = (src_ports_payload_micro_op_lsu_is_load || src_ports_payload_micro_op_lsu_is_store); // @ BaseType.scala l305
  assign lsu_addr = (src_ports_payload_src1_data + src_ports_payload_imm); // @ BaseType.scala l299
  assign lsu_addr_offset = lsu_addr[2 : 0]; // @ BaseType.scala l299
  assign lsu_addr_is_timer = ((lsu_addr == 64'h000000000200bff8) || (lsu_addr == 64'h0000000002004000)); // @ BaseType.scala l305
  assign tmp_lsu_wdata_byte = src_ports_payload_src2_data[7]; // @ BaseType.scala l305
  always @(*) begin
    tmp_lsu_wdata_byte_1[55] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[54] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[53] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[52] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[51] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[50] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[49] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[48] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[47] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[46] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[45] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[44] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[43] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[42] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[41] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[40] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[39] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[38] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[37] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[36] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[35] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[34] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[33] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[32] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[31] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[30] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[29] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[28] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[27] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[26] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[25] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[24] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[23] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[22] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[21] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[20] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[19] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[18] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[17] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[16] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[15] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[14] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[13] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[12] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[11] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[10] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[9] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[8] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[7] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[6] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[5] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[4] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[3] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[2] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[1] = tmp_lsu_wdata_byte; // @ Literal.scala l87
    tmp_lsu_wdata_byte_1[0] = tmp_lsu_wdata_byte; // @ Literal.scala l87
  end

  assign lsu_wdata_byte = {tmp_lsu_wdata_byte_1,src_ports_payload_src2_data[7 : 0]}; // @ BaseType.scala l299
  assign tmp_lsu_wdata_half = src_ports_payload_src2_data[15]; // @ BaseType.scala l305
  always @(*) begin
    tmp_lsu_wdata_half_1[47] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[46] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[45] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[44] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[43] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[42] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[41] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[40] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[39] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[38] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[37] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[36] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[35] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[34] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[33] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[32] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[31] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[30] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[29] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[28] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[27] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[26] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[25] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[24] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[23] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[22] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[21] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[20] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[19] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[18] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[17] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[16] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[15] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[14] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[13] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[12] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[11] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[10] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[9] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[8] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[7] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[6] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[5] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[4] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[3] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[2] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[1] = tmp_lsu_wdata_half; // @ Literal.scala l87
    tmp_lsu_wdata_half_1[0] = tmp_lsu_wdata_half; // @ Literal.scala l87
  end

  assign lsu_wdata_half = {tmp_lsu_wdata_half_1,src_ports_payload_src2_data[15 : 0]}; // @ BaseType.scala l299
  assign tmp_lsu_wdata_word = src_ports_payload_src2_data[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_lsu_wdata_word_1[31] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[30] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[29] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[28] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[27] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[26] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[25] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[24] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[23] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[22] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[21] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[20] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[19] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[18] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[17] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[16] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[15] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[14] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[13] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[12] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[11] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[10] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[9] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[8] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[7] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[6] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[5] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[4] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[3] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[2] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[1] = tmp_lsu_wdata_word; // @ Literal.scala l87
    tmp_lsu_wdata_word_1[0] = tmp_lsu_wdata_word; // @ Literal.scala l87
  end

  assign lsu_wdata_word = {tmp_lsu_wdata_word_1,src_ports_payload_src2_data[31 : 0]}; // @ BaseType.scala l299
  assign dcache_cen = ((! lsu_addr_is_timer) && lsu_cen); // @ BaseType.scala l305
  assign dcache_addr = lsu_addr; // @ Data.scala l450
  assign src_ports_fire = (src_ports_valid && src_ports_ready); // @ BaseType.scala l305
  assign dcache_rdata = (dcache_ports_rsp_payload_data >>> tmp_dcache_rdata); // @ BaseType.scala l299
  assign tmp_dcache_rdata_lb = dcache_rdata[7]; // @ BaseType.scala l305
  always @(*) begin
    tmp_dcache_rdata_lb_1[55] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[54] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[53] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[52] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[51] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[50] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[49] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[48] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[47] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[46] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[45] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[44] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[43] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[42] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[41] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[40] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[39] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[38] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[37] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[36] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[35] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[34] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[33] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[32] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[31] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[30] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[29] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[28] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[27] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[26] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[25] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[24] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[23] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[22] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[21] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[20] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[19] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[18] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[17] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[16] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[15] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[14] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[13] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[12] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[11] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[10] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[9] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[8] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[7] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[6] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[5] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[4] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[3] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[2] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[1] = tmp_dcache_rdata_lb; // @ Literal.scala l87
    tmp_dcache_rdata_lb_1[0] = tmp_dcache_rdata_lb; // @ Literal.scala l87
  end

  assign dcache_rdata_lb = {tmp_dcache_rdata_lb_1,dcache_rdata[7 : 0]}; // @ BaseType.scala l299
  assign tmp_1 = zz_tmp_dcache_rdata_lbu(1'b0);
  always @(*) tmp_dcache_rdata_lbu = tmp_1;
  assign dcache_rdata_lbu = {tmp_dcache_rdata_lbu,dcache_rdata[7 : 0]}; // @ BaseType.scala l299
  assign tmp_dcache_rdata_lh = dcache_rdata[15]; // @ BaseType.scala l305
  always @(*) begin
    tmp_dcache_rdata_lh_1[47] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[46] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[45] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[44] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[43] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[42] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[41] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[40] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[39] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[38] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[37] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[36] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[35] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[34] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[33] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[32] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[31] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[30] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[29] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[28] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[27] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[26] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[25] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[24] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[23] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[22] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[21] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[20] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[19] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[18] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[17] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[16] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[15] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[14] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[13] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[12] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[11] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[10] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[9] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[8] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[7] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[6] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[5] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[4] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[3] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[2] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[1] = tmp_dcache_rdata_lh; // @ Literal.scala l87
    tmp_dcache_rdata_lh_1[0] = tmp_dcache_rdata_lh; // @ Literal.scala l87
  end

  assign dcache_rdata_lh = {tmp_dcache_rdata_lh_1,dcache_rdata[15 : 0]}; // @ BaseType.scala l299
  assign tmp_2 = zz_tmp_dcache_rdata_lhu(1'b0);
  always @(*) tmp_dcache_rdata_lhu = tmp_2;
  assign dcache_rdata_lhu = {tmp_dcache_rdata_lhu,dcache_rdata[15 : 0]}; // @ BaseType.scala l299
  assign tmp_dcache_rdata_lw = dcache_rdata[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_dcache_rdata_lw_1[31] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[30] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[29] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[28] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[27] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[26] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[25] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[24] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[23] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[22] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[21] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[20] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[19] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[18] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[17] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[16] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[15] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[14] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[13] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[12] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[11] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[10] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[9] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[8] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[7] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[6] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[5] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[4] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[3] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[2] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[1] = tmp_dcache_rdata_lw; // @ Literal.scala l87
    tmp_dcache_rdata_lw_1[0] = tmp_dcache_rdata_lw; // @ Literal.scala l87
  end

  assign dcache_rdata_lw = {tmp_dcache_rdata_lw_1,dcache_rdata[31 : 0]}; // @ BaseType.scala l299
  assign tmp_3 = zz_tmp_dcache_rdata_lwu(1'b0);
  always @(*) tmp_dcache_rdata_lwu = tmp_3;
  assign dcache_rdata_lwu = {tmp_dcache_rdata_lwu,dcache_rdata[31 : 0]}; // @ BaseType.scala l299
  assign src_ports_fire_1 = (src_ports_valid && src_ports_ready); // @ BaseType.scala l305
  assign dcache_cmd_stream_valid = (dcache_cen && src_stream_valid); // @ LSU.scala l62
  assign dcache_cmd_stream_payload_addr = dcache_addr[31:0]; // @ LSU.scala l63
  assign dcache_cmd_stream_payload_wen = src_ports_payload_micro_op_lsu_is_store; // @ LSU.scala l64
  assign dcache_cmd_stream_payload_wdata = dcache_wdata; // @ LSU.scala l65
  assign dcache_cmd_stream_payload_wstrb = dcache_wstrb; // @ LSU.scala l66
  assign dcache_cmd_stream_payload_size = dcache_size; // @ LSU.scala l67
  assign dcache_ports_cmd_valid = dcache_cmd_stream_valid; // @ Stream.scala l294
  assign dcache_cmd_stream_ready = dcache_ports_cmd_ready; // @ Stream.scala l295
  assign dcache_ports_cmd_payload_addr = dcache_cmd_stream_payload_addr; // @ Stream.scala l296
  assign dcache_ports_cmd_payload_wen = dcache_cmd_stream_payload_wen; // @ Stream.scala l296
  assign dcache_ports_cmd_payload_wdata = dcache_cmd_stream_payload_wdata; // @ Stream.scala l296
  assign dcache_ports_cmd_payload_wstrb = dcache_cmd_stream_payload_wstrb; // @ Stream.scala l296
  assign dcache_ports_cmd_payload_size = dcache_cmd_stream_payload_size; // @ Stream.scala l296
  always @(*) begin
    case(src_ports_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_SB : begin
        dcache_wdata = (lsu_wdata_byte <<< tmp_dcache_wdata); // @ LSU.scala l72
      end
      LsuCtrlEnum_SH : begin
        dcache_wdata = (lsu_wdata_half <<< tmp_dcache_wdata_1); // @ LSU.scala l76
      end
      LsuCtrlEnum_SW : begin
        dcache_wdata = (lsu_wdata_word <<< tmp_dcache_wdata_2); // @ LSU.scala l80
      end
      LsuCtrlEnum_SD : begin
        dcache_wdata = (src_ports_payload_src2_data <<< tmp_dcache_wdata_3); // @ LSU.scala l84
      end
      default : begin
        dcache_wdata = 64'h0; // @ LSU.scala l88
      end
    endcase
  end

  assign tmp_4 = zz_tmp_dcache_wstrb(1'b0);
  always @(*) tmp_dcache_wstrb = tmp_4;
  always @(*) begin
    case(src_ports_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_SB : begin
        dcache_wstrb = (tmp_dcache_wstrb <<< lsu_addr_offset); // @ LSU.scala l73
      end
      LsuCtrlEnum_SH : begin
        dcache_wstrb = (tmp_dcache_wstrb_1 <<< lsu_addr_offset); // @ LSU.scala l77
      end
      LsuCtrlEnum_SW : begin
        dcache_wstrb = (tmp_dcache_wstrb_2 <<< lsu_addr_offset); // @ LSU.scala l81
      end
      LsuCtrlEnum_SD : begin
        dcache_wstrb = (tmp_dcache_wstrb_3 <<< lsu_addr_offset); // @ LSU.scala l85
      end
      default : begin
        dcache_wstrb = 8'h0; // @ LSU.scala l89
      end
    endcase
  end

  assign tmp_5 = zz_tmp_dcache_wstrb_1(1'b0);
  always @(*) tmp_dcache_wstrb_1 = tmp_5;
  assign tmp_6 = zz_tmp_dcache_wstrb_2(1'b0);
  always @(*) tmp_dcache_wstrb_2 = tmp_6;
  assign tmp_dcache_wstrb_3[7 : 0] = 8'hff; // @ Literal.scala l88
  always @(*) begin
    case(lsu_ctrl_op_reg)
      LsuCtrlEnum_LB : begin
        lsu_rdata = dcache_rdata_lb; // @ LSU.scala l97
      end
      LsuCtrlEnum_LBU : begin
        lsu_rdata = dcache_rdata_lbu; // @ LSU.scala l101
      end
      LsuCtrlEnum_LH : begin
        lsu_rdata = dcache_rdata_lh; // @ LSU.scala l105
      end
      LsuCtrlEnum_LHU : begin
        lsu_rdata = dcache_rdata_lhu; // @ LSU.scala l109
      end
      LsuCtrlEnum_LW : begin
        lsu_rdata = dcache_rdata_lw; // @ LSU.scala l113
      end
      LsuCtrlEnum_LWU : begin
        lsu_rdata = dcache_rdata_lwu; // @ LSU.scala l117
      end
      LsuCtrlEnum_LD : begin
        lsu_rdata = dcache_rdata; // @ LSU.scala l121
      end
      default : begin
        lsu_rdata = 64'h0; // @ LSU.scala l125
      end
    endcase
  end

  always @(*) begin
    case(lsu_ctrl_op_reg)
      LsuCtrlEnum_LB : begin
        dcache_size = 3'b000; // @ LSU.scala l98
      end
      LsuCtrlEnum_LBU : begin
        dcache_size = 3'b000; // @ LSU.scala l102
      end
      LsuCtrlEnum_LH : begin
        dcache_size = 3'b001; // @ LSU.scala l106
      end
      LsuCtrlEnum_LHU : begin
        dcache_size = 3'b001; // @ LSU.scala l110
      end
      LsuCtrlEnum_LW : begin
        dcache_size = 3'b010; // @ LSU.scala l114
      end
      LsuCtrlEnum_LWU : begin
        dcache_size = 3'b010; // @ LSU.scala l118
      end
      LsuCtrlEnum_LD : begin
        dcache_size = 3'b011; // @ LSU.scala l122
      end
      default : begin
        dcache_size = 3'b000; // @ LSU.scala l126
      end
    endcase
  end

  assign src_stream_fire = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_ready = dcache_cmd_stream_ready; // @ LSU.scala l144
  assign dst_stream_valid = dcache_ports_rsp_valid; // @ LSU.scala l145
  assign dst_stream_payload_result = lsu_rdata; // @ LSU.scala l146
  assign dst_stream_payload_rd_wen = rd_wen_reg; // @ LSU.scala l147
  assign dst_stream_payload_rd_rob_ptr = rd_rob_ptr_reg; // @ LSU.scala l148
  assign src_stream_fire_1 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign dst_stream_payload_pc = tmp_dst_stream_payload_pc; // @ LSU.scala l160
  assign dst_stream_payload_instruction = tmp_dst_stream_payload_instruction; // @ LSU.scala l161
  assign dst_ports_valid = dst_stream_valid; // @ Stream.scala l294
  assign dst_stream_ready = dst_ports_ready; // @ Stream.scala l295
  assign dst_ports_payload_result = dst_stream_payload_result; // @ Stream.scala l296
  assign dst_ports_payload_rd_wen = dst_stream_payload_rd_wen; // @ Stream.scala l296
  assign dst_ports_payload_rd_rob_ptr = dst_stream_payload_rd_rob_ptr; // @ Stream.scala l296
  assign dst_ports_payload_pc = dst_stream_payload_pc; // @ Stream.scala l296
  assign dst_ports_payload_instruction = dst_stream_payload_instruction; // @ Stream.scala l296
  assign timer_cen = (lsu_addr_is_timer && lsu_cen); // @ LSU.scala l166
  assign timer_wen = src_ports_payload_micro_op_lsu_is_store; // @ LSU.scala l167
  assign timer_addr = dcache_addr[31:0]; // @ LSU.scala l168
  assign timer_wdata = dcache_wdata; // @ LSU.scala l169
  always @(posedge io_axiClk) begin
    if(src_ports_fire) begin
      lsu_addr_offset_reg <= lsu_addr_offset; // @ LSU.scala l50
    end
    if(src_ports_fire_1) begin
      lsu_ctrl_op_reg <= src_ports_payload_micro_op_lsu_ctrl_op; // @ LSU.scala l59
    end
  end

  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      rd_wen_reg <= 1'b0; // @ Data.scala l400
      rd_rob_ptr_reg <= 4'b0000; // @ Data.scala l400
      tmp_dst_stream_payload_pc <= 32'h0; // @ Data.scala l400
      tmp_dst_stream_payload_instruction <= 32'h0; // @ Data.scala l400
    end else begin
      if(flush) begin
        rd_wen_reg <= 1'b0; // @ LSU.scala l136
        rd_rob_ptr_reg <= 4'b0000; // @ LSU.scala l137
      end else begin
        if(src_stream_fire) begin
          rd_wen_reg <= src_ports_payload_micro_op_rd_wen; // @ LSU.scala l140
          rd_rob_ptr_reg <= src_ports_payload_rd_rob_ptr; // @ LSU.scala l141
        end
      end
      if(flush) begin
        tmp_dst_stream_payload_pc <= 32'h0; // @ LSU.scala l153
        tmp_dst_stream_payload_instruction <= 32'h0; // @ LSU.scala l154
      end else begin
        if(src_stream_fire_1) begin
          tmp_dst_stream_payload_pc <= src_ports_payload_pc; // @ LSU.scala l157
          tmp_dst_stream_payload_instruction <= src_ports_payload_instruction; // @ LSU.scala l158
        end
      end
    end
  end


endmodule

module ALU (
  input               flush,
  input               stall,
  input               src_ports_valid,
  output              src_ports_ready,
  input      [3:0]    src_ports_payload_rd_rob_ptr,
  input               src_ports_payload_micro_op_rd_wen,
  input               src_ports_payload_micro_op_src2_is_imm,
  input      [4:0]    src_ports_payload_micro_op_alu_ctrl_op,
  input               src_ports_payload_micro_op_alu_is_word,
  input      [63:0]   src_ports_payload_src1_data,
  input      [63:0]   src_ports_payload_src2_data,
  input      [31:0]   src_ports_payload_pc,
  input      [31:0]   src_ports_payload_instruction,
  output              dst_ports_valid,
  input               dst_ports_ready,
  output     [63:0]   dst_ports_payload_result,
  output              dst_ports_payload_rd_wen,
  output     [3:0]    dst_ports_payload_rd_rob_ptr,
  output     [31:0]   dst_ports_payload_pc,
  output     [31:0]   dst_ports_payload_instruction,
  input               io_axiClk,
  input               cpu_rst
);
  localparam AluCtrlEnum_IDLE = 5'd0;
  localparam AluCtrlEnum_ADD = 5'd1;
  localparam AluCtrlEnum_SUB = 5'd2;
  localparam AluCtrlEnum_SLT = 5'd3;
  localparam AluCtrlEnum_SLTU = 5'd4;
  localparam AluCtrlEnum_XOR_1 = 5'd5;
  localparam AluCtrlEnum_SLL_1 = 5'd6;
  localparam AluCtrlEnum_SRL_1 = 5'd7;
  localparam AluCtrlEnum_SRA_1 = 5'd8;
  localparam AluCtrlEnum_AND_1 = 5'd9;
  localparam AluCtrlEnum_OR_1 = 5'd10;
  localparam AluCtrlEnum_LUI = 5'd11;
  localparam AluCtrlEnum_MUL = 5'd12;
  localparam AluCtrlEnum_MULH = 5'd13;
  localparam AluCtrlEnum_MULHSU = 5'd14;
  localparam AluCtrlEnum_MULHU = 5'd15;
  localparam AluCtrlEnum_DIV = 5'd16;
  localparam AluCtrlEnum_DIVU = 5'd17;
  localparam AluCtrlEnum_REM_1 = 5'd18;
  localparam AluCtrlEnum_REMU = 5'd19;
  localparam AluCtrlEnum_MULW = 5'd20;
  localparam AluCtrlEnum_DIVW = 5'd21;
  localparam AluCtrlEnum_DIVUW = 5'd22;
  localparam AluCtrlEnum_REMW = 5'd23;
  localparam AluCtrlEnum_REMUW = 5'd24;

  wire                div_io_op_is_word;
  wire                div_io_op_is_signed;
  wire       [63:0]   div_io_dividend;
  wire       [63:0]   div_io_divisor;
  wire                div_io_busy;
  wire                div_io_done_valid;
  wire       [63:0]   div_io_quotient;
  wire       [63:0]   div_io_remainder;
  wire       [63:0]   tmp_add_result;
  wire       [63:0]   tmp_add_result_1;
  wire       [63:0]   tmp_sub_result;
  wire       [63:0]   tmp_sub_result_1;
  wire       [63:0]   tmp_slt_result;
  wire       [63:0]   tmp_slt_result_1;
  wire       [63:0]   tmp_sra_result;
  wire       [31:0]   tmp_addw_result_2;
  wire       [31:0]   tmp_subw_result_2;
  wire       [31:0]   tmp_sraw_temp;
  wire       [64:0]   tmp_mul_src2;
  wire       [64:0]   tmp_mul_src2_1;
  wire       [63:0]   tmp_mul_src2_2;
  wire       [63:0]   tmp_mul_temp_s;
  wire       [63:0]   tmp_mul_result_5;
  wire       [63:0]   tmp_mul_result_6;
  wire       [0:0]    tmp_mul_result_7;
  wire       [60:0]   tmp_mul_result_8;
  wire       [0:0]    tmp_mul_result_9;
  wire       [56:0]   tmp_mul_result_10;
  wire       [0:0]    tmp_mul_result_11;
  wire       [52:0]   tmp_mul_result_12;
  wire       [0:0]    tmp_mul_result_13;
  wire       [48:0]   tmp_mul_result_14;
  wire       [0:0]    tmp_mul_result_15;
  wire       [44:0]   tmp_mul_result_16;
  wire       [0:0]    tmp_mul_result_17;
  wire       [40:0]   tmp_mul_result_18;
  wire       [0:0]    tmp_mul_result_19;
  wire       [36:0]   tmp_mul_result_20;
  wire       [0:0]    tmp_mul_result_21;
  wire       [32:0]   tmp_mul_result_22;
  wire       [0:0]    tmp_mul_result_23;
  wire       [28:0]   tmp_mul_result_24;
  wire       [0:0]    tmp_mul_result_25;
  wire       [24:0]   tmp_mul_result_26;
  wire       [0:0]    tmp_mul_result_27;
  wire       [20:0]   tmp_mul_result_28;
  wire       [0:0]    tmp_mul_result_29;
  wire       [16:0]   tmp_mul_result_30;
  wire       [0:0]    tmp_mul_result_31;
  wire       [12:0]   tmp_mul_result_32;
  wire       [0:0]    tmp_mul_result_33;
  wire       [8:0]    tmp_mul_result_34;
  wire       [0:0]    tmp_mul_result_35;
  wire       [4:0]    tmp_mul_result_36;
  wire       [63:0]   tmp_mul_result_37;
  wire       [63:0]   tmp_mul_result_38;
  wire       [0:0]    tmp_mul_result_39;
  wire       [60:0]   tmp_mul_result_40;
  wire       [0:0]    tmp_mul_result_41;
  wire       [56:0]   tmp_mul_result_42;
  wire       [0:0]    tmp_mul_result_43;
  wire       [52:0]   tmp_mul_result_44;
  wire       [0:0]    tmp_mul_result_45;
  wire       [48:0]   tmp_mul_result_46;
  wire       [0:0]    tmp_mul_result_47;
  wire       [44:0]   tmp_mul_result_48;
  wire       [0:0]    tmp_mul_result_49;
  wire       [40:0]   tmp_mul_result_50;
  wire       [0:0]    tmp_mul_result_51;
  wire       [36:0]   tmp_mul_result_52;
  wire       [0:0]    tmp_mul_result_53;
  wire       [32:0]   tmp_mul_result_54;
  wire       [0:0]    tmp_mul_result_55;
  wire       [28:0]   tmp_mul_result_56;
  wire       [0:0]    tmp_mul_result_57;
  wire       [24:0]   tmp_mul_result_58;
  wire       [0:0]    tmp_mul_result_59;
  wire       [20:0]   tmp_mul_result_60;
  wire       [0:0]    tmp_mul_result_61;
  wire       [16:0]   tmp_mul_result_62;
  wire       [0:0]    tmp_mul_result_63;
  wire       [12:0]   tmp_mul_result_64;
  wire       [0:0]    tmp_mul_result_65;
  wire       [8:0]    tmp_mul_result_66;
  wire       [0:0]    tmp_mul_result_67;
  wire       [4:0]    tmp_mul_result_68;
  wire       [0:0]    tmp_mul_result_69;
  wire       [62:0]   tmp_mul_result_70;
  wire       [0:0]    tmp_mul_result_71;
  wire       [59:0]   tmp_mul_result_72;
  wire       [0:0]    tmp_mul_result_73;
  wire       [55:0]   tmp_mul_result_74;
  wire       [0:0]    tmp_mul_result_75;
  wire       [51:0]   tmp_mul_result_76;
  wire       [0:0]    tmp_mul_result_77;
  wire       [47:0]   tmp_mul_result_78;
  wire       [0:0]    tmp_mul_result_79;
  wire       [43:0]   tmp_mul_result_80;
  wire       [0:0]    tmp_mul_result_81;
  wire       [39:0]   tmp_mul_result_82;
  wire       [0:0]    tmp_mul_result_83;
  wire       [35:0]   tmp_mul_result_84;
  wire       [0:0]    tmp_mul_result_85;
  wire       [31:0]   tmp_mul_result_86;
  wire       [0:0]    tmp_mul_result_87;
  wire       [27:0]   tmp_mul_result_88;
  wire       [0:0]    tmp_mul_result_89;
  wire       [23:0]   tmp_mul_result_90;
  wire       [0:0]    tmp_mul_result_91;
  wire       [19:0]   tmp_mul_result_92;
  wire       [0:0]    tmp_mul_result_93;
  wire       [15:0]   tmp_mul_result_94;
  wire       [0:0]    tmp_mul_result_95;
  wire       [11:0]   tmp_mul_result_96;
  wire       [0:0]    tmp_mul_result_97;
  wire       [7:0]    tmp_mul_result_98;
  wire       [0:0]    tmp_mul_result_99;
  wire       [3:0]    tmp_mul_result_100;
  wire       [0:0]    tmp_mul_result_101;
  wire       [61:0]   tmp_mul_result_102;
  wire       [0:0]    tmp_mul_result_103;
  wire       [58:0]   tmp_mul_result_104;
  wire       [0:0]    tmp_mul_result_105;
  wire       [54:0]   tmp_mul_result_106;
  wire       [0:0]    tmp_mul_result_107;
  wire       [50:0]   tmp_mul_result_108;
  wire       [0:0]    tmp_mul_result_109;
  wire       [46:0]   tmp_mul_result_110;
  wire       [0:0]    tmp_mul_result_111;
  wire       [42:0]   tmp_mul_result_112;
  wire       [0:0]    tmp_mul_result_113;
  wire       [38:0]   tmp_mul_result_114;
  wire       [0:0]    tmp_mul_result_115;
  wire       [34:0]   tmp_mul_result_116;
  wire       [0:0]    tmp_mul_result_117;
  wire       [30:0]   tmp_mul_result_118;
  wire       [0:0]    tmp_mul_result_119;
  wire       [26:0]   tmp_mul_result_120;
  wire       [0:0]    tmp_mul_result_121;
  wire       [22:0]   tmp_mul_result_122;
  wire       [0:0]    tmp_mul_result_123;
  wire       [18:0]   tmp_mul_result_124;
  wire       [0:0]    tmp_mul_result_125;
  wire       [14:0]   tmp_mul_result_126;
  wire       [0:0]    tmp_mul_result_127;
  wire       [10:0]   tmp_mul_result_128;
  wire       [0:0]    tmp_mul_result_129;
  wire       [6:0]    tmp_mul_result_130;
  wire       [0:0]    tmp_mul_result_131;
  wire       [2:0]    tmp_mul_result_132;
  wire       [0:0]    tmp_mul_result_133;
  wire       [60:0]   tmp_mul_result_134;
  wire       [0:0]    tmp_mul_result_135;
  wire       [57:0]   tmp_mul_result_136;
  wire       [0:0]    tmp_mul_result_137;
  wire       [53:0]   tmp_mul_result_138;
  wire       [0:0]    tmp_mul_result_139;
  wire       [49:0]   tmp_mul_result_140;
  wire       [0:0]    tmp_mul_result_141;
  wire       [45:0]   tmp_mul_result_142;
  wire       [0:0]    tmp_mul_result_143;
  wire       [41:0]   tmp_mul_result_144;
  wire       [0:0]    tmp_mul_result_145;
  wire       [37:0]   tmp_mul_result_146;
  wire       [0:0]    tmp_mul_result_147;
  wire       [33:0]   tmp_mul_result_148;
  wire       [0:0]    tmp_mul_result_149;
  wire       [29:0]   tmp_mul_result_150;
  wire       [0:0]    tmp_mul_result_151;
  wire       [25:0]   tmp_mul_result_152;
  wire       [0:0]    tmp_mul_result_153;
  wire       [21:0]   tmp_mul_result_154;
  wire       [0:0]    tmp_mul_result_155;
  wire       [17:0]   tmp_mul_result_156;
  wire       [0:0]    tmp_mul_result_157;
  wire       [13:0]   tmp_mul_result_158;
  wire       [0:0]    tmp_mul_result_159;
  wire       [9:0]    tmp_mul_result_160;
  wire       [0:0]    tmp_mul_result_161;
  wire       [5:0]    tmp_mul_result_162;
  wire       [0:0]    tmp_mul_result_163;
  wire       [1:0]    tmp_mul_result_164;
  wire       [31:0]   src1_word;
  wire       [31:0]   src2_word;
  wire       [5:0]    shift_bits;
  wire       [63:0]   add_result;
  wire       [63:0]   sub_result;
  wire                slt_result;
  wire                sltu_result;
  wire       [63:0]   xor_result;
  wire       [63:0]   sll_result;
  wire       [63:0]   srl_result;
  wire       [63:0]   sra_result;
  wire       [63:0]   and_result;
  wire       [63:0]   or_result;
  wire                tmp_addw_result;
  reg        [31:0]   tmp_addw_result_1;
  wire       [63:0]   addw_result;
  wire                tmp_subw_result;
  reg        [31:0]   tmp_subw_result_1;
  wire       [63:0]   subw_result;
  wire       [31:0]   sllw_temp;
  wire                tmp_sllw_result;
  reg        [31:0]   tmp_sllw_result_1;
  wire       [63:0]   sllw_result;
  wire       [31:0]   srlw_temp;
  wire                tmp_srlw_result;
  reg        [31:0]   tmp_srlw_result_1;
  wire       [63:0]   srlw_result;
  wire       [31:0]   sraw_temp;
  wire                tmp_sraw_result;
  reg        [31:0]   tmp_sraw_result_1;
  wire       [63:0]   sraw_result;
  reg        [63:0]   alu_result;
  wire                mul_type_mul;
  wire                mul_type_mulh;
  wire                mul_type_mulhsu;
  wire                mul_type_mulhu;
  wire                mul_type_mulw;
  wire                alu_is_mul;
  wire                alu_is_quo;
  wire                alu_is_rem;
  wire                alu_is_div;
  wire                tmp_src_ports_ready;
  reg                 tmp_src_ports_ready_1;
  wire       [4:0]    tmp_src_stream_payload_micro_op_alu_ctrl_op;
  reg                 src_stream_valid;
  wire                src_stream_ready;
  wire       [3:0]    src_stream_payload_rd_rob_ptr;
  wire                src_stream_payload_micro_op_rd_wen;
  wire                src_stream_payload_micro_op_src2_is_imm;
  wire       [4:0]    src_stream_payload_micro_op_alu_ctrl_op;
  wire                src_stream_payload_micro_op_alu_is_word;
  wire       [63:0]   src_stream_payload_src1_data;
  wire       [63:0]   src_stream_payload_src2_data;
  wire       [31:0]   src_stream_payload_pc;
  wire       [31:0]   src_stream_payload_instruction;
  wire                dst_stream_valid;
  reg                 dst_stream_ready;
  wire       [63:0]   dst_stream_payload_result;
  wire                dst_stream_payload_rd_wen;
  wire       [3:0]    dst_stream_payload_rd_rob_ptr;
  wire       [31:0]   dst_stream_payload_pc;
  wire       [31:0]   dst_stream_payload_instruction;
  wire       [62:0]   tmp_alu_result;
  wire       [62:0]   tmp_alu_result_1;
  wire                mul_src1_is_u;
  wire                mul_src2_is_u;
  wire       [64:0]   mulhsu_src2;
  wire       [64:0]   mul_src2;
  wire       [127:0]  mul_temp_u;
  wire       [128:0]  mul_temp_s;
  wire       [63:0]   mul_temp_u_high;
  wire       [63:0]   mul_temp_u_low;
  wire       [63:0]   mul_temp_s_high;
  wire       [63:0]   mul_temp_s_low;
  wire                tmp_mulw_result;
  reg        [31:0]   tmp_mulw_result_1;
  wire       [63:0]   mulw_result;
  wire       [4:0]    mul_sel;
  wire       [319:0]  mul_data;
  wire                tmp_mul_result;
  wire                tmp_mul_result_1;
  wire                tmp_mul_result_2;
  wire                tmp_mul_result_3;
  wire                tmp_mul_result_4;
  wire       [63:0]   mul_result;
  wire                src_stream_fire;
  wire                div_start;
  wire                div_op_is_signed;
  wire                src_stream_fire_1;
  reg                 div_op_is_word_reg;
  wire                src_stream_fire_2;
  reg                 div_op_is_signed_reg;
  wire                src_stream_fire_3;
  reg        [63:0]   div_src1_reg;
  wire                src_stream_fire_4;
  reg        [63:0]   div_src2_reg;
  wire                src_stream_fire_5;
  reg                 rd_wen_reg;
  wire                src_stream_fire_6;
  reg        [3:0]    rd_rob_ptr_reg;
  wire                src_stream_fire_7;
  reg                 alu_is_quo_reg;
  wire                src_stream_fire_8;
  reg                 alu_is_rem_reg;
  wire                dst_stream_m2sPipe_valid;
  wire                dst_stream_m2sPipe_ready;
  wire       [63:0]   dst_stream_m2sPipe_payload_result;
  wire                dst_stream_m2sPipe_payload_rd_wen;
  wire       [3:0]    dst_stream_m2sPipe_payload_rd_rob_ptr;
  wire       [31:0]   dst_stream_m2sPipe_payload_pc;
  wire       [31:0]   dst_stream_m2sPipe_payload_instruction;
  reg                 dst_stream_rValid;
  reg        [63:0]   dst_stream_rData_result;
  reg                 dst_stream_rData_rd_wen;
  reg        [3:0]    dst_stream_rData_rd_rob_ptr;
  reg        [31:0]   dst_stream_rData_pc;
  reg        [31:0]   dst_stream_rData_instruction;
  `ifndef SYNTHESIS
  reg [47:0] src_ports_payload_micro_op_alu_ctrl_op_string;
  reg [47:0] tmp_src_stream_payload_micro_op_alu_ctrl_op_string;
  reg [47:0] src_stream_payload_micro_op_alu_ctrl_op_string;
  `endif


  assign tmp_add_result = src_ports_payload_src1_data;
  assign tmp_add_result_1 = src_ports_payload_src2_data;
  assign tmp_sub_result = src_ports_payload_src1_data;
  assign tmp_sub_result_1 = src_ports_payload_src2_data;
  assign tmp_slt_result = src_ports_payload_src1_data;
  assign tmp_slt_result_1 = src_ports_payload_src2_data;
  assign tmp_sra_result = src_ports_payload_src1_data;
  assign tmp_addw_result_2 = add_result[31 : 0];
  assign tmp_subw_result_2 = sub_result[31 : 0];
  assign tmp_sraw_temp = src1_word;
  assign tmp_mul_src2 = mulhsu_src2;
  assign tmp_mul_src2_2 = src_ports_payload_src2_data;
  assign tmp_mul_src2_1 = {{1{tmp_mul_src2_2[63]}}, tmp_mul_src2_2};
  assign tmp_mul_temp_s = src_ports_payload_src1_data;
  assign tmp_mul_result_5 = mul_data[63 : 0];
  assign tmp_mul_result_6 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result_7,tmp_mul_result_8}}};
  assign tmp_mul_result_37 = mul_data[127 : 64];
  assign tmp_mul_result_38 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_39,tmp_mul_result_40}}};
  assign tmp_mul_result_69 = tmp_mul_result_2;
  assign tmp_mul_result_70 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_71,tmp_mul_result_72}}};
  assign tmp_mul_result_101 = tmp_mul_result_3;
  assign tmp_mul_result_102 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_103,tmp_mul_result_104}}};
  assign tmp_mul_result_133 = tmp_mul_result_4;
  assign tmp_mul_result_134 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_135,tmp_mul_result_136}}};
  assign tmp_mul_result_7 = tmp_mul_result;
  assign tmp_mul_result_8 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_9,tmp_mul_result_10}}}};
  assign tmp_mul_result_39 = tmp_mul_result_1;
  assign tmp_mul_result_40 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_41,tmp_mul_result_42}}}};
  assign tmp_mul_result_71 = tmp_mul_result_2;
  assign tmp_mul_result_72 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_73,tmp_mul_result_74}}}};
  assign tmp_mul_result_103 = tmp_mul_result_3;
  assign tmp_mul_result_104 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_105,tmp_mul_result_106}}}};
  assign tmp_mul_result_135 = tmp_mul_result_4;
  assign tmp_mul_result_136 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_137,tmp_mul_result_138}}}};
  assign tmp_mul_result_9 = tmp_mul_result;
  assign tmp_mul_result_10 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_11,tmp_mul_result_12}}}};
  assign tmp_mul_result_41 = tmp_mul_result_1;
  assign tmp_mul_result_42 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_43,tmp_mul_result_44}}}};
  assign tmp_mul_result_73 = tmp_mul_result_2;
  assign tmp_mul_result_74 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_75,tmp_mul_result_76}}}};
  assign tmp_mul_result_105 = tmp_mul_result_3;
  assign tmp_mul_result_106 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_107,tmp_mul_result_108}}}};
  assign tmp_mul_result_137 = tmp_mul_result_4;
  assign tmp_mul_result_138 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_139,tmp_mul_result_140}}}};
  assign tmp_mul_result_11 = tmp_mul_result;
  assign tmp_mul_result_12 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_13,tmp_mul_result_14}}}};
  assign tmp_mul_result_43 = tmp_mul_result_1;
  assign tmp_mul_result_44 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_45,tmp_mul_result_46}}}};
  assign tmp_mul_result_75 = tmp_mul_result_2;
  assign tmp_mul_result_76 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_77,tmp_mul_result_78}}}};
  assign tmp_mul_result_107 = tmp_mul_result_3;
  assign tmp_mul_result_108 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_109,tmp_mul_result_110}}}};
  assign tmp_mul_result_139 = tmp_mul_result_4;
  assign tmp_mul_result_140 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_141,tmp_mul_result_142}}}};
  assign tmp_mul_result_13 = tmp_mul_result;
  assign tmp_mul_result_14 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_15,tmp_mul_result_16}}}};
  assign tmp_mul_result_45 = tmp_mul_result_1;
  assign tmp_mul_result_46 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_47,tmp_mul_result_48}}}};
  assign tmp_mul_result_77 = tmp_mul_result_2;
  assign tmp_mul_result_78 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_79,tmp_mul_result_80}}}};
  assign tmp_mul_result_109 = tmp_mul_result_3;
  assign tmp_mul_result_110 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_111,tmp_mul_result_112}}}};
  assign tmp_mul_result_141 = tmp_mul_result_4;
  assign tmp_mul_result_142 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_143,tmp_mul_result_144}}}};
  assign tmp_mul_result_15 = tmp_mul_result;
  assign tmp_mul_result_16 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_17,tmp_mul_result_18}}}};
  assign tmp_mul_result_47 = tmp_mul_result_1;
  assign tmp_mul_result_48 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_49,tmp_mul_result_50}}}};
  assign tmp_mul_result_79 = tmp_mul_result_2;
  assign tmp_mul_result_80 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_81,tmp_mul_result_82}}}};
  assign tmp_mul_result_111 = tmp_mul_result_3;
  assign tmp_mul_result_112 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_113,tmp_mul_result_114}}}};
  assign tmp_mul_result_143 = tmp_mul_result_4;
  assign tmp_mul_result_144 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_145,tmp_mul_result_146}}}};
  assign tmp_mul_result_17 = tmp_mul_result;
  assign tmp_mul_result_18 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_19,tmp_mul_result_20}}}};
  assign tmp_mul_result_49 = tmp_mul_result_1;
  assign tmp_mul_result_50 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_51,tmp_mul_result_52}}}};
  assign tmp_mul_result_81 = tmp_mul_result_2;
  assign tmp_mul_result_82 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_83,tmp_mul_result_84}}}};
  assign tmp_mul_result_113 = tmp_mul_result_3;
  assign tmp_mul_result_114 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_115,tmp_mul_result_116}}}};
  assign tmp_mul_result_145 = tmp_mul_result_4;
  assign tmp_mul_result_146 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_147,tmp_mul_result_148}}}};
  assign tmp_mul_result_19 = tmp_mul_result;
  assign tmp_mul_result_20 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_21,tmp_mul_result_22}}}};
  assign tmp_mul_result_51 = tmp_mul_result_1;
  assign tmp_mul_result_52 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_53,tmp_mul_result_54}}}};
  assign tmp_mul_result_83 = tmp_mul_result_2;
  assign tmp_mul_result_84 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_85,tmp_mul_result_86}}}};
  assign tmp_mul_result_115 = tmp_mul_result_3;
  assign tmp_mul_result_116 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_117,tmp_mul_result_118}}}};
  assign tmp_mul_result_147 = tmp_mul_result_4;
  assign tmp_mul_result_148 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_149,tmp_mul_result_150}}}};
  assign tmp_mul_result_21 = tmp_mul_result;
  assign tmp_mul_result_22 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_23,tmp_mul_result_24}}}};
  assign tmp_mul_result_53 = tmp_mul_result_1;
  assign tmp_mul_result_54 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_55,tmp_mul_result_56}}}};
  assign tmp_mul_result_85 = tmp_mul_result_2;
  assign tmp_mul_result_86 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_87,tmp_mul_result_88}}}};
  assign tmp_mul_result_117 = tmp_mul_result_3;
  assign tmp_mul_result_118 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_119,tmp_mul_result_120}}}};
  assign tmp_mul_result_149 = tmp_mul_result_4;
  assign tmp_mul_result_150 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_151,tmp_mul_result_152}}}};
  assign tmp_mul_result_23 = tmp_mul_result;
  assign tmp_mul_result_24 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_25,tmp_mul_result_26}}}};
  assign tmp_mul_result_55 = tmp_mul_result_1;
  assign tmp_mul_result_56 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_57,tmp_mul_result_58}}}};
  assign tmp_mul_result_87 = tmp_mul_result_2;
  assign tmp_mul_result_88 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_89,tmp_mul_result_90}}}};
  assign tmp_mul_result_119 = tmp_mul_result_3;
  assign tmp_mul_result_120 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_121,tmp_mul_result_122}}}};
  assign tmp_mul_result_151 = tmp_mul_result_4;
  assign tmp_mul_result_152 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_153,tmp_mul_result_154}}}};
  assign tmp_mul_result_25 = tmp_mul_result;
  assign tmp_mul_result_26 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_27,tmp_mul_result_28}}}};
  assign tmp_mul_result_57 = tmp_mul_result_1;
  assign tmp_mul_result_58 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_59,tmp_mul_result_60}}}};
  assign tmp_mul_result_89 = tmp_mul_result_2;
  assign tmp_mul_result_90 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_91,tmp_mul_result_92}}}};
  assign tmp_mul_result_121 = tmp_mul_result_3;
  assign tmp_mul_result_122 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_123,tmp_mul_result_124}}}};
  assign tmp_mul_result_153 = tmp_mul_result_4;
  assign tmp_mul_result_154 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_155,tmp_mul_result_156}}}};
  assign tmp_mul_result_27 = tmp_mul_result;
  assign tmp_mul_result_28 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_29,tmp_mul_result_30}}}};
  assign tmp_mul_result_59 = tmp_mul_result_1;
  assign tmp_mul_result_60 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_61,tmp_mul_result_62}}}};
  assign tmp_mul_result_91 = tmp_mul_result_2;
  assign tmp_mul_result_92 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_93,tmp_mul_result_94}}}};
  assign tmp_mul_result_123 = tmp_mul_result_3;
  assign tmp_mul_result_124 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_125,tmp_mul_result_126}}}};
  assign tmp_mul_result_155 = tmp_mul_result_4;
  assign tmp_mul_result_156 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_157,tmp_mul_result_158}}}};
  assign tmp_mul_result_29 = tmp_mul_result;
  assign tmp_mul_result_30 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_31,tmp_mul_result_32}}}};
  assign tmp_mul_result_61 = tmp_mul_result_1;
  assign tmp_mul_result_62 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_63,tmp_mul_result_64}}}};
  assign tmp_mul_result_93 = tmp_mul_result_2;
  assign tmp_mul_result_94 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_95,tmp_mul_result_96}}}};
  assign tmp_mul_result_125 = tmp_mul_result_3;
  assign tmp_mul_result_126 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_127,tmp_mul_result_128}}}};
  assign tmp_mul_result_157 = tmp_mul_result_4;
  assign tmp_mul_result_158 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_159,tmp_mul_result_160}}}};
  assign tmp_mul_result_31 = tmp_mul_result;
  assign tmp_mul_result_32 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_33,tmp_mul_result_34}}}};
  assign tmp_mul_result_63 = tmp_mul_result_1;
  assign tmp_mul_result_64 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_65,tmp_mul_result_66}}}};
  assign tmp_mul_result_95 = tmp_mul_result_2;
  assign tmp_mul_result_96 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_97,tmp_mul_result_98}}}};
  assign tmp_mul_result_127 = tmp_mul_result_3;
  assign tmp_mul_result_128 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_129,tmp_mul_result_130}}}};
  assign tmp_mul_result_159 = tmp_mul_result_4;
  assign tmp_mul_result_160 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_161,tmp_mul_result_162}}}};
  assign tmp_mul_result_33 = tmp_mul_result;
  assign tmp_mul_result_34 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result_35,tmp_mul_result_36}}}};
  assign tmp_mul_result_65 = tmp_mul_result_1;
  assign tmp_mul_result_66 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_67,tmp_mul_result_68}}}};
  assign tmp_mul_result_97 = tmp_mul_result_2;
  assign tmp_mul_result_98 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_99,tmp_mul_result_100}}}};
  assign tmp_mul_result_129 = tmp_mul_result_3;
  assign tmp_mul_result_130 = {tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_3,{tmp_mul_result_131,tmp_mul_result_132}}}};
  assign tmp_mul_result_161 = tmp_mul_result_4;
  assign tmp_mul_result_162 = {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_163,tmp_mul_result_164}}}};
  assign tmp_mul_result_35 = tmp_mul_result;
  assign tmp_mul_result_36 = {tmp_mul_result,{tmp_mul_result,{tmp_mul_result,{tmp_mul_result,tmp_mul_result}}}};
  assign tmp_mul_result_67 = tmp_mul_result_1;
  assign tmp_mul_result_68 = {tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,{tmp_mul_result_1,tmp_mul_result_1}}}};
  assign tmp_mul_result_99 = tmp_mul_result_2;
  assign tmp_mul_result_100 = {tmp_mul_result_2,{tmp_mul_result_2,{tmp_mul_result_2,tmp_mul_result_2}}};
  assign tmp_mul_result_131 = tmp_mul_result_3;
  assign tmp_mul_result_132 = {tmp_mul_result_3,{tmp_mul_result_3,tmp_mul_result_3}};
  assign tmp_mul_result_163 = tmp_mul_result_4;
  assign tmp_mul_result_164 = {tmp_mul_result_4,tmp_mul_result_4};
  Divider div (
    .io_flush        (flush                 ), //i
    .io_start        (div_start             ), //i
    .io_busy         (div_io_busy           ), //o
    .io_done_valid   (div_io_done_valid     ), //o
    .io_done_ready   (dst_stream_ready      ), //i
    .io_op_is_word   (div_io_op_is_word     ), //i
    .io_op_is_signed (div_io_op_is_signed   ), //i
    .io_dividend     (div_io_dividend[63:0] ), //i
    .io_divisor      (div_io_divisor[63:0]  ), //i
    .io_quotient     (div_io_quotient[63:0] ), //o
    .io_remainder    (div_io_remainder[63:0]), //o
    .io_axiClk       (io_axiClk             ), //i
    .cpu_rst         (cpu_rst               )  //i
  );
  `ifndef SYNTHESIS
  always @(*) begin
    case(src_ports_payload_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : src_ports_payload_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : src_ports_payload_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : src_ports_payload_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : src_ports_payload_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : src_ports_payload_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : src_ports_payload_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : src_ports_payload_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : src_ports_payload_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : src_ports_payload_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : src_ports_payload_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : src_ports_payload_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : src_ports_payload_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : src_ports_payload_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : src_ports_payload_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : src_ports_payload_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : src_ports_payload_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : src_ports_payload_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : src_ports_payload_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : src_ports_payload_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : src_ports_payload_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : src_ports_payload_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : src_ports_payload_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : src_ports_payload_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : src_ports_payload_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : src_ports_payload_micro_op_alu_ctrl_op_string = "REMUW ";
      default : src_ports_payload_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_src_stream_payload_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "REMUW ";
      default : tmp_src_stream_payload_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(src_stream_payload_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : src_stream_payload_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : src_stream_payload_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : src_stream_payload_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : src_stream_payload_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : src_stream_payload_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : src_stream_payload_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : src_stream_payload_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : src_stream_payload_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : src_stream_payload_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : src_stream_payload_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : src_stream_payload_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : src_stream_payload_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : src_stream_payload_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : src_stream_payload_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : src_stream_payload_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : src_stream_payload_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : src_stream_payload_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : src_stream_payload_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : src_stream_payload_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : src_stream_payload_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : src_stream_payload_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : src_stream_payload_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : src_stream_payload_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : src_stream_payload_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : src_stream_payload_micro_op_alu_ctrl_op_string = "REMUW ";
      default : src_stream_payload_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  `endif

  assign src1_word = src_ports_payload_src1_data[31 : 0]; // @ BaseType.scala l299
  assign src2_word = src_ports_payload_src2_data[31 : 0]; // @ BaseType.scala l299
  assign shift_bits = src_ports_payload_src2_data[5 : 0]; // @ BaseType.scala l318
  assign add_result = ($signed(tmp_add_result) + $signed(tmp_add_result_1)); // @ BaseType.scala l299
  assign sub_result = ($signed(tmp_sub_result) - $signed(tmp_sub_result_1)); // @ BaseType.scala l299
  assign slt_result = ($signed(tmp_slt_result) < $signed(tmp_slt_result_1)); // @ BaseType.scala l305
  assign sltu_result = (src_ports_payload_src1_data < src_ports_payload_src2_data); // @ BaseType.scala l305
  assign xor_result = (src_ports_payload_src1_data ^ src_ports_payload_src2_data); // @ BaseType.scala l299
  assign sll_result = (src_ports_payload_src1_data <<< shift_bits); // @ BaseType.scala l299
  assign srl_result = (src_ports_payload_src1_data >>> shift_bits); // @ BaseType.scala l299
  assign sra_result = ($signed(tmp_sra_result) >>> shift_bits); // @ BaseType.scala l299
  assign and_result = (src_ports_payload_src1_data & src_ports_payload_src2_data); // @ BaseType.scala l299
  assign or_result = (src_ports_payload_src1_data | src_ports_payload_src2_data); // @ BaseType.scala l299
  assign tmp_addw_result = add_result[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_addw_result_1[31] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[30] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[29] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[28] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[27] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[26] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[25] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[24] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[23] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[22] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[21] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[20] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[19] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[18] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[17] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[16] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[15] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[14] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[13] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[12] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[11] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[10] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[9] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[8] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[7] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[6] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[5] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[4] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[3] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[2] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[1] = tmp_addw_result; // @ Literal.scala l87
    tmp_addw_result_1[0] = tmp_addw_result; // @ Literal.scala l87
  end

  assign addw_result = {tmp_addw_result_1,tmp_addw_result_2}; // @ BaseType.scala l299
  assign tmp_subw_result = sub_result[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_subw_result_1[31] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[30] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[29] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[28] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[27] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[26] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[25] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[24] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[23] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[22] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[21] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[20] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[19] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[18] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[17] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[16] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[15] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[14] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[13] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[12] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[11] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[10] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[9] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[8] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[7] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[6] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[5] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[4] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[3] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[2] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[1] = tmp_subw_result; // @ Literal.scala l87
    tmp_subw_result_1[0] = tmp_subw_result; // @ Literal.scala l87
  end

  assign subw_result = {tmp_subw_result_1,tmp_subw_result_2}; // @ BaseType.scala l299
  assign sllw_temp = (src1_word <<< shift_bits[4 : 0]); // @ BaseType.scala l299
  assign tmp_sllw_result = sllw_temp[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_sllw_result_1[31] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[30] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[29] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[28] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[27] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[26] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[25] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[24] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[23] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[22] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[21] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[20] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[19] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[18] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[17] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[16] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[15] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[14] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[13] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[12] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[11] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[10] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[9] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[8] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[7] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[6] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[5] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[4] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[3] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[2] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[1] = tmp_sllw_result; // @ Literal.scala l87
    tmp_sllw_result_1[0] = tmp_sllw_result; // @ Literal.scala l87
  end

  assign sllw_result = {tmp_sllw_result_1,sllw_temp}; // @ BaseType.scala l299
  assign srlw_temp = (src1_word >>> shift_bits[4 : 0]); // @ BaseType.scala l299
  assign tmp_srlw_result = srlw_temp[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_srlw_result_1[31] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[30] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[29] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[28] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[27] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[26] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[25] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[24] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[23] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[22] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[21] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[20] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[19] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[18] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[17] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[16] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[15] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[14] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[13] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[12] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[11] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[10] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[9] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[8] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[7] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[6] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[5] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[4] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[3] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[2] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[1] = tmp_srlw_result; // @ Literal.scala l87
    tmp_srlw_result_1[0] = tmp_srlw_result; // @ Literal.scala l87
  end

  assign srlw_result = {tmp_srlw_result_1,srlw_temp}; // @ BaseType.scala l299
  assign sraw_temp = ($signed(tmp_sraw_temp) >>> shift_bits[4 : 0]); // @ BaseType.scala l299
  assign tmp_sraw_result = sraw_temp[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_sraw_result_1[31] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[30] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[29] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[28] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[27] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[26] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[25] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[24] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[23] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[22] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[21] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[20] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[19] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[18] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[17] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[16] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[15] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[14] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[13] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[12] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[11] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[10] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[9] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[8] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[7] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[6] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[5] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[4] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[3] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[2] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[1] = tmp_sraw_result; // @ Literal.scala l87
    tmp_sraw_result_1[0] = tmp_sraw_result; // @ Literal.scala l87
  end

  assign sraw_result = {tmp_sraw_result_1,sraw_temp}; // @ BaseType.scala l299
  assign mul_type_mul = (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_MUL); // @ BaseType.scala l305
  assign mul_type_mulh = (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_MULH); // @ BaseType.scala l305
  assign mul_type_mulhsu = (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_MULHSU); // @ BaseType.scala l305
  assign mul_type_mulhu = (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_MULHU); // @ BaseType.scala l305
  assign mul_type_mulw = (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_MULW); // @ BaseType.scala l305
  assign alu_is_mul = ((((mul_type_mul || mul_type_mulh) || mul_type_mulhsu) || mul_type_mulhu) || mul_type_mulw); // @ BaseType.scala l305
  assign alu_is_quo = ((((src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIV) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIVU)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIVW)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIVUW)); // @ BaseType.scala l305
  assign alu_is_rem = ((((src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REM_1) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REMU)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REMW)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REMUW)); // @ BaseType.scala l305
  assign alu_is_div = (alu_is_quo || alu_is_rem); // @ BaseType.scala l305
  assign tmp_src_ports_ready = (! stall); // @ BaseType.scala l299
  assign src_ports_ready = (tmp_src_ports_ready_1 && tmp_src_ports_ready); // @ Stream.scala l427
  assign tmp_src_stream_payload_micro_op_alu_ctrl_op = src_ports_payload_micro_op_alu_ctrl_op; // @ Stream.scala l428
  always @(*) begin
    src_stream_valid = (src_ports_valid && tmp_src_ports_ready); // @ Stream.scala l294
    if(flush) begin
      src_stream_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    tmp_src_ports_ready_1 = src_stream_ready; // @ Stream.scala l295
    if(flush) begin
      tmp_src_ports_ready_1 = 1'b1; // @ Stream.scala l440
    end
  end

  assign src_stream_payload_rd_rob_ptr = src_ports_payload_rd_rob_ptr; // @ Stream.scala l296
  assign src_stream_payload_micro_op_rd_wen = src_ports_payload_micro_op_rd_wen; // @ Stream.scala l296
  assign src_stream_payload_micro_op_src2_is_imm = src_ports_payload_micro_op_src2_is_imm; // @ Stream.scala l296
  assign src_stream_payload_micro_op_alu_ctrl_op = tmp_src_stream_payload_micro_op_alu_ctrl_op; // @ Stream.scala l296
  assign src_stream_payload_micro_op_alu_is_word = src_ports_payload_micro_op_alu_is_word; // @ Stream.scala l296
  assign src_stream_payload_src1_data = src_ports_payload_src1_data; // @ Stream.scala l296
  assign src_stream_payload_src2_data = src_ports_payload_src2_data; // @ Stream.scala l296
  assign src_stream_payload_pc = src_ports_payload_pc; // @ Stream.scala l296
  assign src_stream_payload_instruction = src_ports_payload_instruction; // @ Stream.scala l296
  always @(*) begin
    case(src_ports_payload_micro_op_alu_ctrl_op)
      AluCtrlEnum_ADD : begin
        if(src_ports_payload_micro_op_alu_is_word) begin
          alu_result = addw_result; // @ ALU.scala l85
        end else begin
          alu_result = add_result; // @ ALU.scala l87
        end
      end
      AluCtrlEnum_SUB : begin
        if(src_ports_payload_micro_op_alu_is_word) begin
          alu_result = subw_result; // @ ALU.scala l92
        end else begin
          alu_result = sub_result; // @ ALU.scala l94
        end
      end
      AluCtrlEnum_SLT : begin
        alu_result = {tmp_alu_result,slt_result}; // @ ALU.scala l98
      end
      AluCtrlEnum_SLTU : begin
        alu_result = {tmp_alu_result_1,sltu_result}; // @ ALU.scala l101
      end
      AluCtrlEnum_XOR_1 : begin
        alu_result = xor_result; // @ ALU.scala l104
      end
      AluCtrlEnum_SLL_1 : begin
        if(src_ports_payload_micro_op_alu_is_word) begin
          alu_result = sllw_result; // @ ALU.scala l108
        end else begin
          alu_result = sll_result; // @ ALU.scala l110
        end
      end
      AluCtrlEnum_SRL_1 : begin
        if(src_ports_payload_micro_op_alu_is_word) begin
          alu_result = srlw_result; // @ ALU.scala l115
        end else begin
          alu_result = srl_result; // @ ALU.scala l117
        end
      end
      AluCtrlEnum_SRA_1 : begin
        if(src_ports_payload_micro_op_alu_is_word) begin
          alu_result = sraw_result; // @ ALU.scala l122
        end else begin
          alu_result = sra_result; // @ ALU.scala l124
        end
      end
      AluCtrlEnum_AND_1 : begin
        alu_result = and_result; // @ ALU.scala l128
      end
      AluCtrlEnum_OR_1 : begin
        alu_result = or_result; // @ ALU.scala l131
      end
      AluCtrlEnum_LUI : begin
        alu_result = src_ports_payload_src2_data; // @ ALU.scala l134
      end
      default : begin
        alu_result = 64'h0; // @ ALU.scala l137
      end
    endcase
  end

  assign tmp_alu_result[62 : 0] = 63'h0; // @ Literal.scala l88
  assign tmp_alu_result_1[62 : 0] = 63'h0; // @ Literal.scala l88
  assign mul_src1_is_u = ((mul_type_mul || mul_type_mulhu) || mul_type_mulw); // @ BaseType.scala l305
  assign mul_src2_is_u = (mul_type_mulhu || mul_type_mulw); // @ BaseType.scala l305
  assign mulhsu_src2 = {1'b0,src_ports_payload_src2_data}; // @ BaseType.scala l299
  assign mul_src2 = (mul_type_mulhsu ? tmp_mul_src2 : tmp_mul_src2_1); // @ Expression.scala l1431
  assign mul_temp_u = (src_ports_payload_src1_data * src_ports_payload_src2_data); // @ BaseType.scala l299
  assign mul_temp_s = ($signed(tmp_mul_temp_s) * $signed(mul_src2)); // @ BaseType.scala l299
  assign mul_temp_u_high = mul_temp_u[127 : 64]; // @ BaseType.scala l299
  assign mul_temp_u_low = mul_temp_u[63 : 0]; // @ BaseType.scala l299
  assign mul_temp_s_high = mul_temp_s[127 : 64]; // @ BaseType.scala l299
  assign mul_temp_s_low = mul_temp_s[63 : 0]; // @ BaseType.scala l299
  assign tmp_mulw_result = mul_temp_u_low[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_mulw_result_1[31] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[30] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[29] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[28] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[27] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[26] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[25] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[24] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[23] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[22] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[21] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[20] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[19] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[18] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[17] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[16] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[15] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[14] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[13] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[12] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[11] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[10] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[9] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[8] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[7] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[6] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[5] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[4] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[3] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[2] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[1] = tmp_mulw_result; // @ Literal.scala l87
    tmp_mulw_result_1[0] = tmp_mulw_result; // @ Literal.scala l87
  end

  assign mulw_result = {tmp_mulw_result_1,mul_temp_u_low[31 : 0]}; // @ BaseType.scala l299
  assign mul_sel = {{{{mul_type_mul,mul_type_mulh},mul_type_mulhsu},mul_type_mulhu},mul_type_mulw}; // @ BaseType.scala l299
  assign mul_data = {{{{mul_temp_u_low,mul_temp_s_high},mul_temp_s_high},mul_temp_u_low},mulw_result}; // @ BaseType.scala l299
  assign tmp_mul_result = mul_sel[0]; // @ BaseType.scala l305
  assign tmp_mul_result_1 = mul_sel[1]; // @ BaseType.scala l305
  assign tmp_mul_result_2 = mul_sel[2]; // @ BaseType.scala l305
  assign tmp_mul_result_3 = mul_sel[3]; // @ BaseType.scala l305
  assign tmp_mul_result_4 = mul_sel[4]; // @ BaseType.scala l305
  assign mul_result = (((((tmp_mul_result_5 & tmp_mul_result_6) | (tmp_mul_result_37 & tmp_mul_result_38)) | (mul_data[191 : 128] & {tmp_mul_result_69,tmp_mul_result_70})) | (mul_data[255 : 192] & {tmp_mul_result_3,{tmp_mul_result_101,tmp_mul_result_102}})) | (mul_data[319 : 256] & {tmp_mul_result_4,{tmp_mul_result_4,{tmp_mul_result_133,tmp_mul_result_134}}})); // @ BaseType.scala l299
  assign src_stream_fire = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign div_start = (src_stream_fire && ((((((((src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIV) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIVU)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REM_1)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REMU)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIVW)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIVUW)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REMW)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REMUW))); // @ BaseType.scala l305
  assign div_op_is_signed = ((((src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIV) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REM_1)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_DIVW)) || (src_ports_payload_micro_op_alu_ctrl_op == AluCtrlEnum_REMW)); // @ BaseType.scala l305
  assign src_stream_fire_1 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_fire_2 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_fire_3 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_fire_4 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign div_io_op_is_word = (div_start ? src_ports_payload_micro_op_alu_is_word : div_op_is_word_reg); // @ ALU.scala l182
  assign div_io_op_is_signed = (div_start ? div_op_is_signed : div_op_is_signed_reg); // @ ALU.scala l183
  assign div_io_dividend = (div_start ? src_ports_payload_src1_data : div_src1_reg); // @ ALU.scala l184
  assign div_io_divisor = (div_start ? src_ports_payload_src2_data : div_src2_reg); // @ ALU.scala l185
  assign src_stream_fire_5 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_fire_6 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_fire_7 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_fire_8 = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign src_stream_ready = (dst_stream_ready && (! div_io_busy)); // @ ALU.scala l195
  assign dst_stream_valid = (((! alu_is_div) && src_stream_valid) || div_io_done_valid); // @ ALU.scala l196
  assign dst_stream_payload_rd_wen = (div_io_done_valid ? rd_wen_reg : src_stream_payload_micro_op_rd_wen); // @ ALU.scala l197
  assign dst_stream_payload_rd_rob_ptr = (div_io_done_valid ? rd_rob_ptr_reg : src_stream_payload_rd_rob_ptr); // @ ALU.scala l198
  assign dst_stream_payload_result = ((alu_is_quo_reg && div_io_done_valid) ? div_io_quotient : ((alu_is_rem_reg && div_io_done_valid) ? div_io_remainder : (alu_is_mul ? mul_result : alu_result))); // @ ALU.scala l199
  assign dst_stream_payload_pc = src_stream_payload_pc; // @ ALU.scala l202
  assign dst_stream_payload_instruction = src_stream_payload_instruction; // @ ALU.scala l203
  always @(*) begin
    dst_stream_ready = dst_stream_m2sPipe_ready; // @ Stream.scala l367
    if((! dst_stream_m2sPipe_valid)) begin
      dst_stream_ready = 1'b1; // @ Stream.scala l368
    end
  end

  assign dst_stream_m2sPipe_valid = dst_stream_rValid; // @ Stream.scala l370
  assign dst_stream_m2sPipe_payload_result = dst_stream_rData_result; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_rd_wen = dst_stream_rData_rd_wen; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_rd_rob_ptr = dst_stream_rData_rd_rob_ptr; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_pc = dst_stream_rData_pc; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_instruction = dst_stream_rData_instruction; // @ Stream.scala l371
  assign dst_ports_valid = dst_stream_m2sPipe_valid; // @ Stream.scala l294
  assign dst_stream_m2sPipe_ready = dst_ports_ready; // @ Stream.scala l295
  assign dst_ports_payload_result = dst_stream_m2sPipe_payload_result; // @ Stream.scala l296
  assign dst_ports_payload_rd_wen = dst_stream_m2sPipe_payload_rd_wen; // @ Stream.scala l296
  assign dst_ports_payload_rd_rob_ptr = dst_stream_m2sPipe_payload_rd_rob_ptr; // @ Stream.scala l296
  assign dst_ports_payload_pc = dst_stream_m2sPipe_payload_pc; // @ Stream.scala l296
  assign dst_ports_payload_instruction = dst_stream_m2sPipe_payload_instruction; // @ Stream.scala l296
  always @(posedge io_axiClk) begin
    if(src_stream_fire_1) begin
      div_op_is_word_reg <= src_ports_payload_micro_op_alu_is_word; // @ ALU.scala l174
    end
    if(src_stream_fire_2) begin
      div_op_is_signed_reg <= div_op_is_signed; // @ ALU.scala l175
    end
    if(src_stream_fire_3) begin
      div_src1_reg <= src_ports_payload_src1_data; // @ ALU.scala l176
    end
    if(src_stream_fire_4) begin
      div_src2_reg <= src_ports_payload_src2_data; // @ ALU.scala l177
    end
    if(dst_stream_ready) begin
      dst_stream_rData_result <= dst_stream_payload_result; // @ Stream.scala l362
      dst_stream_rData_rd_wen <= dst_stream_payload_rd_wen; // @ Stream.scala l362
      dst_stream_rData_rd_rob_ptr <= dst_stream_payload_rd_rob_ptr; // @ Stream.scala l362
      dst_stream_rData_pc <= dst_stream_payload_pc; // @ Stream.scala l362
      dst_stream_rData_instruction <= dst_stream_payload_instruction; // @ Stream.scala l362
    end
  end

  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      rd_wen_reg <= 1'b0; // @ Data.scala l400
      rd_rob_ptr_reg <= 4'b0000; // @ Data.scala l400
      alu_is_quo_reg <= 1'b0; // @ Data.scala l400
      alu_is_rem_reg <= 1'b0; // @ Data.scala l400
      dst_stream_rValid <= 1'b0; // @ Data.scala l400
    end else begin
      if(src_stream_fire_5) begin
        rd_wen_reg <= src_stream_payload_micro_op_rd_wen; // @ ALU.scala l190
      end
      if(src_stream_fire_6) begin
        rd_rob_ptr_reg <= src_stream_payload_rd_rob_ptr; // @ ALU.scala l191
      end
      if(src_stream_fire_7) begin
        alu_is_quo_reg <= alu_is_quo; // @ ALU.scala l192
      end
      if(src_stream_fire_8) begin
        alu_is_rem_reg <= alu_is_rem; // @ ALU.scala l193
      end
      if(dst_stream_ready) begin
        dst_stream_rValid <= dst_stream_valid; // @ Stream.scala l361
      end
    end
  end


endmodule

module BJU (
  input               flush,
  input               stall,
  input               src_ports_valid,
  output reg          src_ports_ready,
  input      [3:0]    src_ports_payload_rd_rob_ptr,
  input               src_ports_payload_micro_op_rd_wen,
  input               src_ports_payload_micro_op_src2_is_imm,
  input      [3:0]    src_ports_payload_micro_op_bju_ctrl_op,
  input               src_ports_payload_micro_op_bju_rd_eq_rs1,
  input               src_ports_payload_micro_op_bju_rd_is_link,
  input               src_ports_payload_micro_op_bju_rs1_is_link,
  input      [3:0]    src_ports_payload_micro_op_exp_ctrl_op,
  input      [11:0]   src_ports_payload_micro_op_exp_csr_addr,
  input               src_ports_payload_micro_op_exp_csr_wen,
  input      [63:0]   src_ports_payload_src1_data,
  input      [63:0]   src_ports_payload_src2_data,
  input      [63:0]   src_ports_payload_imm,
  input      [31:0]   src_ports_payload_pc,
  input      [31:0]   src_ports_payload_pc_next,
  input               src_ports_payload_bpu_pred_taken,
  input      [31:0]   src_ports_payload_instruction,
  output              dst_ports_valid,
  input               dst_ports_ready,
  output     [63:0]   dst_ports_payload_result,
  output              dst_ports_payload_rd_wen,
  output     [3:0]    dst_ports_payload_rd_rob_ptr,
  output     [31:0]   dst_ports_payload_pc,
  output     [31:0]   dst_ports_payload_instruction,
  output              redirect_valid,
  output     [31:0]   redirect_pc,
  output              train_valid,
  output     [31:0]   train_pc,
  output              train_taken,
  output              train_mispred,
  output     [4:0]    train_history,
  output     [31:0]   train_pc_next,
  output              train_is_call,
  output              train_is_ret,
  output              train_is_jmp,
  output              interrupt_valid,
  output     [31:0]   interrupt_pc,
  input               timer_int,
  input               io_axiClk,
  input               cpu_rst
);
  localparam BjuCtrlEnum_IDLE = 4'd0;
  localparam BjuCtrlEnum_AUIPC = 4'd1;
  localparam BjuCtrlEnum_JAL = 4'd2;
  localparam BjuCtrlEnum_JALR = 4'd3;
  localparam BjuCtrlEnum_BEQ = 4'd4;
  localparam BjuCtrlEnum_BNE = 4'd5;
  localparam BjuCtrlEnum_BLT = 4'd6;
  localparam BjuCtrlEnum_BGE = 4'd7;
  localparam BjuCtrlEnum_BLTU = 4'd8;
  localparam BjuCtrlEnum_BGEU = 4'd9;
  localparam BjuCtrlEnum_CSR = 4'd10;
  localparam ExpCtrlEnum_IDLE = 4'd0;
  localparam ExpCtrlEnum_ECALL = 4'd1;
  localparam ExpCtrlEnum_EBREAK = 4'd2;
  localparam ExpCtrlEnum_MRET = 4'd3;
  localparam ExpCtrlEnum_CSRRW = 4'd4;
  localparam ExpCtrlEnum_CSRRS = 4'd5;
  localparam ExpCtrlEnum_CSRRC = 4'd6;
  localparam ExpCtrlEnum_CSRRWI = 4'd7;
  localparam ExpCtrlEnum_CSRRSI = 4'd8;
  localparam ExpCtrlEnum_CSRRCI = 4'd9;

  wire       [63:0]   bju_kernel_1_rd_data;
  wire                bju_kernel_1_redirect_valid;
  wire       [31:0]   bju_kernel_1_redirect_pc;
  wire                bju_kernel_1_train_valid;
  wire       [31:0]   bju_kernel_1_train_pc;
  wire                bju_kernel_1_train_taken;
  wire                bju_kernel_1_train_mispred;
  wire       [4:0]    bju_kernel_1_train_history;
  wire       [31:0]   bju_kernel_1_train_pc_next;
  wire                bju_kernel_1_train_is_call;
  wire                bju_kernel_1_train_is_ret;
  wire                bju_kernel_1_train_is_jmp;
  wire                bju_kernel_1_interrupt_valid;
  wire       [31:0]   bju_kernel_1_interrupt_pc;
  reg                 src_stream_valid;
  wire                src_stream_ready;
  wire       [3:0]    src_stream_payload_rd_rob_ptr;
  wire                src_stream_payload_micro_op_rd_wen;
  wire                src_stream_payload_micro_op_src2_is_imm;
  wire       [3:0]    src_stream_payload_micro_op_bju_ctrl_op;
  wire                src_stream_payload_micro_op_bju_rd_eq_rs1;
  wire                src_stream_payload_micro_op_bju_rd_is_link;
  wire                src_stream_payload_micro_op_bju_rs1_is_link;
  wire       [3:0]    src_stream_payload_micro_op_exp_ctrl_op;
  wire       [11:0]   src_stream_payload_micro_op_exp_csr_addr;
  wire                src_stream_payload_micro_op_exp_csr_wen;
  wire       [63:0]   src_stream_payload_src1_data;
  wire       [63:0]   src_stream_payload_src2_data;
  wire       [63:0]   src_stream_payload_imm;
  wire       [31:0]   src_stream_payload_pc;
  wire       [31:0]   src_stream_payload_pc_next;
  wire                src_stream_payload_bpu_pred_taken;
  wire       [31:0]   src_stream_payload_instruction;
  wire                dst_stream_valid;
  reg                 dst_stream_ready;
  wire       [63:0]   dst_stream_payload_result;
  wire                dst_stream_payload_rd_wen;
  wire       [3:0]    dst_stream_payload_rd_rob_ptr;
  wire       [31:0]   dst_stream_payload_pc;
  wire       [31:0]   dst_stream_payload_instruction;
  wire                src_stream_fire;
  wire                dst_stream_m2sPipe_valid;
  wire                dst_stream_m2sPipe_ready;
  wire       [63:0]   dst_stream_m2sPipe_payload_result;
  wire                dst_stream_m2sPipe_payload_rd_wen;
  wire       [3:0]    dst_stream_m2sPipe_payload_rd_rob_ptr;
  wire       [31:0]   dst_stream_m2sPipe_payload_pc;
  wire       [31:0]   dst_stream_m2sPipe_payload_instruction;
  reg                 dst_stream_rValid;
  reg        [63:0]   dst_stream_rData_result;
  reg                 dst_stream_rData_rd_wen;
  reg        [3:0]    dst_stream_rData_rd_rob_ptr;
  reg        [31:0]   dst_stream_rData_pc;
  reg        [31:0]   dst_stream_rData_instruction;
  `ifndef SYNTHESIS
  reg [39:0] src_ports_payload_micro_op_bju_ctrl_op_string;
  reg [47:0] src_ports_payload_micro_op_exp_ctrl_op_string;
  reg [39:0] src_stream_payload_micro_op_bju_ctrl_op_string;
  reg [47:0] src_stream_payload_micro_op_exp_ctrl_op_string;
  `endif


  BJU_kernel bju_kernel_1 (
    .in_valid                 (src_stream_fire                               ), //i
    .micro_op_rd_wen          (src_stream_payload_micro_op_rd_wen            ), //i
    .micro_op_src2_is_imm     (src_stream_payload_micro_op_src2_is_imm       ), //i
    .micro_op_bju_ctrl_op     (src_stream_payload_micro_op_bju_ctrl_op[3:0]  ), //i
    .micro_op_bju_rd_eq_rs1   (src_stream_payload_micro_op_bju_rd_eq_rs1     ), //i
    .micro_op_bju_rd_is_link  (src_stream_payload_micro_op_bju_rd_is_link    ), //i
    .micro_op_bju_rs1_is_link (src_stream_payload_micro_op_bju_rs1_is_link   ), //i
    .micro_op_exp_ctrl_op     (src_stream_payload_micro_op_exp_ctrl_op[3:0]  ), //i
    .micro_op_exp_csr_addr    (src_stream_payload_micro_op_exp_csr_addr[11:0]), //i
    .micro_op_exp_csr_wen     (src_stream_payload_micro_op_exp_csr_wen       ), //i
    .pc                       (src_stream_payload_pc[31:0]                   ), //i
    .imm                      (src_stream_payload_imm[63:0]                  ), //i
    .rs1_data                 (src_stream_payload_src1_data[63:0]            ), //i
    .rs2_data                 (src_stream_payload_src2_data[63:0]            ), //i
    .rd_data                  (bju_kernel_1_rd_data[63:0]                    ), //o
    .bpu_pred_taken           (src_stream_payload_bpu_pred_taken             ), //i
    .bpu_target_pc            (src_stream_payload_pc_next[31:0]              ), //i
    .redirect_valid           (bju_kernel_1_redirect_valid                   ), //o
    .redirect_pc              (bju_kernel_1_redirect_pc[31:0]                ), //o
    .train_valid              (bju_kernel_1_train_valid                      ), //o
    .train_pc                 (bju_kernel_1_train_pc[31:0]                   ), //o
    .train_taken              (bju_kernel_1_train_taken                      ), //o
    .train_mispred            (bju_kernel_1_train_mispred                    ), //o
    .train_history            (bju_kernel_1_train_history[4:0]               ), //o
    .train_pc_next            (bju_kernel_1_train_pc_next[31:0]              ), //o
    .train_is_call            (bju_kernel_1_train_is_call                    ), //o
    .train_is_ret             (bju_kernel_1_train_is_ret                     ), //o
    .train_is_jmp             (bju_kernel_1_train_is_jmp                     ), //o
    .interrupt_valid          (bju_kernel_1_interrupt_valid                  ), //o
    .interrupt_pc             (bju_kernel_1_interrupt_pc[31:0]               ), //o
    .timer_int                (timer_int                                     ), //i
    .io_axiClk                (io_axiClk                                     ), //i
    .cpu_rst                  (cpu_rst                                       )  //i
  );
  `ifndef SYNTHESIS
  always @(*) begin
    case(src_ports_payload_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : src_ports_payload_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : src_ports_payload_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : src_ports_payload_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : src_ports_payload_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : src_ports_payload_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : src_ports_payload_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : src_ports_payload_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : src_ports_payload_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : src_ports_payload_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : src_ports_payload_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : src_ports_payload_micro_op_bju_ctrl_op_string = "CSR  ";
      default : src_ports_payload_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(src_ports_payload_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : src_ports_payload_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : src_ports_payload_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : src_ports_payload_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : src_ports_payload_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : src_ports_payload_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : src_ports_payload_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : src_ports_payload_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : src_ports_payload_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : src_ports_payload_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : src_ports_payload_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : src_ports_payload_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(src_stream_payload_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : src_stream_payload_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : src_stream_payload_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : src_stream_payload_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : src_stream_payload_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : src_stream_payload_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : src_stream_payload_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : src_stream_payload_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : src_stream_payload_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : src_stream_payload_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : src_stream_payload_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : src_stream_payload_micro_op_bju_ctrl_op_string = "CSR  ";
      default : src_stream_payload_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(src_stream_payload_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : src_stream_payload_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : src_stream_payload_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : src_stream_payload_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : src_stream_payload_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : src_stream_payload_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : src_stream_payload_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : src_stream_payload_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : src_stream_payload_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : src_stream_payload_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : src_stream_payload_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : src_stream_payload_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  `endif

  always @(*) begin
    src_stream_valid = src_ports_valid; // @ Stream.scala l294
    if(flush) begin
      src_stream_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    src_ports_ready = src_stream_ready; // @ Stream.scala l295
    if(flush) begin
      src_ports_ready = 1'b1; // @ Stream.scala l440
    end
  end

  assign src_stream_payload_rd_rob_ptr = src_ports_payload_rd_rob_ptr; // @ Stream.scala l296
  assign src_stream_payload_micro_op_rd_wen = src_ports_payload_micro_op_rd_wen; // @ Stream.scala l296
  assign src_stream_payload_micro_op_src2_is_imm = src_ports_payload_micro_op_src2_is_imm; // @ Stream.scala l296
  assign src_stream_payload_micro_op_bju_ctrl_op = src_ports_payload_micro_op_bju_ctrl_op; // @ Stream.scala l296
  assign src_stream_payload_micro_op_bju_rd_eq_rs1 = src_ports_payload_micro_op_bju_rd_eq_rs1; // @ Stream.scala l296
  assign src_stream_payload_micro_op_bju_rd_is_link = src_ports_payload_micro_op_bju_rd_is_link; // @ Stream.scala l296
  assign src_stream_payload_micro_op_bju_rs1_is_link = src_ports_payload_micro_op_bju_rs1_is_link; // @ Stream.scala l296
  assign src_stream_payload_micro_op_exp_ctrl_op = src_ports_payload_micro_op_exp_ctrl_op; // @ Stream.scala l296
  assign src_stream_payload_micro_op_exp_csr_addr = src_ports_payload_micro_op_exp_csr_addr; // @ Stream.scala l296
  assign src_stream_payload_micro_op_exp_csr_wen = src_ports_payload_micro_op_exp_csr_wen; // @ Stream.scala l296
  assign src_stream_payload_src1_data = src_ports_payload_src1_data; // @ Stream.scala l296
  assign src_stream_payload_src2_data = src_ports_payload_src2_data; // @ Stream.scala l296
  assign src_stream_payload_imm = src_ports_payload_imm; // @ Stream.scala l296
  assign src_stream_payload_pc = src_ports_payload_pc; // @ Stream.scala l296
  assign src_stream_payload_pc_next = src_ports_payload_pc_next; // @ Stream.scala l296
  assign src_stream_payload_bpu_pred_taken = src_ports_payload_bpu_pred_taken; // @ Stream.scala l296
  assign src_stream_payload_instruction = src_ports_payload_instruction; // @ Stream.scala l296
  assign src_stream_fire = (src_stream_valid && src_stream_ready); // @ BaseType.scala l305
  assign redirect_valid = (bju_kernel_1_redirect_valid && (! stall)); // @ BJU.scala l261
  assign redirect_pc = bju_kernel_1_redirect_pc; // @ BJU.scala l262
  assign train_valid = bju_kernel_1_train_valid; // @ BJU.scala l263
  assign train_pc = bju_kernel_1_train_pc; // @ BJU.scala l264
  assign train_taken = bju_kernel_1_train_taken; // @ BJU.scala l265
  assign train_mispred = bju_kernel_1_train_mispred; // @ BJU.scala l266
  assign train_history = bju_kernel_1_train_history; // @ BJU.scala l267
  assign train_pc_next = bju_kernel_1_train_pc_next; // @ BJU.scala l268
  assign train_is_call = bju_kernel_1_train_is_call; // @ BJU.scala l269
  assign train_is_ret = bju_kernel_1_train_is_ret; // @ BJU.scala l270
  assign train_is_jmp = bju_kernel_1_train_is_jmp; // @ BJU.scala l271
  assign interrupt_valid = (bju_kernel_1_interrupt_valid && (! stall)); // @ BJU.scala l273
  assign interrupt_pc = bju_kernel_1_interrupt_pc; // @ BJU.scala l274
  assign src_stream_ready = dst_stream_ready; // @ BJU.scala l278
  assign dst_stream_valid = src_stream_valid; // @ BJU.scala l279
  assign dst_stream_payload_result = bju_kernel_1_rd_data; // @ BJU.scala l280
  assign dst_stream_payload_rd_wen = src_stream_payload_micro_op_rd_wen; // @ BJU.scala l281
  assign dst_stream_payload_rd_rob_ptr = src_stream_payload_rd_rob_ptr; // @ BJU.scala l282
  assign dst_stream_payload_pc = src_stream_payload_pc; // @ BJU.scala l284
  assign dst_stream_payload_instruction = src_stream_payload_instruction; // @ BJU.scala l285
  always @(*) begin
    dst_stream_ready = dst_stream_m2sPipe_ready; // @ Stream.scala l367
    if((! dst_stream_m2sPipe_valid)) begin
      dst_stream_ready = 1'b1; // @ Stream.scala l368
    end
  end

  assign dst_stream_m2sPipe_valid = dst_stream_rValid; // @ Stream.scala l370
  assign dst_stream_m2sPipe_payload_result = dst_stream_rData_result; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_rd_wen = dst_stream_rData_rd_wen; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_rd_rob_ptr = dst_stream_rData_rd_rob_ptr; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_pc = dst_stream_rData_pc; // @ Stream.scala l371
  assign dst_stream_m2sPipe_payload_instruction = dst_stream_rData_instruction; // @ Stream.scala l371
  assign dst_ports_valid = dst_stream_m2sPipe_valid; // @ Stream.scala l294
  assign dst_stream_m2sPipe_ready = dst_ports_ready; // @ Stream.scala l295
  assign dst_ports_payload_result = dst_stream_m2sPipe_payload_result; // @ Stream.scala l296
  assign dst_ports_payload_rd_wen = dst_stream_m2sPipe_payload_rd_wen; // @ Stream.scala l296
  assign dst_ports_payload_rd_rob_ptr = dst_stream_m2sPipe_payload_rd_rob_ptr; // @ Stream.scala l296
  assign dst_ports_payload_pc = dst_stream_m2sPipe_payload_pc; // @ Stream.scala l296
  assign dst_ports_payload_instruction = dst_stream_m2sPipe_payload_instruction; // @ Stream.scala l296
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      dst_stream_rValid <= 1'b0; // @ Data.scala l400
    end else begin
      if(dst_stream_ready) begin
        dst_stream_rValid <= dst_stream_valid; // @ Stream.scala l361
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(dst_stream_ready) begin
      dst_stream_rData_result <= dst_stream_payload_result; // @ Stream.scala l362
      dst_stream_rData_rd_wen <= dst_stream_payload_rd_wen; // @ Stream.scala l362
      dst_stream_rData_rd_rob_ptr <= dst_stream_payload_rd_rob_ptr; // @ Stream.scala l362
      dst_stream_rData_pc <= dst_stream_payload_pc; // @ Stream.scala l362
      dst_stream_rData_instruction <= dst_stream_payload_instruction; // @ Stream.scala l362
    end
  end


endmodule

module Control (
  input               flush,
  input               src_ports_valid,
  output reg          src_ports_ready,
  input      [31:0]   src_ports_payload_pc,
  input      [31:0]   src_ports_payload_pc_next,
  input               src_ports_payload_bpu_pred_taken,
  input      [31:0]   src_ports_payload_instruction,
  output              to_ports_alu_valid,
  input               to_ports_alu_ready,
  output     [3:0]    to_ports_alu_payload_rd_rob_ptr,
  output              to_ports_alu_payload_micro_op_rd_wen,
  output              to_ports_alu_payload_micro_op_src2_is_imm,
  output     [4:0]    to_ports_alu_payload_micro_op_alu_ctrl_op,
  output              to_ports_alu_payload_micro_op_alu_is_word,
  output     [63:0]   to_ports_alu_payload_src1_data,
  output     [63:0]   to_ports_alu_payload_src2_data,
  output     [31:0]   to_ports_alu_payload_pc,
  output     [31:0]   to_ports_alu_payload_instruction,
  output              to_ports_bju_valid,
  input               to_ports_bju_ready,
  output     [3:0]    to_ports_bju_payload_rd_rob_ptr,
  output              to_ports_bju_payload_micro_op_rd_wen,
  output              to_ports_bju_payload_micro_op_src2_is_imm,
  output     [3:0]    to_ports_bju_payload_micro_op_bju_ctrl_op,
  output              to_ports_bju_payload_micro_op_bju_rd_eq_rs1,
  output              to_ports_bju_payload_micro_op_bju_rd_is_link,
  output              to_ports_bju_payload_micro_op_bju_rs1_is_link,
  output     [3:0]    to_ports_bju_payload_micro_op_exp_ctrl_op,
  output     [11:0]   to_ports_bju_payload_micro_op_exp_csr_addr,
  output              to_ports_bju_payload_micro_op_exp_csr_wen,
  output     [63:0]   to_ports_bju_payload_src1_data,
  output     [63:0]   to_ports_bju_payload_src2_data,
  output     [63:0]   to_ports_bju_payload_imm,
  output     [31:0]   to_ports_bju_payload_pc,
  output     [31:0]   to_ports_bju_payload_pc_next,
  output              to_ports_bju_payload_bpu_pred_taken,
  output     [31:0]   to_ports_bju_payload_instruction,
  output              to_ports_lsu_valid,
  input               to_ports_lsu_ready,
  output     [3:0]    to_ports_lsu_payload_rd_rob_ptr,
  output              to_ports_lsu_payload_micro_op_rd_wen,
  output              to_ports_lsu_payload_micro_op_src2_is_imm,
  output     [3:0]    to_ports_lsu_payload_micro_op_lsu_ctrl_op,
  output              to_ports_lsu_payload_micro_op_lsu_is_load,
  output              to_ports_lsu_payload_micro_op_lsu_is_store,
  output     [63:0]   to_ports_lsu_payload_src1_data,
  output     [63:0]   to_ports_lsu_payload_src2_data,
  output     [63:0]   to_ports_lsu_payload_imm,
  output     [31:0]   to_ports_lsu_payload_pc,
  output     [31:0]   to_ports_lsu_payload_instruction,
  input               wb_ports_alu_valid,
  output              wb_ports_alu_ready,
  input      [63:0]   wb_ports_alu_payload_result,
  input               wb_ports_alu_payload_rd_wen,
  input      [3:0]    wb_ports_alu_payload_rd_rob_ptr,
  input      [31:0]   wb_ports_alu_payload_pc,
  input      [31:0]   wb_ports_alu_payload_instruction,
  input               wb_ports_bju_valid,
  output              wb_ports_bju_ready,
  input      [63:0]   wb_ports_bju_payload_result,
  input               wb_ports_bju_payload_rd_wen,
  input      [3:0]    wb_ports_bju_payload_rd_rob_ptr,
  input      [31:0]   wb_ports_bju_payload_pc,
  input      [31:0]   wb_ports_bju_payload_instruction,
  input               wb_ports_lsu_valid,
  output              wb_ports_lsu_ready,
  input      [63:0]   wb_ports_lsu_payload_result,
  input               wb_ports_lsu_payload_rd_wen,
  input      [3:0]    wb_ports_lsu_payload_rd_rob_ptr,
  input      [31:0]   wb_ports_lsu_payload_pc,
  input      [31:0]   wb_ports_lsu_payload_instruction,
  input               io_axiClk,
  input               cpu_rst
);
  localparam AluCtrlEnum_IDLE = 5'd0;
  localparam AluCtrlEnum_ADD = 5'd1;
  localparam AluCtrlEnum_SUB = 5'd2;
  localparam AluCtrlEnum_SLT = 5'd3;
  localparam AluCtrlEnum_SLTU = 5'd4;
  localparam AluCtrlEnum_XOR_1 = 5'd5;
  localparam AluCtrlEnum_SLL_1 = 5'd6;
  localparam AluCtrlEnum_SRL_1 = 5'd7;
  localparam AluCtrlEnum_SRA_1 = 5'd8;
  localparam AluCtrlEnum_AND_1 = 5'd9;
  localparam AluCtrlEnum_OR_1 = 5'd10;
  localparam AluCtrlEnum_LUI = 5'd11;
  localparam AluCtrlEnum_MUL = 5'd12;
  localparam AluCtrlEnum_MULH = 5'd13;
  localparam AluCtrlEnum_MULHSU = 5'd14;
  localparam AluCtrlEnum_MULHU = 5'd15;
  localparam AluCtrlEnum_DIV = 5'd16;
  localparam AluCtrlEnum_DIVU = 5'd17;
  localparam AluCtrlEnum_REM_1 = 5'd18;
  localparam AluCtrlEnum_REMU = 5'd19;
  localparam AluCtrlEnum_MULW = 5'd20;
  localparam AluCtrlEnum_DIVW = 5'd21;
  localparam AluCtrlEnum_DIVUW = 5'd22;
  localparam AluCtrlEnum_REMW = 5'd23;
  localparam AluCtrlEnum_REMUW = 5'd24;
  localparam BjuCtrlEnum_IDLE = 4'd0;
  localparam BjuCtrlEnum_AUIPC = 4'd1;
  localparam BjuCtrlEnum_JAL = 4'd2;
  localparam BjuCtrlEnum_JALR = 4'd3;
  localparam BjuCtrlEnum_BEQ = 4'd4;
  localparam BjuCtrlEnum_BNE = 4'd5;
  localparam BjuCtrlEnum_BLT = 4'd6;
  localparam BjuCtrlEnum_BGE = 4'd7;
  localparam BjuCtrlEnum_BLTU = 4'd8;
  localparam BjuCtrlEnum_BGEU = 4'd9;
  localparam BjuCtrlEnum_CSR = 4'd10;
  localparam ExpCtrlEnum_IDLE = 4'd0;
  localparam ExpCtrlEnum_ECALL = 4'd1;
  localparam ExpCtrlEnum_EBREAK = 4'd2;
  localparam ExpCtrlEnum_MRET = 4'd3;
  localparam ExpCtrlEnum_CSRRW = 4'd4;
  localparam ExpCtrlEnum_CSRRS = 4'd5;
  localparam ExpCtrlEnum_CSRRC = 4'd6;
  localparam ExpCtrlEnum_CSRRWI = 4'd7;
  localparam ExpCtrlEnum_CSRRSI = 4'd8;
  localparam ExpCtrlEnum_CSRRCI = 4'd9;
  localparam LsuCtrlEnum_IDLE = 4'd0;
  localparam LsuCtrlEnum_LB = 4'd1;
  localparam LsuCtrlEnum_LBU = 4'd2;
  localparam LsuCtrlEnum_LH = 4'd3;
  localparam LsuCtrlEnum_LHU = 4'd4;
  localparam LsuCtrlEnum_LW = 4'd5;
  localparam LsuCtrlEnum_LWU = 4'd6;
  localparam LsuCtrlEnum_LD = 4'd7;
  localparam LsuCtrlEnum_SB = 4'd8;
  localparam LsuCtrlEnum_SH = 4'd9;
  localparam LsuCtrlEnum_SW = 4'd10;
  localparam LsuCtrlEnum_SD = 4'd11;
  localparam RobMicroOp_IDLE = 2'd0;
  localparam RobMicroOp_ALU = 2'd1;
  localparam RobMicroOp_BJU = 2'd2;
  localparam RobMicroOp_LSU = 2'd3;
  localparam ExceptionEnum_IDLE = 3'd0;
  localparam ExceptionEnum_ECALL = 3'd1;
  localparam ExceptionEnum_EBREAK = 3'd2;
  localparam ExceptionEnum_MRET = 3'd3;
  localparam ExceptionEnum_TIME_1 = 3'd4;

  wire                arf_1_write_ports_rd_wen;
  wire       [63:0]   arf_1_read_ports_rs1_data;
  wire       [63:0]   arf_1_read_ports_rs2_data;
  wire       [4:0]    decode_1_rs1_addr;
  wire       [4:0]    decode_1_rs2_addr;
  wire                decode_1_rs1_ren;
  wire                decode_1_rs2_ren;
  wire       [4:0]    decode_1_rd_addr;
  wire       [63:0]   decode_1_imm;
  wire                decode_1_alu_micro_op_rd_wen;
  wire                decode_1_alu_micro_op_src2_is_imm;
  wire       [4:0]    decode_1_alu_micro_op_alu_ctrl_op;
  wire                decode_1_alu_micro_op_alu_is_word;
  wire                decode_1_lsu_micro_op_rd_wen;
  wire                decode_1_lsu_micro_op_src2_is_imm;
  wire       [3:0]    decode_1_lsu_micro_op_lsu_ctrl_op;
  wire                decode_1_lsu_micro_op_lsu_is_load;
  wire                decode_1_lsu_micro_op_lsu_is_store;
  wire                decode_1_bju_micro_op_rd_wen;
  wire                decode_1_bju_micro_op_src2_is_imm;
  wire       [3:0]    decode_1_bju_micro_op_bju_ctrl_op;
  wire                decode_1_bju_micro_op_bju_rd_eq_rs1;
  wire                decode_1_bju_micro_op_bju_rd_is_link;
  wire                decode_1_bju_micro_op_bju_rs1_is_link;
  wire       [3:0]    decode_1_bju_micro_op_exp_ctrl_op;
  wire       [11:0]   decode_1_bju_micro_op_exp_csr_addr;
  wire                decode_1_bju_micro_op_exp_csr_wen;
  wire       [2:0]    decode_1_exception;
  wire       [1:0]    decode_1_rob_micro_op;
  wire                stream_alu_valid;
  reg                 stream_alu_ready;
  wire       [3:0]    stream_alu_payload_rd_rob_ptr;
  wire                stream_alu_payload_micro_op_rd_wen;
  wire                stream_alu_payload_micro_op_src2_is_imm;
  wire       [4:0]    stream_alu_payload_micro_op_alu_ctrl_op;
  wire                stream_alu_payload_micro_op_alu_is_word;
  wire       [63:0]   stream_alu_payload_src1_data;
  wire       [63:0]   stream_alu_payload_src2_data;
  wire       [31:0]   stream_alu_payload_pc;
  wire       [31:0]   stream_alu_payload_instruction;
  wire                stream_bju_valid;
  reg                 stream_bju_ready;
  wire       [3:0]    stream_bju_payload_rd_rob_ptr;
  wire                stream_bju_payload_micro_op_rd_wen;
  wire                stream_bju_payload_micro_op_src2_is_imm;
  wire       [3:0]    stream_bju_payload_micro_op_bju_ctrl_op;
  wire                stream_bju_payload_micro_op_bju_rd_eq_rs1;
  wire                stream_bju_payload_micro_op_bju_rd_is_link;
  wire                stream_bju_payload_micro_op_bju_rs1_is_link;
  wire       [3:0]    stream_bju_payload_micro_op_exp_ctrl_op;
  wire       [11:0]   stream_bju_payload_micro_op_exp_csr_addr;
  wire                stream_bju_payload_micro_op_exp_csr_wen;
  wire       [63:0]   stream_bju_payload_src1_data;
  wire       [63:0]   stream_bju_payload_src2_data;
  wire       [63:0]   stream_bju_payload_imm;
  wire       [31:0]   stream_bju_payload_pc;
  wire       [31:0]   stream_bju_payload_pc_next;
  wire                stream_bju_payload_bpu_pred_taken;
  wire       [31:0]   stream_bju_payload_instruction;
  wire                stream_lsu_valid;
  reg                 stream_lsu_ready;
  wire       [3:0]    stream_lsu_payload_rd_rob_ptr;
  wire                stream_lsu_payload_micro_op_rd_wen;
  wire                stream_lsu_payload_micro_op_src2_is_imm;
  wire       [3:0]    stream_lsu_payload_micro_op_lsu_ctrl_op;
  wire                stream_lsu_payload_micro_op_lsu_is_load;
  wire                stream_lsu_payload_micro_op_lsu_is_store;
  wire       [63:0]   stream_lsu_payload_src1_data;
  wire       [63:0]   stream_lsu_payload_src2_data;
  wire       [63:0]   stream_lsu_payload_imm;
  wire       [31:0]   stream_lsu_payload_pc;
  wire       [31:0]   stream_lsu_payload_instruction;
  wire                stream_wb_valid;
  reg                 stream_wb_ready;
  wire       [4:0]    stream_wb_payload_rd_addr;
  wire       [63:0]   stream_wb_payload_rd_data;
  wire                stream_wb_payload_rd_wen;
  wire       [3:0]    stream_wb_payload_rob_ptr;
  wire       [31:0]   stream_wb_payload_pc;
  wire       [31:0]   stream_wb_payload_instruction;
  wire                write_back_valid;
  wire                write_back_ready;
  wire       [4:0]    write_back_payload_rd_addr;
  wire       [63:0]   write_back_payload_rd_data;
  wire                write_back_payload_rd_wen;
  wire       [3:0]    write_back_payload_rob_ptr;
  wire       [31:0]   write_back_payload_pc;
  wire       [31:0]   write_back_payload_instruction;
  reg                 src_stream_valid;
  wire                src_stream_ready;
  wire       [31:0]   src_stream_payload_pc;
  wire       [31:0]   src_stream_payload_pc_next;
  wire                src_stream_payload_bpu_pred_taken;
  wire       [31:0]   src_stream_payload_instruction;
  reg                 ready;
  wire                fire;
  wire                to_alu;
  wire                to_bju;
  wire                to_lsu;
  wire       [63:0]   src1;
  wire       [63:0]   src2;
  reg                 alu_busy;
  reg                 bju_busy;
  reg                 lsu_busy;
  reg        [4:0]    rd_addr_reg;
  wire                trap_or_print;
  wire                stream_wb_fire;
  wire                stream_alu_fire;
  wire                wb_ports_alu_fire;
  wire                stream_bju_fire;
  wire                wb_ports_bju_fire;
  wire                stream_lsu_fire;
  wire                wb_ports_lsu_fire;
  wire                write_back_fire;
  wire                stream_alu_m2sPipe_valid;
  wire                stream_alu_m2sPipe_ready;
  wire       [3:0]    stream_alu_m2sPipe_payload_rd_rob_ptr;
  wire                stream_alu_m2sPipe_payload_micro_op_rd_wen;
  wire                stream_alu_m2sPipe_payload_micro_op_src2_is_imm;
  wire       [4:0]    stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op;
  wire                stream_alu_m2sPipe_payload_micro_op_alu_is_word;
  wire       [63:0]   stream_alu_m2sPipe_payload_src1_data;
  wire       [63:0]   stream_alu_m2sPipe_payload_src2_data;
  wire       [31:0]   stream_alu_m2sPipe_payload_pc;
  wire       [31:0]   stream_alu_m2sPipe_payload_instruction;
  reg                 stream_alu_rValid;
  reg        [3:0]    stream_alu_rData_rd_rob_ptr;
  reg                 stream_alu_rData_micro_op_rd_wen;
  reg                 stream_alu_rData_micro_op_src2_is_imm;
  reg        [4:0]    stream_alu_rData_micro_op_alu_ctrl_op;
  reg                 stream_alu_rData_micro_op_alu_is_word;
  reg        [63:0]   stream_alu_rData_src1_data;
  reg        [63:0]   stream_alu_rData_src2_data;
  reg        [31:0]   stream_alu_rData_pc;
  reg        [31:0]   stream_alu_rData_instruction;
  wire                stream_bju_m2sPipe_valid;
  wire                stream_bju_m2sPipe_ready;
  wire       [3:0]    stream_bju_m2sPipe_payload_rd_rob_ptr;
  wire                stream_bju_m2sPipe_payload_micro_op_rd_wen;
  wire                stream_bju_m2sPipe_payload_micro_op_src2_is_imm;
  wire       [3:0]    stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op;
  wire                stream_bju_m2sPipe_payload_micro_op_bju_rd_eq_rs1;
  wire                stream_bju_m2sPipe_payload_micro_op_bju_rd_is_link;
  wire                stream_bju_m2sPipe_payload_micro_op_bju_rs1_is_link;
  wire       [3:0]    stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op;
  wire       [11:0]   stream_bju_m2sPipe_payload_micro_op_exp_csr_addr;
  wire                stream_bju_m2sPipe_payload_micro_op_exp_csr_wen;
  wire       [63:0]   stream_bju_m2sPipe_payload_src1_data;
  wire       [63:0]   stream_bju_m2sPipe_payload_src2_data;
  wire       [63:0]   stream_bju_m2sPipe_payload_imm;
  wire       [31:0]   stream_bju_m2sPipe_payload_pc;
  wire       [31:0]   stream_bju_m2sPipe_payload_pc_next;
  wire                stream_bju_m2sPipe_payload_bpu_pred_taken;
  wire       [31:0]   stream_bju_m2sPipe_payload_instruction;
  reg                 stream_bju_rValid;
  reg        [3:0]    stream_bju_rData_rd_rob_ptr;
  reg                 stream_bju_rData_micro_op_rd_wen;
  reg                 stream_bju_rData_micro_op_src2_is_imm;
  reg        [3:0]    stream_bju_rData_micro_op_bju_ctrl_op;
  reg                 stream_bju_rData_micro_op_bju_rd_eq_rs1;
  reg                 stream_bju_rData_micro_op_bju_rd_is_link;
  reg                 stream_bju_rData_micro_op_bju_rs1_is_link;
  reg        [3:0]    stream_bju_rData_micro_op_exp_ctrl_op;
  reg        [11:0]   stream_bju_rData_micro_op_exp_csr_addr;
  reg                 stream_bju_rData_micro_op_exp_csr_wen;
  reg        [63:0]   stream_bju_rData_src1_data;
  reg        [63:0]   stream_bju_rData_src2_data;
  reg        [63:0]   stream_bju_rData_imm;
  reg        [31:0]   stream_bju_rData_pc;
  reg        [31:0]   stream_bju_rData_pc_next;
  reg                 stream_bju_rData_bpu_pred_taken;
  reg        [31:0]   stream_bju_rData_instruction;
  wire                stream_lsu_m2sPipe_valid;
  wire                stream_lsu_m2sPipe_ready;
  wire       [3:0]    stream_lsu_m2sPipe_payload_rd_rob_ptr;
  wire                stream_lsu_m2sPipe_payload_micro_op_rd_wen;
  wire                stream_lsu_m2sPipe_payload_micro_op_src2_is_imm;
  wire       [3:0]    stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op;
  wire                stream_lsu_m2sPipe_payload_micro_op_lsu_is_load;
  wire                stream_lsu_m2sPipe_payload_micro_op_lsu_is_store;
  wire       [63:0]   stream_lsu_m2sPipe_payload_src1_data;
  wire       [63:0]   stream_lsu_m2sPipe_payload_src2_data;
  wire       [63:0]   stream_lsu_m2sPipe_payload_imm;
  wire       [31:0]   stream_lsu_m2sPipe_payload_pc;
  wire       [31:0]   stream_lsu_m2sPipe_payload_instruction;
  reg                 stream_lsu_rValid;
  reg        [3:0]    stream_lsu_rData_rd_rob_ptr;
  reg                 stream_lsu_rData_micro_op_rd_wen;
  reg                 stream_lsu_rData_micro_op_src2_is_imm;
  reg        [3:0]    stream_lsu_rData_micro_op_lsu_ctrl_op;
  reg                 stream_lsu_rData_micro_op_lsu_is_load;
  reg                 stream_lsu_rData_micro_op_lsu_is_store;
  reg        [63:0]   stream_lsu_rData_src1_data;
  reg        [63:0]   stream_lsu_rData_src2_data;
  reg        [63:0]   stream_lsu_rData_imm;
  reg        [31:0]   stream_lsu_rData_pc;
  reg        [31:0]   stream_lsu_rData_instruction;
  wire                stream_wb_m2sPipe_valid;
  wire                stream_wb_m2sPipe_ready;
  wire       [4:0]    stream_wb_m2sPipe_payload_rd_addr;
  wire       [63:0]   stream_wb_m2sPipe_payload_rd_data;
  wire                stream_wb_m2sPipe_payload_rd_wen;
  wire       [3:0]    stream_wb_m2sPipe_payload_rob_ptr;
  wire       [31:0]   stream_wb_m2sPipe_payload_pc;
  wire       [31:0]   stream_wb_m2sPipe_payload_instruction;
  reg                 stream_wb_rValid;
  reg        [4:0]    stream_wb_rData_rd_addr;
  reg        [63:0]   stream_wb_rData_rd_data;
  reg                 stream_wb_rData_rd_wen;
  reg        [3:0]    stream_wb_rData_rob_ptr;
  reg        [31:0]   stream_wb_rData_pc;
  reg        [31:0]   stream_wb_rData_instruction;
  `ifndef SYNTHESIS
  reg [47:0] to_ports_alu_payload_micro_op_alu_ctrl_op_string;
  reg [39:0] to_ports_bju_payload_micro_op_bju_ctrl_op_string;
  reg [47:0] to_ports_bju_payload_micro_op_exp_ctrl_op_string;
  reg [31:0] to_ports_lsu_payload_micro_op_lsu_ctrl_op_string;
  reg [47:0] stream_alu_payload_micro_op_alu_ctrl_op_string;
  reg [39:0] stream_bju_payload_micro_op_bju_ctrl_op_string;
  reg [47:0] stream_bju_payload_micro_op_exp_ctrl_op_string;
  reg [31:0] stream_lsu_payload_micro_op_lsu_ctrl_op_string;
  reg [47:0] stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string;
  reg [47:0] stream_alu_rData_micro_op_alu_ctrl_op_string;
  reg [39:0] stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string;
  reg [47:0] stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string;
  reg [39:0] stream_bju_rData_micro_op_bju_ctrl_op_string;
  reg [47:0] stream_bju_rData_micro_op_exp_ctrl_op_string;
  reg [31:0] stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string;
  reg [31:0] stream_lsu_rData_micro_op_lsu_ctrl_op_string;
  `endif


  ARF arf_1 (
    .read_ports_rs1_data (arf_1_read_ports_rs1_data[63:0] ), //o
    .read_ports_rs2_data (arf_1_read_ports_rs2_data[63:0] ), //o
    .read_ports_rs1_addr (decode_1_rs1_addr[4:0]          ), //i
    .read_ports_rs2_addr (decode_1_rs2_addr[4:0]          ), //i
    .read_ports_rs1_req  (decode_1_rs1_ren                ), //i
    .read_ports_rs2_req  (decode_1_rs2_ren                ), //i
    .write_ports_rd_data (write_back_payload_rd_data[63:0]), //i
    .write_ports_rd_addr (write_back_payload_rd_addr[4:0] ), //i
    .write_ports_rd_wen  (arf_1_write_ports_rd_wen        ), //i
    .io_axiClk           (io_axiClk                       ), //i
    .cpu_rst             (cpu_rst                         )  //i
  );
  Decode decode_1 (
    .pc                           (src_stream_payload_pc[31:0]             ), //i
    .instr                        (src_stream_payload_instruction[31:0]    ), //i
    .rs1_addr                     (decode_1_rs1_addr[4:0]                  ), //o
    .rs2_addr                     (decode_1_rs2_addr[4:0]                  ), //o
    .rs1_ren                      (decode_1_rs1_ren                        ), //o
    .rs2_ren                      (decode_1_rs2_ren                        ), //o
    .rd_addr                      (decode_1_rd_addr[4:0]                   ), //o
    .imm                          (decode_1_imm[63:0]                      ), //o
    .alu_micro_op_rd_wen          (decode_1_alu_micro_op_rd_wen            ), //o
    .alu_micro_op_src2_is_imm     (decode_1_alu_micro_op_src2_is_imm       ), //o
    .alu_micro_op_alu_ctrl_op     (decode_1_alu_micro_op_alu_ctrl_op[4:0]  ), //o
    .alu_micro_op_alu_is_word     (decode_1_alu_micro_op_alu_is_word       ), //o
    .lsu_micro_op_rd_wen          (decode_1_lsu_micro_op_rd_wen            ), //o
    .lsu_micro_op_src2_is_imm     (decode_1_lsu_micro_op_src2_is_imm       ), //o
    .lsu_micro_op_lsu_ctrl_op     (decode_1_lsu_micro_op_lsu_ctrl_op[3:0]  ), //o
    .lsu_micro_op_lsu_is_load     (decode_1_lsu_micro_op_lsu_is_load       ), //o
    .lsu_micro_op_lsu_is_store    (decode_1_lsu_micro_op_lsu_is_store      ), //o
    .bju_micro_op_rd_wen          (decode_1_bju_micro_op_rd_wen            ), //o
    .bju_micro_op_src2_is_imm     (decode_1_bju_micro_op_src2_is_imm       ), //o
    .bju_micro_op_bju_ctrl_op     (decode_1_bju_micro_op_bju_ctrl_op[3:0]  ), //o
    .bju_micro_op_bju_rd_eq_rs1   (decode_1_bju_micro_op_bju_rd_eq_rs1     ), //o
    .bju_micro_op_bju_rd_is_link  (decode_1_bju_micro_op_bju_rd_is_link    ), //o
    .bju_micro_op_bju_rs1_is_link (decode_1_bju_micro_op_bju_rs1_is_link   ), //o
    .bju_micro_op_exp_ctrl_op     (decode_1_bju_micro_op_exp_ctrl_op[3:0]  ), //o
    .bju_micro_op_exp_csr_addr    (decode_1_bju_micro_op_exp_csr_addr[11:0]), //o
    .bju_micro_op_exp_csr_wen     (decode_1_bju_micro_op_exp_csr_wen       ), //o
    .exception                    (decode_1_exception[2:0]                 ), //o
    .rob_micro_op                 (decode_1_rob_micro_op[1:0]              )  //o
  );
  `ifndef SYNTHESIS
  always @(*) begin
    case(to_ports_alu_payload_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "REMUW ";
      default : to_ports_alu_payload_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(to_ports_bju_payload_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "CSR  ";
      default : to_ports_bju_payload_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(to_ports_bju_payload_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : to_ports_bju_payload_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(to_ports_lsu_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "SD  ";
      default : to_ports_lsu_payload_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(stream_alu_payload_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : stream_alu_payload_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : stream_alu_payload_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : stream_alu_payload_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : stream_alu_payload_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : stream_alu_payload_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : stream_alu_payload_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : stream_alu_payload_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : stream_alu_payload_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : stream_alu_payload_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : stream_alu_payload_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : stream_alu_payload_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : stream_alu_payload_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : stream_alu_payload_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : stream_alu_payload_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : stream_alu_payload_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : stream_alu_payload_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : stream_alu_payload_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : stream_alu_payload_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : stream_alu_payload_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : stream_alu_payload_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : stream_alu_payload_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : stream_alu_payload_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : stream_alu_payload_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : stream_alu_payload_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : stream_alu_payload_micro_op_alu_ctrl_op_string = "REMUW ";
      default : stream_alu_payload_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(stream_bju_payload_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : stream_bju_payload_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : stream_bju_payload_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : stream_bju_payload_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : stream_bju_payload_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : stream_bju_payload_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : stream_bju_payload_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : stream_bju_payload_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : stream_bju_payload_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : stream_bju_payload_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : stream_bju_payload_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : stream_bju_payload_micro_op_bju_ctrl_op_string = "CSR  ";
      default : stream_bju_payload_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(stream_bju_payload_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : stream_bju_payload_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : stream_bju_payload_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : stream_bju_payload_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : stream_bju_payload_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : stream_bju_payload_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : stream_bju_payload_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : stream_bju_payload_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : stream_bju_payload_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : stream_bju_payload_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : stream_bju_payload_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : stream_bju_payload_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(stream_lsu_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "SD  ";
      default : stream_lsu_payload_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "REMUW ";
      default : stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(stream_alu_rData_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : stream_alu_rData_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : stream_alu_rData_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : stream_alu_rData_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : stream_alu_rData_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : stream_alu_rData_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : stream_alu_rData_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : stream_alu_rData_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : stream_alu_rData_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : stream_alu_rData_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : stream_alu_rData_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : stream_alu_rData_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : stream_alu_rData_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : stream_alu_rData_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : stream_alu_rData_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : stream_alu_rData_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : stream_alu_rData_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : stream_alu_rData_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : stream_alu_rData_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : stream_alu_rData_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : stream_alu_rData_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : stream_alu_rData_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : stream_alu_rData_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : stream_alu_rData_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : stream_alu_rData_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : stream_alu_rData_micro_op_alu_ctrl_op_string = "REMUW ";
      default : stream_alu_rData_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "CSR  ";
      default : stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(stream_bju_rData_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : stream_bju_rData_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : stream_bju_rData_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : stream_bju_rData_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : stream_bju_rData_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : stream_bju_rData_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : stream_bju_rData_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : stream_bju_rData_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : stream_bju_rData_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : stream_bju_rData_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : stream_bju_rData_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : stream_bju_rData_micro_op_bju_ctrl_op_string = "CSR  ";
      default : stream_bju_rData_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(stream_bju_rData_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : stream_bju_rData_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : stream_bju_rData_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : stream_bju_rData_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : stream_bju_rData_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : stream_bju_rData_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : stream_bju_rData_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : stream_bju_rData_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : stream_bju_rData_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : stream_bju_rData_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : stream_bju_rData_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : stream_bju_rData_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "SD  ";
      default : stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(stream_lsu_rData_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "SD  ";
      default : stream_lsu_rData_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  `endif

  always @(*) begin
    src_stream_valid = src_ports_valid; // @ Stream.scala l294
    if(flush) begin
      src_stream_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    src_ports_ready = src_stream_ready; // @ Stream.scala l295
    if(flush) begin
      src_ports_ready = 1'b1; // @ Stream.scala l440
    end
  end

  assign src_stream_payload_pc = src_ports_payload_pc; // @ Stream.scala l296
  assign src_stream_payload_pc_next = src_ports_payload_pc_next; // @ Stream.scala l296
  assign src_stream_payload_bpu_pred_taken = src_ports_payload_bpu_pred_taken; // @ Stream.scala l296
  assign src_stream_payload_instruction = src_ports_payload_instruction; // @ Stream.scala l296
  assign fire = (src_stream_valid && ready); // @ BaseType.scala l305
  assign to_alu = (decode_1_rob_micro_op == RobMicroOp_ALU); // @ BaseType.scala l305
  assign to_bju = (decode_1_rob_micro_op == RobMicroOp_BJU); // @ BaseType.scala l305
  assign to_lsu = (decode_1_rob_micro_op == RobMicroOp_LSU); // @ BaseType.scala l305
  assign src1 = ((decode_1_rs1_addr == 5'h0) ? 64'h0 : arf_1_read_ports_rs1_data); // @ Expression.scala l1431
  assign src2 = ((decode_1_rs2_addr == 5'h0) ? 64'h0 : arf_1_read_ports_rs2_data); // @ Expression.scala l1431
  assign trap_or_print = ((src_ports_payload_instruction == 32'h0000006b) || (src_ports_payload_instruction == 32'h0000007b)); // @ BaseType.scala l305
  assign stream_wb_fire = (stream_wb_valid && stream_wb_ready); // @ BaseType.scala l305
  assign stream_alu_fire = (stream_alu_valid && stream_alu_ready); // @ BaseType.scala l305
  assign wb_ports_alu_fire = (wb_ports_alu_valid && wb_ports_alu_ready); // @ BaseType.scala l305
  assign stream_bju_fire = (stream_bju_valid && stream_bju_ready); // @ BaseType.scala l305
  assign wb_ports_bju_fire = (wb_ports_bju_valid && wb_ports_bju_ready); // @ BaseType.scala l305
  assign stream_lsu_fire = (stream_lsu_valid && stream_lsu_ready); // @ BaseType.scala l305
  assign wb_ports_lsu_fire = (wb_ports_lsu_valid && wb_ports_lsu_ready); // @ BaseType.scala l305
  assign write_back_fire = (write_back_valid && write_back_ready); // @ BaseType.scala l305
  assign arf_1_write_ports_rd_wen = (write_back_fire && write_back_payload_rd_wen); // @ Control.scala l118
  assign stream_alu_valid = (fire && to_alu); // @ Control.scala l126
  assign stream_alu_payload_rd_rob_ptr = 4'b0000; // @ Control.scala l127
  assign stream_alu_payload_micro_op_rd_wen = decode_1_alu_micro_op_rd_wen; // @ Control.scala l128
  assign stream_alu_payload_micro_op_src2_is_imm = decode_1_alu_micro_op_src2_is_imm; // @ Control.scala l128
  assign stream_alu_payload_micro_op_alu_ctrl_op = decode_1_alu_micro_op_alu_ctrl_op; // @ Control.scala l128
  assign stream_alu_payload_micro_op_alu_is_word = decode_1_alu_micro_op_alu_is_word; // @ Control.scala l128
  assign stream_alu_payload_src1_data = src1; // @ Control.scala l129
  assign stream_alu_payload_src2_data = (decode_1_alu_micro_op_src2_is_imm ? decode_1_imm : src2); // @ Control.scala l130
  always @(*) begin
    stream_alu_ready = stream_alu_m2sPipe_ready; // @ Stream.scala l367
    if((! stream_alu_m2sPipe_valid)) begin
      stream_alu_ready = 1'b1; // @ Stream.scala l368
    end
  end

  assign stream_alu_m2sPipe_valid = stream_alu_rValid; // @ Stream.scala l370
  assign stream_alu_m2sPipe_payload_rd_rob_ptr = stream_alu_rData_rd_rob_ptr; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_micro_op_rd_wen = stream_alu_rData_micro_op_rd_wen; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_micro_op_src2_is_imm = stream_alu_rData_micro_op_src2_is_imm; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op = stream_alu_rData_micro_op_alu_ctrl_op; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_micro_op_alu_is_word = stream_alu_rData_micro_op_alu_is_word; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_src1_data = stream_alu_rData_src1_data; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_src2_data = stream_alu_rData_src2_data; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_pc = stream_alu_rData_pc; // @ Stream.scala l371
  assign stream_alu_m2sPipe_payload_instruction = stream_alu_rData_instruction; // @ Stream.scala l371
  assign to_ports_alu_valid = stream_alu_m2sPipe_valid; // @ Stream.scala l294
  assign stream_alu_m2sPipe_ready = to_ports_alu_ready; // @ Stream.scala l295
  assign to_ports_alu_payload_rd_rob_ptr = stream_alu_m2sPipe_payload_rd_rob_ptr; // @ Stream.scala l296
  assign to_ports_alu_payload_micro_op_rd_wen = stream_alu_m2sPipe_payload_micro_op_rd_wen; // @ Stream.scala l296
  assign to_ports_alu_payload_micro_op_src2_is_imm = stream_alu_m2sPipe_payload_micro_op_src2_is_imm; // @ Stream.scala l296
  assign to_ports_alu_payload_micro_op_alu_ctrl_op = stream_alu_m2sPipe_payload_micro_op_alu_ctrl_op; // @ Stream.scala l296
  assign to_ports_alu_payload_micro_op_alu_is_word = stream_alu_m2sPipe_payload_micro_op_alu_is_word; // @ Stream.scala l296
  assign to_ports_alu_payload_src1_data = stream_alu_m2sPipe_payload_src1_data; // @ Stream.scala l296
  assign to_ports_alu_payload_src2_data = stream_alu_m2sPipe_payload_src2_data; // @ Stream.scala l296
  assign to_ports_alu_payload_pc = stream_alu_m2sPipe_payload_pc; // @ Stream.scala l296
  assign to_ports_alu_payload_instruction = stream_alu_m2sPipe_payload_instruction; // @ Stream.scala l296
  assign stream_alu_payload_pc = src_stream_payload_pc; // @ Control.scala l133
  assign stream_alu_payload_instruction = src_stream_payload_instruction; // @ Control.scala l134
  assign stream_bju_valid = (fire && to_bju); // @ Control.scala l138
  assign stream_bju_payload_rd_rob_ptr = 4'b0000; // @ Control.scala l139
  assign stream_bju_payload_micro_op_rd_wen = decode_1_bju_micro_op_rd_wen; // @ Control.scala l140
  assign stream_bju_payload_micro_op_src2_is_imm = decode_1_bju_micro_op_src2_is_imm; // @ Control.scala l140
  assign stream_bju_payload_micro_op_bju_ctrl_op = decode_1_bju_micro_op_bju_ctrl_op; // @ Control.scala l140
  assign stream_bju_payload_micro_op_bju_rd_eq_rs1 = decode_1_bju_micro_op_bju_rd_eq_rs1; // @ Control.scala l140
  assign stream_bju_payload_micro_op_bju_rd_is_link = decode_1_bju_micro_op_bju_rd_is_link; // @ Control.scala l140
  assign stream_bju_payload_micro_op_bju_rs1_is_link = decode_1_bju_micro_op_bju_rs1_is_link; // @ Control.scala l140
  assign stream_bju_payload_micro_op_exp_ctrl_op = decode_1_bju_micro_op_exp_ctrl_op; // @ Control.scala l140
  assign stream_bju_payload_micro_op_exp_csr_addr = decode_1_bju_micro_op_exp_csr_addr; // @ Control.scala l140
  assign stream_bju_payload_micro_op_exp_csr_wen = decode_1_bju_micro_op_exp_csr_wen; // @ Control.scala l140
  assign stream_bju_payload_src1_data = src1; // @ Control.scala l141
  assign stream_bju_payload_src2_data = (decode_1_alu_micro_op_src2_is_imm ? decode_1_imm : src2); // @ Control.scala l142
  assign stream_bju_payload_imm = decode_1_imm; // @ Control.scala l143
  assign stream_bju_payload_pc = src_stream_payload_pc; // @ Control.scala l144
  assign stream_bju_payload_pc_next = src_stream_payload_pc_next; // @ Control.scala l145
  assign stream_bju_payload_bpu_pred_taken = src_stream_payload_bpu_pred_taken; // @ Control.scala l146
  always @(*) begin
    stream_bju_ready = stream_bju_m2sPipe_ready; // @ Stream.scala l367
    if((! stream_bju_m2sPipe_valid)) begin
      stream_bju_ready = 1'b1; // @ Stream.scala l368
    end
  end

  assign stream_bju_m2sPipe_valid = stream_bju_rValid; // @ Stream.scala l370
  assign stream_bju_m2sPipe_payload_rd_rob_ptr = stream_bju_rData_rd_rob_ptr; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_rd_wen = stream_bju_rData_micro_op_rd_wen; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_src2_is_imm = stream_bju_rData_micro_op_src2_is_imm; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op = stream_bju_rData_micro_op_bju_ctrl_op; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_bju_rd_eq_rs1 = stream_bju_rData_micro_op_bju_rd_eq_rs1; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_bju_rd_is_link = stream_bju_rData_micro_op_bju_rd_is_link; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_bju_rs1_is_link = stream_bju_rData_micro_op_bju_rs1_is_link; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op = stream_bju_rData_micro_op_exp_ctrl_op; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_exp_csr_addr = stream_bju_rData_micro_op_exp_csr_addr; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_micro_op_exp_csr_wen = stream_bju_rData_micro_op_exp_csr_wen; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_src1_data = stream_bju_rData_src1_data; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_src2_data = stream_bju_rData_src2_data; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_imm = stream_bju_rData_imm; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_pc = stream_bju_rData_pc; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_pc_next = stream_bju_rData_pc_next; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_bpu_pred_taken = stream_bju_rData_bpu_pred_taken; // @ Stream.scala l371
  assign stream_bju_m2sPipe_payload_instruction = stream_bju_rData_instruction; // @ Stream.scala l371
  assign to_ports_bju_valid = stream_bju_m2sPipe_valid; // @ Stream.scala l294
  assign stream_bju_m2sPipe_ready = to_ports_bju_ready; // @ Stream.scala l295
  assign to_ports_bju_payload_rd_rob_ptr = stream_bju_m2sPipe_payload_rd_rob_ptr; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_rd_wen = stream_bju_m2sPipe_payload_micro_op_rd_wen; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_src2_is_imm = stream_bju_m2sPipe_payload_micro_op_src2_is_imm; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_bju_ctrl_op = stream_bju_m2sPipe_payload_micro_op_bju_ctrl_op; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_bju_rd_eq_rs1 = stream_bju_m2sPipe_payload_micro_op_bju_rd_eq_rs1; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_bju_rd_is_link = stream_bju_m2sPipe_payload_micro_op_bju_rd_is_link; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_bju_rs1_is_link = stream_bju_m2sPipe_payload_micro_op_bju_rs1_is_link; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_exp_ctrl_op = stream_bju_m2sPipe_payload_micro_op_exp_ctrl_op; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_exp_csr_addr = stream_bju_m2sPipe_payload_micro_op_exp_csr_addr; // @ Stream.scala l296
  assign to_ports_bju_payload_micro_op_exp_csr_wen = stream_bju_m2sPipe_payload_micro_op_exp_csr_wen; // @ Stream.scala l296
  assign to_ports_bju_payload_src1_data = stream_bju_m2sPipe_payload_src1_data; // @ Stream.scala l296
  assign to_ports_bju_payload_src2_data = stream_bju_m2sPipe_payload_src2_data; // @ Stream.scala l296
  assign to_ports_bju_payload_imm = stream_bju_m2sPipe_payload_imm; // @ Stream.scala l296
  assign to_ports_bju_payload_pc = stream_bju_m2sPipe_payload_pc; // @ Stream.scala l296
  assign to_ports_bju_payload_pc_next = stream_bju_m2sPipe_payload_pc_next; // @ Stream.scala l296
  assign to_ports_bju_payload_bpu_pred_taken = stream_bju_m2sPipe_payload_bpu_pred_taken; // @ Stream.scala l296
  assign to_ports_bju_payload_instruction = stream_bju_m2sPipe_payload_instruction; // @ Stream.scala l296
  assign stream_bju_payload_instruction = src_stream_payload_instruction; // @ Control.scala l149
  assign stream_lsu_valid = (fire && to_lsu); // @ Control.scala l153
  assign stream_lsu_payload_rd_rob_ptr = 4'b0000; // @ Control.scala l154
  assign stream_lsu_payload_micro_op_rd_wen = decode_1_lsu_micro_op_rd_wen; // @ Control.scala l155
  assign stream_lsu_payload_micro_op_src2_is_imm = decode_1_lsu_micro_op_src2_is_imm; // @ Control.scala l155
  assign stream_lsu_payload_micro_op_lsu_ctrl_op = decode_1_lsu_micro_op_lsu_ctrl_op; // @ Control.scala l155
  assign stream_lsu_payload_micro_op_lsu_is_load = decode_1_lsu_micro_op_lsu_is_load; // @ Control.scala l155
  assign stream_lsu_payload_micro_op_lsu_is_store = decode_1_lsu_micro_op_lsu_is_store; // @ Control.scala l155
  assign stream_lsu_payload_src1_data = src1; // @ Control.scala l156
  assign stream_lsu_payload_src2_data = src2; // @ Control.scala l157
  assign stream_lsu_payload_imm = decode_1_imm; // @ Control.scala l158
  always @(*) begin
    stream_lsu_ready = stream_lsu_m2sPipe_ready; // @ Stream.scala l367
    if((! stream_lsu_m2sPipe_valid)) begin
      stream_lsu_ready = 1'b1; // @ Stream.scala l368
    end
  end

  assign stream_lsu_m2sPipe_valid = stream_lsu_rValid; // @ Stream.scala l370
  assign stream_lsu_m2sPipe_payload_rd_rob_ptr = stream_lsu_rData_rd_rob_ptr; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_micro_op_rd_wen = stream_lsu_rData_micro_op_rd_wen; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_micro_op_src2_is_imm = stream_lsu_rData_micro_op_src2_is_imm; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op = stream_lsu_rData_micro_op_lsu_ctrl_op; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_micro_op_lsu_is_load = stream_lsu_rData_micro_op_lsu_is_load; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_micro_op_lsu_is_store = stream_lsu_rData_micro_op_lsu_is_store; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_src1_data = stream_lsu_rData_src1_data; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_src2_data = stream_lsu_rData_src2_data; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_imm = stream_lsu_rData_imm; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_pc = stream_lsu_rData_pc; // @ Stream.scala l371
  assign stream_lsu_m2sPipe_payload_instruction = stream_lsu_rData_instruction; // @ Stream.scala l371
  assign to_ports_lsu_valid = stream_lsu_m2sPipe_valid; // @ Stream.scala l294
  assign stream_lsu_m2sPipe_ready = to_ports_lsu_ready; // @ Stream.scala l295
  assign to_ports_lsu_payload_rd_rob_ptr = stream_lsu_m2sPipe_payload_rd_rob_ptr; // @ Stream.scala l296
  assign to_ports_lsu_payload_micro_op_rd_wen = stream_lsu_m2sPipe_payload_micro_op_rd_wen; // @ Stream.scala l296
  assign to_ports_lsu_payload_micro_op_src2_is_imm = stream_lsu_m2sPipe_payload_micro_op_src2_is_imm; // @ Stream.scala l296
  assign to_ports_lsu_payload_micro_op_lsu_ctrl_op = stream_lsu_m2sPipe_payload_micro_op_lsu_ctrl_op; // @ Stream.scala l296
  assign to_ports_lsu_payload_micro_op_lsu_is_load = stream_lsu_m2sPipe_payload_micro_op_lsu_is_load; // @ Stream.scala l296
  assign to_ports_lsu_payload_micro_op_lsu_is_store = stream_lsu_m2sPipe_payload_micro_op_lsu_is_store; // @ Stream.scala l296
  assign to_ports_lsu_payload_src1_data = stream_lsu_m2sPipe_payload_src1_data; // @ Stream.scala l296
  assign to_ports_lsu_payload_src2_data = stream_lsu_m2sPipe_payload_src2_data; // @ Stream.scala l296
  assign to_ports_lsu_payload_imm = stream_lsu_m2sPipe_payload_imm; // @ Stream.scala l296
  assign to_ports_lsu_payload_pc = stream_lsu_m2sPipe_payload_pc; // @ Stream.scala l296
  assign to_ports_lsu_payload_instruction = stream_lsu_m2sPipe_payload_instruction; // @ Stream.scala l296
  assign stream_lsu_payload_pc = src_stream_payload_pc; // @ Control.scala l161
  assign stream_lsu_payload_instruction = src_stream_payload_instruction; // @ Control.scala l162
  assign wb_ports_alu_ready = 1'b1; // @ Control.scala l166
  assign wb_ports_bju_ready = 1'b1; // @ Control.scala l167
  assign wb_ports_lsu_ready = 1'b1; // @ Control.scala l168
  assign src_stream_ready = ready; // @ Control.scala l169
  assign stream_wb_valid = ((((fire && trap_or_print) || (alu_busy && wb_ports_alu_valid)) || (bju_busy && wb_ports_bju_valid)) || (lsu_busy && wb_ports_lsu_valid)); // @ Control.scala l172
  assign stream_wb_payload_rd_addr = rd_addr_reg; // @ Control.scala l184
  assign stream_wb_payload_rd_data = (alu_busy ? wb_ports_alu_payload_result : (bju_busy ? wb_ports_bju_payload_result : (lsu_busy ? wb_ports_lsu_payload_result : 64'h0))); // @ Control.scala l186
  assign stream_wb_payload_rd_wen = (alu_busy ? wb_ports_alu_payload_rd_wen : (bju_busy ? wb_ports_bju_payload_rd_wen : (lsu_busy ? wb_ports_lsu_payload_rd_wen : 1'b0))); // @ Control.scala l190
  assign stream_wb_payload_rob_ptr = 4'b0000; // @ Control.scala l194
  assign stream_wb_payload_pc = (alu_busy ? wb_ports_alu_payload_pc : (bju_busy ? wb_ports_bju_payload_pc : (lsu_busy ? wb_ports_lsu_payload_pc : src_stream_payload_pc))); // @ Control.scala l197
  assign stream_wb_payload_instruction = (alu_busy ? wb_ports_alu_payload_instruction : (bju_busy ? wb_ports_bju_payload_instruction : (lsu_busy ? wb_ports_lsu_payload_instruction : src_stream_payload_instruction))); // @ Control.scala l201
  always @(*) begin
    stream_wb_ready = stream_wb_m2sPipe_ready; // @ Stream.scala l367
    if((! stream_wb_m2sPipe_valid)) begin
      stream_wb_ready = 1'b1; // @ Stream.scala l368
    end
  end

  assign stream_wb_m2sPipe_valid = stream_wb_rValid; // @ Stream.scala l370
  assign stream_wb_m2sPipe_payload_rd_addr = stream_wb_rData_rd_addr; // @ Stream.scala l371
  assign stream_wb_m2sPipe_payload_rd_data = stream_wb_rData_rd_data; // @ Stream.scala l371
  assign stream_wb_m2sPipe_payload_rd_wen = stream_wb_rData_rd_wen; // @ Stream.scala l371
  assign stream_wb_m2sPipe_payload_rob_ptr = stream_wb_rData_rob_ptr; // @ Stream.scala l371
  assign stream_wb_m2sPipe_payload_pc = stream_wb_rData_pc; // @ Stream.scala l371
  assign stream_wb_m2sPipe_payload_instruction = stream_wb_rData_instruction; // @ Stream.scala l371
  assign write_back_valid = stream_wb_m2sPipe_valid; // @ Stream.scala l294
  assign stream_wb_m2sPipe_ready = write_back_ready; // @ Stream.scala l295
  assign write_back_payload_rd_addr = stream_wb_m2sPipe_payload_rd_addr; // @ Stream.scala l296
  assign write_back_payload_rd_data = stream_wb_m2sPipe_payload_rd_data; // @ Stream.scala l296
  assign write_back_payload_rd_wen = stream_wb_m2sPipe_payload_rd_wen; // @ Stream.scala l296
  assign write_back_payload_rob_ptr = stream_wb_m2sPipe_payload_rob_ptr; // @ Stream.scala l296
  assign write_back_payload_pc = stream_wb_m2sPipe_payload_pc; // @ Stream.scala l296
  assign write_back_payload_instruction = stream_wb_m2sPipe_payload_instruction; // @ Stream.scala l296
  assign write_back_ready = 1'b1; // @ Control.scala l206
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      ready <= 1'b1; // @ Data.scala l400
      alu_busy <= 1'b0; // @ Data.scala l400
      bju_busy <= 1'b0; // @ Data.scala l400
      lsu_busy <= 1'b0; // @ Data.scala l400
      stream_alu_rValid <= 1'b0; // @ Data.scala l400
      stream_bju_rValid <= 1'b0; // @ Data.scala l400
      stream_lsu_rValid <= 1'b0; // @ Data.scala l400
      stream_wb_rValid <= 1'b0; // @ Data.scala l400
    end else begin
      if(flush) begin
        ready <= 1'b1; // @ Control.scala l67
      end else begin
        if((fire && trap_or_print)) begin
          ready <= 1'b1; // @ Control.scala l70
        end else begin
          if(fire) begin
            ready <= 1'b0; // @ Control.scala l73
          end else begin
            if(stream_wb_fire) begin
              ready <= 1'b1; // @ Control.scala l76
            end
          end
        end
      end
      if(stream_alu_fire) begin
        alu_busy <= 1'b1; // @ Control.scala l92
      end else begin
        if((alu_busy && wb_ports_alu_fire)) begin
          alu_busy <= 1'b0; // @ Control.scala l95
        end
      end
      if(stream_bju_fire) begin
        bju_busy <= 1'b1; // @ Control.scala l99
      end else begin
        if((bju_busy && wb_ports_bju_fire)) begin
          bju_busy <= 1'b0; // @ Control.scala l102
        end
      end
      if(stream_lsu_fire) begin
        lsu_busy <= 1'b1; // @ Control.scala l106
      end else begin
        if((lsu_busy && wb_ports_lsu_fire)) begin
          lsu_busy <= 1'b0; // @ Control.scala l109
        end
      end
      if(stream_alu_ready) begin
        stream_alu_rValid <= stream_alu_valid; // @ Stream.scala l361
      end
      if(stream_bju_ready) begin
        stream_bju_rValid <= stream_bju_valid; // @ Stream.scala l361
      end
      if(stream_lsu_ready) begin
        stream_lsu_rValid <= stream_lsu_valid; // @ Stream.scala l361
      end
      if(stream_wb_ready) begin
        stream_wb_rValid <= stream_wb_valid; // @ Stream.scala l361
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(fire) begin
      rd_addr_reg <= decode_1_rd_addr; // @ Control.scala l61
    end
    if(stream_alu_ready) begin
      stream_alu_rData_rd_rob_ptr <= stream_alu_payload_rd_rob_ptr; // @ Stream.scala l362
      stream_alu_rData_micro_op_rd_wen <= stream_alu_payload_micro_op_rd_wen; // @ Stream.scala l362
      stream_alu_rData_micro_op_src2_is_imm <= stream_alu_payload_micro_op_src2_is_imm; // @ Stream.scala l362
      stream_alu_rData_micro_op_alu_ctrl_op <= stream_alu_payload_micro_op_alu_ctrl_op; // @ Stream.scala l362
      stream_alu_rData_micro_op_alu_is_word <= stream_alu_payload_micro_op_alu_is_word; // @ Stream.scala l362
      stream_alu_rData_src1_data <= stream_alu_payload_src1_data; // @ Stream.scala l362
      stream_alu_rData_src2_data <= stream_alu_payload_src2_data; // @ Stream.scala l362
      stream_alu_rData_pc <= stream_alu_payload_pc; // @ Stream.scala l362
      stream_alu_rData_instruction <= stream_alu_payload_instruction; // @ Stream.scala l362
    end
    if(stream_bju_ready) begin
      stream_bju_rData_rd_rob_ptr <= stream_bju_payload_rd_rob_ptr; // @ Stream.scala l362
      stream_bju_rData_micro_op_rd_wen <= stream_bju_payload_micro_op_rd_wen; // @ Stream.scala l362
      stream_bju_rData_micro_op_src2_is_imm <= stream_bju_payload_micro_op_src2_is_imm; // @ Stream.scala l362
      stream_bju_rData_micro_op_bju_ctrl_op <= stream_bju_payload_micro_op_bju_ctrl_op; // @ Stream.scala l362
      stream_bju_rData_micro_op_bju_rd_eq_rs1 <= stream_bju_payload_micro_op_bju_rd_eq_rs1; // @ Stream.scala l362
      stream_bju_rData_micro_op_bju_rd_is_link <= stream_bju_payload_micro_op_bju_rd_is_link; // @ Stream.scala l362
      stream_bju_rData_micro_op_bju_rs1_is_link <= stream_bju_payload_micro_op_bju_rs1_is_link; // @ Stream.scala l362
      stream_bju_rData_micro_op_exp_ctrl_op <= stream_bju_payload_micro_op_exp_ctrl_op; // @ Stream.scala l362
      stream_bju_rData_micro_op_exp_csr_addr <= stream_bju_payload_micro_op_exp_csr_addr; // @ Stream.scala l362
      stream_bju_rData_micro_op_exp_csr_wen <= stream_bju_payload_micro_op_exp_csr_wen; // @ Stream.scala l362
      stream_bju_rData_src1_data <= stream_bju_payload_src1_data; // @ Stream.scala l362
      stream_bju_rData_src2_data <= stream_bju_payload_src2_data; // @ Stream.scala l362
      stream_bju_rData_imm <= stream_bju_payload_imm; // @ Stream.scala l362
      stream_bju_rData_pc <= stream_bju_payload_pc; // @ Stream.scala l362
      stream_bju_rData_pc_next <= stream_bju_payload_pc_next; // @ Stream.scala l362
      stream_bju_rData_bpu_pred_taken <= stream_bju_payload_bpu_pred_taken; // @ Stream.scala l362
      stream_bju_rData_instruction <= stream_bju_payload_instruction; // @ Stream.scala l362
    end
    if(stream_lsu_ready) begin
      stream_lsu_rData_rd_rob_ptr <= stream_lsu_payload_rd_rob_ptr; // @ Stream.scala l362
      stream_lsu_rData_micro_op_rd_wen <= stream_lsu_payload_micro_op_rd_wen; // @ Stream.scala l362
      stream_lsu_rData_micro_op_src2_is_imm <= stream_lsu_payload_micro_op_src2_is_imm; // @ Stream.scala l362
      stream_lsu_rData_micro_op_lsu_ctrl_op <= stream_lsu_payload_micro_op_lsu_ctrl_op; // @ Stream.scala l362
      stream_lsu_rData_micro_op_lsu_is_load <= stream_lsu_payload_micro_op_lsu_is_load; // @ Stream.scala l362
      stream_lsu_rData_micro_op_lsu_is_store <= stream_lsu_payload_micro_op_lsu_is_store; // @ Stream.scala l362
      stream_lsu_rData_src1_data <= stream_lsu_payload_src1_data; // @ Stream.scala l362
      stream_lsu_rData_src2_data <= stream_lsu_payload_src2_data; // @ Stream.scala l362
      stream_lsu_rData_imm <= stream_lsu_payload_imm; // @ Stream.scala l362
      stream_lsu_rData_pc <= stream_lsu_payload_pc; // @ Stream.scala l362
      stream_lsu_rData_instruction <= stream_lsu_payload_instruction; // @ Stream.scala l362
    end
    if(stream_wb_ready) begin
      stream_wb_rData_rd_addr <= stream_wb_payload_rd_addr; // @ Stream.scala l362
      stream_wb_rData_rd_data <= stream_wb_payload_rd_data; // @ Stream.scala l362
      stream_wb_rData_rd_wen <= stream_wb_payload_rd_wen; // @ Stream.scala l362
      stream_wb_rData_rob_ptr <= stream_wb_payload_rob_ptr; // @ Stream.scala l362
      stream_wb_rData_pc <= stream_wb_payload_pc; // @ Stream.scala l362
      stream_wb_rData_instruction <= stream_wb_payload_instruction; // @ Stream.scala l362
    end
  end


endmodule

module static_predictor (
  input      [31:0]   predict_pc,
  input      [31:0]   predict_imm,
  input               predict_valid,
  input               predict_jal,
  input               predict_branch,
  output reg          predict_taken,
  output reg [31:0]   target_pc
);

  wire                tmp_when;
  wire       [31:0]   tmp_target_pc;
  wire       [31:0]   tmp_target_pc_1;
  wire       [31:0]   tmp_target_pc_2;
  wire                tmp_when_1;
  wire       [31:0]   tmp_target_pc_3;
  wire       [31:0]   tmp_target_pc_4;
  wire       [31:0]   tmp_target_pc_5;

  assign tmp_when = (predict_valid && predict_jal);
  assign tmp_when_1 = (predict_valid && predict_branch);
  assign tmp_target_pc = ($signed(tmp_target_pc_1) + $signed(tmp_target_pc_2));
  assign tmp_target_pc_1 = predict_pc;
  assign tmp_target_pc_2 = predict_imm;
  assign tmp_target_pc_3 = ($signed(tmp_target_pc_4) + $signed(tmp_target_pc_5));
  assign tmp_target_pc_4 = predict_pc;
  assign tmp_target_pc_5 = predict_imm;
  always @(*) begin
    if(tmp_when) begin
      predict_taken = 1'b1; // @ Predictor.scala l234
    end else begin
      if(tmp_when_1) begin
        predict_taken = predict_imm[31]; // @ Predictor.scala l238
      end else begin
        predict_taken = 1'b0; // @ Predictor.scala l242
      end
    end
  end

  always @(*) begin
    if(tmp_when) begin
      target_pc = tmp_target_pc; // @ Predictor.scala l235
    end else begin
      if(tmp_when_1) begin
        target_pc = tmp_target_pc_3; // @ Predictor.scala l239
      end else begin
        target_pc = 32'h0; // @ Predictor.scala l243
      end
    end
  end


endmodule

module ICacheTop (
  input               flush,
  input               icache_ports_cmd_valid,
  output              icache_ports_cmd_ready,
  input      [31:0]   icache_ports_cmd_payload_addr,
  output              icache_ports_rsp_valid,
  output     [31:0]   icache_ports_rsp_payload_data,
  output reg          icache_ar_valid,
  input               icache_ar_ready,
  output reg [31:0]   icache_ar_payload_addr,
  output reg [1:0]    icache_ar_payload_id,
  output reg [7:0]    icache_ar_payload_len,
  output reg [2:0]    icache_ar_payload_size,
  output reg [1:0]    icache_ar_payload_burst,
  input               icache_r_valid,
  output              icache_r_ready,
  input      [63:0]   icache_r_payload_data,
  input      [1:0]    icache_r_payload_id,
  input      [1:0]    icache_r_payload_resp,
  input               icache_r_payload_last,
  input               io_axiClk,
  input               cpu_rst
);

  wire                icache_1_next_level_rsp_valid;
  wire                icache_1_cpu_cmd_ready;
  wire                icache_1_cpu_rsp_valid;
  wire       [31:0]   icache_1_cpu_rsp_payload_data;
  wire                icache_1_sram_0_ports_cmd_valid;
  wire       [9:0]    icache_1_sram_0_ports_cmd_payload_addr;
  wire                icache_1_sram_0_ports_cmd_payload_wen;
  wire       [31:0]   icache_1_sram_0_ports_cmd_payload_wdata;
  wire       [3:0]    icache_1_sram_0_ports_cmd_payload_wstrb;
  wire                icache_1_sram_1_ports_cmd_valid;
  wire       [9:0]    icache_1_sram_1_ports_cmd_payload_addr;
  wire                icache_1_sram_1_ports_cmd_payload_wen;
  wire       [31:0]   icache_1_sram_1_ports_cmd_payload_wdata;
  wire       [3:0]    icache_1_sram_1_ports_cmd_payload_wstrb;
  wire                icache_1_sram_2_ports_cmd_valid;
  wire       [9:0]    icache_1_sram_2_ports_cmd_payload_addr;
  wire                icache_1_sram_2_ports_cmd_payload_wen;
  wire       [31:0]   icache_1_sram_2_ports_cmd_payload_wdata;
  wire       [3:0]    icache_1_sram_2_ports_cmd_payload_wstrb;
  wire                icache_1_sram_3_ports_cmd_valid;
  wire       [9:0]    icache_1_sram_3_ports_cmd_payload_addr;
  wire                icache_1_sram_3_ports_cmd_payload_wen;
  wire       [31:0]   icache_1_sram_3_ports_cmd_payload_wdata;
  wire       [3:0]    icache_1_sram_3_ports_cmd_payload_wstrb;
  wire                icache_1_next_level_cmd_valid;
  wire       [31:0]   icache_1_next_level_cmd_payload_addr;
  wire       [3:0]    icache_1_next_level_cmd_payload_len;
  wire       [2:0]    icache_1_next_level_cmd_payload_size;
  wire                sram_area_0_sram_ports_rsp_valid;
  wire       [31:0]   sram_area_0_sram_ports_rsp_payload_data;
  wire                sram_area_1_sram_ports_rsp_valid;
  wire       [31:0]   sram_area_1_sram_ports_rsp_payload_data;
  wire                sram_area_2_sram_ports_rsp_valid;
  wire       [31:0]   sram_area_2_sram_ports_rsp_payload_data;
  wire                sram_area_3_sram_ports_rsp_valid;
  wire       [31:0]   sram_area_3_sram_ports_rsp_payload_data;
  reg        [3:0]    ar_len_cnt;
  wire                icache_ar_fire;
  wire                icache_ar_fire_1;
  wire                icache_ar_fire_2;

  ICache icache_1 (
    .flush                          (flush                                        ), //i
    .cpu_cmd_valid                  (icache_ports_cmd_valid                       ), //i
    .cpu_cmd_ready                  (icache_1_cpu_cmd_ready                       ), //o
    .cpu_cmd_payload_addr           (icache_ports_cmd_payload_addr[31:0]          ), //i
    .cpu_rsp_valid                  (icache_1_cpu_rsp_valid                       ), //o
    .cpu_rsp_payload_data           (icache_1_cpu_rsp_payload_data[31:0]          ), //o
    .sram_0_ports_cmd_valid         (icache_1_sram_0_ports_cmd_valid              ), //o
    .sram_0_ports_cmd_payload_addr  (icache_1_sram_0_ports_cmd_payload_addr[9:0]  ), //o
    .sram_0_ports_cmd_payload_wen   (icache_1_sram_0_ports_cmd_payload_wen        ), //o
    .sram_0_ports_cmd_payload_wdata (icache_1_sram_0_ports_cmd_payload_wdata[31:0]), //o
    .sram_0_ports_cmd_payload_wstrb (icache_1_sram_0_ports_cmd_payload_wstrb[3:0] ), //o
    .sram_0_ports_rsp_valid         (sram_area_0_sram_ports_rsp_valid             ), //i
    .sram_0_ports_rsp_payload_data  (sram_area_0_sram_ports_rsp_payload_data[31:0]), //i
    .sram_1_ports_cmd_valid         (icache_1_sram_1_ports_cmd_valid              ), //o
    .sram_1_ports_cmd_payload_addr  (icache_1_sram_1_ports_cmd_payload_addr[9:0]  ), //o
    .sram_1_ports_cmd_payload_wen   (icache_1_sram_1_ports_cmd_payload_wen        ), //o
    .sram_1_ports_cmd_payload_wdata (icache_1_sram_1_ports_cmd_payload_wdata[31:0]), //o
    .sram_1_ports_cmd_payload_wstrb (icache_1_sram_1_ports_cmd_payload_wstrb[3:0] ), //o
    .sram_1_ports_rsp_valid         (sram_area_1_sram_ports_rsp_valid             ), //i
    .sram_1_ports_rsp_payload_data  (sram_area_1_sram_ports_rsp_payload_data[31:0]), //i
    .sram_2_ports_cmd_valid         (icache_1_sram_2_ports_cmd_valid              ), //o
    .sram_2_ports_cmd_payload_addr  (icache_1_sram_2_ports_cmd_payload_addr[9:0]  ), //o
    .sram_2_ports_cmd_payload_wen   (icache_1_sram_2_ports_cmd_payload_wen        ), //o
    .sram_2_ports_cmd_payload_wdata (icache_1_sram_2_ports_cmd_payload_wdata[31:0]), //o
    .sram_2_ports_cmd_payload_wstrb (icache_1_sram_2_ports_cmd_payload_wstrb[3:0] ), //o
    .sram_2_ports_rsp_valid         (sram_area_2_sram_ports_rsp_valid             ), //i
    .sram_2_ports_rsp_payload_data  (sram_area_2_sram_ports_rsp_payload_data[31:0]), //i
    .sram_3_ports_cmd_valid         (icache_1_sram_3_ports_cmd_valid              ), //o
    .sram_3_ports_cmd_payload_addr  (icache_1_sram_3_ports_cmd_payload_addr[9:0]  ), //o
    .sram_3_ports_cmd_payload_wen   (icache_1_sram_3_ports_cmd_payload_wen        ), //o
    .sram_3_ports_cmd_payload_wdata (icache_1_sram_3_ports_cmd_payload_wdata[31:0]), //o
    .sram_3_ports_cmd_payload_wstrb (icache_1_sram_3_ports_cmd_payload_wstrb[3:0] ), //o
    .sram_3_ports_rsp_valid         (sram_area_3_sram_ports_rsp_valid             ), //i
    .sram_3_ports_rsp_payload_data  (sram_area_3_sram_ports_rsp_payload_data[31:0]), //i
    .next_level_cmd_valid           (icache_1_next_level_cmd_valid                ), //o
    .next_level_cmd_ready           (icache_ar_ready                              ), //i
    .next_level_cmd_payload_addr    (icache_1_next_level_cmd_payload_addr[31:0]   ), //o
    .next_level_cmd_payload_len     (icache_1_next_level_cmd_payload_len[3:0]     ), //o
    .next_level_cmd_payload_size    (icache_1_next_level_cmd_payload_size[2:0]    ), //o
    .next_level_rsp_valid           (icache_1_next_level_rsp_valid                ), //i
    .next_level_rsp_payload_data    (icache_r_payload_data[63:0]                  ), //i
    .io_axiClk                      (io_axiClk                                    ), //i
    .cpu_rst                        (cpu_rst                                      )  //i
  );
  Sram sram_area_0_sram (
    .ports_cmd_valid         (icache_1_sram_0_ports_cmd_valid              ), //i
    .ports_cmd_payload_addr  (icache_1_sram_0_ports_cmd_payload_addr[9:0]  ), //i
    .ports_cmd_payload_wen   (icache_1_sram_0_ports_cmd_payload_wen        ), //i
    .ports_cmd_payload_wdata (icache_1_sram_0_ports_cmd_payload_wdata[31:0]), //i
    .ports_cmd_payload_wstrb (icache_1_sram_0_ports_cmd_payload_wstrb[3:0] ), //i
    .ports_rsp_valid         (sram_area_0_sram_ports_rsp_valid             ), //o
    .ports_rsp_payload_data  (sram_area_0_sram_ports_rsp_payload_data[31:0]), //o
    .io_axiClk               (io_axiClk                                    ), //i
    .cpu_rst                 (cpu_rst                                      )  //i
  );
  Sram sram_area_1_sram (
    .ports_cmd_valid         (icache_1_sram_1_ports_cmd_valid              ), //i
    .ports_cmd_payload_addr  (icache_1_sram_1_ports_cmd_payload_addr[9:0]  ), //i
    .ports_cmd_payload_wen   (icache_1_sram_1_ports_cmd_payload_wen        ), //i
    .ports_cmd_payload_wdata (icache_1_sram_1_ports_cmd_payload_wdata[31:0]), //i
    .ports_cmd_payload_wstrb (icache_1_sram_1_ports_cmd_payload_wstrb[3:0] ), //i
    .ports_rsp_valid         (sram_area_1_sram_ports_rsp_valid             ), //o
    .ports_rsp_payload_data  (sram_area_1_sram_ports_rsp_payload_data[31:0]), //o
    .io_axiClk               (io_axiClk                                    ), //i
    .cpu_rst                 (cpu_rst                                      )  //i
  );
  Sram sram_area_2_sram (
    .ports_cmd_valid         (icache_1_sram_2_ports_cmd_valid              ), //i
    .ports_cmd_payload_addr  (icache_1_sram_2_ports_cmd_payload_addr[9:0]  ), //i
    .ports_cmd_payload_wen   (icache_1_sram_2_ports_cmd_payload_wen        ), //i
    .ports_cmd_payload_wdata (icache_1_sram_2_ports_cmd_payload_wdata[31:0]), //i
    .ports_cmd_payload_wstrb (icache_1_sram_2_ports_cmd_payload_wstrb[3:0] ), //i
    .ports_rsp_valid         (sram_area_2_sram_ports_rsp_valid             ), //o
    .ports_rsp_payload_data  (sram_area_2_sram_ports_rsp_payload_data[31:0]), //o
    .io_axiClk               (io_axiClk                                    ), //i
    .cpu_rst                 (cpu_rst                                      )  //i
  );
  Sram sram_area_3_sram (
    .ports_cmd_valid         (icache_1_sram_3_ports_cmd_valid              ), //i
    .ports_cmd_payload_addr  (icache_1_sram_3_ports_cmd_payload_addr[9:0]  ), //i
    .ports_cmd_payload_wen   (icache_1_sram_3_ports_cmd_payload_wen        ), //i
    .ports_cmd_payload_wdata (icache_1_sram_3_ports_cmd_payload_wdata[31:0]), //i
    .ports_cmd_payload_wstrb (icache_1_sram_3_ports_cmd_payload_wstrb[3:0] ), //i
    .ports_rsp_valid         (sram_area_3_sram_ports_rsp_valid             ), //o
    .ports_rsp_payload_data  (sram_area_3_sram_ports_rsp_payload_data[31:0]), //o
    .io_axiClk               (io_axiClk                                    ), //i
    .cpu_rst                 (cpu_rst                                      )  //i
  );
  assign icache_ports_cmd_ready = icache_1_cpu_cmd_ready; // @ ICache.scala l226
  assign icache_ports_rsp_valid = icache_1_cpu_rsp_valid; // @ ICache.scala l227
  assign icache_ports_rsp_payload_data = icache_1_cpu_rsp_payload_data; // @ ICache.scala l227
  assign icache_ar_fire = (icache_ar_valid && icache_ar_ready); // @ BaseType.scala l305
  assign icache_ar_fire_1 = (icache_ar_valid && icache_ar_ready); // @ BaseType.scala l305
  assign icache_ar_fire_2 = (icache_ar_valid && icache_ar_ready); // @ BaseType.scala l305
  assign icache_r_ready = 1'b1; // @ ICache.scala l297
  assign icache_1_next_level_rsp_valid = (icache_r_valid && (icache_r_payload_id == 2'b00)); // @ ICache.scala l298
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      icache_ar_valid <= 1'b0; // @ Data.scala l400
      icache_ar_payload_id <= 2'b00; // @ Data.scala l400
      icache_ar_payload_len <= 8'h0; // @ Data.scala l400
      icache_ar_payload_size <= 3'b000; // @ Data.scala l400
      icache_ar_payload_burst <= 2'b00; // @ Data.scala l400
      icache_ar_payload_addr <= 32'h0; // @ Data.scala l400
      ar_len_cnt <= 4'b0000; // @ Data.scala l400
    end else begin
      if((icache_ar_fire && (4'b0000 < ar_len_cnt))) begin
        ar_len_cnt <= (ar_len_cnt - 4'b0001); // @ ICache.scala l266
      end else begin
        if(icache_1_next_level_cmd_valid) begin
          ar_len_cnt <= icache_1_next_level_cmd_payload_len; // @ ICache.scala l269
        end
      end
      if(icache_1_next_level_cmd_valid) begin
        icache_ar_valid <= 1'b1; // @ ICache.scala l273
      end else begin
        if(icache_ar_fire_1) begin
          if((4'b0000 < ar_len_cnt)) begin
            icache_ar_valid <= 1'b1; // @ ICache.scala l277
          end else begin
            icache_ar_valid <= 1'b0; // @ ICache.scala l279
          end
        end
      end
      icache_ar_payload_id <= 2'b00; // @ ICache.scala l282
      icache_ar_payload_len <= 8'h0; // @ ICache.scala l283
      icache_ar_payload_size <= icache_1_next_level_cmd_payload_size; // @ ICache.scala l284
      icache_ar_payload_burst <= 2'b01; // @ ICache.scala l285
      if(icache_ar_fire_2) begin
        icache_ar_payload_addr <= (icache_ar_payload_addr + 32'h00000008); // @ ICache.scala l290
      end else begin
        if(icache_1_next_level_cmd_valid) begin
          icache_ar_payload_addr <= icache_1_next_level_cmd_payload_addr; // @ ICache.scala l293
        end
      end
    end
  end


endmodule

module FetchStage (
  input               flush,
  input               stall,
  input               interrupt_vld,
  input      [31:0]   interrupt_pc,
  input               redirect_vld,
  input      [31:0]   redirect_pc,
  output              icache_ports_cmd_valid,
  input               icache_ports_cmd_ready,
  output     [31:0]   icache_ports_cmd_payload_addr,
  input               icache_ports_rsp_valid,
  input      [31:0]   icache_ports_rsp_payload_data,
  output     [31:0]   bpu_predict_pc,
  output              bpu_predict_valid,
  input               bpu_predict_taken,
  input      [31:0]   bpu_target_pc,
  output              dst_ports_valid,
  input               dst_ports_ready,
  output     [31:0]   dst_ports_payload_pc,
  output     [31:0]   dst_ports_payload_pc_next,
  output              dst_ports_payload_bpu_pred_taken,
  output     [31:0]   dst_ports_payload_instruction,
  output     [63:0]   bpu_predict_imm,
  output              bpu_predict_jal,
  output              bpu_predict_branch,
  input               io_axiClk,
  input               cpu_rst
);

  wire                fetch_1_dst_ports_ready;
  wire                fetch_1_icache_ports_cmd_valid;
  wire       [31:0]   fetch_1_icache_ports_cmd_payload_addr;
  wire       [31:0]   fetch_1_bpu_predict_pc;
  wire                fetch_1_bpu_predict_valid;
  wire                fetch_1_dst_ports_valid;
  wire       [31:0]   fetch_1_dst_ports_payload_pc;
  wire       [31:0]   fetch_1_dst_ports_payload_pc_next;
  wire                fetch_1_dst_ports_payload_bpu_pred_taken;
  wire       [31:0]   fetch_1_dst_ports_payload_instruction;
  wire       [63:0]   fetch_1_bpu_predict_imm;
  wire                fetch_1_bpu_predict_jal;
  wire                fetch_1_bpu_predict_branch;
  wire                tmp_src_stream_valid;
  reg                 tmp_dst_ports_ready;
  reg                 src_stream_valid;
  reg                 src_stream_ready;
  wire       [31:0]   src_stream_payload_pc;
  wire       [31:0]   src_stream_payload_pc_next;
  wire                src_stream_payload_bpu_pred_taken;
  wire       [31:0]   src_stream_payload_instruction;
  wire                src_stream_m2sPipe_valid;
  wire                src_stream_m2sPipe_ready;
  wire       [31:0]   src_stream_m2sPipe_payload_pc;
  wire       [31:0]   src_stream_m2sPipe_payload_pc_next;
  wire                src_stream_m2sPipe_payload_bpu_pred_taken;
  wire       [31:0]   src_stream_m2sPipe_payload_instruction;
  reg                 src_stream_rValid;
  reg        [31:0]   src_stream_rData_pc;
  reg        [31:0]   src_stream_rData_pc_next;
  reg                 src_stream_rData_bpu_pred_taken;
  reg        [31:0]   src_stream_rData_instruction;

  Fetch fetch_1 (
    .flush                            (flush                                      ), //i
    .stall                            (stall                                      ), //i
    .interrupt_vld                    (interrupt_vld                              ), //i
    .interrupt_pc                     (interrupt_pc[31:0]                         ), //i
    .redirect_vld                     (redirect_vld                               ), //i
    .redirect_pc                      (redirect_pc[31:0]                          ), //i
    .icache_ports_cmd_valid           (fetch_1_icache_ports_cmd_valid             ), //o
    .icache_ports_cmd_ready           (icache_ports_cmd_ready                     ), //i
    .icache_ports_cmd_payload_addr    (fetch_1_icache_ports_cmd_payload_addr[31:0]), //o
    .icache_ports_rsp_valid           (icache_ports_rsp_valid                     ), //i
    .icache_ports_rsp_payload_data    (icache_ports_rsp_payload_data[31:0]        ), //i
    .bpu_predict_pc                   (fetch_1_bpu_predict_pc[31:0]               ), //o
    .bpu_predict_valid                (fetch_1_bpu_predict_valid                  ), //o
    .bpu_predict_taken                (bpu_predict_taken                          ), //i
    .bpu_target_pc                    (bpu_target_pc[31:0]                        ), //i
    .dst_ports_valid                  (fetch_1_dst_ports_valid                    ), //o
    .dst_ports_ready                  (fetch_1_dst_ports_ready                    ), //i
    .dst_ports_payload_pc             (fetch_1_dst_ports_payload_pc[31:0]         ), //o
    .dst_ports_payload_pc_next        (fetch_1_dst_ports_payload_pc_next[31:0]    ), //o
    .dst_ports_payload_bpu_pred_taken (fetch_1_dst_ports_payload_bpu_pred_taken   ), //o
    .dst_ports_payload_instruction    (fetch_1_dst_ports_payload_instruction[31:0]), //o
    .bpu_predict_imm                  (fetch_1_bpu_predict_imm[63:0]              ), //o
    .bpu_predict_jal                  (fetch_1_bpu_predict_jal                    ), //o
    .bpu_predict_branch               (fetch_1_bpu_predict_branch                 ), //o
    .io_axiClk                        (io_axiClk                                  ), //i
    .cpu_rst                          (cpu_rst                                    )  //i
  );
  assign icache_ports_cmd_valid = fetch_1_icache_ports_cmd_valid; // @ Fetch.scala l235
  assign icache_ports_cmd_payload_addr = fetch_1_icache_ports_cmd_payload_addr; // @ Fetch.scala l235
  assign bpu_predict_pc = fetch_1_bpu_predict_pc; // @ Fetch.scala l239
  assign bpu_predict_valid = fetch_1_bpu_predict_valid; // @ Fetch.scala l240
  assign bpu_predict_imm = fetch_1_bpu_predict_imm; // @ Fetch.scala l241
  assign bpu_predict_jal = fetch_1_bpu_predict_jal; // @ Fetch.scala l242
  assign bpu_predict_branch = fetch_1_bpu_predict_branch; // @ Fetch.scala l243
  assign tmp_src_stream_valid = (! stall); // @ BaseType.scala l299
  assign fetch_1_dst_ports_ready = (tmp_dst_ports_ready && tmp_src_stream_valid); // @ Stream.scala l427
  always @(*) begin
    src_stream_valid = (fetch_1_dst_ports_valid && tmp_src_stream_valid); // @ Stream.scala l294
    if(flush) begin
      src_stream_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    tmp_dst_ports_ready = src_stream_ready; // @ Stream.scala l295
    if(flush) begin
      tmp_dst_ports_ready = 1'b1; // @ Stream.scala l440
    end
  end

  assign src_stream_payload_pc = fetch_1_dst_ports_payload_pc; // @ Stream.scala l296
  assign src_stream_payload_pc_next = fetch_1_dst_ports_payload_pc_next; // @ Stream.scala l296
  assign src_stream_payload_bpu_pred_taken = fetch_1_dst_ports_payload_bpu_pred_taken; // @ Stream.scala l296
  assign src_stream_payload_instruction = fetch_1_dst_ports_payload_instruction; // @ Stream.scala l296
  always @(*) begin
    src_stream_ready = src_stream_m2sPipe_ready; // @ Stream.scala l367
    if((! src_stream_m2sPipe_valid)) begin
      src_stream_ready = 1'b1; // @ Stream.scala l368
    end
  end

  assign src_stream_m2sPipe_valid = src_stream_rValid; // @ Stream.scala l370
  assign src_stream_m2sPipe_payload_pc = src_stream_rData_pc; // @ Stream.scala l371
  assign src_stream_m2sPipe_payload_pc_next = src_stream_rData_pc_next; // @ Stream.scala l371
  assign src_stream_m2sPipe_payload_bpu_pred_taken = src_stream_rData_bpu_pred_taken; // @ Stream.scala l371
  assign src_stream_m2sPipe_payload_instruction = src_stream_rData_instruction; // @ Stream.scala l371
  assign dst_ports_valid = src_stream_m2sPipe_valid; // @ Stream.scala l294
  assign src_stream_m2sPipe_ready = dst_ports_ready; // @ Stream.scala l295
  assign dst_ports_payload_pc = src_stream_m2sPipe_payload_pc; // @ Stream.scala l296
  assign dst_ports_payload_pc_next = src_stream_m2sPipe_payload_pc_next; // @ Stream.scala l296
  assign dst_ports_payload_bpu_pred_taken = src_stream_m2sPipe_payload_bpu_pred_taken; // @ Stream.scala l296
  assign dst_ports_payload_instruction = src_stream_m2sPipe_payload_instruction; // @ Stream.scala l296
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      src_stream_rValid <= 1'b0; // @ Data.scala l400
    end else begin
      if(src_stream_ready) begin
        src_stream_rValid <= src_stream_valid; // @ Stream.scala l361
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(src_stream_ready) begin
      src_stream_rData_pc <= src_stream_payload_pc; // @ Stream.scala l362
      src_stream_rData_pc_next <= src_stream_payload_pc_next; // @ Stream.scala l362
      src_stream_rData_bpu_pred_taken <= src_stream_payload_bpu_pred_taken; // @ Stream.scala l362
      src_stream_rData_instruction <= src_stream_payload_instruction; // @ Stream.scala l362
    end
  end


endmodule

module Axi4WriteOnlyUpsizer (
  input               io_input_aw_valid,
  output reg          io_input_aw_ready,
  input      [31:0]   io_input_aw_payload_addr,
  input      [1:0]    io_input_aw_payload_id,
  input      [3:0]    io_input_aw_payload_region,
  input      [7:0]    io_input_aw_payload_len,
  input      [2:0]    io_input_aw_payload_size,
  input      [1:0]    io_input_aw_payload_burst,
  input      [0:0]    io_input_aw_payload_lock,
  input      [3:0]    io_input_aw_payload_cache,
  input      [3:0]    io_input_aw_payload_qos,
  input      [2:0]    io_input_aw_payload_prot,
  input               io_input_w_valid,
  output              io_input_w_ready,
  input      [31:0]   io_input_w_payload_data,
  input      [3:0]    io_input_w_payload_strb,
  input               io_input_w_payload_last,
  output              io_input_b_valid,
  input               io_input_b_ready,
  output     [1:0]    io_input_b_payload_id,
  output     [1:0]    io_input_b_payload_resp,
  output              io_output_aw_valid,
  input               io_output_aw_ready,
  output     [31:0]   io_output_aw_payload_addr,
  output     [1:0]    io_output_aw_payload_id,
  output     [3:0]    io_output_aw_payload_region,
  output reg [7:0]    io_output_aw_payload_len,
  output reg [2:0]    io_output_aw_payload_size,
  output     [1:0]    io_output_aw_payload_burst,
  output     [0:0]    io_output_aw_payload_lock,
  output     [3:0]    io_output_aw_payload_cache,
  output     [3:0]    io_output_aw_payload_qos,
  output     [2:0]    io_output_aw_payload_prot,
  output              io_output_w_valid,
  input               io_output_w_ready,
  output     [63:0]   io_output_w_payload_data,
  output     [7:0]    io_output_w_payload_strb,
  output              io_output_w_payload_last,
  input               io_output_b_valid,
  output              io_output_b_ready,
  input      [1:0]    io_output_b_payload_id,
  input      [1:0]    io_output_b_payload_resp,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [14:0]   tmp_cmdLogic_byteCount;
  wire       [12:0]   tmp_cmdLogic_incrLen;
  wire       [12:0]   tmp_cmdLogic_incrLen_1;
  wire       [2:0]    tmp_cmdLogic_incrLen_2;
  wire                tmp_when;
  wire       [3:0]    tmp_dataLogic_byteCounterNext;
  wire       [7:0]    tmp_dataLogic_byteCounterNext_1;
  reg        [7:0]    tmp_dataLogic_byteActivity;
  wire       [1:0]    tmp_dataLogic_byteActivity_1;
  wire                tmp_when_1;
  wire                tmp_when_2;
  wire                tmp_when_3;
  wire                tmp_when_4;
  wire                tmp_when_5;
  wire                tmp_when_6;
  wire                tmp_when_7;
  wire                tmp_when_8;
  wire                cmdLogic_outputFork_valid;
  wire                cmdLogic_outputFork_ready;
  wire       [31:0]   cmdLogic_outputFork_payload_addr;
  wire       [1:0]    cmdLogic_outputFork_payload_id;
  wire       [3:0]    cmdLogic_outputFork_payload_region;
  wire       [7:0]    cmdLogic_outputFork_payload_len;
  wire       [2:0]    cmdLogic_outputFork_payload_size;
  wire       [1:0]    cmdLogic_outputFork_payload_burst;
  wire       [0:0]    cmdLogic_outputFork_payload_lock;
  wire       [3:0]    cmdLogic_outputFork_payload_cache;
  wire       [3:0]    cmdLogic_outputFork_payload_qos;
  wire       [2:0]    cmdLogic_outputFork_payload_prot;
  wire                cmdLogic_dataFork_valid;
  wire                cmdLogic_dataFork_ready;
  wire       [31:0]   cmdLogic_dataFork_payload_addr;
  wire       [1:0]    cmdLogic_dataFork_payload_id;
  wire       [3:0]    cmdLogic_dataFork_payload_region;
  wire       [7:0]    cmdLogic_dataFork_payload_len;
  wire       [2:0]    cmdLogic_dataFork_payload_size;
  wire       [1:0]    cmdLogic_dataFork_payload_burst;
  wire       [0:0]    cmdLogic_dataFork_payload_lock;
  wire       [3:0]    cmdLogic_dataFork_payload_cache;
  wire       [3:0]    cmdLogic_dataFork_payload_qos;
  wire       [2:0]    cmdLogic_dataFork_payload_prot;
  reg                 io_input_aw_fork2_logic_linkEnable_0;
  reg                 io_input_aw_fork2_logic_linkEnable_1;
  wire                cmdLogic_outputFork_fire;
  wire                cmdLogic_dataFork_fire;
  wire       [11:0]   cmdLogic_byteCount;
  wire       [9:0]    cmdLogic_incrLen;
  reg        [2:0]    dataLogic_byteCounter;
  reg        [2:0]    dataLogic_size;
  reg                 dataLogic_outputValid;
  reg                 dataLogic_outputLast;
  reg                 dataLogic_busy;
  reg                 dataLogic_incrementByteCounter;
  reg                 dataLogic_alwaysFire;
  wire       [3:0]    dataLogic_byteCounterNext;
  reg        [63:0]   dataLogic_dataBuffer;
  reg        [7:0]    dataLogic_maskBuffer;
  wire       [7:0]    dataLogic_byteActivity;
  wire                io_output_w_fire;
  wire                io_output_w_isStall;
  wire                io_input_w_fire;
  wire                cmdLogic_dataFork_fire_1;

  assign tmp_when = (io_output_aw_payload_burst == 2'b01);
  assign tmp_when_1 = dataLogic_byteActivity[0];
  assign tmp_when_2 = dataLogic_byteActivity[1];
  assign tmp_when_3 = dataLogic_byteActivity[2];
  assign tmp_when_4 = dataLogic_byteActivity[3];
  assign tmp_when_5 = dataLogic_byteActivity[4];
  assign tmp_when_6 = dataLogic_byteActivity[5];
  assign tmp_when_7 = dataLogic_byteActivity[6];
  assign tmp_when_8 = dataLogic_byteActivity[7];
  assign tmp_cmdLogic_byteCount = ({7'd0,io_input_aw_payload_len} <<< io_input_aw_payload_size);
  assign tmp_cmdLogic_incrLen = ({1'b0,cmdLogic_byteCount} + tmp_cmdLogic_incrLen_1);
  assign tmp_cmdLogic_incrLen_2 = io_input_aw_payload_addr[2 : 0];
  assign tmp_cmdLogic_incrLen_1 = {10'd0, tmp_cmdLogic_incrLen_2};
  assign tmp_dataLogic_byteCounterNext_1 = ({7'd0,1'b1} <<< dataLogic_size);
  assign tmp_dataLogic_byteCounterNext = tmp_dataLogic_byteCounterNext_1[3:0];
  assign tmp_dataLogic_byteActivity_1 = dataLogic_size[1:0];
  always @(*) begin
    case(tmp_dataLogic_byteActivity_1)
      2'b00 : tmp_dataLogic_byteActivity = 8'h01;
      2'b01 : tmp_dataLogic_byteActivity = 8'h03;
      default : tmp_dataLogic_byteActivity = 8'h0f;
    endcase
  end

  always @(*) begin
    io_input_aw_ready = 1'b1; // @ Stream.scala l990
    if(((! cmdLogic_outputFork_ready) && io_input_aw_fork2_logic_linkEnable_0)) begin
      io_input_aw_ready = 1'b0; // @ Stream.scala l993
    end
    if(((! cmdLogic_dataFork_ready) && io_input_aw_fork2_logic_linkEnable_1)) begin
      io_input_aw_ready = 1'b0; // @ Stream.scala l993
    end
  end

  assign cmdLogic_outputFork_valid = (io_input_aw_valid && io_input_aw_fork2_logic_linkEnable_0); // @ Stream.scala l1000
  assign cmdLogic_outputFork_payload_addr = io_input_aw_payload_addr; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_id = io_input_aw_payload_id; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_region = io_input_aw_payload_region; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_len = io_input_aw_payload_len; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_size = io_input_aw_payload_size; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_burst = io_input_aw_payload_burst; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_lock = io_input_aw_payload_lock; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_cache = io_input_aw_payload_cache; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_qos = io_input_aw_payload_qos; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_prot = io_input_aw_payload_prot; // @ Stream.scala l1001
  assign cmdLogic_outputFork_fire = (cmdLogic_outputFork_valid && cmdLogic_outputFork_ready); // @ BaseType.scala l305
  assign cmdLogic_dataFork_valid = (io_input_aw_valid && io_input_aw_fork2_logic_linkEnable_1); // @ Stream.scala l1000
  assign cmdLogic_dataFork_payload_addr = io_input_aw_payload_addr; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_id = io_input_aw_payload_id; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_region = io_input_aw_payload_region; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_len = io_input_aw_payload_len; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_size = io_input_aw_payload_size; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_burst = io_input_aw_payload_burst; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_lock = io_input_aw_payload_lock; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_cache = io_input_aw_payload_cache; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_qos = io_input_aw_payload_qos; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_prot = io_input_aw_payload_prot; // @ Stream.scala l1001
  assign cmdLogic_dataFork_fire = (cmdLogic_dataFork_valid && cmdLogic_dataFork_ready); // @ BaseType.scala l305
  assign io_output_aw_valid = cmdLogic_outputFork_valid; // @ Stream.scala l294
  assign cmdLogic_outputFork_ready = io_output_aw_ready; // @ Stream.scala l295
  assign io_output_aw_payload_addr = cmdLogic_outputFork_payload_addr; // @ Stream.scala l296
  assign io_output_aw_payload_id = cmdLogic_outputFork_payload_id; // @ Stream.scala l296
  assign io_output_aw_payload_region = cmdLogic_outputFork_payload_region; // @ Stream.scala l296
  always @(*) begin
    io_output_aw_payload_len = cmdLogic_outputFork_payload_len; // @ Stream.scala l296
    if(tmp_when) begin
      io_output_aw_payload_len = cmdLogic_incrLen[7:0]; // @ Axi4Upsizer.scala l23
    end
  end

  always @(*) begin
    io_output_aw_payload_size = cmdLogic_outputFork_payload_size; // @ Stream.scala l296
    if(tmp_when) begin
      io_output_aw_payload_size = 3'b011; // @ Axi4Upsizer.scala l22
    end
  end

  assign io_output_aw_payload_burst = cmdLogic_outputFork_payload_burst; // @ Stream.scala l296
  assign io_output_aw_payload_lock = cmdLogic_outputFork_payload_lock; // @ Stream.scala l296
  assign io_output_aw_payload_cache = cmdLogic_outputFork_payload_cache; // @ Stream.scala l296
  assign io_output_aw_payload_qos = cmdLogic_outputFork_payload_qos; // @ Stream.scala l296
  assign io_output_aw_payload_prot = cmdLogic_outputFork_payload_prot; // @ Stream.scala l296
  assign cmdLogic_byteCount = tmp_cmdLogic_byteCount[11:0]; // @ BaseType.scala l299
  assign cmdLogic_incrLen = tmp_cmdLogic_incrLen[12 : 3]; // @ BaseType.scala l299
  assign dataLogic_byteCounterNext = ({1'b0,dataLogic_byteCounter} + tmp_dataLogic_byteCounterNext); // @ BaseType.scala l299
  assign dataLogic_byteActivity = (tmp_dataLogic_byteActivity <<< dataLogic_byteCounter); // @ BaseType.scala l299
  assign io_output_w_fire = (io_output_w_valid && io_output_w_ready); // @ BaseType.scala l305
  assign io_output_w_valid = dataLogic_outputValid; // @ Axi4Upsizer.scala l43
  assign io_output_w_isStall = (io_output_w_valid && (! io_output_w_ready)); // @ BaseType.scala l305
  assign io_input_w_ready = (dataLogic_busy && (! io_output_w_isStall)); // @ Axi4Upsizer.scala l44
  assign io_output_w_payload_data = dataLogic_dataBuffer; // @ Axi4Upsizer.scala l45
  assign io_output_w_payload_strb = dataLogic_maskBuffer; // @ Axi4Upsizer.scala l46
  assign io_output_w_payload_last = dataLogic_outputLast; // @ Axi4Upsizer.scala l47
  assign io_input_w_fire = (io_input_w_valid && io_input_w_ready); // @ BaseType.scala l305
  assign cmdLogic_dataFork_fire_1 = (cmdLogic_dataFork_valid && cmdLogic_dataFork_ready); // @ BaseType.scala l305
  assign cmdLogic_dataFork_ready = (! dataLogic_busy); // @ Axi4Upsizer.scala l72
  assign io_input_b_valid = io_output_b_valid; // @ Stream.scala l294
  assign io_output_b_ready = io_input_b_ready; // @ Stream.scala l295
  assign io_input_b_payload_id = io_output_b_payload_id; // @ Stream.scala l296
  assign io_input_b_payload_resp = io_output_b_payload_resp; // @ Stream.scala l296
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      io_input_aw_fork2_logic_linkEnable_0 <= 1'b1; // @ Data.scala l400
      io_input_aw_fork2_logic_linkEnable_1 <= 1'b1; // @ Data.scala l400
      dataLogic_outputValid <= 1'b0; // @ Data.scala l400
      dataLogic_busy <= 1'b0; // @ Data.scala l400
      dataLogic_maskBuffer <= 8'h0; // @ Data.scala l400
    end else begin
      if(cmdLogic_outputFork_fire) begin
        io_input_aw_fork2_logic_linkEnable_0 <= 1'b0; // @ Stream.scala l1003
      end
      if(cmdLogic_dataFork_fire) begin
        io_input_aw_fork2_logic_linkEnable_1 <= 1'b0; // @ Stream.scala l1003
      end
      if(io_input_aw_ready) begin
        io_input_aw_fork2_logic_linkEnable_0 <= 1'b1; // @ Stream.scala l1009
        io_input_aw_fork2_logic_linkEnable_1 <= 1'b1; // @ Stream.scala l1009
      end
      if(io_output_w_ready) begin
        dataLogic_outputValid <= 1'b0; // @ Axi4Upsizer.scala l30
      end
      if(io_output_w_fire) begin
        dataLogic_maskBuffer <= 8'h0; // @ Axi4Upsizer.scala l40
      end
      if(io_input_w_fire) begin
        dataLogic_outputValid <= ((dataLogic_byteCounterNext[3] || io_input_w_payload_last) || dataLogic_alwaysFire); // @ Axi4Upsizer.scala l50
        if(io_input_w_payload_last) begin
          dataLogic_busy <= 1'b0; // @ Axi4Upsizer.scala l54
        end
        if(tmp_when_1) begin
          dataLogic_maskBuffer[0] <= io_input_w_payload_strb[0]; // @ Axi4Upsizer.scala l59
        end
        if(tmp_when_2) begin
          dataLogic_maskBuffer[1] <= io_input_w_payload_strb[1]; // @ Axi4Upsizer.scala l59
        end
        if(tmp_when_3) begin
          dataLogic_maskBuffer[2] <= io_input_w_payload_strb[2]; // @ Axi4Upsizer.scala l59
        end
        if(tmp_when_4) begin
          dataLogic_maskBuffer[3] <= io_input_w_payload_strb[3]; // @ Axi4Upsizer.scala l59
        end
        if(tmp_when_5) begin
          dataLogic_maskBuffer[4] <= io_input_w_payload_strb[0]; // @ Axi4Upsizer.scala l59
        end
        if(tmp_when_6) begin
          dataLogic_maskBuffer[5] <= io_input_w_payload_strb[1]; // @ Axi4Upsizer.scala l59
        end
        if(tmp_when_7) begin
          dataLogic_maskBuffer[6] <= io_input_w_payload_strb[2]; // @ Axi4Upsizer.scala l59
        end
        if(tmp_when_8) begin
          dataLogic_maskBuffer[7] <= io_input_w_payload_strb[3]; // @ Axi4Upsizer.scala l59
        end
      end
      if(cmdLogic_dataFork_fire_1) begin
        dataLogic_busy <= 1'b1; // @ Axi4Upsizer.scala l69
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(io_input_w_fire) begin
      if(dataLogic_incrementByteCounter) begin
        dataLogic_byteCounter <= dataLogic_byteCounterNext[2:0]; // @ Axi4Upsizer.scala l52
      end
      dataLogic_outputLast <= io_input_w_payload_last; // @ Axi4Upsizer.scala l55
      if(tmp_when_1) begin
        dataLogic_dataBuffer[7 : 0] <= io_input_w_payload_data[7 : 0]; // @ Axi4Upsizer.scala l58
      end
      if(tmp_when_2) begin
        dataLogic_dataBuffer[15 : 8] <= io_input_w_payload_data[15 : 8]; // @ Axi4Upsizer.scala l58
      end
      if(tmp_when_3) begin
        dataLogic_dataBuffer[23 : 16] <= io_input_w_payload_data[23 : 16]; // @ Axi4Upsizer.scala l58
      end
      if(tmp_when_4) begin
        dataLogic_dataBuffer[31 : 24] <= io_input_w_payload_data[31 : 24]; // @ Axi4Upsizer.scala l58
      end
      if(tmp_when_5) begin
        dataLogic_dataBuffer[39 : 32] <= io_input_w_payload_data[7 : 0]; // @ Axi4Upsizer.scala l58
      end
      if(tmp_when_6) begin
        dataLogic_dataBuffer[47 : 40] <= io_input_w_payload_data[15 : 8]; // @ Axi4Upsizer.scala l58
      end
      if(tmp_when_7) begin
        dataLogic_dataBuffer[55 : 48] <= io_input_w_payload_data[23 : 16]; // @ Axi4Upsizer.scala l58
      end
      if(tmp_when_8) begin
        dataLogic_dataBuffer[63 : 56] <= io_input_w_payload_data[31 : 24]; // @ Axi4Upsizer.scala l58
      end
    end
    if(cmdLogic_dataFork_fire_1) begin
      dataLogic_byteCounter <= cmdLogic_dataFork_payload_addr[2:0]; // @ Axi4Upsizer.scala l64
      if((3'b000 < cmdLogic_dataFork_payload_size)) begin
        dataLogic_byteCounter[0] <= 1'b0; // @ Axi4Upsizer.scala l65
      end
      if((3'b001 < cmdLogic_dataFork_payload_size)) begin
        dataLogic_byteCounter[1] <= 1'b0; // @ Axi4Upsizer.scala l65
      end
      if((3'b010 < cmdLogic_dataFork_payload_size)) begin
        dataLogic_byteCounter[2] <= 1'b0; // @ Axi4Upsizer.scala l65
      end
      dataLogic_size <= cmdLogic_dataFork_payload_size; // @ Axi4Upsizer.scala l66
      dataLogic_alwaysFire <= (! (cmdLogic_dataFork_payload_burst == 2'b01)); // @ Axi4Upsizer.scala l67
      dataLogic_incrementByteCounter <= (! (cmdLogic_dataFork_payload_burst == 2'b00)); // @ Axi4Upsizer.scala l68
    end
  end


endmodule

module Axi4ReadOnlyUpsizer (
  input               io_input_ar_valid,
  output reg          io_input_ar_ready,
  input      [31:0]   io_input_ar_payload_addr,
  input      [1:0]    io_input_ar_payload_id,
  input      [3:0]    io_input_ar_payload_region,
  input      [7:0]    io_input_ar_payload_len,
  input      [2:0]    io_input_ar_payload_size,
  input      [1:0]    io_input_ar_payload_burst,
  input      [0:0]    io_input_ar_payload_lock,
  input      [3:0]    io_input_ar_payload_cache,
  input      [3:0]    io_input_ar_payload_qos,
  input      [2:0]    io_input_ar_payload_prot,
  output              io_input_r_valid,
  input               io_input_r_ready,
  output     [31:0]   io_input_r_payload_data,
  output     [1:0]    io_input_r_payload_id,
  output     [1:0]    io_input_r_payload_resp,
  output              io_input_r_payload_last,
  output              io_output_ar_valid,
  input               io_output_ar_ready,
  output     [31:0]   io_output_ar_payload_addr,
  output     [1:0]    io_output_ar_payload_id,
  output     [3:0]    io_output_ar_payload_region,
  output     [7:0]    io_output_ar_payload_len,
  output     [2:0]    io_output_ar_payload_size,
  output     [1:0]    io_output_ar_payload_burst,
  output     [0:0]    io_output_ar_payload_lock,
  output     [3:0]    io_output_ar_payload_cache,
  output     [3:0]    io_output_ar_payload_qos,
  output     [2:0]    io_output_ar_payload_prot,
  input               io_output_r_valid,
  output              io_output_r_ready,
  input      [63:0]   io_output_r_payload_data,
  input      [1:0]    io_output_r_payload_id,
  input      [1:0]    io_output_r_payload_resp,
  input               io_output_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                dataLogic_cmdPush_fifo_io_pop_ready;
  wire                dataLogic_cmdPush_fifo_io_push_ready;
  wire                dataLogic_cmdPush_fifo_io_pop_valid;
  wire       [2:0]    dataLogic_cmdPush_fifo_io_pop_payload_startAt;
  wire       [2:0]    dataLogic_cmdPush_fifo_io_pop_payload_endAt;
  wire       [2:0]    dataLogic_cmdPush_fifo_io_pop_payload_size;
  wire       [1:0]    dataLogic_cmdPush_fifo_io_pop_payload_id;
  wire       [2:0]    dataLogic_cmdPush_fifo_io_occupancy;
  wire       [2:0]    dataLogic_cmdPush_fifo_io_availability;
  wire       [14:0]   tmp_cmdLogic_byteCount;
  wire       [12:0]   tmp_cmdLogic_incrLen;
  wire       [12:0]   tmp_cmdLogic_incrLen_1;
  wire       [2:0]    tmp_cmdLogic_incrLen_2;
  wire       [31:0]   tmp_dataLogic_cmdPush_payload_endAt;
  wire       [31:0]   tmp_dataLogic_cmdPush_payload_endAt_1;
  wire       [14:0]   tmp_dataLogic_cmdPush_payload_endAt_2;
  wire       [3:0]    tmp_dataLogic_byteCounterNext;
  wire       [7:0]    tmp_dataLogic_byteCounterNext_1;
  reg        [31:0]   tmp_io_input_r_payload_data;
  wire       [0:0]    tmp_io_input_r_payload_data_1;
  wire                cmdLogic_outputFork_valid;
  wire                cmdLogic_outputFork_ready;
  wire       [31:0]   cmdLogic_outputFork_payload_addr;
  wire       [1:0]    cmdLogic_outputFork_payload_id;
  wire       [3:0]    cmdLogic_outputFork_payload_region;
  wire       [7:0]    cmdLogic_outputFork_payload_len;
  wire       [2:0]    cmdLogic_outputFork_payload_size;
  wire       [1:0]    cmdLogic_outputFork_payload_burst;
  wire       [0:0]    cmdLogic_outputFork_payload_lock;
  wire       [3:0]    cmdLogic_outputFork_payload_cache;
  wire       [3:0]    cmdLogic_outputFork_payload_qos;
  wire       [2:0]    cmdLogic_outputFork_payload_prot;
  wire                cmdLogic_dataFork_valid;
  wire                cmdLogic_dataFork_ready;
  wire       [31:0]   cmdLogic_dataFork_payload_addr;
  wire       [1:0]    cmdLogic_dataFork_payload_id;
  wire       [3:0]    cmdLogic_dataFork_payload_region;
  wire       [7:0]    cmdLogic_dataFork_payload_len;
  wire       [2:0]    cmdLogic_dataFork_payload_size;
  wire       [1:0]    cmdLogic_dataFork_payload_burst;
  wire       [0:0]    cmdLogic_dataFork_payload_lock;
  wire       [3:0]    cmdLogic_dataFork_payload_cache;
  wire       [3:0]    cmdLogic_dataFork_payload_qos;
  wire       [2:0]    cmdLogic_dataFork_payload_prot;
  reg                 io_input_ar_fork2_logic_linkEnable_0;
  reg                 io_input_ar_fork2_logic_linkEnable_1;
  wire                cmdLogic_outputFork_fire;
  wire                cmdLogic_dataFork_fire;
  wire       [11:0]   cmdLogic_byteCount;
  wire       [9:0]    cmdLogic_incrLen;
  wire                dataLogic_cmdPush_valid;
  wire                dataLogic_cmdPush_ready;
  wire       [2:0]    dataLogic_cmdPush_payload_startAt;
  wire       [2:0]    dataLogic_cmdPush_payload_endAt;
  wire       [2:0]    dataLogic_cmdPush_payload_size;
  wire       [1:0]    dataLogic_cmdPush_payload_id;
  reg        [2:0]    dataLogic_size;
  reg                 dataLogic_busy;
  reg        [1:0]    dataLogic_id;
  reg        [2:0]    dataLogic_byteCounter;
  reg        [2:0]    dataLogic_byteCounterLast;
  wire       [3:0]    dataLogic_byteCounterNext;
  wire                readOnly_dataLogic_cmdPush_fifo_io_pop_fire;
  wire                io_input_r_fire;

  assign tmp_cmdLogic_byteCount = ({7'd0,io_input_ar_payload_len} <<< io_input_ar_payload_size);
  assign tmp_cmdLogic_incrLen = ({1'b0,cmdLogic_byteCount} + tmp_cmdLogic_incrLen_1);
  assign tmp_cmdLogic_incrLen_2 = io_input_ar_payload_addr[2 : 0];
  assign tmp_cmdLogic_incrLen_1 = {10'd0, tmp_cmdLogic_incrLen_2};
  assign tmp_dataLogic_cmdPush_payload_endAt = (cmdLogic_dataFork_payload_addr + tmp_dataLogic_cmdPush_payload_endAt_1);
  assign tmp_dataLogic_cmdPush_payload_endAt_2 = ({7'd0,cmdLogic_dataFork_payload_len} <<< cmdLogic_dataFork_payload_size);
  assign tmp_dataLogic_cmdPush_payload_endAt_1 = {17'd0, tmp_dataLogic_cmdPush_payload_endAt_2};
  assign tmp_dataLogic_byteCounterNext_1 = ({7'd0,1'b1} <<< dataLogic_size);
  assign tmp_dataLogic_byteCounterNext = tmp_dataLogic_byteCounterNext_1[3:0];
  assign tmp_io_input_r_payload_data_1 = (dataLogic_byteCounter >>> 2);
  StreamFifo dataLogic_cmdPush_fifo (
    .io_push_valid           (dataLogic_cmdPush_valid                           ), //i
    .io_push_ready           (dataLogic_cmdPush_fifo_io_push_ready              ), //o
    .io_push_payload_startAt (dataLogic_cmdPush_payload_startAt[2:0]            ), //i
    .io_push_payload_endAt   (dataLogic_cmdPush_payload_endAt[2:0]              ), //i
    .io_push_payload_size    (dataLogic_cmdPush_payload_size[2:0]               ), //i
    .io_push_payload_id      (dataLogic_cmdPush_payload_id[1:0]                 ), //i
    .io_pop_valid            (dataLogic_cmdPush_fifo_io_pop_valid               ), //o
    .io_pop_ready            (dataLogic_cmdPush_fifo_io_pop_ready               ), //i
    .io_pop_payload_startAt  (dataLogic_cmdPush_fifo_io_pop_payload_startAt[2:0]), //o
    .io_pop_payload_endAt    (dataLogic_cmdPush_fifo_io_pop_payload_endAt[2:0]  ), //o
    .io_pop_payload_size     (dataLogic_cmdPush_fifo_io_pop_payload_size[2:0]   ), //o
    .io_pop_payload_id       (dataLogic_cmdPush_fifo_io_pop_payload_id[1:0]     ), //o
    .io_flush                (1'b0                                              ), //i
    .io_occupancy            (dataLogic_cmdPush_fifo_io_occupancy[2:0]          ), //o
    .io_availability         (dataLogic_cmdPush_fifo_io_availability[2:0]       ), //o
    .io_axiClk               (io_axiClk                                         ), //i
    .tmp_io_resetn           (tmp_io_resetn                                     )  //i
  );
  always @(*) begin
    case(tmp_io_input_r_payload_data_1)
      1'b0 : tmp_io_input_r_payload_data = io_output_r_payload_data[31 : 0];
      default : tmp_io_input_r_payload_data = io_output_r_payload_data[63 : 32];
    endcase
  end

  always @(*) begin
    io_input_ar_ready = 1'b1; // @ Stream.scala l990
    if(((! cmdLogic_outputFork_ready) && io_input_ar_fork2_logic_linkEnable_0)) begin
      io_input_ar_ready = 1'b0; // @ Stream.scala l993
    end
    if(((! cmdLogic_dataFork_ready) && io_input_ar_fork2_logic_linkEnable_1)) begin
      io_input_ar_ready = 1'b0; // @ Stream.scala l993
    end
  end

  assign cmdLogic_outputFork_valid = (io_input_ar_valid && io_input_ar_fork2_logic_linkEnable_0); // @ Stream.scala l1000
  assign cmdLogic_outputFork_payload_addr = io_input_ar_payload_addr; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_id = io_input_ar_payload_id; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_region = io_input_ar_payload_region; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_len = io_input_ar_payload_len; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_size = io_input_ar_payload_size; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_burst = io_input_ar_payload_burst; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_lock = io_input_ar_payload_lock; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_cache = io_input_ar_payload_cache; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_qos = io_input_ar_payload_qos; // @ Stream.scala l1001
  assign cmdLogic_outputFork_payload_prot = io_input_ar_payload_prot; // @ Stream.scala l1001
  assign cmdLogic_outputFork_fire = (cmdLogic_outputFork_valid && cmdLogic_outputFork_ready); // @ BaseType.scala l305
  assign cmdLogic_dataFork_valid = (io_input_ar_valid && io_input_ar_fork2_logic_linkEnable_1); // @ Stream.scala l1000
  assign cmdLogic_dataFork_payload_addr = io_input_ar_payload_addr; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_id = io_input_ar_payload_id; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_region = io_input_ar_payload_region; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_len = io_input_ar_payload_len; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_size = io_input_ar_payload_size; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_burst = io_input_ar_payload_burst; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_lock = io_input_ar_payload_lock; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_cache = io_input_ar_payload_cache; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_qos = io_input_ar_payload_qos; // @ Stream.scala l1001
  assign cmdLogic_dataFork_payload_prot = io_input_ar_payload_prot; // @ Stream.scala l1001
  assign cmdLogic_dataFork_fire = (cmdLogic_dataFork_valid && cmdLogic_dataFork_ready); // @ BaseType.scala l305
  assign io_output_ar_valid = cmdLogic_outputFork_valid; // @ Stream.scala l294
  assign cmdLogic_outputFork_ready = io_output_ar_ready; // @ Stream.scala l295
  assign io_output_ar_payload_addr = cmdLogic_outputFork_payload_addr; // @ Stream.scala l296
  assign io_output_ar_payload_region = cmdLogic_outputFork_payload_region; // @ Stream.scala l296
  assign io_output_ar_payload_burst = cmdLogic_outputFork_payload_burst; // @ Stream.scala l296
  assign io_output_ar_payload_lock = cmdLogic_outputFork_payload_lock; // @ Stream.scala l296
  assign io_output_ar_payload_cache = cmdLogic_outputFork_payload_cache; // @ Stream.scala l296
  assign io_output_ar_payload_qos = cmdLogic_outputFork_payload_qos; // @ Stream.scala l296
  assign io_output_ar_payload_prot = cmdLogic_outputFork_payload_prot; // @ Stream.scala l296
  assign cmdLogic_byteCount = tmp_cmdLogic_byteCount[11:0]; // @ BaseType.scala l299
  assign cmdLogic_incrLen = tmp_cmdLogic_incrLen[12 : 3]; // @ BaseType.scala l299
  assign io_output_ar_payload_size = 3'b011; // @ Axi4Upsizer.scala l102
  assign io_output_ar_payload_len = cmdLogic_incrLen[7:0]; // @ Axi4Upsizer.scala l103
  assign io_output_ar_payload_id = 2'b00; // @ Axi4Upsizer.scala l104
  assign dataLogic_cmdPush_valid = cmdLogic_dataFork_valid; // @ Stream.scala l303
  assign cmdLogic_dataFork_ready = dataLogic_cmdPush_ready; // @ Stream.scala l304
  assign dataLogic_cmdPush_payload_startAt = cmdLogic_dataFork_payload_addr[2:0]; // @ Axi4Upsizer.scala l110
  assign dataLogic_cmdPush_payload_endAt = tmp_dataLogic_cmdPush_payload_endAt[2:0]; // @ Axi4Upsizer.scala l111
  assign dataLogic_cmdPush_payload_size = cmdLogic_dataFork_payload_size; // @ Axi4Upsizer.scala l112
  assign dataLogic_cmdPush_payload_id = cmdLogic_dataFork_payload_id; // @ Axi4Upsizer.scala l113
  assign dataLogic_cmdPush_ready = dataLogic_cmdPush_fifo_io_push_ready; // @ Stream.scala l295
  assign dataLogic_byteCounterNext = ({1'b0,dataLogic_byteCounter} + tmp_dataLogic_byteCounterNext); // @ BaseType.scala l299
  assign readOnly_dataLogic_cmdPush_fifo_io_pop_fire = (dataLogic_cmdPush_fifo_io_pop_valid && dataLogic_cmdPush_fifo_io_pop_ready); // @ BaseType.scala l305
  assign dataLogic_cmdPush_fifo_io_pop_ready = (! dataLogic_busy); // @ Axi4Upsizer.scala l133
  assign io_input_r_fire = (io_input_r_valid && io_input_r_ready); // @ BaseType.scala l305
  assign io_input_r_valid = (io_output_r_valid && dataLogic_busy); // @ Axi4Upsizer.scala l141
  assign io_input_r_payload_last = (io_output_r_payload_last && (dataLogic_byteCounter == dataLogic_byteCounterLast)); // @ Axi4Upsizer.scala l142
  assign io_input_r_payload_resp = io_output_r_payload_resp; // @ Axi4Upsizer.scala l143
  assign io_input_r_payload_data = tmp_io_input_r_payload_data; // @ Axi4Upsizer.scala l144
  assign io_input_r_payload_id = dataLogic_id; // @ Axi4Upsizer.scala l145
  assign io_output_r_ready = ((dataLogic_busy && io_input_r_ready) && (io_input_r_payload_last || dataLogic_byteCounterNext[3])); // @ Axi4Upsizer.scala l146
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      io_input_ar_fork2_logic_linkEnable_0 <= 1'b1; // @ Data.scala l400
      io_input_ar_fork2_logic_linkEnable_1 <= 1'b1; // @ Data.scala l400
      dataLogic_busy <= 1'b0; // @ Data.scala l400
    end else begin
      if(cmdLogic_outputFork_fire) begin
        io_input_ar_fork2_logic_linkEnable_0 <= 1'b0; // @ Stream.scala l1003
      end
      if(cmdLogic_dataFork_fire) begin
        io_input_ar_fork2_logic_linkEnable_1 <= 1'b0; // @ Stream.scala l1003
      end
      if(io_input_ar_ready) begin
        io_input_ar_fork2_logic_linkEnable_0 <= 1'b1; // @ Stream.scala l1009
        io_input_ar_fork2_logic_linkEnable_1 <= 1'b1; // @ Stream.scala l1009
      end
      if(readOnly_dataLogic_cmdPush_fifo_io_pop_fire) begin
        dataLogic_busy <= 1'b1; // @ Axi4Upsizer.scala l130
      end
      if(io_input_r_fire) begin
        if(io_input_r_payload_last) begin
          dataLogic_busy <= 1'b0; // @ Axi4Upsizer.scala l138
        end
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(readOnly_dataLogic_cmdPush_fifo_io_pop_fire) begin
      dataLogic_byteCounter <= dataLogic_cmdPush_fifo_io_pop_payload_startAt; // @ Axi4Upsizer.scala l126
      dataLogic_byteCounterLast <= dataLogic_cmdPush_fifo_io_pop_payload_endAt; // @ Axi4Upsizer.scala l127
      dataLogic_size <= dataLogic_cmdPush_fifo_io_pop_payload_size; // @ Axi4Upsizer.scala l128
      dataLogic_id <= dataLogic_cmdPush_fifo_io_pop_payload_id; // @ Axi4Upsizer.scala l129
    end
    if(io_input_r_fire) begin
      dataLogic_byteCounter <= dataLogic_byteCounterNext[2:0]; // @ Axi4Upsizer.scala l137
    end
  end


endmodule

module Axi4WriteOnlyDownsizer (
  input               io_input_aw_valid,
  output              io_input_aw_ready,
  input      [31:0]   io_input_aw_payload_addr,
  input      [3:0]    io_input_aw_payload_id,
  input      [3:0]    io_input_aw_payload_region,
  input      [7:0]    io_input_aw_payload_len,
  input      [2:0]    io_input_aw_payload_size,
  input      [1:0]    io_input_aw_payload_burst,
  input      [0:0]    io_input_aw_payload_lock,
  input      [3:0]    io_input_aw_payload_cache,
  input      [3:0]    io_input_aw_payload_qos,
  input      [2:0]    io_input_aw_payload_prot,
  input               io_input_w_valid,
  output              io_input_w_ready,
  input      [63:0]   io_input_w_payload_data,
  input      [7:0]    io_input_w_payload_strb,
  input               io_input_w_payload_last,
  output              io_input_b_valid,
  input               io_input_b_ready,
  output     [3:0]    io_input_b_payload_id,
  output     [1:0]    io_input_b_payload_resp,
  output              io_output_aw_valid,
  input               io_output_aw_ready,
  output     [31:0]   io_output_aw_payload_addr,
  output     [3:0]    io_output_aw_payload_id,
  output     [3:0]    io_output_aw_payload_region,
  output     [7:0]    io_output_aw_payload_len,
  output     [2:0]    io_output_aw_payload_size,
  output     [1:0]    io_output_aw_payload_burst,
  output     [0:0]    io_output_aw_payload_lock,
  output     [3:0]    io_output_aw_payload_cache,
  output     [3:0]    io_output_aw_payload_qos,
  output     [2:0]    io_output_aw_payload_prot,
  output              io_output_w_valid,
  input               io_output_w_ready,
  output     [31:0]   io_output_w_payload_data,
  output     [3:0]    io_output_w_payload_strb,
  output              io_output_w_payload_last,
  input               io_output_b_valid,
  output              io_output_b_ready,
  input      [3:0]    io_output_b_payload_id,
  input      [1:0]    io_output_b_payload_resp,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                generator_io_input_ready;
  wire                generator_io_output_valid;
  wire       [31:0]   generator_io_output_payload_addr;
  wire       [3:0]    generator_io_output_payload_id;
  wire       [3:0]    generator_io_output_payload_region;
  wire       [7:0]    generator_io_output_payload_len;
  wire       [2:0]    generator_io_output_payload_size;
  wire       [1:0]    generator_io_output_payload_burst;
  wire       [0:0]    generator_io_output_payload_lock;
  wire       [3:0]    generator_io_output_payload_cache;
  wire       [3:0]    generator_io_output_payload_qos;
  wire       [2:0]    generator_io_output_payload_prot;
  wire       [31:0]   generator_io_start;
  wire       [6:0]    generator_io_ratio;
  wire       [2:0]    generator_io_size;
  wire                generator_io_working;
  wire                generator_io_last;
  wire                generator_io_done;
  wire                inputDataCounter_io_available;
  wire                inputDataCounter_io_working;
  wire                inputDataCounter_io_last;
  wire                inputDataCounter_io_done;
  wire       [7:0]    inputDataCounter_io_value;
  wire                streamCounter_io_available;
  wire                streamCounter_io_working;
  wire                streamCounter_io_last;
  wire                streamCounter_io_done;
  wire       [7:0]    streamCounter_io_value;
  wire                dataExtender_io_input_ready;
  wire                dataExtender_io_output_valid;
  wire       [63:0]   dataExtender_io_output_payload_data;
  wire       [7:0]    dataExtender_io_output_payload_strb;
  wire                dataExtender_io_output_payload_last;
  wire                dataExtender_io_working;
  wire                dataExtender_io_first;
  wire                dataExtender_io_last;
  wire                dataExtender_io_done;
  wire                rspCtrlStream_fifo_io_push_ready;
  wire                rspCtrlStream_fifo_io_pop_valid;
  wire                rspCtrlStream_fifo_io_pop_payload;
  wire       [1:0]    rspCtrlStream_fifo_io_occupancy;
  wire       [1:0]    rspCtrlStream_fifo_io_availability;
  wire       [7:0]    tmp_beatOffsetReg;
  wire       [7:0]    tmp_beatOffsetReg_1;
  wire       [7:0]    tmp_beatOffsetReg_2;
  wire       [5:0]    tmp_writeStream_w_payload_data;
  wire                tmp_when;
  wire                writeStream_aw_valid;
  wire                writeStream_aw_ready;
  wire       [31:0]   writeStream_aw_payload_addr;
  wire       [3:0]    writeStream_aw_payload_id;
  wire       [3:0]    writeStream_aw_payload_region;
  wire       [7:0]    writeStream_aw_payload_len;
  wire       [2:0]    writeStream_aw_payload_size;
  wire       [1:0]    writeStream_aw_payload_burst;
  wire       [0:0]    writeStream_aw_payload_lock;
  wire       [3:0]    writeStream_aw_payload_cache;
  wire       [3:0]    writeStream_aw_payload_qos;
  wire       [2:0]    writeStream_aw_payload_prot;
  wire                writeStream_w_valid;
  wire                writeStream_w_ready;
  wire       [31:0]   writeStream_w_payload_data;
  wire       [3:0]    writeStream_w_payload_strb;
  wire                writeStream_w_payload_last;
  wire                writeStream_b_valid;
  wire                writeStream_b_ready;
  wire       [3:0]    writeStream_b_payload_id;
  wire       [1:0]    writeStream_b_payload_resp;
  wire                dataWorking;
  wire                tmp_io_input_aw_ready;
  wire                writeCmd_valid;
  wire                writeCmd_ready;
  wire       [31:0]   writeCmd_payload_addr;
  wire       [3:0]    writeCmd_payload_id;
  wire       [3:0]    writeCmd_payload_region;
  wire       [7:0]    writeCmd_payload_len;
  wire       [2:0]    writeCmd_payload_size;
  wire       [1:0]    writeCmd_payload_burst;
  wire       [0:0]    writeCmd_payload_lock;
  wire       [3:0]    writeCmd_payload_cache;
  wire       [3:0]    writeCmd_payload_qos;
  wire       [2:0]    writeCmd_payload_prot;
  wire                cmdStream_valid;
  reg                 cmdStream_ready;
  wire       [31:0]   cmdStream_payload_addr;
  wire       [3:0]    cmdStream_payload_id;
  wire       [3:0]    cmdStream_payload_region;
  wire       [7:0]    cmdStream_payload_len;
  wire       [2:0]    cmdStream_payload_size;
  wire       [1:0]    cmdStream_payload_burst;
  wire       [0:0]    cmdStream_payload_lock;
  wire       [3:0]    cmdStream_payload_cache;
  wire       [3:0]    cmdStream_payload_qos;
  wire       [2:0]    cmdStream_payload_prot;
  wire                staleInputData;
  wire                tmp_io_input_w_ready;
  wire                writeData_valid;
  wire                writeData_ready;
  wire       [63:0]   writeData_payload_data;
  wire       [7:0]    writeData_payload_strb;
  wire                writeData_payload_last;
  wire                writeCmd_fire;
  wire                writeData_fire;
  wire                rspCountStream_valid;
  wire                rspCountStream_ready;
  wire       [31:0]   rspCountStream_payload_addr;
  wire       [3:0]    rspCountStream_payload_id;
  wire       [3:0]    rspCountStream_payload_region;
  wire       [7:0]    rspCountStream_payload_len;
  wire       [2:0]    rspCountStream_payload_size;
  wire       [1:0]    rspCountStream_payload_burst;
  wire       [0:0]    rspCountStream_payload_lock;
  wire       [3:0]    rspCountStream_payload_cache;
  wire       [3:0]    rspCountStream_payload_qos;
  wire       [2:0]    rspCountStream_payload_prot;
  wire                countCmdStream_valid;
  wire                countCmdStream_ready;
  wire       [31:0]   countCmdStream_payload_addr;
  wire       [3:0]    countCmdStream_payload_id;
  wire       [3:0]    countCmdStream_payload_region;
  wire       [7:0]    countCmdStream_payload_len;
  wire       [2:0]    countCmdStream_payload_size;
  wire       [1:0]    countCmdStream_payload_burst;
  wire       [0:0]    countCmdStream_payload_lock;
  wire       [3:0]    countCmdStream_payload_cache;
  wire       [3:0]    countCmdStream_payload_qos;
  wire       [2:0]    countCmdStream_payload_prot;
  wire                outCmdStream_valid;
  wire                outCmdStream_ready;
  wire       [31:0]   outCmdStream_payload_addr;
  wire       [3:0]    outCmdStream_payload_id;
  wire       [3:0]    outCmdStream_payload_region;
  wire       [7:0]    outCmdStream_payload_len;
  wire       [2:0]    outCmdStream_payload_size;
  wire       [1:0]    outCmdStream_payload_burst;
  wire       [0:0]    outCmdStream_payload_lock;
  wire       [3:0]    outCmdStream_payload_cache;
  wire       [3:0]    outCmdStream_payload_qos;
  wire       [2:0]    outCmdStream_payload_prot;
  reg                 cmdStream_fork3_logic_linkEnable_0;
  reg                 cmdStream_fork3_logic_linkEnable_1;
  reg                 cmdStream_fork3_logic_linkEnable_2;
  wire                rspCountStream_fire;
  wire                countCmdStream_fire;
  wire                outCmdStream_fire;
  wire                dataStream_valid;
  wire                dataStream_ready;
  wire       [63:0]   dataStream_payload_data;
  wire       [7:0]    dataStream_payload_strb;
  wire                dataStream_payload_last;
  wire                countCmdStream_fire_1;
  wire                dataStream_fire;
  wire                countCmdStream_fire_2;
  reg        [2:0]    beatOffsetReg;
  reg        [2:0]    beatOffset;
  wire                countCmdStream_fire_3;
  wire                dataStream_fire_1;
  wire       [2:0]    offset;
  wire                staleData;
  wire                tmp_writeStream_w_valid;
  wire                rspCtrlStream_valid;
  wire                rspCtrlStream_ready;
  wire                rspCtrlStream_payload;
  wire                rspStream_valid;
  reg                 rspStream_ready;
  wire                rspStream_payload_1;
  wire       [3:0]    rspStream_payload_2_id;
  wire       [1:0]    rspStream_payload_2_resp;
  wire                rspStream_fire;
  wire                rspStream_fire_1;
  reg                 rspStream_thrown_valid;
  wire                rspStream_thrown_ready;
  wire                rspStream_thrown_payload_1;
  wire       [3:0]    rspStream_thrown_payload_2_id;
  wire       [1:0]    rspStream_thrown_payload_2_resp;

  assign tmp_when = (! rspStream_payload_1);
  assign tmp_beatOffsetReg = (tmp_beatOffsetReg_1 + tmp_beatOffsetReg_2);
  assign tmp_beatOffsetReg_1 = {5'd0, beatOffset};
  assign tmp_beatOffsetReg_2 = ({7'd0,1'b1} <<< generator_io_size);
  assign tmp_writeStream_w_payload_data = ({3'd0,offset} <<< 3);
  Axi4DownsizerSubTransactionGenerator_1 generator (
    .io_input_valid           (writeCmd_valid                         ), //i
    .io_input_ready           (generator_io_input_ready               ), //o
    .io_input_payload_addr    (writeCmd_payload_addr[31:0]            ), //i
    .io_input_payload_id      (writeCmd_payload_id[3:0]               ), //i
    .io_input_payload_region  (writeCmd_payload_region[3:0]           ), //i
    .io_input_payload_len     (writeCmd_payload_len[7:0]              ), //i
    .io_input_payload_size    (writeCmd_payload_size[2:0]             ), //i
    .io_input_payload_burst   (writeCmd_payload_burst[1:0]            ), //i
    .io_input_payload_lock    (writeCmd_payload_lock                  ), //i
    .io_input_payload_cache   (writeCmd_payload_cache[3:0]            ), //i
    .io_input_payload_qos     (writeCmd_payload_qos[3:0]              ), //i
    .io_input_payload_prot    (writeCmd_payload_prot[2:0]             ), //i
    .io_output_valid          (generator_io_output_valid              ), //o
    .io_output_ready          (cmdStream_ready                        ), //i
    .io_output_payload_addr   (generator_io_output_payload_addr[31:0] ), //o
    .io_output_payload_id     (generator_io_output_payload_id[3:0]    ), //o
    .io_output_payload_region (generator_io_output_payload_region[3:0]), //o
    .io_output_payload_len    (generator_io_output_payload_len[7:0]   ), //o
    .io_output_payload_size   (generator_io_output_payload_size[2:0]  ), //o
    .io_output_payload_burst  (generator_io_output_payload_burst[1:0] ), //o
    .io_output_payload_lock   (generator_io_output_payload_lock       ), //o
    .io_output_payload_cache  (generator_io_output_payload_cache[3:0] ), //o
    .io_output_payload_qos    (generator_io_output_payload_qos[3:0]   ), //o
    .io_output_payload_prot   (generator_io_output_payload_prot[2:0]  ), //o
    .io_start                 (generator_io_start[31:0]               ), //o
    .io_ratio                 (generator_io_ratio[6:0]                ), //o
    .io_size                  (generator_io_size[2:0]                 ), //o
    .io_working               (generator_io_working                   ), //o
    .io_last                  (generator_io_last                      ), //o
    .io_done                  (generator_io_done                      ), //o
    .io_axiClk                (io_axiClk                              ), //i
    .tmp_io_resetn            (tmp_io_resetn                          )  //i
  );
  StreamTransactionCounter inputDataCounter (
    .io_ctrlFire   (writeCmd_fire                 ), //i
    .io_targetFire (writeData_fire                ), //i
    .io_available  (inputDataCounter_io_available ), //o
    .io_count      (writeCmd_payload_len[7:0]     ), //i
    .io_working    (inputDataCounter_io_working   ), //o
    .io_last       (inputDataCounter_io_last      ), //o
    .io_done       (inputDataCounter_io_done      ), //o
    .io_value      (inputDataCounter_io_value[7:0]), //o
    .io_axiClk     (io_axiClk                     ), //i
    .tmp_io_resetn (tmp_io_resetn                 )  //i
  );
  StreamTransactionCounter streamCounter (
    .io_ctrlFire   (countCmdStream_fire_1          ), //i
    .io_targetFire (dataStream_fire                ), //i
    .io_available  (streamCounter_io_available     ), //o
    .io_count      (countCmdStream_payload_len[7:0]), //i
    .io_working    (streamCounter_io_working       ), //o
    .io_last       (streamCounter_io_last          ), //o
    .io_done       (streamCounter_io_done          ), //o
    .io_value      (streamCounter_io_value[7:0]    ), //o
    .io_axiClk     (io_axiClk                      ), //i
    .tmp_io_resetn (tmp_io_resetn                  )  //i
  );
  StreamTransactionExtender dataExtender (
    .io_count               (generator_io_ratio[6:0]                  ), //i
    .io_input_valid         (writeData_valid                          ), //i
    .io_input_ready         (dataExtender_io_input_ready              ), //o
    .io_input_payload_data  (writeData_payload_data[63:0]             ), //i
    .io_input_payload_strb  (writeData_payload_strb[7:0]              ), //i
    .io_input_payload_last  (writeData_payload_last                   ), //i
    .io_output_valid        (dataExtender_io_output_valid             ), //o
    .io_output_ready        (dataStream_ready                         ), //i
    .io_output_payload_data (dataExtender_io_output_payload_data[63:0]), //o
    .io_output_payload_strb (dataExtender_io_output_payload_strb[7:0] ), //o
    .io_output_payload_last (dataExtender_io_output_payload_last      ), //o
    .io_working             (dataExtender_io_working                  ), //o
    .io_first               (dataExtender_io_first                    ), //o
    .io_last                (dataExtender_io_last                     ), //o
    .io_done                (dataExtender_io_done                     ), //o
    .io_axiClk              (io_axiClk                                ), //i
    .tmp_io_resetn          (tmp_io_resetn                            )  //i
  );
  StreamFifo_1 rspCtrlStream_fifo (
    .io_push_valid   (rspCtrlStream_valid                    ), //i
    .io_push_ready   (rspCtrlStream_fifo_io_push_ready       ), //o
    .io_push_payload (rspCtrlStream_payload                  ), //i
    .io_pop_valid    (rspCtrlStream_fifo_io_pop_valid        ), //o
    .io_pop_ready    (rspStream_fire                         ), //i
    .io_pop_payload  (rspCtrlStream_fifo_io_pop_payload      ), //o
    .io_flush        (1'b0                                   ), //i
    .io_occupancy    (rspCtrlStream_fifo_io_occupancy[1:0]   ), //o
    .io_availability (rspCtrlStream_fifo_io_availability[1:0]), //o
    .io_axiClk       (io_axiClk                              ), //i
    .tmp_io_resetn   (tmp_io_resetn                          )  //i
  );
  assign tmp_io_input_aw_ready = (! dataWorking); // @ BaseType.scala l299
  assign writeCmd_valid = (io_input_aw_valid && tmp_io_input_aw_ready); // @ Stream.scala l426
  assign io_input_aw_ready = (writeCmd_ready && tmp_io_input_aw_ready); // @ Stream.scala l427
  assign writeCmd_payload_addr = io_input_aw_payload_addr; // @ Stream.scala l428
  assign writeCmd_payload_id = io_input_aw_payload_id; // @ Stream.scala l428
  assign writeCmd_payload_region = io_input_aw_payload_region; // @ Stream.scala l428
  assign writeCmd_payload_len = io_input_aw_payload_len; // @ Stream.scala l428
  assign writeCmd_payload_size = io_input_aw_payload_size; // @ Stream.scala l428
  assign writeCmd_payload_burst = io_input_aw_payload_burst; // @ Stream.scala l428
  assign writeCmd_payload_lock = io_input_aw_payload_lock; // @ Stream.scala l428
  assign writeCmd_payload_cache = io_input_aw_payload_cache; // @ Stream.scala l428
  assign writeCmd_payload_qos = io_input_aw_payload_qos; // @ Stream.scala l428
  assign writeCmd_payload_prot = io_input_aw_payload_prot; // @ Stream.scala l428
  assign writeCmd_ready = generator_io_input_ready; // @ Stream.scala l295
  assign cmdStream_valid = generator_io_output_valid; // @ Stream.scala l294
  assign cmdStream_payload_addr = generator_io_output_payload_addr; // @ Stream.scala l296
  assign cmdStream_payload_id = generator_io_output_payload_id; // @ Stream.scala l296
  assign cmdStream_payload_region = generator_io_output_payload_region; // @ Stream.scala l296
  assign cmdStream_payload_len = generator_io_output_payload_len; // @ Stream.scala l296
  assign cmdStream_payload_size = generator_io_output_payload_size; // @ Stream.scala l296
  assign cmdStream_payload_burst = generator_io_output_payload_burst; // @ Stream.scala l296
  assign cmdStream_payload_lock = generator_io_output_payload_lock; // @ Stream.scala l296
  assign cmdStream_payload_cache = generator_io_output_payload_cache; // @ Stream.scala l296
  assign cmdStream_payload_qos = generator_io_output_payload_qos; // @ Stream.scala l296
  assign cmdStream_payload_prot = generator_io_output_payload_prot; // @ Stream.scala l296
  assign tmp_io_input_w_ready = (! staleInputData); // @ BaseType.scala l299
  assign writeData_valid = (io_input_w_valid && tmp_io_input_w_ready); // @ Stream.scala l426
  assign io_input_w_ready = (writeData_ready && tmp_io_input_w_ready); // @ Stream.scala l427
  assign writeData_payload_data = io_input_w_payload_data; // @ Stream.scala l428
  assign writeData_payload_strb = io_input_w_payload_strb; // @ Stream.scala l428
  assign writeData_payload_last = io_input_w_payload_last; // @ Stream.scala l428
  assign writeCmd_fire = (writeCmd_valid && writeCmd_ready); // @ BaseType.scala l305
  assign writeData_fire = (writeData_valid && writeData_ready); // @ BaseType.scala l305
  assign staleInputData = (! inputDataCounter_io_working); // @ Axi4Downsizer.scala l128
  always @(*) begin
    cmdStream_ready = 1'b1; // @ Stream.scala l990
    if(((! rspCountStream_ready) && cmdStream_fork3_logic_linkEnable_0)) begin
      cmdStream_ready = 1'b0; // @ Stream.scala l993
    end
    if(((! countCmdStream_ready) && cmdStream_fork3_logic_linkEnable_1)) begin
      cmdStream_ready = 1'b0; // @ Stream.scala l993
    end
    if(((! outCmdStream_ready) && cmdStream_fork3_logic_linkEnable_2)) begin
      cmdStream_ready = 1'b0; // @ Stream.scala l993
    end
  end

  assign rspCountStream_valid = (cmdStream_valid && cmdStream_fork3_logic_linkEnable_0); // @ Stream.scala l1000
  assign rspCountStream_payload_addr = cmdStream_payload_addr; // @ Stream.scala l1001
  assign rspCountStream_payload_id = cmdStream_payload_id; // @ Stream.scala l1001
  assign rspCountStream_payload_region = cmdStream_payload_region; // @ Stream.scala l1001
  assign rspCountStream_payload_len = cmdStream_payload_len; // @ Stream.scala l1001
  assign rspCountStream_payload_size = cmdStream_payload_size; // @ Stream.scala l1001
  assign rspCountStream_payload_burst = cmdStream_payload_burst; // @ Stream.scala l1001
  assign rspCountStream_payload_lock = cmdStream_payload_lock; // @ Stream.scala l1001
  assign rspCountStream_payload_cache = cmdStream_payload_cache; // @ Stream.scala l1001
  assign rspCountStream_payload_qos = cmdStream_payload_qos; // @ Stream.scala l1001
  assign rspCountStream_payload_prot = cmdStream_payload_prot; // @ Stream.scala l1001
  assign rspCountStream_fire = (rspCountStream_valid && rspCountStream_ready); // @ BaseType.scala l305
  assign countCmdStream_valid = (cmdStream_valid && cmdStream_fork3_logic_linkEnable_1); // @ Stream.scala l1000
  assign countCmdStream_payload_addr = cmdStream_payload_addr; // @ Stream.scala l1001
  assign countCmdStream_payload_id = cmdStream_payload_id; // @ Stream.scala l1001
  assign countCmdStream_payload_region = cmdStream_payload_region; // @ Stream.scala l1001
  assign countCmdStream_payload_len = cmdStream_payload_len; // @ Stream.scala l1001
  assign countCmdStream_payload_size = cmdStream_payload_size; // @ Stream.scala l1001
  assign countCmdStream_payload_burst = cmdStream_payload_burst; // @ Stream.scala l1001
  assign countCmdStream_payload_lock = cmdStream_payload_lock; // @ Stream.scala l1001
  assign countCmdStream_payload_cache = cmdStream_payload_cache; // @ Stream.scala l1001
  assign countCmdStream_payload_qos = cmdStream_payload_qos; // @ Stream.scala l1001
  assign countCmdStream_payload_prot = cmdStream_payload_prot; // @ Stream.scala l1001
  assign countCmdStream_fire = (countCmdStream_valid && countCmdStream_ready); // @ BaseType.scala l305
  assign outCmdStream_valid = (cmdStream_valid && cmdStream_fork3_logic_linkEnable_2); // @ Stream.scala l1000
  assign outCmdStream_payload_addr = cmdStream_payload_addr; // @ Stream.scala l1001
  assign outCmdStream_payload_id = cmdStream_payload_id; // @ Stream.scala l1001
  assign outCmdStream_payload_region = cmdStream_payload_region; // @ Stream.scala l1001
  assign outCmdStream_payload_len = cmdStream_payload_len; // @ Stream.scala l1001
  assign outCmdStream_payload_size = cmdStream_payload_size; // @ Stream.scala l1001
  assign outCmdStream_payload_burst = cmdStream_payload_burst; // @ Stream.scala l1001
  assign outCmdStream_payload_lock = cmdStream_payload_lock; // @ Stream.scala l1001
  assign outCmdStream_payload_cache = cmdStream_payload_cache; // @ Stream.scala l1001
  assign outCmdStream_payload_qos = cmdStream_payload_qos; // @ Stream.scala l1001
  assign outCmdStream_payload_prot = cmdStream_payload_prot; // @ Stream.scala l1001
  assign outCmdStream_fire = (outCmdStream_valid && outCmdStream_ready); // @ BaseType.scala l305
  assign writeStream_aw_valid = outCmdStream_valid; // @ Stream.scala l294
  assign outCmdStream_ready = writeStream_aw_ready; // @ Stream.scala l295
  assign writeStream_aw_payload_addr = outCmdStream_payload_addr; // @ Stream.scala l296
  assign writeStream_aw_payload_id = outCmdStream_payload_id; // @ Stream.scala l296
  assign writeStream_aw_payload_region = outCmdStream_payload_region; // @ Stream.scala l296
  assign writeStream_aw_payload_len = outCmdStream_payload_len; // @ Stream.scala l296
  assign writeStream_aw_payload_size = outCmdStream_payload_size; // @ Stream.scala l296
  assign writeStream_aw_payload_burst = outCmdStream_payload_burst; // @ Stream.scala l296
  assign writeStream_aw_payload_lock = outCmdStream_payload_lock; // @ Stream.scala l296
  assign writeStream_aw_payload_cache = outCmdStream_payload_cache; // @ Stream.scala l296
  assign writeStream_aw_payload_qos = outCmdStream_payload_qos; // @ Stream.scala l296
  assign writeStream_aw_payload_prot = outCmdStream_payload_prot; // @ Stream.scala l296
  assign countCmdStream_fire_1 = (countCmdStream_valid && countCmdStream_ready); // @ BaseType.scala l305
  assign dataStream_fire = (dataStream_valid && dataStream_ready); // @ BaseType.scala l305
  assign countCmdStream_ready = streamCounter_io_available; // @ Axi4Downsizer.scala l135
  assign countCmdStream_fire_2 = (countCmdStream_valid && countCmdStream_ready); // @ BaseType.scala l305
  always @(*) begin
    beatOffset = beatOffsetReg; // @ Misc.scala l552
    if(countCmdStream_fire_3) begin
      beatOffset = countCmdStream_payload_addr[2 : 0]; // @ Axi4Downsizer.scala l140
    end
  end

  assign countCmdStream_fire_3 = (countCmdStream_valid && countCmdStream_ready); // @ BaseType.scala l305
  assign dataStream_fire_1 = (dataStream_valid && dataStream_ready); // @ BaseType.scala l305
  assign offset = (beatOffset & (~ 3'b011)); // @ BaseType.scala l299
  assign writeData_ready = dataExtender_io_input_ready; // @ Stream.scala l295
  assign dataStream_valid = dataExtender_io_output_valid; // @ Stream.scala l294
  assign dataStream_payload_data = dataExtender_io_output_payload_data; // @ Stream.scala l296
  assign dataStream_payload_strb = dataExtender_io_output_payload_strb; // @ Stream.scala l296
  assign dataStream_payload_last = dataExtender_io_output_payload_last; // @ Stream.scala l296
  assign dataWorking = ((! inputDataCounter_io_available) || (! writeData_ready)); // @ Axi4Downsizer.scala l153
  assign staleData = (! streamCounter_io_working); // @ BaseType.scala l299
  assign tmp_writeStream_w_valid = (! staleData); // @ BaseType.scala l299
  assign dataStream_ready = (writeStream_w_ready && tmp_writeStream_w_valid); // @ Stream.scala l427
  assign writeStream_w_valid = (dataStream_valid && tmp_writeStream_w_valid); // @ Stream.scala l308
  assign writeStream_w_payload_data = dataStream_payload_data[tmp_writeStream_w_payload_data +: 32]; // @ Axi4Downsizer.scala l157
  assign writeStream_w_payload_last = streamCounter_io_last; // @ Axi4Downsizer.scala l158
  assign writeStream_w_payload_strb = dataStream_payload_strb[offset +: 4]; // @ Axi4Downsizer.scala l159
  assign rspCtrlStream_valid = rspCountStream_valid; // @ Stream.scala l308
  assign rspCountStream_ready = rspCtrlStream_ready; // @ Stream.scala l309
  assign rspCtrlStream_payload = generator_io_last; // @ Axi4Downsizer.scala l165
  assign rspCtrlStream_ready = rspCtrlStream_fifo_io_push_ready; // @ Stream.scala l295
  assign rspStream_valid = (rspCtrlStream_fifo_io_pop_valid && writeStream_b_valid); // @ Stream.scala l1039
  assign rspStream_fire = (rspStream_valid && rspStream_ready); // @ BaseType.scala l305
  assign rspStream_fire_1 = (rspStream_valid && rspStream_ready); // @ BaseType.scala l305
  assign writeStream_b_ready = rspStream_fire_1; // @ Stream.scala l1040
  assign rspStream_payload_1 = rspCtrlStream_fifo_io_pop_payload; // @ Stream.scala l1041
  assign rspStream_payload_2_id = writeStream_b_payload_id; // @ Stream.scala l1042
  assign rspStream_payload_2_resp = writeStream_b_payload_resp; // @ Stream.scala l1042
  always @(*) begin
    rspStream_thrown_valid = rspStream_valid; // @ Stream.scala l294
    if(tmp_when) begin
      rspStream_thrown_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    rspStream_ready = rspStream_thrown_ready; // @ Stream.scala l295
    if(tmp_when) begin
      rspStream_ready = 1'b1; // @ Stream.scala l440
    end
  end

  assign rspStream_thrown_payload_2_id = rspStream_payload_2_id; // @ Stream.scala l296
  assign rspStream_thrown_payload_2_resp = rspStream_payload_2_resp; // @ Stream.scala l296
  assign rspStream_thrown_payload_1 = rspStream_payload_1; // @ Stream.scala l296
  assign io_input_b_valid = rspStream_thrown_valid; // @ Stream.scala l308
  assign rspStream_thrown_ready = io_input_b_ready; // @ Stream.scala l309
  assign io_input_b_payload_id = rspStream_thrown_payload_2_id; // @ Axi4Downsizer.scala l169
  assign io_input_b_payload_resp = rspStream_thrown_payload_2_resp; // @ Axi4Downsizer.scala l169
  assign io_output_aw_valid = writeStream_aw_valid; // @ Stream.scala l303
  assign writeStream_aw_ready = io_output_aw_ready; // @ Stream.scala l304
  assign io_output_aw_payload_addr = writeStream_aw_payload_addr; // @ Axi4Channel.scala l361
  assign io_output_aw_payload_id = writeStream_aw_payload_id; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_region = writeStream_aw_payload_region; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_len = writeStream_aw_payload_len; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_size = writeStream_aw_payload_size; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_burst = writeStream_aw_payload_burst; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_lock = writeStream_aw_payload_lock; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_cache = writeStream_aw_payload_cache; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_qos = writeStream_aw_payload_qos; // @ Axi4Channel.scala l352
  assign io_output_aw_payload_prot = writeStream_aw_payload_prot; // @ Axi4Channel.scala l352
  assign io_output_w_valid = writeStream_w_valid; // @ Stream.scala l303
  assign writeStream_w_ready = io_output_w_ready; // @ Stream.scala l304
  assign io_output_w_payload_data = writeStream_w_payload_data; // @ Axi4Channel.scala l423
  assign io_output_w_payload_strb = writeStream_w_payload_strb; // @ Axi4Channel.scala l352
  assign io_output_w_payload_last = writeStream_w_payload_last; // @ Axi4Channel.scala l352
  assign writeStream_b_valid = io_output_b_valid; // @ Stream.scala l303
  assign io_output_b_ready = writeStream_b_ready; // @ Stream.scala l304
  assign writeStream_b_payload_id = io_output_b_payload_id; // @ Axi4Channel.scala l352
  assign writeStream_b_payload_resp = io_output_b_payload_resp; // @ Axi4Channel.scala l352
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      cmdStream_fork3_logic_linkEnable_0 <= 1'b1; // @ Data.scala l400
      cmdStream_fork3_logic_linkEnable_1 <= 1'b1; // @ Data.scala l400
      cmdStream_fork3_logic_linkEnable_2 <= 1'b1; // @ Data.scala l400
    end else begin
      if(rspCountStream_fire) begin
        cmdStream_fork3_logic_linkEnable_0 <= 1'b0; // @ Stream.scala l1003
      end
      if(countCmdStream_fire) begin
        cmdStream_fork3_logic_linkEnable_1 <= 1'b0; // @ Stream.scala l1003
      end
      if(outCmdStream_fire) begin
        cmdStream_fork3_logic_linkEnable_2 <= 1'b0; // @ Stream.scala l1003
      end
      if(cmdStream_ready) begin
        cmdStream_fork3_logic_linkEnable_0 <= 1'b1; // @ Stream.scala l1009
        cmdStream_fork3_logic_linkEnable_1 <= 1'b1; // @ Stream.scala l1009
        cmdStream_fork3_logic_linkEnable_2 <= 1'b1; // @ Stream.scala l1009
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(countCmdStream_fire_2) begin
      beatOffsetReg <= countCmdStream_payload_addr[2 : 0]; // @ Axi4Downsizer.scala l137
    end
    if(dataStream_fire_1) begin
      beatOffsetReg <= tmp_beatOffsetReg[2:0]; // @ Axi4Downsizer.scala l143
    end
  end


endmodule

module Axi4ReadOnlyDownsizer (
  input               io_input_ar_valid,
  output              io_input_ar_ready,
  input      [31:0]   io_input_ar_payload_addr,
  input      [3:0]    io_input_ar_payload_id,
  input      [3:0]    io_input_ar_payload_region,
  input      [7:0]    io_input_ar_payload_len,
  input      [2:0]    io_input_ar_payload_size,
  input      [1:0]    io_input_ar_payload_burst,
  input      [0:0]    io_input_ar_payload_lock,
  input      [3:0]    io_input_ar_payload_cache,
  input      [3:0]    io_input_ar_payload_qos,
  input      [2:0]    io_input_ar_payload_prot,
  output              io_input_r_valid,
  input               io_input_r_ready,
  output     [63:0]   io_input_r_payload_data,
  output     [3:0]    io_input_r_payload_id,
  output     [1:0]    io_input_r_payload_resp,
  output              io_input_r_payload_last,
  output              io_output_ar_valid,
  input               io_output_ar_ready,
  output     [31:0]   io_output_ar_payload_addr,
  output     [3:0]    io_output_ar_payload_id,
  output     [3:0]    io_output_ar_payload_region,
  output     [7:0]    io_output_ar_payload_len,
  output     [2:0]    io_output_ar_payload_size,
  output     [1:0]    io_output_ar_payload_burst,
  output     [0:0]    io_output_ar_payload_lock,
  output     [3:0]    io_output_ar_payload_cache,
  output     [3:0]    io_output_ar_payload_qos,
  output     [2:0]    io_output_ar_payload_prot,
  input               io_output_r_valid,
  output reg          io_output_r_ready,
  input      [31:0]   io_output_r_payload_data,
  input      [3:0]    io_output_r_payload_id,
  input      [1:0]    io_output_r_payload_resp,
  input               io_output_r_payload_last,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                generator_io_input_ready;
  wire                generator_io_output_valid;
  wire       [31:0]   generator_io_output_payload_addr;
  wire       [3:0]    generator_io_output_payload_id;
  wire       [3:0]    generator_io_output_payload_region;
  wire       [7:0]    generator_io_output_payload_len;
  wire       [2:0]    generator_io_output_payload_size;
  wire       [1:0]    generator_io_output_payload_burst;
  wire       [0:0]    generator_io_output_payload_lock;
  wire       [3:0]    generator_io_output_payload_cache;
  wire       [3:0]    generator_io_output_payload_qos;
  wire       [2:0]    generator_io_output_payload_prot;
  wire       [31:0]   generator_io_start;
  wire       [6:0]    generator_io_ratio;
  wire       [2:0]    generator_io_size;
  wire                generator_io_working;
  wire                generator_io_last;
  wire                generator_io_done;
  wire                dataOutCounter_io_input_ready;
  wire                dataOutCounter_io_output_valid;
  wire       [6:0]    dataOutCounter_io_output_payload_ratio;
  wire       [2:0]    dataOutCounter_io_output_payload_size;
  wire       [7:0]    dataOutCounter_io_output_payload_len;
  wire       [31:0]   dataOutCounter_io_output_payload_start;
  wire                dataOutCounter_io_working;
  wire                dataOutCounter_io_first;
  wire                dataOutCounter_io_last;
  wire                dataOutCounter_io_done;
  wire                dataCounter_io_input_ready;
  wire                dataCounter_io_output_valid;
  wire       [6:0]    dataCounter_io_output_payload_ratio;
  wire       [2:0]    dataCounter_io_output_payload_size;
  wire       [7:0]    dataCounter_io_output_payload_len;
  wire       [31:0]   dataCounter_io_output_payload_start;
  wire                dataCounter_io_working;
  wire                dataCounter_io_first;
  wire                dataCounter_io_last;
  wire                dataCounter_io_done;
  wire       [7:0]    tmp_beatOffset;
  wire       [7:0]    tmp_beatOffset_1;
  wire       [7:0]    tmp_beatOffset_2;
  wire       [5:0]    tmp_dataReg_aheadValue;
  wire                tmp_when;
  (* nowrshmsk *) reg        [63:0]   dataReg_aheadValue;
  wire                readCmdGen_valid;
  wire                readCmdGen_ready;
  wire       [31:0]   readCmdGen_payload_addr;
  wire       [3:0]    readCmdGen_payload_id;
  wire       [3:0]    readCmdGen_payload_region;
  wire       [7:0]    readCmdGen_payload_len;
  wire       [2:0]    readCmdGen_payload_size;
  wire       [1:0]    readCmdGen_payload_burst;
  wire       [0:0]    readCmdGen_payload_lock;
  wire       [3:0]    readCmdGen_payload_cache;
  wire       [3:0]    readCmdGen_payload_qos;
  wire       [2:0]    readCmdGen_payload_prot;
  wire                readCmdCount_valid;
  wire                readCmdCount_ready;
  wire       [31:0]   readCmdCount_payload_addr;
  wire       [3:0]    readCmdCount_payload_id;
  wire       [3:0]    readCmdCount_payload_region;
  wire       [7:0]    readCmdCount_payload_len;
  wire       [2:0]    readCmdCount_payload_size;
  wire       [1:0]    readCmdCount_payload_burst;
  wire       [0:0]    readCmdCount_payload_lock;
  wire       [3:0]    readCmdCount_payload_cache;
  wire       [3:0]    readCmdCount_payload_qos;
  wire       [2:0]    readCmdCount_payload_prot;
  wire                cmdStream_valid;
  wire                cmdStream_ready;
  wire       [31:0]   cmdStream_payload_addr;
  wire       [3:0]    cmdStream_payload_id;
  wire       [3:0]    cmdStream_payload_region;
  wire       [7:0]    cmdStream_payload_len;
  wire       [2:0]    cmdStream_payload_size;
  wire       [1:0]    cmdStream_payload_burst;
  wire       [0:0]    cmdStream_payload_lock;
  wire       [3:0]    cmdStream_payload_cache;
  wire       [3:0]    cmdStream_payload_qos;
  wire       [2:0]    cmdStream_payload_prot;
  wire       [6:0]    cmdState_ratio;
  wire       [2:0]    cmdState_size;
  wire       [7:0]    cmdState_len;
  wire       [31:0]   cmdState_start;
  wire                countCmdStream_valid;
  wire                countCmdStream_ready;
  wire       [6:0]    countCmdStream_payload_ratio;
  wire       [2:0]    countCmdStream_payload_size;
  wire       [7:0]    countCmdStream_payload_len;
  wire       [31:0]   countCmdStream_payload_start;
  wire                countOutStream_valid;
  wire                countOutStream_ready;
  wire       [6:0]    countOutStream_payload_ratio;
  wire       [2:0]    countOutStream_payload_size;
  wire       [7:0]    countOutStream_payload_len;
  wire       [31:0]   countOutStream_payload_start;
  wire                countStream_valid;
  wire                countStream_ready;
  wire       [6:0]    countStream_payload_ratio;
  wire       [2:0]    countStream_payload_size;
  wire       [7:0]    countStream_payload_len;
  wire       [31:0]   countStream_payload_start;
  wire                io_output_r_fire;
  reg        [63:0]   dataReg;
  reg        [2:0]    beatOffset;
  wire                countOutStream_fire;
  wire                io_output_r_fire_1;
  wire       [2:0]    offset;
  wire                dataOut_valid;
  wire                dataOut_ready;
  wire       [63:0]   dataOut_payload_data;
  wire       [3:0]    dataOut_payload_id;
  wire       [1:0]    dataOut_payload_resp;
  wire                dataOut_payload_last;
  reg                 lastLast;
  wire                countOutStream_fire_1;
  wire                io_output_r_fire_2;
  reg                 io_output_r_thrown_valid;
  wire                io_output_r_thrown_ready;
  wire       [31:0]   io_output_r_thrown_payload_data;
  wire       [3:0]    io_output_r_thrown_payload_id;
  wire       [1:0]    io_output_r_thrown_payload_resp;
  wire                io_output_r_thrown_payload_last;

  assign tmp_dataReg_aheadValue = ({3'd0,offset} <<< 3);
  assign tmp_when = (! dataCounter_io_last);
  assign tmp_beatOffset = (tmp_beatOffset_1 + tmp_beatOffset_2);
  assign tmp_beatOffset_1 = {5'd0, beatOffset};
  assign tmp_beatOffset_2 = ({7'd0,1'b1} <<< countStream_payload_size);
  Axi4DownsizerSubTransactionGenerator_1 generator (
    .io_input_valid           (readCmdGen_valid                       ), //i
    .io_input_ready           (generator_io_input_ready               ), //o
    .io_input_payload_addr    (readCmdGen_payload_addr[31:0]          ), //i
    .io_input_payload_id      (readCmdGen_payload_id[3:0]             ), //i
    .io_input_payload_region  (readCmdGen_payload_region[3:0]         ), //i
    .io_input_payload_len     (readCmdGen_payload_len[7:0]            ), //i
    .io_input_payload_size    (readCmdGen_payload_size[2:0]           ), //i
    .io_input_payload_burst   (readCmdGen_payload_burst[1:0]          ), //i
    .io_input_payload_lock    (readCmdGen_payload_lock                ), //i
    .io_input_payload_cache   (readCmdGen_payload_cache[3:0]          ), //i
    .io_input_payload_qos     (readCmdGen_payload_qos[3:0]            ), //i
    .io_input_payload_prot    (readCmdGen_payload_prot[2:0]           ), //i
    .io_output_valid          (generator_io_output_valid              ), //o
    .io_output_ready          (cmdStream_ready                        ), //i
    .io_output_payload_addr   (generator_io_output_payload_addr[31:0] ), //o
    .io_output_payload_id     (generator_io_output_payload_id[3:0]    ), //o
    .io_output_payload_region (generator_io_output_payload_region[3:0]), //o
    .io_output_payload_len    (generator_io_output_payload_len[7:0]   ), //o
    .io_output_payload_size   (generator_io_output_payload_size[2:0]  ), //o
    .io_output_payload_burst  (generator_io_output_payload_burst[1:0] ), //o
    .io_output_payload_lock   (generator_io_output_payload_lock       ), //o
    .io_output_payload_cache  (generator_io_output_payload_cache[3:0] ), //o
    .io_output_payload_qos    (generator_io_output_payload_qos[3:0]   ), //o
    .io_output_payload_prot   (generator_io_output_payload_prot[2:0]  ), //o
    .io_start                 (generator_io_start[31:0]               ), //o
    .io_ratio                 (generator_io_ratio[6:0]                ), //o
    .io_size                  (generator_io_size[2:0]                 ), //o
    .io_working               (generator_io_working                   ), //o
    .io_last                  (generator_io_last                      ), //o
    .io_done                  (generator_io_done                      ), //o
    .io_axiClk                (io_axiClk                              ), //i
    .tmp_io_resetn            (tmp_io_resetn                          )  //i
  );
  StreamTransactionExtender_1 dataOutCounter (
    .io_count                (countCmdStream_payload_len[7:0]             ), //i
    .io_input_valid          (countCmdStream_valid                        ), //i
    .io_input_ready          (dataOutCounter_io_input_ready               ), //o
    .io_input_payload_ratio  (countCmdStream_payload_ratio[6:0]           ), //i
    .io_input_payload_size   (countCmdStream_payload_size[2:0]            ), //i
    .io_input_payload_len    (countCmdStream_payload_len[7:0]             ), //i
    .io_input_payload_start  (countCmdStream_payload_start[31:0]          ), //i
    .io_output_valid         (dataOutCounter_io_output_valid              ), //o
    .io_output_ready         (countOutStream_ready                        ), //i
    .io_output_payload_ratio (dataOutCounter_io_output_payload_ratio[6:0] ), //o
    .io_output_payload_size  (dataOutCounter_io_output_payload_size[2:0]  ), //o
    .io_output_payload_len   (dataOutCounter_io_output_payload_len[7:0]   ), //o
    .io_output_payload_start (dataOutCounter_io_output_payload_start[31:0]), //o
    .io_working              (dataOutCounter_io_working                   ), //o
    .io_first                (dataOutCounter_io_first                     ), //o
    .io_last                 (dataOutCounter_io_last                      ), //o
    .io_done                 (dataOutCounter_io_done                      ), //o
    .io_axiClk               (io_axiClk                                   ), //i
    .tmp_io_resetn           (tmp_io_resetn                               )  //i
  );
  StreamTransactionExtender_2 dataCounter (
    .io_count                (countOutStream_payload_ratio[6:0]        ), //i
    .io_input_valid          (countOutStream_valid                     ), //i
    .io_input_ready          (dataCounter_io_input_ready               ), //o
    .io_input_payload_ratio  (countOutStream_payload_ratio[6:0]        ), //i
    .io_input_payload_size   (countOutStream_payload_size[2:0]         ), //i
    .io_input_payload_len    (countOutStream_payload_len[7:0]          ), //i
    .io_input_payload_start  (countOutStream_payload_start[31:0]       ), //i
    .io_output_valid         (dataCounter_io_output_valid              ), //o
    .io_output_ready         (countStream_ready                        ), //i
    .io_output_payload_ratio (dataCounter_io_output_payload_ratio[6:0] ), //o
    .io_output_payload_size  (dataCounter_io_output_payload_size[2:0]  ), //o
    .io_output_payload_len   (dataCounter_io_output_payload_len[7:0]   ), //o
    .io_output_payload_start (dataCounter_io_output_payload_start[31:0]), //o
    .io_working              (dataCounter_io_working                   ), //o
    .io_first                (dataCounter_io_first                     ), //o
    .io_last                 (dataCounter_io_last                      ), //o
    .io_done                 (dataCounter_io_done                      ), //o
    .io_axiClk               (io_axiClk                                ), //i
    .tmp_io_resetn           (tmp_io_resetn                            )  //i
  );
  always @(*) begin
    dataReg_aheadValue = dataReg; // @ Phase.scala l1785
    if(io_output_r_valid) begin
      dataReg_aheadValue[tmp_dataReg_aheadValue +: 32] = io_output_r_payload_data; // @ Axi4Downsizer.scala l229
    end
  end

  assign io_input_ar_ready = (readCmdGen_ready && readCmdCount_ready); // @ Stream.scala l985
  assign readCmdGen_valid = (io_input_ar_valid && io_input_ar_ready); // @ Stream.scala l986
  assign readCmdCount_valid = (io_input_ar_valid && io_input_ar_ready); // @ Stream.scala l986
  assign readCmdGen_payload_addr = io_input_ar_payload_addr; // @ Stream.scala l987
  assign readCmdGen_payload_id = io_input_ar_payload_id; // @ Stream.scala l987
  assign readCmdGen_payload_region = io_input_ar_payload_region; // @ Stream.scala l987
  assign readCmdGen_payload_len = io_input_ar_payload_len; // @ Stream.scala l987
  assign readCmdGen_payload_size = io_input_ar_payload_size; // @ Stream.scala l987
  assign readCmdGen_payload_burst = io_input_ar_payload_burst; // @ Stream.scala l987
  assign readCmdGen_payload_lock = io_input_ar_payload_lock; // @ Stream.scala l987
  assign readCmdGen_payload_cache = io_input_ar_payload_cache; // @ Stream.scala l987
  assign readCmdGen_payload_qos = io_input_ar_payload_qos; // @ Stream.scala l987
  assign readCmdGen_payload_prot = io_input_ar_payload_prot; // @ Stream.scala l987
  assign readCmdCount_payload_addr = io_input_ar_payload_addr; // @ Stream.scala l987
  assign readCmdCount_payload_id = io_input_ar_payload_id; // @ Stream.scala l987
  assign readCmdCount_payload_region = io_input_ar_payload_region; // @ Stream.scala l987
  assign readCmdCount_payload_len = io_input_ar_payload_len; // @ Stream.scala l987
  assign readCmdCount_payload_size = io_input_ar_payload_size; // @ Stream.scala l987
  assign readCmdCount_payload_burst = io_input_ar_payload_burst; // @ Stream.scala l987
  assign readCmdCount_payload_lock = io_input_ar_payload_lock; // @ Stream.scala l987
  assign readCmdCount_payload_cache = io_input_ar_payload_cache; // @ Stream.scala l987
  assign readCmdCount_payload_qos = io_input_ar_payload_qos; // @ Stream.scala l987
  assign readCmdCount_payload_prot = io_input_ar_payload_prot; // @ Stream.scala l987
  assign readCmdGen_ready = generator_io_input_ready; // @ Stream.scala l295
  assign cmdStream_valid = generator_io_output_valid; // @ Stream.scala l294
  assign cmdStream_payload_addr = generator_io_output_payload_addr; // @ Stream.scala l296
  assign cmdStream_payload_id = generator_io_output_payload_id; // @ Stream.scala l296
  assign cmdStream_payload_region = generator_io_output_payload_region; // @ Stream.scala l296
  assign cmdStream_payload_len = generator_io_output_payload_len; // @ Stream.scala l296
  assign cmdStream_payload_size = generator_io_output_payload_size; // @ Stream.scala l296
  assign cmdStream_payload_burst = generator_io_output_payload_burst; // @ Stream.scala l296
  assign cmdStream_payload_lock = generator_io_output_payload_lock; // @ Stream.scala l296
  assign cmdStream_payload_cache = generator_io_output_payload_cache; // @ Stream.scala l296
  assign cmdStream_payload_qos = generator_io_output_payload_qos; // @ Stream.scala l296
  assign cmdStream_payload_prot = generator_io_output_payload_prot; // @ Stream.scala l296
  assign io_output_ar_valid = cmdStream_valid; // @ Stream.scala l294
  assign cmdStream_ready = io_output_ar_ready; // @ Stream.scala l295
  assign io_output_ar_payload_addr = cmdStream_payload_addr; // @ Stream.scala l296
  assign io_output_ar_payload_id = cmdStream_payload_id; // @ Stream.scala l296
  assign io_output_ar_payload_region = cmdStream_payload_region; // @ Stream.scala l296
  assign io_output_ar_payload_len = cmdStream_payload_len; // @ Stream.scala l296
  assign io_output_ar_payload_size = cmdStream_payload_size; // @ Stream.scala l296
  assign io_output_ar_payload_burst = cmdStream_payload_burst; // @ Stream.scala l296
  assign io_output_ar_payload_lock = cmdStream_payload_lock; // @ Stream.scala l296
  assign io_output_ar_payload_cache = cmdStream_payload_cache; // @ Stream.scala l296
  assign io_output_ar_payload_qos = cmdStream_payload_qos; // @ Stream.scala l296
  assign io_output_ar_payload_prot = cmdStream_payload_prot; // @ Stream.scala l296
  assign countCmdStream_valid = readCmdCount_valid; // @ Stream.scala l308
  assign readCmdCount_ready = countCmdStream_ready; // @ Stream.scala l309
  assign countCmdStream_payload_ratio = generator_io_ratio; // @ Axi4Downsizer.scala l200
  assign countCmdStream_payload_size = generator_io_size; // @ Axi4Downsizer.scala l201
  assign countCmdStream_payload_len = readCmdCount_payload_len; // @ Axi4Downsizer.scala l202
  assign countCmdStream_payload_start = generator_io_start; // @ Axi4Downsizer.scala l203
  assign countCmdStream_ready = dataOutCounter_io_input_ready; // @ Stream.scala l295
  assign countOutStream_valid = dataOutCounter_io_output_valid; // @ Stream.scala l294
  assign countOutStream_payload_ratio = dataOutCounter_io_output_payload_ratio; // @ Stream.scala l296
  assign countOutStream_payload_size = dataOutCounter_io_output_payload_size; // @ Stream.scala l296
  assign countOutStream_payload_len = dataOutCounter_io_output_payload_len; // @ Stream.scala l296
  assign countOutStream_payload_start = dataOutCounter_io_output_payload_start; // @ Stream.scala l296
  assign countOutStream_ready = dataCounter_io_input_ready; // @ Stream.scala l295
  assign countStream_valid = dataCounter_io_output_valid; // @ Stream.scala l294
  assign countStream_payload_ratio = dataCounter_io_output_payload_ratio; // @ Stream.scala l296
  assign countStream_payload_size = dataCounter_io_output_payload_size; // @ Stream.scala l296
  assign countStream_payload_len = dataCounter_io_output_payload_len; // @ Stream.scala l296
  assign countStream_payload_start = dataCounter_io_output_payload_start; // @ Stream.scala l296
  assign io_output_r_fire = (io_output_r_valid && io_output_r_ready); // @ BaseType.scala l305
  assign countStream_ready = io_output_r_fire; // @ Axi4Downsizer.scala l215
  assign countOutStream_fire = (countOutStream_valid && countOutStream_ready); // @ BaseType.scala l305
  assign io_output_r_fire_1 = (io_output_r_valid && io_output_r_ready); // @ BaseType.scala l305
  assign offset = (beatOffset & (~ 3'b011)); // @ BaseType.scala l299
  assign countOutStream_fire_1 = (countOutStream_valid && countOutStream_ready); // @ BaseType.scala l305
  assign io_output_r_fire_2 = (io_output_r_valid && io_output_r_ready); // @ BaseType.scala l305
  always @(*) begin
    io_output_r_thrown_valid = io_output_r_valid; // @ Stream.scala l294
    if(tmp_when) begin
      io_output_r_thrown_valid = 1'b0; // @ Stream.scala l439
    end
  end

  always @(*) begin
    io_output_r_ready = io_output_r_thrown_ready; // @ Stream.scala l295
    if(tmp_when) begin
      io_output_r_ready = 1'b1; // @ Stream.scala l440
    end
  end

  assign io_output_r_thrown_payload_data = io_output_r_payload_data; // @ Stream.scala l296
  assign io_output_r_thrown_payload_id = io_output_r_payload_id; // @ Stream.scala l296
  assign io_output_r_thrown_payload_resp = io_output_r_payload_resp; // @ Stream.scala l296
  assign io_output_r_thrown_payload_last = io_output_r_payload_last; // @ Stream.scala l296
  assign dataOut_valid = io_output_r_thrown_valid; // @ Stream.scala l308
  assign io_output_r_thrown_ready = dataOut_ready; // @ Stream.scala l309
  assign dataOut_payload_data = dataReg_aheadValue; // @ Axi4Downsizer.scala l240
  assign dataOut_payload_last = (io_output_r_thrown_payload_last && lastLast); // @ Axi4Downsizer.scala l241
  assign dataOut_payload_id = io_output_r_thrown_payload_id; // @ MultiData.scala l233
  assign dataOut_payload_resp = io_output_r_thrown_payload_resp; // @ MultiData.scala l233
  assign io_input_r_valid = dataOut_valid; // @ Stream.scala l294
  assign dataOut_ready = io_input_r_ready; // @ Stream.scala l295
  assign io_input_r_payload_data = dataOut_payload_data; // @ Stream.scala l296
  assign io_input_r_payload_id = dataOut_payload_id; // @ Stream.scala l296
  assign io_input_r_payload_resp = dataOut_payload_resp; // @ Stream.scala l296
  assign io_input_r_payload_last = dataOut_payload_last; // @ Stream.scala l296
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      dataReg <= 64'h0; // @ Data.scala l400
      beatOffset <= 3'b000; // @ Data.scala l400
      lastLast <= 1'b0; // @ Data.scala l400
    end else begin
      if((countOutStream_fire && dataOutCounter_io_first)) begin
        beatOffset <= countOutStream_payload_start[2 : 0]; // @ Axi4Downsizer.scala l220
      end else begin
        if(io_output_r_fire_1) begin
          beatOffset <= tmp_beatOffset[2:0]; // @ Axi4Downsizer.scala l222
        end
      end
      if(((dataOutCounter_io_working && dataOutCounter_io_last) && countOutStream_fire_1)) begin
        lastLast <= 1'b1; // @ Axi4Downsizer.scala l235
      end else begin
        if((dataCounter_io_last && io_output_r_fire_2)) begin
          lastLast <= 1'b0; // @ Axi4Downsizer.scala l237
        end
      end
      dataReg <= dataReg_aheadValue; // @ Phase.scala l1803
    end
  end


endmodule

module BIU (
  output              stall,
  input               flush,
  input               cpu_cmd_valid,
  output              cpu_cmd_ready,
  input      [31:0]   cpu_cmd_payload_addr,
  input               cpu_cmd_payload_wen,
  input      [63:0]   cpu_cmd_payload_wdata,
  input      [7:0]    cpu_cmd_payload_wstrb,
  input      [2:0]    cpu_cmd_payload_size,
  output              cpu_rsp_valid,
  output     [63:0]   cpu_rsp_payload_data,
  output              cpu_bypass_cmd_valid,
  input               cpu_bypass_cmd_ready,
  output     [31:0]   cpu_bypass_cmd_payload_addr,
  output              cpu_bypass_cmd_payload_wen,
  output     [63:0]   cpu_bypass_cmd_payload_wdata,
  output     [7:0]    cpu_bypass_cmd_payload_wstrb,
  output     [2:0]    cpu_bypass_cmd_payload_size,
  input               cpu_bypass_rsp_valid,
  input      [63:0]   cpu_bypass_rsp_payload_data,
  input               io_axiClk,
  input               cpu_rst
);

  wire                cpu_stall;
  wire                cpu_bypass_stall;
  reg                 cpu_cmd_ready_1;
  wire                bypass;
  reg                 bypass_reg;
  reg                 bypass_rsp_valid_d1;
  reg        [63:0]   bypass_rsp_data_d1;

  assign bypass = (cpu_cmd_valid && cpu_cmd_ready); // @ BaseType.scala l305
  assign cpu_bypass_cmd_valid = bypass; // @ DCache.scala l288
  assign cpu_bypass_cmd_payload_addr = cpu_cmd_payload_addr; // @ DCache.scala l289
  assign cpu_bypass_cmd_payload_wen = cpu_cmd_payload_wen; // @ DCache.scala l290
  assign cpu_bypass_cmd_payload_wdata = cpu_cmd_payload_wdata; // @ DCache.scala l291
  assign cpu_bypass_cmd_payload_wstrb = cpu_cmd_payload_wstrb; // @ DCache.scala l292
  assign cpu_bypass_cmd_payload_size = cpu_cmd_payload_size; // @ DCache.scala l293
  assign cpu_rsp_payload_data = bypass_rsp_data_d1; // @ DCache.scala l309
  assign cpu_rsp_valid = bypass_rsp_valid_d1; // @ DCache.scala l310
  assign cpu_cmd_ready = cpu_cmd_ready_1; // @ DCache.scala l311
  assign stall = (((! cpu_cmd_ready) && (! bypass_rsp_valid_d1)) || bypass); // @ DCache.scala l312
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      cpu_cmd_ready_1 <= 1'b1; // @ Data.scala l400
      bypass_reg <= 1'b0; // @ Data.scala l400
    end else begin
      if(bypass) begin
        bypass_reg <= 1'b1; // @ DCache.scala l295
      end else begin
        if(bypass_rsp_valid_d1) begin
          bypass_reg <= 1'b0; // @ DCache.scala l298
        end
      end
      if(bypass) begin
        cpu_cmd_ready_1 <= 1'b0; // @ DCache.scala l303
      end else begin
        if(bypass_rsp_valid_d1) begin
          cpu_cmd_ready_1 <= 1'b1; // @ DCache.scala l306
        end
      end
    end
  end

  always @(posedge io_axiClk) begin
    bypass_rsp_valid_d1 <= cpu_bypass_rsp_valid; // @ Reg.scala l39
    bypass_rsp_data_d1 <= cpu_bypass_rsp_payload_data; // @ Reg.scala l39
  end


endmodule

module Divider (
  input               io_flush,
  input               io_start,
  output              io_busy,
  output              io_done_valid,
  input               io_done_ready,
  input               io_op_is_word,
  input               io_op_is_signed,
  input      [63:0]   io_dividend,
  input      [63:0]   io_divisor,
  output     [63:0]   io_quotient,
  output     [63:0]   io_remainder,
  input               io_axiClk,
  input               cpu_rst
);

  wire       [63:0]   u_div_s_axis_divisor_tdata;
  wire       [63:0]   u_div_s_axis_dividend_tdata;
  wire                u_div_m_axis_dout_tvalid;
  wire       [127:0]  u_div_m_axis_dout_tdata;
  wire       [63:0]   tmp_dividend_abs_3;
  wire       [63:0]   tmp_dividend_abs_4;
  wire       [63:0]   tmp_dividend_abs_5;
  wire       [0:0]    tmp_dividend_abs_6;
  wire       [63:0]   tmp_divisor_abs_3;
  wire       [63:0]   tmp_divisor_abs_4;
  wire       [63:0]   tmp_divisor_abs_5;
  wire       [0:0]    tmp_divisor_abs_6;
  wire       [63:0]   tmp_dividend_abs_7;
  wire       [63:0]   tmp_dividend_abs_8;
  wire       [63:0]   tmp_dividend_abs_9;
  wire       [0:0]    tmp_dividend_abs_10;
  wire       [63:0]   tmp_divisor_abs_7;
  wire       [63:0]   tmp_divisor_abs_8;
  wire       [63:0]   tmp_divisor_abs_9;
  wire       [0:0]    tmp_divisor_abs_10;
  wire       [63:0]   tmp_quotient_wrapper;
  wire       [63:0]   tmp_remainder_wrapper;
  wire       [63:0]   tmp_quotient_wrapper_1;
  wire       [63:0]   tmp_remainder_wrapper_1;
  reg                 busy_reg;
  wire       [63:0]   dividend_word_extd;
  wire       [63:0]   divisor_word_extd;
  reg        [63:0]   dividend_abs;
  reg        [63:0]   divisor_abs;
  wire                dividend_positive;
  wire                divisor_positive;
  wire                tmp_dividend_word_extd;
  reg        [31:0]   tmp_dividend_word_extd_1;
  wire                tmp_divisor_word_extd;
  reg        [31:0]   tmp_divisor_word_extd_1;
  wire       [63:0]   tmp_dividend_abs;
  wire       [63:0]   tmp_divisor_abs;
  reg        [31:0]   tmp_dividend_abs_1;
  reg        [31:0]   tmp_divisor_abs_1;
  wire       [63:0]   tmp_dividend_abs_2;
  wire       [63:0]   tmp_divisor_abs_2;
  wire       [63:0]   quotient_origin;
  wire       [63:0]   remainder_origin;
  wire       [63:0]   quotient_word_extd;
  wire       [63:0]   remainder_word_extd;
  reg        [63:0]   quotient_wrapper;
  reg        [63:0]   remainder_wrapper;
  wire                tmp_quotient_word_extd;
  reg        [31:0]   tmp_quotient_word_extd_1;
  wire                tmp_remainder_word_extd;
  reg        [31:0]   tmp_remainder_word_extd_1;
  function [31:0] zz_tmp_dividend_abs_1(input dummy);
    begin
      zz_tmp_dividend_abs_1[31] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[30] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[29] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[28] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[27] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[26] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[25] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[24] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[23] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[22] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[21] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[20] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[19] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[18] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[17] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[16] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[15] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[14] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[13] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[12] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[11] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[10] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[9] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[8] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[7] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[6] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[5] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[4] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[3] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[2] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[1] = 1'b0; // @ Literal.scala l87
      zz_tmp_dividend_abs_1[0] = 1'b0; // @ Literal.scala l87
    end
  endfunction
  wire [31:0] tmp_1;
  function [31:0] zz_tmp_divisor_abs_1(input dummy);
    begin
      zz_tmp_divisor_abs_1[31] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[30] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[29] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[28] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[27] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[26] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[25] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[24] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[23] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[22] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[21] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[20] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[19] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[18] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[17] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[16] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[15] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[14] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[13] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[12] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[11] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[10] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[9] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[8] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[7] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[6] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[5] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[4] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[3] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[2] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[1] = 1'b0; // @ Literal.scala l87
      zz_tmp_divisor_abs_1[0] = 1'b0; // @ Literal.scala l87
    end
  endfunction
  wire [31:0] tmp_2;

  assign tmp_dividend_abs_3 = (tmp_dividend_abs[63] ? tmp_dividend_abs_4 : tmp_dividend_abs);
  assign tmp_dividend_abs_4 = (~ tmp_dividend_abs);
  assign tmp_dividend_abs_6 = tmp_dividend_abs[63];
  assign tmp_dividend_abs_5 = {63'd0, tmp_dividend_abs_6};
  assign tmp_divisor_abs_3 = (tmp_divisor_abs[63] ? tmp_divisor_abs_4 : tmp_divisor_abs);
  assign tmp_divisor_abs_4 = (~ tmp_divisor_abs);
  assign tmp_divisor_abs_6 = tmp_divisor_abs[63];
  assign tmp_divisor_abs_5 = {63'd0, tmp_divisor_abs_6};
  assign tmp_dividend_abs_7 = (tmp_dividend_abs_2[63] ? tmp_dividend_abs_8 : tmp_dividend_abs_2);
  assign tmp_dividend_abs_8 = (~ tmp_dividend_abs_2);
  assign tmp_dividend_abs_10 = tmp_dividend_abs_2[63];
  assign tmp_dividend_abs_9 = {63'd0, tmp_dividend_abs_10};
  assign tmp_divisor_abs_7 = (tmp_divisor_abs_2[63] ? tmp_divisor_abs_8 : tmp_divisor_abs_2);
  assign tmp_divisor_abs_8 = (~ tmp_divisor_abs_2);
  assign tmp_divisor_abs_10 = tmp_divisor_abs_2[63];
  assign tmp_divisor_abs_9 = {63'd0, tmp_divisor_abs_10};
  assign tmp_quotient_wrapper = ((~ quotient_origin) + 64'h0000000000000001);
  assign tmp_remainder_wrapper = ((~ remainder_origin) + 64'h0000000000000001);
  assign tmp_quotient_wrapper_1 = ((~ quotient_origin) + 64'h0000000000000001);
  assign tmp_remainder_wrapper_1 = ((~ remainder_origin) + 64'h0000000000000001);
  div_gen_0 u_div (
    .aclk                   (io_axiClk                        ), //i
    .s_axis_divisor_tvalid  (io_start                         ), //i
    .s_axis_divisor_tdata   (u_div_s_axis_divisor_tdata[63:0] ), //i
    .s_axis_dividend_tvalid (io_start                         ), //i
    .s_axis_dividend_tdata  (u_div_s_axis_dividend_tdata[63:0]), //i
    .m_axis_dout_tvalid     (u_div_m_axis_dout_tvalid         ), //o
    .m_axis_dout_tdata      (u_div_m_axis_dout_tdata[127:0]   )  //o
  );
  assign tmp_dividend_word_extd = io_dividend[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_dividend_word_extd_1[31] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[30] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[29] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[28] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[27] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[26] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[25] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[24] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[23] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[22] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[21] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[20] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[19] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[18] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[17] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[16] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[15] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[14] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[13] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[12] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[11] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[10] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[9] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[8] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[7] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[6] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[5] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[4] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[3] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[2] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[1] = tmp_dividend_word_extd; // @ Literal.scala l87
    tmp_dividend_word_extd_1[0] = tmp_dividend_word_extd; // @ Literal.scala l87
  end

  assign dividend_word_extd = {tmp_dividend_word_extd_1,io_dividend[31 : 0]}; // @ Divider.scala l76
  assign tmp_divisor_word_extd = io_divisor[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_divisor_word_extd_1[31] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[30] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[29] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[28] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[27] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[26] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[25] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[24] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[23] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[22] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[21] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[20] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[19] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[18] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[17] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[16] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[15] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[14] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[13] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[12] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[11] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[10] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[9] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[8] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[7] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[6] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[5] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[4] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[3] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[2] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[1] = tmp_divisor_word_extd; // @ Literal.scala l87
    tmp_divisor_word_extd_1[0] = tmp_divisor_word_extd; // @ Literal.scala l87
  end

  assign divisor_word_extd = {tmp_divisor_word_extd_1,io_divisor[31 : 0]}; // @ Divider.scala l77
  assign dividend_positive = (io_op_is_signed ? (! dividend_word_extd[63]) : 1'b1); // @ Divider.scala l78
  assign divisor_positive = (io_op_is_signed ? (! divisor_word_extd[63]) : 1'b1); // @ Divider.scala l79
  assign tmp_dividend_abs = dividend_word_extd; // @ BaseType.scala l318
  always @(*) begin
    if(io_op_is_word) begin
      if(io_op_is_signed) begin
        dividend_abs = (tmp_dividend_abs_3 + tmp_dividend_abs_5); // @ Divider.scala l83
      end else begin
        dividend_abs = {tmp_dividend_abs_1,io_dividend[31 : 0]}; // @ Divider.scala l87
      end
    end else begin
      if(io_op_is_signed) begin
        dividend_abs = (tmp_dividend_abs_7 + tmp_dividend_abs_9); // @ Divider.scala l93
      end else begin
        dividend_abs = io_dividend; // @ Divider.scala l97
      end
    end
  end

  assign tmp_divisor_abs = divisor_word_extd; // @ BaseType.scala l318
  always @(*) begin
    if(io_op_is_word) begin
      if(io_op_is_signed) begin
        divisor_abs = (tmp_divisor_abs_3 + tmp_divisor_abs_5); // @ Divider.scala l84
      end else begin
        divisor_abs = {tmp_divisor_abs_1,io_divisor[31 : 0]}; // @ Divider.scala l88
      end
    end else begin
      if(io_op_is_signed) begin
        divisor_abs = (tmp_divisor_abs_7 + tmp_divisor_abs_9); // @ Divider.scala l94
      end else begin
        divisor_abs = io_divisor; // @ Divider.scala l98
      end
    end
  end

  assign tmp_1 = zz_tmp_dividend_abs_1(1'b0);
  always @(*) tmp_dividend_abs_1 = tmp_1;
  assign tmp_2 = zz_tmp_divisor_abs_1(1'b0);
  always @(*) tmp_divisor_abs_1 = tmp_2;
  assign tmp_dividend_abs_2 = io_dividend; // @ BaseType.scala l318
  assign tmp_divisor_abs_2 = io_divisor; // @ BaseType.scala l318
  assign quotient_origin = u_div_m_axis_dout_tdata[127 : 64]; // @ Divider.scala l109
  assign remainder_origin = u_div_m_axis_dout_tdata[63 : 0]; // @ Divider.scala l110
  assign tmp_quotient_word_extd = quotient_origin[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_quotient_word_extd_1[31] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[30] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[29] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[28] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[27] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[26] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[25] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[24] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[23] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[22] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[21] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[20] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[19] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[18] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[17] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[16] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[15] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[14] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[13] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[12] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[11] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[10] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[9] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[8] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[7] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[6] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[5] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[4] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[3] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[2] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[1] = tmp_quotient_word_extd; // @ Literal.scala l87
    tmp_quotient_word_extd_1[0] = tmp_quotient_word_extd; // @ Literal.scala l87
  end

  assign quotient_word_extd = {tmp_quotient_word_extd_1,quotient_origin[31 : 0]}; // @ Divider.scala l111
  assign tmp_remainder_word_extd = remainder_origin[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_remainder_word_extd_1[31] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[30] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[29] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[28] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[27] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[26] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[25] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[24] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[23] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[22] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[21] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[20] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[19] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[18] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[17] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[16] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[15] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[14] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[13] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[12] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[11] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[10] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[9] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[8] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[7] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[6] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[5] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[4] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[3] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[2] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[1] = tmp_remainder_word_extd; // @ Literal.scala l87
    tmp_remainder_word_extd_1[0] = tmp_remainder_word_extd; // @ Literal.scala l87
  end

  assign remainder_word_extd = {tmp_remainder_word_extd_1,remainder_origin[31 : 0]}; // @ Divider.scala l112
  always @(*) begin
    if(io_op_is_word) begin
      quotient_wrapper = ((dividend_positive == divisor_positive) ? quotient_word_extd : tmp_quotient_wrapper); // @ Divider.scala l115
    end else begin
      quotient_wrapper = ((dividend_positive == divisor_positive) ? quotient_origin : tmp_quotient_wrapper_1); // @ Divider.scala l119
    end
  end

  always @(*) begin
    if(io_op_is_word) begin
      remainder_wrapper = (dividend_positive ? remainder_word_extd : tmp_remainder_wrapper); // @ Divider.scala l116
    end else begin
      remainder_wrapper = (dividend_positive ? remainder_origin : tmp_remainder_wrapper_1); // @ Divider.scala l120
    end
  end

  assign u_div_s_axis_divisor_tdata = divisor_abs; // @ Divider.scala l124
  assign u_div_s_axis_dividend_tdata = dividend_abs; // @ Divider.scala l126
  assign io_quotient = quotient_wrapper; // @ Divider.scala l127
  assign io_remainder = remainder_wrapper; // @ Divider.scala l128
  assign io_done_valid = (u_div_m_axis_dout_tvalid && busy_reg); // @ Divider.scala l129
  assign io_busy = busy_reg; // @ Divider.scala l130
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      busy_reg <= 1'b0; // @ Data.scala l400
    end else begin
      if(io_flush) begin
        busy_reg <= 1'b0; // @ Divider.scala l61
      end else begin
        if(io_start) begin
          busy_reg <= 1'b1; // @ Divider.scala l64
        end else begin
          if(io_done_valid) begin
            busy_reg <= 1'b0; // @ Divider.scala l67
          end
        end
      end
    end
  end


endmodule

module BJU_kernel (
  input               in_valid,
  input               micro_op_rd_wen,
  input               micro_op_src2_is_imm,
  input      [3:0]    micro_op_bju_ctrl_op,
  input               micro_op_bju_rd_eq_rs1,
  input               micro_op_bju_rd_is_link,
  input               micro_op_bju_rs1_is_link,
  input      [3:0]    micro_op_exp_ctrl_op,
  input      [11:0]   micro_op_exp_csr_addr,
  input               micro_op_exp_csr_wen,
  input      [31:0]   pc,
  input      [63:0]   imm,
  input      [63:0]   rs1_data,
  input      [63:0]   rs2_data,
  output     [63:0]   rd_data,
  input               bpu_pred_taken,
  input      [31:0]   bpu_target_pc,
  output reg          redirect_valid,
  output reg [31:0]   redirect_pc,
  output              train_valid,
  output     [31:0]   train_pc,
  output              train_taken,
  output              train_mispred,
  output     [4:0]    train_history,
  output     [31:0]   train_pc_next,
  output              train_is_call,
  output              train_is_ret,
  output              train_is_jmp,
  output              interrupt_valid,
  output     [31:0]   interrupt_pc,
  input               timer_int,
  input               io_axiClk,
  input               cpu_rst
);
  localparam BjuCtrlEnum_IDLE = 4'd0;
  localparam BjuCtrlEnum_AUIPC = 4'd1;
  localparam BjuCtrlEnum_JAL = 4'd2;
  localparam BjuCtrlEnum_JALR = 4'd3;
  localparam BjuCtrlEnum_BEQ = 4'd4;
  localparam BjuCtrlEnum_BNE = 4'd5;
  localparam BjuCtrlEnum_BLT = 4'd6;
  localparam BjuCtrlEnum_BGE = 4'd7;
  localparam BjuCtrlEnum_BLTU = 4'd8;
  localparam BjuCtrlEnum_BGEU = 4'd9;
  localparam BjuCtrlEnum_CSR = 4'd10;
  localparam ExpCtrlEnum_IDLE = 4'd0;
  localparam ExpCtrlEnum_ECALL = 4'd1;
  localparam ExpCtrlEnum_EBREAK = 4'd2;
  localparam ExpCtrlEnum_MRET = 4'd3;
  localparam ExpCtrlEnum_CSRRW = 4'd4;
  localparam ExpCtrlEnum_CSRRS = 4'd5;
  localparam ExpCtrlEnum_CSRRC = 4'd6;
  localparam ExpCtrlEnum_CSRRWI = 4'd7;
  localparam ExpCtrlEnum_CSRRSI = 4'd8;
  localparam ExpCtrlEnum_CSRRCI = 4'd9;

  wire                clint_1_ecall;
  wire                clint_1_ebreak;
  wire                clint_1_mret;
  wire       [63:0]   csr_regfile_cpu_ports_rdata;
  wire       [63:0]   csr_regfile_clint_ports_mtvec;
  wire       [63:0]   csr_regfile_clint_ports_mepc;
  wire       [63:0]   csr_regfile_clint_ports_mstatus;
  wire                csr_regfile_clint_ports_global_int_en;
  wire                csr_regfile_clint_ports_mtime_int_en;
  wire                csr_regfile_clint_ports_mtime_int_pend;
  wire                clint_1_csr_ports_mepc_wen;
  wire       [63:0]   clint_1_csr_ports_mepc_wdata;
  wire                clint_1_csr_ports_mcause_wen;
  wire       [63:0]   clint_1_csr_ports_mcause_wdata;
  wire                clint_1_csr_ports_mstatus_wen;
  wire       [63:0]   clint_1_csr_ports_mstatus_wdata;
  wire                clint_1_int_en;
  wire       [31:0]   clint_1_int_pc;
  wire       [63:0]   tmp_blt_result;
  wire       [63:0]   tmp_blt_result_1;
  wire       [63:0]   tmp_bge_result;
  wire       [63:0]   tmp_bge_result_1;
  wire       [63:0]   tmp_pc_next;
  wire       [63:0]   tmp_pc_next_1;
  wire       [63:0]   tmp_pc_next_2;
  wire       [63:0]   tmp_pc_next_3;
  wire       [63:0]   tmp_pc_next_4;
  wire       [63:0]   tmp_pc_next_5;
  wire       [63:0]   tmp_pc_next_6;
  wire       [63:0]   tmp_pc_next_7;
  wire       [63:0]   tmp_pc_next_8;
  wire       [63:0]   tmp_pc_next_9;
  wire       [31:0]   tmp_pc_next_10;
  wire       [63:0]   tmp_pc_next_11;
  wire                tmp_when;
  wire       [63:0]   tmp_rd_data;
  wire       [63:0]   tmp_rd_data_1;
  wire       [63:0]   csr_rdata;
  reg        [31:0]   pc_next;
  wire                auipc;
  wire                jal;
  wire                jalr;
  wire                beq;
  wire                bne;
  wire                blt;
  wire                bge;
  wire                bltu;
  wire                bgeu;
  wire                csr;
  wire                branch_or_jalr;
  wire                branch_or_jump;
  reg                 is_call;
  reg                 is_ret;
  reg                 is_jmp;
  wire                beq_result;
  wire                bne_result;
  wire                blt_result;
  wire                bge_result;
  wire                bltu_result;
  wire                bgeu_result;
  wire                branch_taken;
  reg        [4:0]    branch_history;
  wire       [63:0]   src2;
  reg        [63:0]   csr_wdata;
  wire       [63:0]   csrrs_wdata;
  wire       [63:0]   csrrc_wdata;
  wire       [63:0]   csrrsi_wdata;
  wire       [63:0]   csrrci_wdata;
  wire                csr_wen;
  reg        [63:0]   csr_wdata_regNext;
  reg                 csr_wen_regNext;
  reg        [11:0]   micro_op_exp_csr_addr_regNext;
  `ifndef SYNTHESIS
  reg [39:0] micro_op_bju_ctrl_op_string;
  reg [47:0] micro_op_exp_ctrl_op_string;
  `endif


  assign tmp_when = ((! bpu_pred_taken) || (bpu_target_pc != pc_next));
  assign tmp_blt_result = rs1_data;
  assign tmp_blt_result_1 = rs2_data;
  assign tmp_bge_result = rs2_data;
  assign tmp_bge_result_1 = rs1_data;
  assign tmp_pc_next = tmp_pc_next_1;
  assign tmp_pc_next_1 = (tmp_pc_next_2 & tmp_pc_next_5);
  assign tmp_pc_next_2 = ($signed(tmp_pc_next_3) + $signed(tmp_pc_next_4));
  assign tmp_pc_next_3 = rs1_data;
  assign tmp_pc_next_4 = imm;
  assign tmp_pc_next_5 = (~ tmp_pc_next_6);
  assign tmp_pc_next_6 = 64'h0000000000000001;
  assign tmp_pc_next_7 = tmp_pc_next_8;
  assign tmp_pc_next_8 = ($signed(tmp_pc_next_9) + $signed(tmp_pc_next_11));
  assign tmp_pc_next_10 = pc;
  assign tmp_pc_next_9 = {{32{tmp_pc_next_10[31]}}, tmp_pc_next_10};
  assign tmp_pc_next_11 = imm;
  assign tmp_rd_data = (tmp_rd_data_1 + src2);
  assign tmp_rd_data_1 = {32'd0, pc};
  CsrRegfile csr_regfile (
    .cpu_ports_waddr            (micro_op_exp_csr_addr_regNext[11:0]   ), //i
    .cpu_ports_wen              (csr_wen_regNext                       ), //i
    .cpu_ports_wdata            (csr_wdata_regNext[63:0]               ), //i
    .cpu_ports_raddr            (micro_op_exp_csr_addr[11:0]           ), //i
    .cpu_ports_rdata            (csr_regfile_cpu_ports_rdata[63:0]     ), //o
    .clint_ports_mepc_wen       (clint_1_csr_ports_mepc_wen            ), //i
    .clint_ports_mepc_wdata     (clint_1_csr_ports_mepc_wdata[63:0]    ), //i
    .clint_ports_mcause_wen     (clint_1_csr_ports_mcause_wen          ), //i
    .clint_ports_mcause_wdata   (clint_1_csr_ports_mcause_wdata[63:0]  ), //i
    .clint_ports_mstatus_wen    (clint_1_csr_ports_mstatus_wen         ), //i
    .clint_ports_mstatus_wdata  (clint_1_csr_ports_mstatus_wdata[63:0] ), //i
    .clint_ports_mtvec          (csr_regfile_clint_ports_mtvec[63:0]   ), //o
    .clint_ports_mepc           (csr_regfile_clint_ports_mepc[63:0]    ), //o
    .clint_ports_mstatus        (csr_regfile_clint_ports_mstatus[63:0] ), //o
    .clint_ports_global_int_en  (csr_regfile_clint_ports_global_int_en ), //o
    .clint_ports_mtime_int_en   (csr_regfile_clint_ports_mtime_int_en  ), //o
    .clint_ports_mtime_int_pend (csr_regfile_clint_ports_mtime_int_pend), //o
    .timer_int                  (timer_int                             ), //i
    .io_axiClk                  (io_axiClk                             ), //i
    .cpu_rst                    (cpu_rst                               )  //i
  );
  Clint clint_1 (
    .pc                       (pc[31:0]                              ), //i
    .pc_next                  (redirect_pc[31:0]                     ), //i
    .csr_ports_mepc_wen       (clint_1_csr_ports_mepc_wen            ), //o
    .csr_ports_mepc_wdata     (clint_1_csr_ports_mepc_wdata[63:0]    ), //o
    .csr_ports_mcause_wen     (clint_1_csr_ports_mcause_wen          ), //o
    .csr_ports_mcause_wdata   (clint_1_csr_ports_mcause_wdata[63:0]  ), //o
    .csr_ports_mstatus_wen    (clint_1_csr_ports_mstatus_wen         ), //o
    .csr_ports_mstatus_wdata  (clint_1_csr_ports_mstatus_wdata[63:0] ), //o
    .csr_ports_mtvec          (csr_regfile_clint_ports_mtvec[63:0]   ), //i
    .csr_ports_mepc           (csr_regfile_clint_ports_mepc[63:0]    ), //i
    .csr_ports_mstatus        (csr_regfile_clint_ports_mstatus[63:0] ), //i
    .csr_ports_global_int_en  (csr_regfile_clint_ports_global_int_en ), //i
    .csr_ports_mtime_int_en   (csr_regfile_clint_ports_mtime_int_en  ), //i
    .csr_ports_mtime_int_pend (csr_regfile_clint_ports_mtime_int_pend), //i
    .timer_int                (timer_int                             ), //i
    .int_en                   (clint_1_int_en                        ), //o
    .int_pc                   (clint_1_int_pc[31:0]                  ), //o
    .ecall                    (clint_1_ecall                         ), //i
    .ebreak                   (clint_1_ebreak                        ), //i
    .mret                     (clint_1_mret                          )  //i
  );
  `ifndef SYNTHESIS
  always @(*) begin
    case(micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : micro_op_bju_ctrl_op_string = "CSR  ";
      default : micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : micro_op_exp_ctrl_op_string = "CSRRCI";
      default : micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  `endif

  assign auipc = (micro_op_bju_ctrl_op == BjuCtrlEnum_AUIPC); // @ BaseType.scala l305
  assign jal = (micro_op_bju_ctrl_op == BjuCtrlEnum_JAL); // @ BaseType.scala l305
  assign jalr = (micro_op_bju_ctrl_op == BjuCtrlEnum_JALR); // @ BaseType.scala l305
  assign beq = (micro_op_bju_ctrl_op == BjuCtrlEnum_BEQ); // @ BaseType.scala l305
  assign bne = (micro_op_bju_ctrl_op == BjuCtrlEnum_BNE); // @ BaseType.scala l305
  assign blt = (micro_op_bju_ctrl_op == BjuCtrlEnum_BLT); // @ BaseType.scala l305
  assign bge = (micro_op_bju_ctrl_op == BjuCtrlEnum_BGE); // @ BaseType.scala l305
  assign bltu = (micro_op_bju_ctrl_op == BjuCtrlEnum_BLTU); // @ BaseType.scala l305
  assign bgeu = (micro_op_bju_ctrl_op == BjuCtrlEnum_BGEU); // @ BaseType.scala l305
  assign csr = (micro_op_bju_ctrl_op == BjuCtrlEnum_CSR); // @ BaseType.scala l305
  assign branch_or_jalr = ((((((jalr || beq) || bne) || blt) || bge) || bltu) || bgeu); // @ BaseType.scala l305
  assign branch_or_jump = (branch_or_jalr || jal); // @ BaseType.scala l305
  always @(*) begin
    is_call = 1'b0; // @ BJU.scala l66
    if(jal) begin
      if(micro_op_bju_rd_is_link) begin
        is_call = 1'b1; // @ BJU.scala l110
      end else begin
        is_call = 1'b0; // @ BJU.scala l114
      end
    end else begin
      if(jalr) begin
        if(micro_op_bju_rd_is_link) begin
          if(micro_op_bju_rs1_is_link) begin
            if(micro_op_bju_rd_eq_rs1) begin
              is_call = 1'b1; // @ BJU.scala l132
            end else begin
              is_call = 1'b1; // @ BJU.scala l134
            end
          end else begin
            is_call = 1'b1; // @ BJU.scala l138
          end
        end
      end
    end
  end

  always @(*) begin
    is_ret = 1'b0; // @ BJU.scala l67
    if(jal) begin
      if(micro_op_bju_rd_is_link) begin
        is_ret = 1'b0; // @ BJU.scala l111
      end else begin
        is_ret = 1'b0; // @ BJU.scala l115
      end
    end else begin
      if(jalr) begin
        if(micro_op_bju_rd_is_link) begin
          if(micro_op_bju_rs1_is_link) begin
            if(!micro_op_bju_rd_eq_rs1) begin
              is_ret = 1'b1; // @ BJU.scala l135
            end
          end
        end else begin
          if(micro_op_bju_rs1_is_link) begin
            is_ret = 1'b1; // @ BJU.scala l142
          end
        end
      end
    end
  end

  always @(*) begin
    is_jmp = 1'b0; // @ BJU.scala l68
    if(jal) begin
      if(micro_op_bju_rd_is_link) begin
        is_jmp = 1'b0; // @ BJU.scala l112
      end else begin
        is_jmp = 1'b1; // @ BJU.scala l116
      end
    end else begin
      if(jalr) begin
        if(!micro_op_bju_rd_is_link) begin
          if(!micro_op_bju_rs1_is_link) begin
            is_jmp = 1'b1; // @ BJU.scala l144
          end
        end
      end
    end
  end

  assign beq_result = (beq && (rs1_data == rs2_data)); // @ BaseType.scala l305
  assign bne_result = (bne && (rs1_data != rs2_data)); // @ BaseType.scala l305
  assign blt_result = (blt && ($signed(tmp_blt_result) < $signed(tmp_blt_result_1))); // @ BaseType.scala l305
  assign bge_result = (bge && ($signed(tmp_bge_result) <= $signed(tmp_bge_result_1))); // @ BaseType.scala l305
  assign bltu_result = (bltu && (rs1_data < rs2_data)); // @ BaseType.scala l305
  assign bgeu_result = (bgeu && (rs2_data <= rs1_data)); // @ BaseType.scala l305
  assign branch_taken = (((((((beq_result || bne_result) || blt_result) || bge_result) || bltu_result) || bgeu_result) || jal) || jalr); // @ BaseType.scala l305
  always @(*) begin
    if(jalr) begin
      pc_next = tmp_pc_next[31:0]; // @ BJU.scala l86
    end else begin
      pc_next = tmp_pc_next_7[31:0]; // @ BJU.scala l88
    end
  end

  always @(*) begin
    redirect_valid = 1'b0; // @ BJU.scala l91
    if(branch_or_jump) begin
      if(branch_taken) begin
        if(tmp_when) begin
          redirect_valid = in_valid; // @ BJU.scala l96
        end
      end else begin
        if(bpu_pred_taken) begin
          redirect_valid = in_valid; // @ BJU.scala l102
        end
      end
    end
  end

  always @(*) begin
    redirect_pc = 32'h0; // @ BJU.scala l92
    if(branch_or_jump) begin
      if(branch_taken) begin
        if(tmp_when) begin
          redirect_pc = pc_next; // @ BJU.scala l97
        end
      end else begin
        if(bpu_pred_taken) begin
          redirect_pc = (pc + 32'h00000004); // @ BJU.scala l103
        end
      end
    end
  end

  assign src2 = ((jal || jalr) ? 64'h0000000000000004 : rs2_data); // @ Expression.scala l1431
  assign rd_data = (csr ? csr_rdata : tmp_rd_data); // @ BJU.scala l152
  assign train_valid = (in_valid && branch_or_jump); // @ BJU.scala l155
  assign train_pc = pc; // @ BJU.scala l156
  assign train_taken = branch_taken; // @ BJU.scala l157
  assign train_mispred = redirect_valid; // @ BJU.scala l158
  assign train_history = branch_history; // @ BJU.scala l159
  assign train_pc_next = redirect_pc; // @ BJU.scala l160
  assign train_is_call = is_call; // @ BJU.scala l161
  assign train_is_ret = is_ret; // @ BJU.scala l162
  assign train_is_jmp = is_jmp; // @ BJU.scala l163
  assign csr_rdata = csr_regfile_cpu_ports_rdata; // @ BJU.scala l169
  assign clint_1_ecall = (in_valid && (micro_op_exp_ctrl_op == ExpCtrlEnum_ECALL)); // @ BJU.scala l172
  assign clint_1_ebreak = (in_valid && (micro_op_exp_ctrl_op == ExpCtrlEnum_EBREAK)); // @ BJU.scala l173
  assign clint_1_mret = (in_valid && (micro_op_exp_ctrl_op == ExpCtrlEnum_MRET)); // @ BJU.scala l174
  assign csrrs_wdata = (rs1_data | csr_rdata); // @ BaseType.scala l299
  assign csrrc_wdata = ((~ rs1_data) & csr_rdata); // @ BaseType.scala l299
  assign csrrsi_wdata = (imm | csr_rdata); // @ BaseType.scala l299
  assign csrrci_wdata = ((~ imm) & csr_rdata); // @ BaseType.scala l299
  assign csr_wen = (in_valid && micro_op_exp_csr_wen); // @ BaseType.scala l305
  always @(*) begin
    case(micro_op_exp_ctrl_op)
      ExpCtrlEnum_CSRRW : begin
        csr_wdata = rs1_data; // @ BJU.scala l186
      end
      ExpCtrlEnum_CSRRS : begin
        csr_wdata = csrrs_wdata; // @ BJU.scala l189
      end
      ExpCtrlEnum_CSRRC : begin
        csr_wdata = csrrc_wdata; // @ BJU.scala l192
      end
      ExpCtrlEnum_CSRRWI : begin
        csr_wdata = imm; // @ BJU.scala l195
      end
      ExpCtrlEnum_CSRRSI : begin
        csr_wdata = csrrsi_wdata; // @ BJU.scala l198
      end
      ExpCtrlEnum_CSRRCI : begin
        csr_wdata = csrrci_wdata; // @ BJU.scala l201
      end
      default : begin
        csr_wdata = 64'h0; // @ BJU.scala l204
      end
    endcase
  end

  assign interrupt_valid = clint_1_int_en; // @ BJU.scala l213
  assign interrupt_pc = clint_1_int_pc; // @ BJU.scala l214
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      branch_history <= 5'h0; // @ Data.scala l400
    end else begin
      if(in_valid) begin
        branch_history <= {branch_history[3 : 0],branch_taken}; // @ BJU.scala l82
      end
    end
  end

  always @(posedge io_axiClk) begin
    csr_wdata_regNext <= csr_wdata; // @ Reg.scala l39
    csr_wen_regNext <= csr_wen; // @ Reg.scala l39
    micro_op_exp_csr_addr_regNext <= micro_op_exp_csr_addr; // @ Reg.scala l39
  end


endmodule

module Decode (
  input      [31:0]   pc,
  input      [31:0]   instr,
  output     [4:0]    rs1_addr,
  output     [4:0]    rs2_addr,
  output              rs1_ren,
  output              rs2_ren,
  output     [4:0]    rd_addr,
  output     [63:0]   imm,
  output              alu_micro_op_rd_wen,
  output              alu_micro_op_src2_is_imm,
  output     [4:0]    alu_micro_op_alu_ctrl_op,
  output              alu_micro_op_alu_is_word,
  output              lsu_micro_op_rd_wen,
  output              lsu_micro_op_src2_is_imm,
  output     [3:0]    lsu_micro_op_lsu_ctrl_op,
  output              lsu_micro_op_lsu_is_load,
  output              lsu_micro_op_lsu_is_store,
  output              bju_micro_op_rd_wen,
  output              bju_micro_op_src2_is_imm,
  output     [3:0]    bju_micro_op_bju_ctrl_op,
  output              bju_micro_op_bju_rd_eq_rs1,
  output              bju_micro_op_bju_rd_is_link,
  output              bju_micro_op_bju_rs1_is_link,
  output     [3:0]    bju_micro_op_exp_ctrl_op,
  output     [11:0]   bju_micro_op_exp_csr_addr,
  output              bju_micro_op_exp_csr_wen,
  output reg [2:0]    exception,
  output reg [1:0]    rob_micro_op
);
  localparam AluCtrlEnum_IDLE = 5'd0;
  localparam AluCtrlEnum_ADD = 5'd1;
  localparam AluCtrlEnum_SUB = 5'd2;
  localparam AluCtrlEnum_SLT = 5'd3;
  localparam AluCtrlEnum_SLTU = 5'd4;
  localparam AluCtrlEnum_XOR_1 = 5'd5;
  localparam AluCtrlEnum_SLL_1 = 5'd6;
  localparam AluCtrlEnum_SRL_1 = 5'd7;
  localparam AluCtrlEnum_SRA_1 = 5'd8;
  localparam AluCtrlEnum_AND_1 = 5'd9;
  localparam AluCtrlEnum_OR_1 = 5'd10;
  localparam AluCtrlEnum_LUI = 5'd11;
  localparam AluCtrlEnum_MUL = 5'd12;
  localparam AluCtrlEnum_MULH = 5'd13;
  localparam AluCtrlEnum_MULHSU = 5'd14;
  localparam AluCtrlEnum_MULHU = 5'd15;
  localparam AluCtrlEnum_DIV = 5'd16;
  localparam AluCtrlEnum_DIVU = 5'd17;
  localparam AluCtrlEnum_REM_1 = 5'd18;
  localparam AluCtrlEnum_REMU = 5'd19;
  localparam AluCtrlEnum_MULW = 5'd20;
  localparam AluCtrlEnum_DIVW = 5'd21;
  localparam AluCtrlEnum_DIVUW = 5'd22;
  localparam AluCtrlEnum_REMW = 5'd23;
  localparam AluCtrlEnum_REMUW = 5'd24;
  localparam LsuCtrlEnum_IDLE = 4'd0;
  localparam LsuCtrlEnum_LB = 4'd1;
  localparam LsuCtrlEnum_LBU = 4'd2;
  localparam LsuCtrlEnum_LH = 4'd3;
  localparam LsuCtrlEnum_LHU = 4'd4;
  localparam LsuCtrlEnum_LW = 4'd5;
  localparam LsuCtrlEnum_LWU = 4'd6;
  localparam LsuCtrlEnum_LD = 4'd7;
  localparam LsuCtrlEnum_SB = 4'd8;
  localparam LsuCtrlEnum_SH = 4'd9;
  localparam LsuCtrlEnum_SW = 4'd10;
  localparam LsuCtrlEnum_SD = 4'd11;
  localparam BjuCtrlEnum_IDLE = 4'd0;
  localparam BjuCtrlEnum_AUIPC = 4'd1;
  localparam BjuCtrlEnum_JAL = 4'd2;
  localparam BjuCtrlEnum_JALR = 4'd3;
  localparam BjuCtrlEnum_BEQ = 4'd4;
  localparam BjuCtrlEnum_BNE = 4'd5;
  localparam BjuCtrlEnum_BLT = 4'd6;
  localparam BjuCtrlEnum_BGE = 4'd7;
  localparam BjuCtrlEnum_BLTU = 4'd8;
  localparam BjuCtrlEnum_BGEU = 4'd9;
  localparam BjuCtrlEnum_CSR = 4'd10;
  localparam ExpCtrlEnum_IDLE = 4'd0;
  localparam ExpCtrlEnum_ECALL = 4'd1;
  localparam ExpCtrlEnum_EBREAK = 4'd2;
  localparam ExpCtrlEnum_MRET = 4'd3;
  localparam ExpCtrlEnum_CSRRW = 4'd4;
  localparam ExpCtrlEnum_CSRRS = 4'd5;
  localparam ExpCtrlEnum_CSRRC = 4'd6;
  localparam ExpCtrlEnum_CSRRWI = 4'd7;
  localparam ExpCtrlEnum_CSRRSI = 4'd8;
  localparam ExpCtrlEnum_CSRRCI = 4'd9;
  localparam ExceptionEnum_IDLE = 3'd0;
  localparam ExceptionEnum_ECALL = 3'd1;
  localparam ExceptionEnum_EBREAK = 3'd2;
  localparam ExceptionEnum_MRET = 3'd3;
  localparam ExceptionEnum_TIME_1 = 3'd4;
  localparam RobMicroOp_IDLE = 2'd0;
  localparam RobMicroOp_ALU = 2'd1;
  localparam RobMicroOp_BJU = 2'd2;
  localparam RobMicroOp_LSU = 2'd3;

  wire       [31:0]   tmp_tmp_imm_data;
  wire       [19:0]   tmp_tmp_imm_data_2;
  wire       [11:0]   tmp_tmp_imm_data_4;
  wire       [11:0]   tmp_tmp_imm_data_6;
  wire       [19:0]   tmp_imm_data_10;
  wire       [11:0]   tmp_imm_data_11;
  wire       [19:0]   tmp_imm_data_12;
  wire                tmp_imm_data_13;
  wire       [7:0]    tmp_imm_data_14;
  wire       [3:0]    tmp_imm_data_15;
  wire                tmp_imm_type;
  wire                tmp_imm_type_1;
  wire       [6:0]    tmp_imm_type_2;
  wire       [6:0]    tmp_imm_type_3;
  wire       [6:0]    tmp_imm_type_4;
  wire       [6:0]    tmp_imm_type_5;
  wire       [6:0]    tmp_imm_type_6;
  wire       [6:0]    tmp_imm_type_7;
  wire       [63:0]   tmp_imm_6;
  wire       [0:0]    tmp_imm_7;
  wire       [61:0]   tmp_imm_8;
  wire       [0:0]    tmp_imm_9;
  wire       [58:0]   tmp_imm_10;
  wire       [0:0]    tmp_imm_11;
  wire       [55:0]   tmp_imm_12;
  wire       [0:0]    tmp_imm_13;
  wire       [52:0]   tmp_imm_14;
  wire       [0:0]    tmp_imm_15;
  wire       [49:0]   tmp_imm_16;
  wire       [0:0]    tmp_imm_17;
  wire       [46:0]   tmp_imm_18;
  wire       [0:0]    tmp_imm_19;
  wire       [43:0]   tmp_imm_20;
  wire       [0:0]    tmp_imm_21;
  wire       [40:0]   tmp_imm_22;
  wire       [0:0]    tmp_imm_23;
  wire       [37:0]   tmp_imm_24;
  wire       [0:0]    tmp_imm_25;
  wire       [34:0]   tmp_imm_26;
  wire       [0:0]    tmp_imm_27;
  wire       [31:0]   tmp_imm_28;
  wire       [0:0]    tmp_imm_29;
  wire       [28:0]   tmp_imm_30;
  wire       [0:0]    tmp_imm_31;
  wire       [25:0]   tmp_imm_32;
  wire       [0:0]    tmp_imm_33;
  wire       [22:0]   tmp_imm_34;
  wire       [0:0]    tmp_imm_35;
  wire       [19:0]   tmp_imm_36;
  wire       [0:0]    tmp_imm_37;
  wire       [16:0]   tmp_imm_38;
  wire       [0:0]    tmp_imm_39;
  wire       [13:0]   tmp_imm_40;
  wire       [0:0]    tmp_imm_41;
  wire       [10:0]   tmp_imm_42;
  wire       [0:0]    tmp_imm_43;
  wire       [7:0]    tmp_imm_44;
  wire       [0:0]    tmp_imm_45;
  wire       [4:0]    tmp_imm_46;
  wire       [63:0]   tmp_imm_47;
  wire       [0:0]    tmp_imm_48;
  wire       [61:0]   tmp_imm_49;
  wire       [0:0]    tmp_imm_50;
  wire       [58:0]   tmp_imm_51;
  wire       [0:0]    tmp_imm_52;
  wire       [55:0]   tmp_imm_53;
  wire       [0:0]    tmp_imm_54;
  wire       [52:0]   tmp_imm_55;
  wire       [0:0]    tmp_imm_56;
  wire       [49:0]   tmp_imm_57;
  wire       [0:0]    tmp_imm_58;
  wire       [46:0]   tmp_imm_59;
  wire       [0:0]    tmp_imm_60;
  wire       [43:0]   tmp_imm_61;
  wire       [0:0]    tmp_imm_62;
  wire       [40:0]   tmp_imm_63;
  wire       [0:0]    tmp_imm_64;
  wire       [37:0]   tmp_imm_65;
  wire       [0:0]    tmp_imm_66;
  wire       [34:0]   tmp_imm_67;
  wire       [0:0]    tmp_imm_68;
  wire       [31:0]   tmp_imm_69;
  wire       [0:0]    tmp_imm_70;
  wire       [28:0]   tmp_imm_71;
  wire       [0:0]    tmp_imm_72;
  wire       [25:0]   tmp_imm_73;
  wire       [0:0]    tmp_imm_74;
  wire       [22:0]   tmp_imm_75;
  wire       [0:0]    tmp_imm_76;
  wire       [19:0]   tmp_imm_77;
  wire       [0:0]    tmp_imm_78;
  wire       [16:0]   tmp_imm_79;
  wire       [0:0]    tmp_imm_80;
  wire       [13:0]   tmp_imm_81;
  wire       [0:0]    tmp_imm_82;
  wire       [10:0]   tmp_imm_83;
  wire       [0:0]    tmp_imm_84;
  wire       [7:0]    tmp_imm_85;
  wire       [0:0]    tmp_imm_86;
  wire       [4:0]    tmp_imm_87;
  wire       [63:0]   tmp_imm_88;
  wire       [63:0]   tmp_imm_89;
  wire       [0:0]    tmp_imm_90;
  wire       [60:0]   tmp_imm_91;
  wire       [0:0]    tmp_imm_92;
  wire       [57:0]   tmp_imm_93;
  wire       [0:0]    tmp_imm_94;
  wire       [54:0]   tmp_imm_95;
  wire       [0:0]    tmp_imm_96;
  wire       [51:0]   tmp_imm_97;
  wire       [0:0]    tmp_imm_98;
  wire       [48:0]   tmp_imm_99;
  wire       [0:0]    tmp_imm_100;
  wire       [45:0]   tmp_imm_101;
  wire       [0:0]    tmp_imm_102;
  wire       [42:0]   tmp_imm_103;
  wire       [0:0]    tmp_imm_104;
  wire       [39:0]   tmp_imm_105;
  wire       [0:0]    tmp_imm_106;
  wire       [36:0]   tmp_imm_107;
  wire       [0:0]    tmp_imm_108;
  wire       [33:0]   tmp_imm_109;
  wire       [0:0]    tmp_imm_110;
  wire       [30:0]   tmp_imm_111;
  wire       [0:0]    tmp_imm_112;
  wire       [27:0]   tmp_imm_113;
  wire       [0:0]    tmp_imm_114;
  wire       [24:0]   tmp_imm_115;
  wire       [0:0]    tmp_imm_116;
  wire       [21:0]   tmp_imm_117;
  wire       [0:0]    tmp_imm_118;
  wire       [18:0]   tmp_imm_119;
  wire       [0:0]    tmp_imm_120;
  wire       [15:0]   tmp_imm_121;
  wire       [0:0]    tmp_imm_122;
  wire       [12:0]   tmp_imm_123;
  wire       [0:0]    tmp_imm_124;
  wire       [9:0]    tmp_imm_125;
  wire       [0:0]    tmp_imm_126;
  wire       [6:0]    tmp_imm_127;
  wire       [0:0]    tmp_imm_128;
  wire       [3:0]    tmp_imm_129;
  wire       [0:0]    tmp_imm_130;
  wire       [62:0]   tmp_imm_131;
  wire       [0:0]    tmp_imm_132;
  wire       [59:0]   tmp_imm_133;
  wire       [0:0]    tmp_imm_134;
  wire       [56:0]   tmp_imm_135;
  wire       [0:0]    tmp_imm_136;
  wire       [53:0]   tmp_imm_137;
  wire       [0:0]    tmp_imm_138;
  wire       [50:0]   tmp_imm_139;
  wire       [0:0]    tmp_imm_140;
  wire       [47:0]   tmp_imm_141;
  wire       [0:0]    tmp_imm_142;
  wire       [44:0]   tmp_imm_143;
  wire       [0:0]    tmp_imm_144;
  wire       [41:0]   tmp_imm_145;
  wire       [0:0]    tmp_imm_146;
  wire       [38:0]   tmp_imm_147;
  wire       [0:0]    tmp_imm_148;
  wire       [35:0]   tmp_imm_149;
  wire       [0:0]    tmp_imm_150;
  wire       [32:0]   tmp_imm_151;
  wire       [0:0]    tmp_imm_152;
  wire       [29:0]   tmp_imm_153;
  wire       [0:0]    tmp_imm_154;
  wire       [26:0]   tmp_imm_155;
  wire       [0:0]    tmp_imm_156;
  wire       [23:0]   tmp_imm_157;
  wire       [0:0]    tmp_imm_158;
  wire       [20:0]   tmp_imm_159;
  wire       [0:0]    tmp_imm_160;
  wire       [17:0]   tmp_imm_161;
  wire       [0:0]    tmp_imm_162;
  wire       [14:0]   tmp_imm_163;
  wire       [0:0]    tmp_imm_164;
  wire       [11:0]   tmp_imm_165;
  wire       [0:0]    tmp_imm_166;
  wire       [8:0]    tmp_imm_167;
  wire       [0:0]    tmp_imm_168;
  wire       [5:0]    tmp_imm_169;
  wire       [0:0]    tmp_imm_170;
  wire       [2:0]    tmp_imm_171;
  wire       [0:0]    tmp_imm_172;
  wire       [61:0]   tmp_imm_173;
  wire       [0:0]    tmp_imm_174;
  wire       [58:0]   tmp_imm_175;
  wire       [0:0]    tmp_imm_176;
  wire       [55:0]   tmp_imm_177;
  wire       [0:0]    tmp_imm_178;
  wire       [52:0]   tmp_imm_179;
  wire       [0:0]    tmp_imm_180;
  wire       [49:0]   tmp_imm_181;
  wire       [0:0]    tmp_imm_182;
  wire       [46:0]   tmp_imm_183;
  wire       [0:0]    tmp_imm_184;
  wire       [43:0]   tmp_imm_185;
  wire       [0:0]    tmp_imm_186;
  wire       [40:0]   tmp_imm_187;
  wire       [0:0]    tmp_imm_188;
  wire       [37:0]   tmp_imm_189;
  wire       [0:0]    tmp_imm_190;
  wire       [34:0]   tmp_imm_191;
  wire       [0:0]    tmp_imm_192;
  wire       [31:0]   tmp_imm_193;
  wire       [0:0]    tmp_imm_194;
  wire       [28:0]   tmp_imm_195;
  wire       [0:0]    tmp_imm_196;
  wire       [25:0]   tmp_imm_197;
  wire       [0:0]    tmp_imm_198;
  wire       [22:0]   tmp_imm_199;
  wire       [0:0]    tmp_imm_200;
  wire       [19:0]   tmp_imm_201;
  wire       [0:0]    tmp_imm_202;
  wire       [16:0]   tmp_imm_203;
  wire       [0:0]    tmp_imm_204;
  wire       [13:0]   tmp_imm_205;
  wire       [0:0]    tmp_imm_206;
  wire       [10:0]   tmp_imm_207;
  wire       [0:0]    tmp_imm_208;
  wire       [7:0]    tmp_imm_209;
  wire       [0:0]    tmp_imm_210;
  wire       [4:0]    tmp_imm_211;
  wire       [0:0]    tmp_imm_212;
  wire       [1:0]    tmp_imm_213;
  wire       [0:0]    tmp_imm_214;
  wire       [60:0]   tmp_imm_215;
  wire       [0:0]    tmp_imm_216;
  wire       [57:0]   tmp_imm_217;
  wire       [0:0]    tmp_imm_218;
  wire       [54:0]   tmp_imm_219;
  wire       [0:0]    tmp_imm_220;
  wire       [51:0]   tmp_imm_221;
  wire       [0:0]    tmp_imm_222;
  wire       [48:0]   tmp_imm_223;
  wire       [0:0]    tmp_imm_224;
  wire       [45:0]   tmp_imm_225;
  wire       [0:0]    tmp_imm_226;
  wire       [42:0]   tmp_imm_227;
  wire       [0:0]    tmp_imm_228;
  wire       [39:0]   tmp_imm_229;
  wire       [0:0]    tmp_imm_230;
  wire       [36:0]   tmp_imm_231;
  wire       [0:0]    tmp_imm_232;
  wire       [33:0]   tmp_imm_233;
  wire       [0:0]    tmp_imm_234;
  wire       [30:0]   tmp_imm_235;
  wire       [0:0]    tmp_imm_236;
  wire       [27:0]   tmp_imm_237;
  wire       [0:0]    tmp_imm_238;
  wire       [24:0]   tmp_imm_239;
  wire       [0:0]    tmp_imm_240;
  wire       [21:0]   tmp_imm_241;
  wire       [0:0]    tmp_imm_242;
  wire       [18:0]   tmp_imm_243;
  wire       [0:0]    tmp_imm_244;
  wire       [15:0]   tmp_imm_245;
  wire       [0:0]    tmp_imm_246;
  wire       [12:0]   tmp_imm_247;
  wire       [0:0]    tmp_imm_248;
  wire       [9:0]    tmp_imm_249;
  wire       [0:0]    tmp_imm_250;
  wire       [6:0]    tmp_imm_251;
  wire       [0:0]    tmp_imm_252;
  wire       [3:0]    tmp_imm_253;
  wire       [0:0]    tmp_imm_254;
  wire       [0:0]    tmp_imm_255;
  wire       [12:0]   tmp_alu_ctrl_sel;
  wire       [1:0]    tmp_alu_ctrl_sel_1;
  wire       [0:0]    tmp_alu_ctrl_sel_2;
  wire       [0:0]    tmp_alu_ctrl_sel_3;
  wire       [64:0]   tmp_alu_ctrl_data_24;
  wire       [9:0]    tmp_alu_ctrl_data_25;
  wire       [4:0]    tmp_alu_ctrl_data_26;
  wire       [4:0]    tmp_alu_ctrl_data_27;
  wire       [4:0]    tmp_alu_ctrl_op_24;
  wire       [4:0]    tmp_alu_ctrl_op_25;
  wire       [4:0]    tmp_alu_ctrl_op_26;
  wire       [4:0]    tmp_alu_ctrl_op_27;
  wire       [4:0]    tmp_alu_ctrl_op_28;
  wire       [4:0]    tmp_alu_ctrl_op_29;
  wire       [4:0]    tmp_alu_ctrl_op_30;
  wire       [0:0]    tmp_alu_ctrl_op_31;
  wire       [2:0]    tmp_alu_ctrl_op_32;
  wire       [4:0]    tmp_alu_ctrl_op_33;
  wire       [0:0]    tmp_alu_ctrl_op_34;
  wire       [2:0]    tmp_alu_ctrl_op_35;
  wire       [4:0]    tmp_alu_ctrl_op_36;
  wire       [4:0]    tmp_alu_ctrl_op_37;
  wire       [0:0]    tmp_alu_ctrl_op_38;
  wire       [1:0]    tmp_alu_ctrl_op_39;
  wire       [0:0]    tmp_alu_ctrl_op_40;
  wire       [3:0]    tmp_alu_ctrl_op_41;
  wire       [0:0]    tmp_alu_ctrl_op_42;
  wire       [0:0]    tmp_alu_ctrl_op_43;
  wire       [4:0]    tmp_alu_ctrl_op_44;
  wire       [0:0]    tmp_alu_ctrl_op_45;
  wire       [2:0]    tmp_alu_ctrl_op_46;
  wire       [4:0]    tmp_alu_ctrl_op_47;
  wire       [4:0]    tmp_alu_ctrl_op_48;
  wire       [0:0]    tmp_alu_ctrl_op_49;
  wire       [1:0]    tmp_alu_ctrl_op_50;
  wire       [0:0]    tmp_alu_ctrl_op_51;
  wire       [3:0]    tmp_alu_ctrl_op_52;
  wire       [0:0]    tmp_alu_ctrl_op_53;
  wire       [0:0]    tmp_alu_ctrl_op_54;
  wire       [4:0]    tmp_alu_ctrl_op_55;
  wire       [0:0]    tmp_alu_ctrl_op_56;
  wire       [2:0]    tmp_alu_ctrl_op_57;
  wire       [4:0]    tmp_alu_ctrl_op_58;
  wire       [4:0]    tmp_alu_ctrl_op_59;
  wire       [0:0]    tmp_alu_ctrl_op_60;
  wire       [1:0]    tmp_alu_ctrl_op_61;
  wire       [0:0]    tmp_alu_ctrl_op_62;
  wire       [3:0]    tmp_alu_ctrl_op_63;
  wire       [0:0]    tmp_alu_ctrl_op_64;
  wire       [0:0]    tmp_alu_ctrl_op_65;
  wire       [4:0]    tmp_alu_ctrl_op_66;
  wire       [0:0]    tmp_alu_ctrl_op_67;
  wire       [2:0]    tmp_alu_ctrl_op_68;
  wire       [4:0]    tmp_alu_ctrl_op_69;
  wire       [4:0]    tmp_alu_ctrl_op_70;
  wire       [0:0]    tmp_alu_ctrl_op_71;
  wire       [1:0]    tmp_alu_ctrl_op_72;
  wire       [0:0]    tmp_alu_ctrl_op_73;
  wire       [3:0]    tmp_alu_ctrl_op_74;
  wire       [0:0]    tmp_alu_ctrl_op_75;
  wire       [0:0]    tmp_alu_ctrl_op_76;
  wire       [4:0]    tmp_alu_ctrl_op_77;
  wire       [0:0]    tmp_alu_ctrl_op_78;
  wire       [2:0]    tmp_alu_ctrl_op_79;
  wire       [4:0]    tmp_alu_ctrl_op_80;
  wire       [4:0]    tmp_alu_ctrl_op_81;
  wire       [0:0]    tmp_alu_ctrl_op_82;
  wire       [1:0]    tmp_alu_ctrl_op_83;
  wire       [0:0]    tmp_alu_ctrl_op_84;
  wire       [3:0]    tmp_alu_ctrl_op_85;
  wire       [0:0]    tmp_alu_ctrl_op_86;
  wire       [0:0]    tmp_alu_ctrl_op_87;
  wire       [4:0]    tmp_alu_ctrl_op_88;
  wire       [0:0]    tmp_alu_ctrl_op_89;
  wire       [2:0]    tmp_alu_ctrl_op_90;
  wire       [4:0]    tmp_alu_ctrl_op_91;
  wire       [4:0]    tmp_alu_ctrl_op_92;
  wire       [0:0]    tmp_alu_ctrl_op_93;
  wire       [1:0]    tmp_alu_ctrl_op_94;
  wire       [0:0]    tmp_alu_ctrl_op_95;
  wire       [3:0]    tmp_alu_ctrl_op_96;
  wire       [0:0]    tmp_alu_ctrl_op_97;
  wire       [0:0]    tmp_alu_ctrl_op_98;
  wire       [4:0]    tmp_alu_ctrl_op_99;
  wire       [0:0]    tmp_alu_ctrl_op_100;
  wire       [2:0]    tmp_alu_ctrl_op_101;
  wire       [4:0]    tmp_alu_ctrl_op_102;
  wire       [4:0]    tmp_alu_ctrl_op_103;
  wire       [0:0]    tmp_alu_ctrl_op_104;
  wire       [1:0]    tmp_alu_ctrl_op_105;
  wire       [0:0]    tmp_alu_ctrl_op_106;
  wire       [3:0]    tmp_alu_ctrl_op_107;
  wire       [0:0]    tmp_alu_ctrl_op_108;
  wire       [0:0]    tmp_alu_ctrl_op_109;
  wire       [0:0]    tmp_alu_ctrl_op_110;
  wire       [2:0]    tmp_alu_ctrl_op_111;
  wire       [0:0]    tmp_alu_ctrl_op_112;
  wire       [1:0]    tmp_alu_ctrl_op_113;
  wire       [3:0]    tmp_bju_ctrl_op_10;
  wire       [3:0]    tmp_bju_ctrl_op_11;
  wire       [0:0]    tmp_bju_ctrl_op_12;
  wire       [2:0]    tmp_bju_ctrl_op_13;
  wire       [0:0]    tmp_bju_ctrl_op_14;
  wire       [2:0]    tmp_bju_ctrl_op_15;
  wire       [3:0]    tmp_bju_ctrl_op_16;
  wire       [0:0]    tmp_bju_ctrl_op_17;
  wire       [1:0]    tmp_bju_ctrl_op_18;
  wire       [3:0]    tmp_bju_ctrl_op_19;
  wire       [3:0]    tmp_bju_ctrl_op_20;
  wire       [0:0]    tmp_bju_ctrl_op_21;
  wire       [0:0]    tmp_bju_ctrl_op_22;
  wire       [0:0]    tmp_bju_ctrl_op_23;
  wire       [2:0]    tmp_bju_ctrl_op_24;
  wire       [3:0]    tmp_bju_ctrl_op_25;
  wire       [0:0]    tmp_bju_ctrl_op_26;
  wire       [1:0]    tmp_bju_ctrl_op_27;
  wire       [3:0]    tmp_bju_ctrl_op_28;
  wire       [3:0]    tmp_bju_ctrl_op_29;
  wire       [0:0]    tmp_bju_ctrl_op_30;
  wire       [0:0]    tmp_bju_ctrl_op_31;
  wire       [0:0]    tmp_bju_ctrl_op_32;
  wire       [2:0]    tmp_bju_ctrl_op_33;
  wire       [0:0]    tmp_bju_ctrl_op_34;
  wire       [1:0]    tmp_bju_ctrl_op_35;
  wire       [0:0]    tmp_bju_ctrl_op_36;
  wire       [0:0]    tmp_bju_ctrl_op_37;
  wire       [3:0]    tmp_exp_ctrl_op_9;
  wire       [3:0]    tmp_exp_ctrl_op_10;
  wire       [0:0]    tmp_exp_ctrl_op_11;
  wire       [1:0]    tmp_exp_ctrl_op_12;
  wire       [3:0]    tmp_exp_ctrl_op_13;
  wire       [0:0]    tmp_exp_ctrl_op_14;
  wire       [1:0]    tmp_exp_ctrl_op_15;
  wire       [3:0]    tmp_exp_ctrl_op_16;
  wire       [3:0]    tmp_exp_ctrl_op_17;
  wire       [0:0]    tmp_exp_ctrl_op_18;
  wire       [0:0]    tmp_exp_ctrl_op_19;
  wire       [0:0]    tmp_exp_ctrl_op_20;
  wire       [2:0]    tmp_exp_ctrl_op_21;
  wire       [3:0]    tmp_exp_ctrl_op_22;
  wire       [0:0]    tmp_exp_ctrl_op_23;
  wire       [1:0]    tmp_exp_ctrl_op_24;
  wire       [3:0]    tmp_exp_ctrl_op_25;
  wire       [3:0]    tmp_exp_ctrl_op_26;
  wire       [0:0]    tmp_exp_ctrl_op_27;
  wire       [0:0]    tmp_exp_ctrl_op_28;
  wire       [0:0]    tmp_exp_ctrl_op_29;
  wire       [2:0]    tmp_exp_ctrl_op_30;
  wire       [0:0]    tmp_exp_ctrl_op_31;
  wire       [1:0]    tmp_exp_ctrl_op_32;
  wire       [0:0]    tmp_exp_ctrl_op_33;
  wire       [0:0]    tmp_exp_ctrl_op_34;
  wire       [3:0]    tmp_lsu_ctrl_op_11;
  wire       [3:0]    tmp_lsu_ctrl_op_12;
  wire       [3:0]    tmp_lsu_ctrl_op_13;
  wire       [3:0]    tmp_lsu_ctrl_op_14;
  wire       [3:0]    tmp_lsu_ctrl_op_15;
  wire       [3:0]    tmp_lsu_ctrl_op_16;
  wire       [0:0]    tmp_lsu_ctrl_op_17;
  wire       [2:0]    tmp_lsu_ctrl_op_18;
  wire       [3:0]    tmp_lsu_ctrl_op_19;
  wire       [0:0]    tmp_lsu_ctrl_op_20;
  wire       [1:0]    tmp_lsu_ctrl_op_21;
  wire       [3:0]    tmp_lsu_ctrl_op_22;
  wire       [3:0]    tmp_lsu_ctrl_op_23;
  wire       [0:0]    tmp_lsu_ctrl_op_24;
  wire       [0:0]    tmp_lsu_ctrl_op_25;
  wire       [0:0]    tmp_lsu_ctrl_op_26;
  wire       [2:0]    tmp_lsu_ctrl_op_27;
  wire       [3:0]    tmp_lsu_ctrl_op_28;
  wire       [0:0]    tmp_lsu_ctrl_op_29;
  wire       [1:0]    tmp_lsu_ctrl_op_30;
  wire       [3:0]    tmp_lsu_ctrl_op_31;
  wire       [3:0]    tmp_lsu_ctrl_op_32;
  wire       [0:0]    tmp_lsu_ctrl_op_33;
  wire       [0:0]    tmp_lsu_ctrl_op_34;
  wire       [0:0]    tmp_lsu_ctrl_op_35;
  wire       [2:0]    tmp_lsu_ctrl_op_36;
  wire       [0:0]    tmp_lsu_ctrl_op_37;
  wire       [1:0]    tmp_lsu_ctrl_op_38;
  wire       [0:0]    tmp_lsu_ctrl_op_39;
  wire       [0:0]    tmp_lsu_ctrl_op_40;
  wire       [6:0]    opcode;
  wire       [4:0]    rd;
  wire       [4:0]    rs1;
  wire       [4:0]    rs2;
  wire       [2:0]    func3;
  wire       [6:0]    func7;
  wire       [11:0]   csr;
  wire                op_is_imm;
  wire                op_is_alu;
  wire                op_is_load;
  wire                op_is_store;
  wire                op_is_jal;
  wire                op_is_jalr;
  wire                op_is_branch;
  wire                op_is_lui;
  wire                op_is_auipc;
  wire                op_is_fence;
  wire                op_is_sys;
  wire                op_is_word;
  wire                op_is_wordi;
  wire                func3_is_000;
  wire                func3_is_001;
  wire                func3_is_010;
  wire                func3_is_011;
  wire                func3_is_100;
  wire                func3_is_101;
  wire                func3_is_110;
  wire                func3_is_111;
  wire                func7_is_0000000;
  wire                func7_is_0100000;
  wire                func7_is_0011000;
  wire                func7_is_0000001;
  wire                instr_high_6bit_is_000000;
  wire                instr_high_6bit_is_010000;
  wire                add;
  wire                and_1;
  wire                or_1;
  wire                sll_1;
  wire                slt;
  wire                sltu;
  wire                sra_1;
  wire                srl_1;
  wire                sub;
  wire                xor_1;
  wire                subw;
  wire                srlw;
  wire                sraw;
  wire                addw;
  wire                sllw;
  wire                addi;
  wire                andi;
  wire                ori;
  wire                slli;
  wire                slti;
  wire                sltiu;
  wire                srai;
  wire                srli;
  wire                xori;
  wire                srliw;
  wire                sraiw;
  wire                addiw;
  wire                slliw;
  wire                mul;
  wire                mulh;
  wire                mulhsu;
  wire                mulhu;
  wire                div;
  wire                divu;
  wire                rem_1;
  wire                remu;
  wire                mulw;
  wire                divw;
  wire                divuw;
  wire                remw;
  wire                remuw;
  wire                alu_add;
  wire                alu_sub;
  wire                alu_slt;
  wire                alu_sltu;
  wire                alu_xor;
  wire                alu_sll;
  wire                alu_srl;
  wire                alu_sra;
  wire                alu_and;
  wire                alu_or;
  wire                lb;
  wire                lbu;
  wire                ld;
  wire                lh;
  wire                lhu;
  wire                lw;
  wire                lwu;
  wire                sb;
  wire                sd;
  wire                sh;
  wire                sw;
  wire                ebreak;
  wire                ecall;
  wire                mret;
  wire                csrrw;
  wire                csrrs;
  wire                csrrc;
  wire                csrrwi;
  wire                csrrsi;
  wire                csrrci;
  wire                csri;
  wire                csr_op;
  wire                beq;
  wire                bge;
  wire                bgeu;
  wire                blt;
  wire                bltu;
  wire                bne;
  wire       [63:0]   csr_imm;
  wire                tmp_imm_data;
  reg        [31:0]   tmp_imm_data_1;
  wire                tmp_imm_data_2;
  reg        [42:0]   tmp_imm_data_3;
  wire                tmp_imm_data_4;
  reg        [50:0]   tmp_imm_data_5;
  wire                tmp_imm_data_6;
  reg        [51:0]   tmp_imm_data_7;
  wire                tmp_imm_data_8;
  reg        [51:0]   tmp_imm_data_9;
  wire       [383:0]  imm_data;
  wire       [5:0]    imm_type;
  wire                tmp_imm;
  wire                tmp_imm_1;
  wire                tmp_imm_2;
  wire                tmp_imm_3;
  wire                tmp_imm_4;
  wire                tmp_imm_5;
  wire       [23:0]   alu_ctrl_sel;
  wire       [4:0]    tmp_alu_ctrl_data;
  wire       [4:0]    tmp_alu_ctrl_data_1;
  wire       [4:0]    tmp_alu_ctrl_data_2;
  wire       [4:0]    tmp_alu_ctrl_data_3;
  wire       [4:0]    tmp_alu_ctrl_data_4;
  wire       [4:0]    tmp_alu_ctrl_data_5;
  wire       [4:0]    tmp_alu_ctrl_data_6;
  wire       [4:0]    tmp_alu_ctrl_data_7;
  wire       [4:0]    tmp_alu_ctrl_data_8;
  wire       [4:0]    tmp_alu_ctrl_data_9;
  wire       [4:0]    tmp_alu_ctrl_data_10;
  wire       [4:0]    tmp_alu_ctrl_data_11;
  wire       [4:0]    tmp_alu_ctrl_data_12;
  wire       [4:0]    tmp_alu_ctrl_data_13;
  wire       [4:0]    tmp_alu_ctrl_data_14;
  wire       [4:0]    tmp_alu_ctrl_data_15;
  wire       [4:0]    tmp_alu_ctrl_data_16;
  wire       [4:0]    tmp_alu_ctrl_data_17;
  wire       [4:0]    tmp_alu_ctrl_data_18;
  wire       [4:0]    tmp_alu_ctrl_data_19;
  wire       [4:0]    tmp_alu_ctrl_data_20;
  wire       [4:0]    tmp_alu_ctrl_data_21;
  wire       [4:0]    tmp_alu_ctrl_data_22;
  wire       [4:0]    tmp_alu_ctrl_data_23;
  wire       [119:0]  alu_ctrl_data;
  wire                tmp_alu_ctrl_op;
  wire                tmp_alu_ctrl_op_1;
  wire                tmp_alu_ctrl_op_2;
  wire                tmp_alu_ctrl_op_3;
  wire                tmp_alu_ctrl_op_4;
  wire                tmp_alu_ctrl_op_5;
  wire                tmp_alu_ctrl_op_6;
  wire                tmp_alu_ctrl_op_7;
  wire                tmp_alu_ctrl_op_8;
  wire                tmp_alu_ctrl_op_9;
  wire                tmp_alu_ctrl_op_10;
  wire                tmp_alu_ctrl_op_11;
  wire                tmp_alu_ctrl_op_12;
  wire                tmp_alu_ctrl_op_13;
  wire                tmp_alu_ctrl_op_14;
  wire                tmp_alu_ctrl_op_15;
  wire                tmp_alu_ctrl_op_16;
  wire                tmp_alu_ctrl_op_17;
  wire                tmp_alu_ctrl_op_18;
  wire                tmp_alu_ctrl_op_19;
  wire                tmp_alu_ctrl_op_20;
  wire                tmp_alu_ctrl_op_21;
  wire                tmp_alu_ctrl_op_22;
  wire                tmp_alu_ctrl_op_23;
  wire       [4:0]    alu_ctrl_op;
  wire       [9:0]    bju_ctrl_sel;
  wire       [3:0]    tmp_bju_ctrl_data;
  wire       [3:0]    tmp_bju_ctrl_data_1;
  wire       [3:0]    tmp_bju_ctrl_data_2;
  wire       [3:0]    tmp_bju_ctrl_data_3;
  wire       [3:0]    tmp_bju_ctrl_data_4;
  wire       [3:0]    tmp_bju_ctrl_data_5;
  wire       [3:0]    tmp_bju_ctrl_data_6;
  wire       [3:0]    tmp_bju_ctrl_data_7;
  wire       [3:0]    tmp_bju_ctrl_data_8;
  wire       [3:0]    tmp_bju_ctrl_data_9;
  wire       [39:0]   bju_ctrl_data;
  wire                tmp_bju_ctrl_op;
  wire                tmp_bju_ctrl_op_1;
  wire                tmp_bju_ctrl_op_2;
  wire                tmp_bju_ctrl_op_3;
  wire                tmp_bju_ctrl_op_4;
  wire                tmp_bju_ctrl_op_5;
  wire                tmp_bju_ctrl_op_6;
  wire                tmp_bju_ctrl_op_7;
  wire                tmp_bju_ctrl_op_8;
  wire                tmp_bju_ctrl_op_9;
  wire       [3:0]    bju_ctrl_op;
  wire       [8:0]    exp_ctrl_sel;
  wire       [3:0]    tmp_exp_ctrl_data;
  wire       [3:0]    tmp_exp_ctrl_data_1;
  wire       [3:0]    tmp_exp_ctrl_data_2;
  wire       [3:0]    tmp_exp_ctrl_data_3;
  wire       [3:0]    tmp_exp_ctrl_data_4;
  wire       [3:0]    tmp_exp_ctrl_data_5;
  wire       [3:0]    tmp_exp_ctrl_data_6;
  wire       [3:0]    tmp_exp_ctrl_data_7;
  wire       [3:0]    tmp_exp_ctrl_data_8;
  wire       [35:0]   exp_ctrl_data;
  wire                tmp_exp_ctrl_op;
  wire                tmp_exp_ctrl_op_1;
  wire                tmp_exp_ctrl_op_2;
  wire                tmp_exp_ctrl_op_3;
  wire                tmp_exp_ctrl_op_4;
  wire                tmp_exp_ctrl_op_5;
  wire                tmp_exp_ctrl_op_6;
  wire                tmp_exp_ctrl_op_7;
  wire                tmp_exp_ctrl_op_8;
  wire       [3:0]    exp_ctrl_op;
  wire       [10:0]   lsu_ctrl_sel;
  wire       [3:0]    tmp_lsu_ctrl_data;
  wire       [3:0]    tmp_lsu_ctrl_data_1;
  wire       [3:0]    tmp_lsu_ctrl_data_2;
  wire       [3:0]    tmp_lsu_ctrl_data_3;
  wire       [3:0]    tmp_lsu_ctrl_data_4;
  wire       [3:0]    tmp_lsu_ctrl_data_5;
  wire       [3:0]    tmp_lsu_ctrl_data_6;
  wire       [3:0]    tmp_lsu_ctrl_data_7;
  wire       [3:0]    tmp_lsu_ctrl_data_8;
  wire       [3:0]    tmp_lsu_ctrl_data_9;
  wire       [3:0]    tmp_lsu_ctrl_data_10;
  wire       [43:0]   lsu_ctrl_data;
  wire                tmp_lsu_ctrl_op;
  wire                tmp_lsu_ctrl_op_1;
  wire                tmp_lsu_ctrl_op_2;
  wire                tmp_lsu_ctrl_op_3;
  wire                tmp_lsu_ctrl_op_4;
  wire                tmp_lsu_ctrl_op_5;
  wire                tmp_lsu_ctrl_op_6;
  wire                tmp_lsu_ctrl_op_7;
  wire                tmp_lsu_ctrl_op_8;
  wire                tmp_lsu_ctrl_op_9;
  wire                tmp_lsu_ctrl_op_10;
  wire       [3:0]    lsu_ctrl_op;
  wire                rd_wen;
  wire                src2_is_imm;
  wire       [4:0]    tmp_alu_micro_op_alu_ctrl_op;
  wire       [3:0]    tmp_lsu_micro_op_lsu_ctrl_op;
  wire       [3:0]    tmp_bju_micro_op_bju_ctrl_op;
  wire       [3:0]    tmp_bju_micro_op_exp_ctrl_op;
  `ifndef SYNTHESIS
  reg [47:0] alu_micro_op_alu_ctrl_op_string;
  reg [31:0] lsu_micro_op_lsu_ctrl_op_string;
  reg [39:0] bju_micro_op_bju_ctrl_op_string;
  reg [47:0] bju_micro_op_exp_ctrl_op_string;
  reg [47:0] exception_string;
  reg [31:0] rob_micro_op_string;
  reg [47:0] tmp_alu_ctrl_data_string;
  reg [47:0] tmp_alu_ctrl_data_1_string;
  reg [47:0] tmp_alu_ctrl_data_2_string;
  reg [47:0] tmp_alu_ctrl_data_3_string;
  reg [47:0] tmp_alu_ctrl_data_4_string;
  reg [47:0] tmp_alu_ctrl_data_5_string;
  reg [47:0] tmp_alu_ctrl_data_6_string;
  reg [47:0] tmp_alu_ctrl_data_7_string;
  reg [47:0] tmp_alu_ctrl_data_8_string;
  reg [47:0] tmp_alu_ctrl_data_9_string;
  reg [47:0] tmp_alu_ctrl_data_10_string;
  reg [47:0] tmp_alu_ctrl_data_11_string;
  reg [47:0] tmp_alu_ctrl_data_12_string;
  reg [47:0] tmp_alu_ctrl_data_13_string;
  reg [47:0] tmp_alu_ctrl_data_14_string;
  reg [47:0] tmp_alu_ctrl_data_15_string;
  reg [47:0] tmp_alu_ctrl_data_16_string;
  reg [47:0] tmp_alu_ctrl_data_17_string;
  reg [47:0] tmp_alu_ctrl_data_18_string;
  reg [47:0] tmp_alu_ctrl_data_19_string;
  reg [47:0] tmp_alu_ctrl_data_20_string;
  reg [47:0] tmp_alu_ctrl_data_21_string;
  reg [47:0] tmp_alu_ctrl_data_22_string;
  reg [47:0] tmp_alu_ctrl_data_23_string;
  reg [39:0] tmp_bju_ctrl_data_string;
  reg [39:0] tmp_bju_ctrl_data_1_string;
  reg [39:0] tmp_bju_ctrl_data_2_string;
  reg [39:0] tmp_bju_ctrl_data_3_string;
  reg [39:0] tmp_bju_ctrl_data_4_string;
  reg [39:0] tmp_bju_ctrl_data_5_string;
  reg [39:0] tmp_bju_ctrl_data_6_string;
  reg [39:0] tmp_bju_ctrl_data_7_string;
  reg [39:0] tmp_bju_ctrl_data_8_string;
  reg [39:0] tmp_bju_ctrl_data_9_string;
  reg [47:0] tmp_exp_ctrl_data_string;
  reg [47:0] tmp_exp_ctrl_data_1_string;
  reg [47:0] tmp_exp_ctrl_data_2_string;
  reg [47:0] tmp_exp_ctrl_data_3_string;
  reg [47:0] tmp_exp_ctrl_data_4_string;
  reg [47:0] tmp_exp_ctrl_data_5_string;
  reg [47:0] tmp_exp_ctrl_data_6_string;
  reg [47:0] tmp_exp_ctrl_data_7_string;
  reg [47:0] tmp_exp_ctrl_data_8_string;
  reg [31:0] tmp_lsu_ctrl_data_string;
  reg [31:0] tmp_lsu_ctrl_data_1_string;
  reg [31:0] tmp_lsu_ctrl_data_2_string;
  reg [31:0] tmp_lsu_ctrl_data_3_string;
  reg [31:0] tmp_lsu_ctrl_data_4_string;
  reg [31:0] tmp_lsu_ctrl_data_5_string;
  reg [31:0] tmp_lsu_ctrl_data_6_string;
  reg [31:0] tmp_lsu_ctrl_data_7_string;
  reg [31:0] tmp_lsu_ctrl_data_8_string;
  reg [31:0] tmp_lsu_ctrl_data_9_string;
  reg [31:0] tmp_lsu_ctrl_data_10_string;
  reg [47:0] tmp_alu_micro_op_alu_ctrl_op_string;
  reg [31:0] tmp_lsu_micro_op_lsu_ctrl_op_string;
  reg [39:0] tmp_bju_micro_op_bju_ctrl_op_string;
  reg [47:0] tmp_bju_micro_op_exp_ctrl_op_string;
  `endif


  assign tmp_tmp_imm_data = {instr[31 : 12],12'h0};
  assign tmp_tmp_imm_data_2 = {{{instr[31],instr[19 : 12]},instr[20]},instr[30 : 21]};
  assign tmp_tmp_imm_data_4 = {{{instr[31],instr[7]},instr[30 : 25]},instr[11 : 8]};
  assign tmp_tmp_imm_data_6 = {instr[31 : 25],instr[11 : 7]};
  assign tmp_imm_data_10 = instr[31 : 12];
  assign tmp_imm_data_11 = 12'h0;
  assign tmp_imm_data_12 = {{{instr[31],instr[19 : 12]},instr[20]},instr[30 : 21]};
  assign tmp_imm_data_13 = 1'b0;
  assign tmp_imm_data_14 = {{instr[31],instr[7]},instr[30 : 25]};
  assign tmp_imm_data_15 = instr[11 : 8];
  assign tmp_imm_type = (instr[6 : 0] == 7'h37);
  assign tmp_imm_type_1 = (instr[6 : 0] == 7'h17);
  assign tmp_imm_type_2 = instr[6 : 0];
  assign tmp_imm_type_3 = 7'h6f;
  assign tmp_imm_type_4 = instr[6 : 0];
  assign tmp_imm_type_5 = 7'h13;
  assign tmp_imm_type_6 = instr[6 : 0];
  assign tmp_imm_type_7 = 7'h1b;
  assign tmp_imm_6 = (imm_data[63 : 0] & {tmp_imm,{tmp_imm_7,tmp_imm_8}});
  assign tmp_imm_47 = (imm_data[127 : 64] & {tmp_imm_1,{tmp_imm_48,tmp_imm_49}});
  assign tmp_imm_88 = imm_data[191 : 128];
  assign tmp_imm_89 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_90,tmp_imm_91}}};
  assign tmp_imm_130 = tmp_imm_3;
  assign tmp_imm_131 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_132,tmp_imm_133}}};
  assign tmp_imm_172 = tmp_imm_4;
  assign tmp_imm_173 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_174,tmp_imm_175}}};
  assign tmp_imm_214 = tmp_imm_5;
  assign tmp_imm_215 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_216,tmp_imm_217}}};
  assign tmp_imm_7 = tmp_imm;
  assign tmp_imm_8 = {tmp_imm,{tmp_imm,{tmp_imm_9,tmp_imm_10}}};
  assign tmp_imm_48 = tmp_imm_1;
  assign tmp_imm_49 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_50,tmp_imm_51}}};
  assign tmp_imm_90 = tmp_imm_2;
  assign tmp_imm_91 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_92,tmp_imm_93}}};
  assign tmp_imm_132 = tmp_imm_3;
  assign tmp_imm_133 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_134,tmp_imm_135}}};
  assign tmp_imm_174 = tmp_imm_4;
  assign tmp_imm_175 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_176,tmp_imm_177}}};
  assign tmp_imm_216 = tmp_imm_5;
  assign tmp_imm_217 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_218,tmp_imm_219}}};
  assign tmp_imm_9 = tmp_imm;
  assign tmp_imm_10 = {tmp_imm,{tmp_imm,{tmp_imm_11,tmp_imm_12}}};
  assign tmp_imm_50 = tmp_imm_1;
  assign tmp_imm_51 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_52,tmp_imm_53}}};
  assign tmp_imm_92 = tmp_imm_2;
  assign tmp_imm_93 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_94,tmp_imm_95}}};
  assign tmp_imm_134 = tmp_imm_3;
  assign tmp_imm_135 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_136,tmp_imm_137}}};
  assign tmp_imm_176 = tmp_imm_4;
  assign tmp_imm_177 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_178,tmp_imm_179}}};
  assign tmp_imm_218 = tmp_imm_5;
  assign tmp_imm_219 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_220,tmp_imm_221}}};
  assign tmp_imm_11 = tmp_imm;
  assign tmp_imm_12 = {tmp_imm,{tmp_imm,{tmp_imm_13,tmp_imm_14}}};
  assign tmp_imm_52 = tmp_imm_1;
  assign tmp_imm_53 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_54,tmp_imm_55}}};
  assign tmp_imm_94 = tmp_imm_2;
  assign tmp_imm_95 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_96,tmp_imm_97}}};
  assign tmp_imm_136 = tmp_imm_3;
  assign tmp_imm_137 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_138,tmp_imm_139}}};
  assign tmp_imm_178 = tmp_imm_4;
  assign tmp_imm_179 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_180,tmp_imm_181}}};
  assign tmp_imm_220 = tmp_imm_5;
  assign tmp_imm_221 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_222,tmp_imm_223}}};
  assign tmp_imm_13 = tmp_imm;
  assign tmp_imm_14 = {tmp_imm,{tmp_imm,{tmp_imm_15,tmp_imm_16}}};
  assign tmp_imm_54 = tmp_imm_1;
  assign tmp_imm_55 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_56,tmp_imm_57}}};
  assign tmp_imm_96 = tmp_imm_2;
  assign tmp_imm_97 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_98,tmp_imm_99}}};
  assign tmp_imm_138 = tmp_imm_3;
  assign tmp_imm_139 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_140,tmp_imm_141}}};
  assign tmp_imm_180 = tmp_imm_4;
  assign tmp_imm_181 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_182,tmp_imm_183}}};
  assign tmp_imm_222 = tmp_imm_5;
  assign tmp_imm_223 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_224,tmp_imm_225}}};
  assign tmp_imm_15 = tmp_imm;
  assign tmp_imm_16 = {tmp_imm,{tmp_imm,{tmp_imm_17,tmp_imm_18}}};
  assign tmp_imm_56 = tmp_imm_1;
  assign tmp_imm_57 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_58,tmp_imm_59}}};
  assign tmp_imm_98 = tmp_imm_2;
  assign tmp_imm_99 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_100,tmp_imm_101}}};
  assign tmp_imm_140 = tmp_imm_3;
  assign tmp_imm_141 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_142,tmp_imm_143}}};
  assign tmp_imm_182 = tmp_imm_4;
  assign tmp_imm_183 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_184,tmp_imm_185}}};
  assign tmp_imm_224 = tmp_imm_5;
  assign tmp_imm_225 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_226,tmp_imm_227}}};
  assign tmp_imm_17 = tmp_imm;
  assign tmp_imm_18 = {tmp_imm,{tmp_imm,{tmp_imm_19,tmp_imm_20}}};
  assign tmp_imm_58 = tmp_imm_1;
  assign tmp_imm_59 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_60,tmp_imm_61}}};
  assign tmp_imm_100 = tmp_imm_2;
  assign tmp_imm_101 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_102,tmp_imm_103}}};
  assign tmp_imm_142 = tmp_imm_3;
  assign tmp_imm_143 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_144,tmp_imm_145}}};
  assign tmp_imm_184 = tmp_imm_4;
  assign tmp_imm_185 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_186,tmp_imm_187}}};
  assign tmp_imm_226 = tmp_imm_5;
  assign tmp_imm_227 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_228,tmp_imm_229}}};
  assign tmp_imm_19 = tmp_imm;
  assign tmp_imm_20 = {tmp_imm,{tmp_imm,{tmp_imm_21,tmp_imm_22}}};
  assign tmp_imm_60 = tmp_imm_1;
  assign tmp_imm_61 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_62,tmp_imm_63}}};
  assign tmp_imm_102 = tmp_imm_2;
  assign tmp_imm_103 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_104,tmp_imm_105}}};
  assign tmp_imm_144 = tmp_imm_3;
  assign tmp_imm_145 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_146,tmp_imm_147}}};
  assign tmp_imm_186 = tmp_imm_4;
  assign tmp_imm_187 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_188,tmp_imm_189}}};
  assign tmp_imm_228 = tmp_imm_5;
  assign tmp_imm_229 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_230,tmp_imm_231}}};
  assign tmp_imm_21 = tmp_imm;
  assign tmp_imm_22 = {tmp_imm,{tmp_imm,{tmp_imm_23,tmp_imm_24}}};
  assign tmp_imm_62 = tmp_imm_1;
  assign tmp_imm_63 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_64,tmp_imm_65}}};
  assign tmp_imm_104 = tmp_imm_2;
  assign tmp_imm_105 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_106,tmp_imm_107}}};
  assign tmp_imm_146 = tmp_imm_3;
  assign tmp_imm_147 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_148,tmp_imm_149}}};
  assign tmp_imm_188 = tmp_imm_4;
  assign tmp_imm_189 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_190,tmp_imm_191}}};
  assign tmp_imm_230 = tmp_imm_5;
  assign tmp_imm_231 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_232,tmp_imm_233}}};
  assign tmp_imm_23 = tmp_imm;
  assign tmp_imm_24 = {tmp_imm,{tmp_imm,{tmp_imm_25,tmp_imm_26}}};
  assign tmp_imm_64 = tmp_imm_1;
  assign tmp_imm_65 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_66,tmp_imm_67}}};
  assign tmp_imm_106 = tmp_imm_2;
  assign tmp_imm_107 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_108,tmp_imm_109}}};
  assign tmp_imm_148 = tmp_imm_3;
  assign tmp_imm_149 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_150,tmp_imm_151}}};
  assign tmp_imm_190 = tmp_imm_4;
  assign tmp_imm_191 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_192,tmp_imm_193}}};
  assign tmp_imm_232 = tmp_imm_5;
  assign tmp_imm_233 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_234,tmp_imm_235}}};
  assign tmp_imm_25 = tmp_imm;
  assign tmp_imm_26 = {tmp_imm,{tmp_imm,{tmp_imm_27,tmp_imm_28}}};
  assign tmp_imm_66 = tmp_imm_1;
  assign tmp_imm_67 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_68,tmp_imm_69}}};
  assign tmp_imm_108 = tmp_imm_2;
  assign tmp_imm_109 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_110,tmp_imm_111}}};
  assign tmp_imm_150 = tmp_imm_3;
  assign tmp_imm_151 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_152,tmp_imm_153}}};
  assign tmp_imm_192 = tmp_imm_4;
  assign tmp_imm_193 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_194,tmp_imm_195}}};
  assign tmp_imm_234 = tmp_imm_5;
  assign tmp_imm_235 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_236,tmp_imm_237}}};
  assign tmp_imm_27 = tmp_imm;
  assign tmp_imm_28 = {tmp_imm,{tmp_imm,{tmp_imm_29,tmp_imm_30}}};
  assign tmp_imm_68 = tmp_imm_1;
  assign tmp_imm_69 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_70,tmp_imm_71}}};
  assign tmp_imm_110 = tmp_imm_2;
  assign tmp_imm_111 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_112,tmp_imm_113}}};
  assign tmp_imm_152 = tmp_imm_3;
  assign tmp_imm_153 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_154,tmp_imm_155}}};
  assign tmp_imm_194 = tmp_imm_4;
  assign tmp_imm_195 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_196,tmp_imm_197}}};
  assign tmp_imm_236 = tmp_imm_5;
  assign tmp_imm_237 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_238,tmp_imm_239}}};
  assign tmp_imm_29 = tmp_imm;
  assign tmp_imm_30 = {tmp_imm,{tmp_imm,{tmp_imm_31,tmp_imm_32}}};
  assign tmp_imm_70 = tmp_imm_1;
  assign tmp_imm_71 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_72,tmp_imm_73}}};
  assign tmp_imm_112 = tmp_imm_2;
  assign tmp_imm_113 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_114,tmp_imm_115}}};
  assign tmp_imm_154 = tmp_imm_3;
  assign tmp_imm_155 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_156,tmp_imm_157}}};
  assign tmp_imm_196 = tmp_imm_4;
  assign tmp_imm_197 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_198,tmp_imm_199}}};
  assign tmp_imm_238 = tmp_imm_5;
  assign tmp_imm_239 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_240,tmp_imm_241}}};
  assign tmp_imm_31 = tmp_imm;
  assign tmp_imm_32 = {tmp_imm,{tmp_imm,{tmp_imm_33,tmp_imm_34}}};
  assign tmp_imm_72 = tmp_imm_1;
  assign tmp_imm_73 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_74,tmp_imm_75}}};
  assign tmp_imm_114 = tmp_imm_2;
  assign tmp_imm_115 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_116,tmp_imm_117}}};
  assign tmp_imm_156 = tmp_imm_3;
  assign tmp_imm_157 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_158,tmp_imm_159}}};
  assign tmp_imm_198 = tmp_imm_4;
  assign tmp_imm_199 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_200,tmp_imm_201}}};
  assign tmp_imm_240 = tmp_imm_5;
  assign tmp_imm_241 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_242,tmp_imm_243}}};
  assign tmp_imm_33 = tmp_imm;
  assign tmp_imm_34 = {tmp_imm,{tmp_imm,{tmp_imm_35,tmp_imm_36}}};
  assign tmp_imm_74 = tmp_imm_1;
  assign tmp_imm_75 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_76,tmp_imm_77}}};
  assign tmp_imm_116 = tmp_imm_2;
  assign tmp_imm_117 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_118,tmp_imm_119}}};
  assign tmp_imm_158 = tmp_imm_3;
  assign tmp_imm_159 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_160,tmp_imm_161}}};
  assign tmp_imm_200 = tmp_imm_4;
  assign tmp_imm_201 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_202,tmp_imm_203}}};
  assign tmp_imm_242 = tmp_imm_5;
  assign tmp_imm_243 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_244,tmp_imm_245}}};
  assign tmp_imm_35 = tmp_imm;
  assign tmp_imm_36 = {tmp_imm,{tmp_imm,{tmp_imm_37,tmp_imm_38}}};
  assign tmp_imm_76 = tmp_imm_1;
  assign tmp_imm_77 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_78,tmp_imm_79}}};
  assign tmp_imm_118 = tmp_imm_2;
  assign tmp_imm_119 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_120,tmp_imm_121}}};
  assign tmp_imm_160 = tmp_imm_3;
  assign tmp_imm_161 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_162,tmp_imm_163}}};
  assign tmp_imm_202 = tmp_imm_4;
  assign tmp_imm_203 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_204,tmp_imm_205}}};
  assign tmp_imm_244 = tmp_imm_5;
  assign tmp_imm_245 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_246,tmp_imm_247}}};
  assign tmp_imm_37 = tmp_imm;
  assign tmp_imm_38 = {tmp_imm,{tmp_imm,{tmp_imm_39,tmp_imm_40}}};
  assign tmp_imm_78 = tmp_imm_1;
  assign tmp_imm_79 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_80,tmp_imm_81}}};
  assign tmp_imm_120 = tmp_imm_2;
  assign tmp_imm_121 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_122,tmp_imm_123}}};
  assign tmp_imm_162 = tmp_imm_3;
  assign tmp_imm_163 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_164,tmp_imm_165}}};
  assign tmp_imm_204 = tmp_imm_4;
  assign tmp_imm_205 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_206,tmp_imm_207}}};
  assign tmp_imm_246 = tmp_imm_5;
  assign tmp_imm_247 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_248,tmp_imm_249}}};
  assign tmp_imm_39 = tmp_imm;
  assign tmp_imm_40 = {tmp_imm,{tmp_imm,{tmp_imm_41,tmp_imm_42}}};
  assign tmp_imm_80 = tmp_imm_1;
  assign tmp_imm_81 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_82,tmp_imm_83}}};
  assign tmp_imm_122 = tmp_imm_2;
  assign tmp_imm_123 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_124,tmp_imm_125}}};
  assign tmp_imm_164 = tmp_imm_3;
  assign tmp_imm_165 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_166,tmp_imm_167}}};
  assign tmp_imm_206 = tmp_imm_4;
  assign tmp_imm_207 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_208,tmp_imm_209}}};
  assign tmp_imm_248 = tmp_imm_5;
  assign tmp_imm_249 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_250,tmp_imm_251}}};
  assign tmp_imm_41 = tmp_imm;
  assign tmp_imm_42 = {tmp_imm,{tmp_imm,{tmp_imm_43,tmp_imm_44}}};
  assign tmp_imm_82 = tmp_imm_1;
  assign tmp_imm_83 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_84,tmp_imm_85}}};
  assign tmp_imm_124 = tmp_imm_2;
  assign tmp_imm_125 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_126,tmp_imm_127}}};
  assign tmp_imm_166 = tmp_imm_3;
  assign tmp_imm_167 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_168,tmp_imm_169}}};
  assign tmp_imm_208 = tmp_imm_4;
  assign tmp_imm_209 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_210,tmp_imm_211}}};
  assign tmp_imm_250 = tmp_imm_5;
  assign tmp_imm_251 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_252,tmp_imm_253}}};
  assign tmp_imm_43 = tmp_imm;
  assign tmp_imm_44 = {tmp_imm,{tmp_imm,{tmp_imm_45,tmp_imm_46}}};
  assign tmp_imm_84 = tmp_imm_1;
  assign tmp_imm_85 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_86,tmp_imm_87}}};
  assign tmp_imm_126 = tmp_imm_2;
  assign tmp_imm_127 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_128,tmp_imm_129}}};
  assign tmp_imm_168 = tmp_imm_3;
  assign tmp_imm_169 = {tmp_imm_3,{tmp_imm_3,{tmp_imm_170,tmp_imm_171}}};
  assign tmp_imm_210 = tmp_imm_4;
  assign tmp_imm_211 = {tmp_imm_4,{tmp_imm_4,{tmp_imm_212,tmp_imm_213}}};
  assign tmp_imm_252 = tmp_imm_5;
  assign tmp_imm_253 = {tmp_imm_5,{tmp_imm_5,{tmp_imm_254,tmp_imm_255}}};
  assign tmp_imm_45 = tmp_imm;
  assign tmp_imm_46 = {tmp_imm,{tmp_imm,{tmp_imm,{tmp_imm,tmp_imm}}}};
  assign tmp_imm_86 = tmp_imm_1;
  assign tmp_imm_87 = {tmp_imm_1,{tmp_imm_1,{tmp_imm_1,{tmp_imm_1,tmp_imm_1}}}};
  assign tmp_imm_128 = tmp_imm_2;
  assign tmp_imm_129 = {tmp_imm_2,{tmp_imm_2,{tmp_imm_2,tmp_imm_2}}};
  assign tmp_imm_170 = tmp_imm_3;
  assign tmp_imm_171 = {tmp_imm_3,{tmp_imm_3,tmp_imm_3}};
  assign tmp_imm_212 = tmp_imm_4;
  assign tmp_imm_213 = {tmp_imm_4,tmp_imm_4};
  assign tmp_imm_254 = tmp_imm_5;
  assign tmp_imm_255 = tmp_imm_5;
  assign tmp_alu_ctrl_sel = {{{{{{{{{{{tmp_alu_ctrl_sel_1,tmp_alu_ctrl_sel_2},divw},mulw},remu},rem_1},divu},div},mulhu},mulhsu},mulh},mul};
  assign tmp_alu_ctrl_sel_3 = op_is_lui;
  assign tmp_alu_ctrl_sel_1 = {remuw,remw};
  assign tmp_alu_ctrl_sel_2 = divuw;
  assign tmp_alu_ctrl_data_24 = {{{{{{{{{{{tmp_alu_ctrl_data_25,tmp_alu_ctrl_data_26},tmp_alu_ctrl_data_3},tmp_alu_ctrl_data_4},tmp_alu_ctrl_data_5},tmp_alu_ctrl_data_6},tmp_alu_ctrl_data_7},tmp_alu_ctrl_data_8},tmp_alu_ctrl_data_9},tmp_alu_ctrl_data_10},tmp_alu_ctrl_data_11},tmp_alu_ctrl_data_12};
  assign tmp_alu_ctrl_data_27 = tmp_alu_ctrl_data_13;
  assign tmp_alu_ctrl_data_25 = {tmp_alu_ctrl_data,tmp_alu_ctrl_data_1};
  assign tmp_alu_ctrl_data_26 = tmp_alu_ctrl_data_2;
  assign tmp_alu_ctrl_op_24 = (((tmp_alu_ctrl_op_25 | tmp_alu_ctrl_op_88) | (tmp_alu_ctrl_op_91 & tmp_alu_ctrl_op_92)) | (alu_ctrl_data[94 : 90] & {tmp_alu_ctrl_op_95,tmp_alu_ctrl_op_96}));
  assign tmp_alu_ctrl_op_99 = (alu_ctrl_data[99 : 95] & {tmp_alu_ctrl_op_19,{tmp_alu_ctrl_op_100,tmp_alu_ctrl_op_101}});
  assign tmp_alu_ctrl_op_102 = alu_ctrl_data[104 : 100];
  assign tmp_alu_ctrl_op_103 = {tmp_alu_ctrl_op_20,{tmp_alu_ctrl_op_20,{tmp_alu_ctrl_op_104,tmp_alu_ctrl_op_105}}};
  assign tmp_alu_ctrl_op_106 = tmp_alu_ctrl_op_21;
  assign tmp_alu_ctrl_op_107 = {tmp_alu_ctrl_op_21,{tmp_alu_ctrl_op_21,{tmp_alu_ctrl_op_108,tmp_alu_ctrl_op_109}}};
  assign tmp_alu_ctrl_op_110 = tmp_alu_ctrl_op_22;
  assign tmp_alu_ctrl_op_111 = {tmp_alu_ctrl_op_22,{tmp_alu_ctrl_op_22,tmp_alu_ctrl_op_22}};
  assign tmp_alu_ctrl_op_112 = tmp_alu_ctrl_op_23;
  assign tmp_alu_ctrl_op_113 = {tmp_alu_ctrl_op_23,tmp_alu_ctrl_op_23};
  assign tmp_alu_ctrl_op_25 = (((tmp_alu_ctrl_op_26 | tmp_alu_ctrl_op_77) | (tmp_alu_ctrl_op_80 & tmp_alu_ctrl_op_81)) | (alu_ctrl_data[79 : 75] & {tmp_alu_ctrl_op_84,tmp_alu_ctrl_op_85}));
  assign tmp_alu_ctrl_op_88 = (alu_ctrl_data[84 : 80] & {tmp_alu_ctrl_op_16,{tmp_alu_ctrl_op_89,tmp_alu_ctrl_op_90}});
  assign tmp_alu_ctrl_op_91 = alu_ctrl_data[89 : 85];
  assign tmp_alu_ctrl_op_92 = {tmp_alu_ctrl_op_17,{tmp_alu_ctrl_op_17,{tmp_alu_ctrl_op_93,tmp_alu_ctrl_op_94}}};
  assign tmp_alu_ctrl_op_95 = tmp_alu_ctrl_op_18;
  assign tmp_alu_ctrl_op_96 = {tmp_alu_ctrl_op_18,{tmp_alu_ctrl_op_18,{tmp_alu_ctrl_op_97,tmp_alu_ctrl_op_98}}};
  assign tmp_alu_ctrl_op_100 = tmp_alu_ctrl_op_19;
  assign tmp_alu_ctrl_op_101 = {tmp_alu_ctrl_op_19,{tmp_alu_ctrl_op_19,tmp_alu_ctrl_op_19}};
  assign tmp_alu_ctrl_op_104 = tmp_alu_ctrl_op_20;
  assign tmp_alu_ctrl_op_105 = {tmp_alu_ctrl_op_20,tmp_alu_ctrl_op_20};
  assign tmp_alu_ctrl_op_108 = tmp_alu_ctrl_op_21;
  assign tmp_alu_ctrl_op_109 = tmp_alu_ctrl_op_21;
  assign tmp_alu_ctrl_op_26 = (((tmp_alu_ctrl_op_27 | tmp_alu_ctrl_op_66) | (tmp_alu_ctrl_op_69 & tmp_alu_ctrl_op_70)) | (alu_ctrl_data[64 : 60] & {tmp_alu_ctrl_op_73,tmp_alu_ctrl_op_74}));
  assign tmp_alu_ctrl_op_77 = (alu_ctrl_data[69 : 65] & {tmp_alu_ctrl_op_13,{tmp_alu_ctrl_op_78,tmp_alu_ctrl_op_79}});
  assign tmp_alu_ctrl_op_80 = alu_ctrl_data[74 : 70];
  assign tmp_alu_ctrl_op_81 = {tmp_alu_ctrl_op_14,{tmp_alu_ctrl_op_14,{tmp_alu_ctrl_op_82,tmp_alu_ctrl_op_83}}};
  assign tmp_alu_ctrl_op_84 = tmp_alu_ctrl_op_15;
  assign tmp_alu_ctrl_op_85 = {tmp_alu_ctrl_op_15,{tmp_alu_ctrl_op_15,{tmp_alu_ctrl_op_86,tmp_alu_ctrl_op_87}}};
  assign tmp_alu_ctrl_op_89 = tmp_alu_ctrl_op_16;
  assign tmp_alu_ctrl_op_90 = {tmp_alu_ctrl_op_16,{tmp_alu_ctrl_op_16,tmp_alu_ctrl_op_16}};
  assign tmp_alu_ctrl_op_93 = tmp_alu_ctrl_op_17;
  assign tmp_alu_ctrl_op_94 = {tmp_alu_ctrl_op_17,tmp_alu_ctrl_op_17};
  assign tmp_alu_ctrl_op_97 = tmp_alu_ctrl_op_18;
  assign tmp_alu_ctrl_op_98 = tmp_alu_ctrl_op_18;
  assign tmp_alu_ctrl_op_27 = (((tmp_alu_ctrl_op_28 | tmp_alu_ctrl_op_55) | (tmp_alu_ctrl_op_58 & tmp_alu_ctrl_op_59)) | (alu_ctrl_data[49 : 45] & {tmp_alu_ctrl_op_62,tmp_alu_ctrl_op_63}));
  assign tmp_alu_ctrl_op_66 = (alu_ctrl_data[54 : 50] & {tmp_alu_ctrl_op_10,{tmp_alu_ctrl_op_67,tmp_alu_ctrl_op_68}});
  assign tmp_alu_ctrl_op_69 = alu_ctrl_data[59 : 55];
  assign tmp_alu_ctrl_op_70 = {tmp_alu_ctrl_op_11,{tmp_alu_ctrl_op_11,{tmp_alu_ctrl_op_71,tmp_alu_ctrl_op_72}}};
  assign tmp_alu_ctrl_op_73 = tmp_alu_ctrl_op_12;
  assign tmp_alu_ctrl_op_74 = {tmp_alu_ctrl_op_12,{tmp_alu_ctrl_op_12,{tmp_alu_ctrl_op_75,tmp_alu_ctrl_op_76}}};
  assign tmp_alu_ctrl_op_78 = tmp_alu_ctrl_op_13;
  assign tmp_alu_ctrl_op_79 = {tmp_alu_ctrl_op_13,{tmp_alu_ctrl_op_13,tmp_alu_ctrl_op_13}};
  assign tmp_alu_ctrl_op_82 = tmp_alu_ctrl_op_14;
  assign tmp_alu_ctrl_op_83 = {tmp_alu_ctrl_op_14,tmp_alu_ctrl_op_14};
  assign tmp_alu_ctrl_op_86 = tmp_alu_ctrl_op_15;
  assign tmp_alu_ctrl_op_87 = tmp_alu_ctrl_op_15;
  assign tmp_alu_ctrl_op_28 = (((tmp_alu_ctrl_op_29 | tmp_alu_ctrl_op_44) | (tmp_alu_ctrl_op_47 & tmp_alu_ctrl_op_48)) | (alu_ctrl_data[34 : 30] & {tmp_alu_ctrl_op_51,tmp_alu_ctrl_op_52}));
  assign tmp_alu_ctrl_op_55 = (alu_ctrl_data[39 : 35] & {tmp_alu_ctrl_op_7,{tmp_alu_ctrl_op_56,tmp_alu_ctrl_op_57}});
  assign tmp_alu_ctrl_op_58 = alu_ctrl_data[44 : 40];
  assign tmp_alu_ctrl_op_59 = {tmp_alu_ctrl_op_8,{tmp_alu_ctrl_op_8,{tmp_alu_ctrl_op_60,tmp_alu_ctrl_op_61}}};
  assign tmp_alu_ctrl_op_62 = tmp_alu_ctrl_op_9;
  assign tmp_alu_ctrl_op_63 = {tmp_alu_ctrl_op_9,{tmp_alu_ctrl_op_9,{tmp_alu_ctrl_op_64,tmp_alu_ctrl_op_65}}};
  assign tmp_alu_ctrl_op_67 = tmp_alu_ctrl_op_10;
  assign tmp_alu_ctrl_op_68 = {tmp_alu_ctrl_op_10,{tmp_alu_ctrl_op_10,tmp_alu_ctrl_op_10}};
  assign tmp_alu_ctrl_op_71 = tmp_alu_ctrl_op_11;
  assign tmp_alu_ctrl_op_72 = {tmp_alu_ctrl_op_11,tmp_alu_ctrl_op_11};
  assign tmp_alu_ctrl_op_75 = tmp_alu_ctrl_op_12;
  assign tmp_alu_ctrl_op_76 = tmp_alu_ctrl_op_12;
  assign tmp_alu_ctrl_op_29 = (((tmp_alu_ctrl_op_30 | tmp_alu_ctrl_op_33) | (tmp_alu_ctrl_op_36 & tmp_alu_ctrl_op_37)) | (alu_ctrl_data[19 : 15] & {tmp_alu_ctrl_op_40,tmp_alu_ctrl_op_41}));
  assign tmp_alu_ctrl_op_44 = (alu_ctrl_data[24 : 20] & {tmp_alu_ctrl_op_4,{tmp_alu_ctrl_op_45,tmp_alu_ctrl_op_46}});
  assign tmp_alu_ctrl_op_47 = alu_ctrl_data[29 : 25];
  assign tmp_alu_ctrl_op_48 = {tmp_alu_ctrl_op_5,{tmp_alu_ctrl_op_5,{tmp_alu_ctrl_op_49,tmp_alu_ctrl_op_50}}};
  assign tmp_alu_ctrl_op_51 = tmp_alu_ctrl_op_6;
  assign tmp_alu_ctrl_op_52 = {tmp_alu_ctrl_op_6,{tmp_alu_ctrl_op_6,{tmp_alu_ctrl_op_53,tmp_alu_ctrl_op_54}}};
  assign tmp_alu_ctrl_op_56 = tmp_alu_ctrl_op_7;
  assign tmp_alu_ctrl_op_57 = {tmp_alu_ctrl_op_7,{tmp_alu_ctrl_op_7,tmp_alu_ctrl_op_7}};
  assign tmp_alu_ctrl_op_60 = tmp_alu_ctrl_op_8;
  assign tmp_alu_ctrl_op_61 = {tmp_alu_ctrl_op_8,tmp_alu_ctrl_op_8};
  assign tmp_alu_ctrl_op_64 = tmp_alu_ctrl_op_9;
  assign tmp_alu_ctrl_op_65 = tmp_alu_ctrl_op_9;
  assign tmp_alu_ctrl_op_30 = (alu_ctrl_data[4 : 0] & {tmp_alu_ctrl_op,{tmp_alu_ctrl_op_31,tmp_alu_ctrl_op_32}});
  assign tmp_alu_ctrl_op_33 = (alu_ctrl_data[9 : 5] & {tmp_alu_ctrl_op_1,{tmp_alu_ctrl_op_34,tmp_alu_ctrl_op_35}});
  assign tmp_alu_ctrl_op_36 = alu_ctrl_data[14 : 10];
  assign tmp_alu_ctrl_op_37 = {tmp_alu_ctrl_op_2,{tmp_alu_ctrl_op_2,{tmp_alu_ctrl_op_38,tmp_alu_ctrl_op_39}}};
  assign tmp_alu_ctrl_op_40 = tmp_alu_ctrl_op_3;
  assign tmp_alu_ctrl_op_41 = {tmp_alu_ctrl_op_3,{tmp_alu_ctrl_op_3,{tmp_alu_ctrl_op_42,tmp_alu_ctrl_op_43}}};
  assign tmp_alu_ctrl_op_45 = tmp_alu_ctrl_op_4;
  assign tmp_alu_ctrl_op_46 = {tmp_alu_ctrl_op_4,{tmp_alu_ctrl_op_4,tmp_alu_ctrl_op_4}};
  assign tmp_alu_ctrl_op_49 = tmp_alu_ctrl_op_5;
  assign tmp_alu_ctrl_op_50 = {tmp_alu_ctrl_op_5,tmp_alu_ctrl_op_5};
  assign tmp_alu_ctrl_op_53 = tmp_alu_ctrl_op_6;
  assign tmp_alu_ctrl_op_54 = tmp_alu_ctrl_op_6;
  assign tmp_alu_ctrl_op_31 = tmp_alu_ctrl_op;
  assign tmp_alu_ctrl_op_32 = {tmp_alu_ctrl_op,{tmp_alu_ctrl_op,tmp_alu_ctrl_op}};
  assign tmp_alu_ctrl_op_34 = tmp_alu_ctrl_op_1;
  assign tmp_alu_ctrl_op_35 = {tmp_alu_ctrl_op_1,{tmp_alu_ctrl_op_1,tmp_alu_ctrl_op_1}};
  assign tmp_alu_ctrl_op_38 = tmp_alu_ctrl_op_2;
  assign tmp_alu_ctrl_op_39 = {tmp_alu_ctrl_op_2,tmp_alu_ctrl_op_2};
  assign tmp_alu_ctrl_op_42 = tmp_alu_ctrl_op_3;
  assign tmp_alu_ctrl_op_43 = tmp_alu_ctrl_op_3;
  assign tmp_bju_ctrl_op_10 = (((tmp_bju_ctrl_op_11 | tmp_bju_ctrl_op_16) | (tmp_bju_ctrl_op_19 & tmp_bju_ctrl_op_20)) | (bju_ctrl_data[19 : 16] & {tmp_bju_ctrl_op_23,tmp_bju_ctrl_op_24}));
  assign tmp_bju_ctrl_op_25 = (bju_ctrl_data[23 : 20] & {tmp_bju_ctrl_op_5,{tmp_bju_ctrl_op_26,tmp_bju_ctrl_op_27}});
  assign tmp_bju_ctrl_op_28 = bju_ctrl_data[27 : 24];
  assign tmp_bju_ctrl_op_29 = {tmp_bju_ctrl_op_6,{tmp_bju_ctrl_op_6,{tmp_bju_ctrl_op_30,tmp_bju_ctrl_op_31}}};
  assign tmp_bju_ctrl_op_32 = tmp_bju_ctrl_op_7;
  assign tmp_bju_ctrl_op_33 = {tmp_bju_ctrl_op_7,{tmp_bju_ctrl_op_7,tmp_bju_ctrl_op_7}};
  assign tmp_bju_ctrl_op_34 = tmp_bju_ctrl_op_8;
  assign tmp_bju_ctrl_op_35 = {tmp_bju_ctrl_op_8,tmp_bju_ctrl_op_8};
  assign tmp_bju_ctrl_op_36 = tmp_bju_ctrl_op_9;
  assign tmp_bju_ctrl_op_37 = tmp_bju_ctrl_op_9;
  assign tmp_bju_ctrl_op_11 = ((bju_ctrl_data[3 : 0] & {tmp_bju_ctrl_op_12,tmp_bju_ctrl_op_13}) | (bju_ctrl_data[7 : 4] & {tmp_bju_ctrl_op_14,tmp_bju_ctrl_op_15}));
  assign tmp_bju_ctrl_op_16 = (bju_ctrl_data[11 : 8] & {tmp_bju_ctrl_op_2,{tmp_bju_ctrl_op_17,tmp_bju_ctrl_op_18}});
  assign tmp_bju_ctrl_op_19 = bju_ctrl_data[15 : 12];
  assign tmp_bju_ctrl_op_20 = {tmp_bju_ctrl_op_3,{tmp_bju_ctrl_op_3,{tmp_bju_ctrl_op_21,tmp_bju_ctrl_op_22}}};
  assign tmp_bju_ctrl_op_23 = tmp_bju_ctrl_op_4;
  assign tmp_bju_ctrl_op_24 = {tmp_bju_ctrl_op_4,{tmp_bju_ctrl_op_4,tmp_bju_ctrl_op_4}};
  assign tmp_bju_ctrl_op_26 = tmp_bju_ctrl_op_5;
  assign tmp_bju_ctrl_op_27 = {tmp_bju_ctrl_op_5,tmp_bju_ctrl_op_5};
  assign tmp_bju_ctrl_op_30 = tmp_bju_ctrl_op_6;
  assign tmp_bju_ctrl_op_31 = tmp_bju_ctrl_op_6;
  assign tmp_bju_ctrl_op_12 = tmp_bju_ctrl_op;
  assign tmp_bju_ctrl_op_13 = {tmp_bju_ctrl_op,{tmp_bju_ctrl_op,tmp_bju_ctrl_op}};
  assign tmp_bju_ctrl_op_14 = tmp_bju_ctrl_op_1;
  assign tmp_bju_ctrl_op_15 = {tmp_bju_ctrl_op_1,{tmp_bju_ctrl_op_1,tmp_bju_ctrl_op_1}};
  assign tmp_bju_ctrl_op_17 = tmp_bju_ctrl_op_2;
  assign tmp_bju_ctrl_op_18 = {tmp_bju_ctrl_op_2,tmp_bju_ctrl_op_2};
  assign tmp_bju_ctrl_op_21 = tmp_bju_ctrl_op_3;
  assign tmp_bju_ctrl_op_22 = tmp_bju_ctrl_op_3;
  assign tmp_exp_ctrl_op_9 = (((tmp_exp_ctrl_op_10 | tmp_exp_ctrl_op_13) | (tmp_exp_ctrl_op_16 & tmp_exp_ctrl_op_17)) | (exp_ctrl_data[15 : 12] & {tmp_exp_ctrl_op_20,tmp_exp_ctrl_op_21}));
  assign tmp_exp_ctrl_op_22 = (exp_ctrl_data[19 : 16] & {tmp_exp_ctrl_op_4,{tmp_exp_ctrl_op_23,tmp_exp_ctrl_op_24}});
  assign tmp_exp_ctrl_op_25 = exp_ctrl_data[23 : 20];
  assign tmp_exp_ctrl_op_26 = {tmp_exp_ctrl_op_5,{tmp_exp_ctrl_op_5,{tmp_exp_ctrl_op_27,tmp_exp_ctrl_op_28}}};
  assign tmp_exp_ctrl_op_29 = tmp_exp_ctrl_op_6;
  assign tmp_exp_ctrl_op_30 = {tmp_exp_ctrl_op_6,{tmp_exp_ctrl_op_6,tmp_exp_ctrl_op_6}};
  assign tmp_exp_ctrl_op_31 = tmp_exp_ctrl_op_7;
  assign tmp_exp_ctrl_op_32 = {tmp_exp_ctrl_op_7,tmp_exp_ctrl_op_7};
  assign tmp_exp_ctrl_op_33 = tmp_exp_ctrl_op_8;
  assign tmp_exp_ctrl_op_34 = tmp_exp_ctrl_op_8;
  assign tmp_exp_ctrl_op_10 = (exp_ctrl_data[3 : 0] & {tmp_exp_ctrl_op,{tmp_exp_ctrl_op_11,tmp_exp_ctrl_op_12}});
  assign tmp_exp_ctrl_op_13 = (exp_ctrl_data[7 : 4] & {tmp_exp_ctrl_op_1,{tmp_exp_ctrl_op_14,tmp_exp_ctrl_op_15}});
  assign tmp_exp_ctrl_op_16 = exp_ctrl_data[11 : 8];
  assign tmp_exp_ctrl_op_17 = {tmp_exp_ctrl_op_2,{tmp_exp_ctrl_op_2,{tmp_exp_ctrl_op_18,tmp_exp_ctrl_op_19}}};
  assign tmp_exp_ctrl_op_20 = tmp_exp_ctrl_op_3;
  assign tmp_exp_ctrl_op_21 = {tmp_exp_ctrl_op_3,{tmp_exp_ctrl_op_3,tmp_exp_ctrl_op_3}};
  assign tmp_exp_ctrl_op_23 = tmp_exp_ctrl_op_4;
  assign tmp_exp_ctrl_op_24 = {tmp_exp_ctrl_op_4,tmp_exp_ctrl_op_4};
  assign tmp_exp_ctrl_op_27 = tmp_exp_ctrl_op_5;
  assign tmp_exp_ctrl_op_28 = tmp_exp_ctrl_op_5;
  assign tmp_exp_ctrl_op_11 = tmp_exp_ctrl_op;
  assign tmp_exp_ctrl_op_12 = {tmp_exp_ctrl_op,tmp_exp_ctrl_op};
  assign tmp_exp_ctrl_op_14 = tmp_exp_ctrl_op_1;
  assign tmp_exp_ctrl_op_15 = {tmp_exp_ctrl_op_1,tmp_exp_ctrl_op_1};
  assign tmp_exp_ctrl_op_18 = tmp_exp_ctrl_op_2;
  assign tmp_exp_ctrl_op_19 = tmp_exp_ctrl_op_2;
  assign tmp_lsu_ctrl_op_11 = (((tmp_lsu_ctrl_op_12 | tmp_lsu_ctrl_op_19) | (tmp_lsu_ctrl_op_22 & tmp_lsu_ctrl_op_23)) | (lsu_ctrl_data[23 : 20] & {tmp_lsu_ctrl_op_26,tmp_lsu_ctrl_op_27}));
  assign tmp_lsu_ctrl_op_28 = (lsu_ctrl_data[27 : 24] & {tmp_lsu_ctrl_op_6,{tmp_lsu_ctrl_op_29,tmp_lsu_ctrl_op_30}});
  assign tmp_lsu_ctrl_op_31 = lsu_ctrl_data[31 : 28];
  assign tmp_lsu_ctrl_op_32 = {tmp_lsu_ctrl_op_7,{tmp_lsu_ctrl_op_7,{tmp_lsu_ctrl_op_33,tmp_lsu_ctrl_op_34}}};
  assign tmp_lsu_ctrl_op_35 = tmp_lsu_ctrl_op_8;
  assign tmp_lsu_ctrl_op_36 = {tmp_lsu_ctrl_op_8,{tmp_lsu_ctrl_op_8,tmp_lsu_ctrl_op_8}};
  assign tmp_lsu_ctrl_op_37 = tmp_lsu_ctrl_op_9;
  assign tmp_lsu_ctrl_op_38 = {tmp_lsu_ctrl_op_9,tmp_lsu_ctrl_op_9};
  assign tmp_lsu_ctrl_op_39 = tmp_lsu_ctrl_op_10;
  assign tmp_lsu_ctrl_op_40 = tmp_lsu_ctrl_op_10;
  assign tmp_lsu_ctrl_op_12 = (((tmp_lsu_ctrl_op_13 & tmp_lsu_ctrl_op_14) | (tmp_lsu_ctrl_op_15 & tmp_lsu_ctrl_op_16)) | (lsu_ctrl_data[11 : 8] & {tmp_lsu_ctrl_op_17,tmp_lsu_ctrl_op_18}));
  assign tmp_lsu_ctrl_op_19 = (lsu_ctrl_data[15 : 12] & {tmp_lsu_ctrl_op_3,{tmp_lsu_ctrl_op_20,tmp_lsu_ctrl_op_21}});
  assign tmp_lsu_ctrl_op_22 = lsu_ctrl_data[19 : 16];
  assign tmp_lsu_ctrl_op_23 = {tmp_lsu_ctrl_op_4,{tmp_lsu_ctrl_op_4,{tmp_lsu_ctrl_op_24,tmp_lsu_ctrl_op_25}}};
  assign tmp_lsu_ctrl_op_26 = tmp_lsu_ctrl_op_5;
  assign tmp_lsu_ctrl_op_27 = {tmp_lsu_ctrl_op_5,{tmp_lsu_ctrl_op_5,tmp_lsu_ctrl_op_5}};
  assign tmp_lsu_ctrl_op_29 = tmp_lsu_ctrl_op_6;
  assign tmp_lsu_ctrl_op_30 = {tmp_lsu_ctrl_op_6,tmp_lsu_ctrl_op_6};
  assign tmp_lsu_ctrl_op_33 = tmp_lsu_ctrl_op_7;
  assign tmp_lsu_ctrl_op_34 = tmp_lsu_ctrl_op_7;
  assign tmp_lsu_ctrl_op_13 = lsu_ctrl_data[3 : 0];
  assign tmp_lsu_ctrl_op_14 = {tmp_lsu_ctrl_op,{tmp_lsu_ctrl_op,{tmp_lsu_ctrl_op,tmp_lsu_ctrl_op}}};
  assign tmp_lsu_ctrl_op_15 = lsu_ctrl_data[7 : 4];
  assign tmp_lsu_ctrl_op_16 = {tmp_lsu_ctrl_op_1,{tmp_lsu_ctrl_op_1,{tmp_lsu_ctrl_op_1,tmp_lsu_ctrl_op_1}}};
  assign tmp_lsu_ctrl_op_17 = tmp_lsu_ctrl_op_2;
  assign tmp_lsu_ctrl_op_18 = {tmp_lsu_ctrl_op_2,{tmp_lsu_ctrl_op_2,tmp_lsu_ctrl_op_2}};
  assign tmp_lsu_ctrl_op_20 = tmp_lsu_ctrl_op_3;
  assign tmp_lsu_ctrl_op_21 = {tmp_lsu_ctrl_op_3,tmp_lsu_ctrl_op_3};
  assign tmp_lsu_ctrl_op_24 = tmp_lsu_ctrl_op_4;
  assign tmp_lsu_ctrl_op_25 = tmp_lsu_ctrl_op_4;
  `ifndef SYNTHESIS
  always @(*) begin
    case(alu_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : alu_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : alu_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : alu_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : alu_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : alu_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : alu_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : alu_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : alu_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : alu_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : alu_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : alu_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : alu_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : alu_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : alu_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : alu_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : alu_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : alu_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : alu_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : alu_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : alu_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : alu_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : alu_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : alu_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : alu_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : alu_micro_op_alu_ctrl_op_string = "REMUW ";
      default : alu_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(lsu_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : lsu_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : lsu_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : lsu_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : lsu_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : lsu_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : lsu_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : lsu_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : lsu_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : lsu_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : lsu_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : lsu_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : lsu_micro_op_lsu_ctrl_op_string = "SD  ";
      default : lsu_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(bju_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : bju_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : bju_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : bju_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : bju_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : bju_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : bju_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : bju_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : bju_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : bju_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : bju_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : bju_micro_op_bju_ctrl_op_string = "CSR  ";
      default : bju_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(bju_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : bju_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : bju_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : bju_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : bju_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : bju_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : bju_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : bju_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : bju_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : bju_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : bju_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : bju_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(exception)
      ExceptionEnum_IDLE : exception_string = "IDLE  ";
      ExceptionEnum_ECALL : exception_string = "ECALL ";
      ExceptionEnum_EBREAK : exception_string = "EBREAK";
      ExceptionEnum_MRET : exception_string = "MRET  ";
      ExceptionEnum_TIME_1 : exception_string = "TIME_1";
      default : exception_string = "??????";
    endcase
  end
  always @(*) begin
    case(rob_micro_op)
      RobMicroOp_IDLE : rob_micro_op_string = "IDLE";
      RobMicroOp_ALU : rob_micro_op_string = "ALU ";
      RobMicroOp_BJU : rob_micro_op_string = "BJU ";
      RobMicroOp_LSU : rob_micro_op_string = "LSU ";
      default : rob_micro_op_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_string = "REMUW ";
      default : tmp_alu_ctrl_data_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_1)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_1_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_1_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_1_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_1_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_1_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_1_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_1_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_1_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_1_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_1_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_1_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_1_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_1_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_1_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_1_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_1_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_1_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_1_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_1_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_1_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_1_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_1_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_1_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_1_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_1_string = "REMUW ";
      default : tmp_alu_ctrl_data_1_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_2)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_2_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_2_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_2_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_2_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_2_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_2_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_2_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_2_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_2_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_2_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_2_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_2_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_2_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_2_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_2_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_2_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_2_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_2_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_2_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_2_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_2_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_2_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_2_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_2_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_2_string = "REMUW ";
      default : tmp_alu_ctrl_data_2_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_3)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_3_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_3_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_3_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_3_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_3_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_3_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_3_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_3_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_3_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_3_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_3_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_3_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_3_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_3_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_3_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_3_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_3_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_3_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_3_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_3_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_3_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_3_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_3_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_3_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_3_string = "REMUW ";
      default : tmp_alu_ctrl_data_3_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_4)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_4_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_4_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_4_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_4_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_4_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_4_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_4_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_4_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_4_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_4_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_4_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_4_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_4_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_4_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_4_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_4_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_4_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_4_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_4_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_4_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_4_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_4_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_4_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_4_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_4_string = "REMUW ";
      default : tmp_alu_ctrl_data_4_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_5)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_5_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_5_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_5_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_5_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_5_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_5_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_5_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_5_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_5_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_5_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_5_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_5_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_5_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_5_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_5_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_5_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_5_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_5_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_5_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_5_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_5_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_5_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_5_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_5_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_5_string = "REMUW ";
      default : tmp_alu_ctrl_data_5_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_6)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_6_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_6_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_6_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_6_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_6_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_6_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_6_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_6_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_6_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_6_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_6_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_6_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_6_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_6_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_6_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_6_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_6_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_6_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_6_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_6_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_6_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_6_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_6_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_6_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_6_string = "REMUW ";
      default : tmp_alu_ctrl_data_6_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_7)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_7_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_7_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_7_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_7_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_7_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_7_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_7_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_7_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_7_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_7_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_7_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_7_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_7_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_7_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_7_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_7_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_7_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_7_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_7_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_7_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_7_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_7_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_7_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_7_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_7_string = "REMUW ";
      default : tmp_alu_ctrl_data_7_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_8)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_8_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_8_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_8_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_8_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_8_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_8_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_8_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_8_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_8_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_8_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_8_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_8_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_8_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_8_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_8_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_8_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_8_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_8_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_8_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_8_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_8_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_8_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_8_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_8_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_8_string = "REMUW ";
      default : tmp_alu_ctrl_data_8_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_9)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_9_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_9_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_9_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_9_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_9_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_9_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_9_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_9_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_9_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_9_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_9_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_9_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_9_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_9_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_9_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_9_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_9_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_9_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_9_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_9_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_9_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_9_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_9_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_9_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_9_string = "REMUW ";
      default : tmp_alu_ctrl_data_9_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_10)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_10_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_10_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_10_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_10_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_10_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_10_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_10_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_10_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_10_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_10_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_10_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_10_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_10_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_10_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_10_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_10_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_10_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_10_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_10_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_10_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_10_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_10_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_10_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_10_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_10_string = "REMUW ";
      default : tmp_alu_ctrl_data_10_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_11)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_11_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_11_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_11_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_11_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_11_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_11_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_11_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_11_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_11_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_11_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_11_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_11_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_11_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_11_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_11_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_11_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_11_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_11_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_11_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_11_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_11_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_11_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_11_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_11_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_11_string = "REMUW ";
      default : tmp_alu_ctrl_data_11_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_12)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_12_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_12_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_12_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_12_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_12_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_12_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_12_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_12_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_12_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_12_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_12_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_12_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_12_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_12_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_12_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_12_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_12_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_12_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_12_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_12_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_12_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_12_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_12_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_12_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_12_string = "REMUW ";
      default : tmp_alu_ctrl_data_12_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_13)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_13_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_13_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_13_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_13_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_13_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_13_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_13_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_13_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_13_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_13_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_13_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_13_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_13_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_13_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_13_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_13_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_13_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_13_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_13_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_13_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_13_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_13_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_13_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_13_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_13_string = "REMUW ";
      default : tmp_alu_ctrl_data_13_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_14)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_14_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_14_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_14_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_14_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_14_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_14_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_14_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_14_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_14_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_14_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_14_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_14_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_14_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_14_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_14_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_14_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_14_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_14_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_14_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_14_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_14_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_14_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_14_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_14_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_14_string = "REMUW ";
      default : tmp_alu_ctrl_data_14_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_15)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_15_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_15_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_15_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_15_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_15_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_15_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_15_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_15_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_15_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_15_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_15_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_15_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_15_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_15_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_15_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_15_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_15_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_15_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_15_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_15_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_15_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_15_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_15_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_15_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_15_string = "REMUW ";
      default : tmp_alu_ctrl_data_15_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_16)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_16_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_16_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_16_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_16_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_16_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_16_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_16_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_16_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_16_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_16_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_16_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_16_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_16_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_16_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_16_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_16_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_16_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_16_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_16_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_16_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_16_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_16_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_16_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_16_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_16_string = "REMUW ";
      default : tmp_alu_ctrl_data_16_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_17)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_17_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_17_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_17_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_17_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_17_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_17_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_17_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_17_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_17_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_17_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_17_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_17_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_17_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_17_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_17_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_17_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_17_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_17_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_17_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_17_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_17_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_17_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_17_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_17_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_17_string = "REMUW ";
      default : tmp_alu_ctrl_data_17_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_18)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_18_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_18_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_18_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_18_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_18_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_18_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_18_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_18_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_18_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_18_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_18_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_18_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_18_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_18_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_18_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_18_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_18_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_18_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_18_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_18_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_18_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_18_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_18_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_18_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_18_string = "REMUW ";
      default : tmp_alu_ctrl_data_18_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_19)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_19_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_19_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_19_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_19_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_19_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_19_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_19_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_19_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_19_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_19_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_19_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_19_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_19_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_19_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_19_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_19_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_19_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_19_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_19_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_19_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_19_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_19_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_19_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_19_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_19_string = "REMUW ";
      default : tmp_alu_ctrl_data_19_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_20)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_20_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_20_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_20_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_20_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_20_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_20_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_20_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_20_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_20_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_20_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_20_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_20_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_20_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_20_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_20_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_20_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_20_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_20_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_20_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_20_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_20_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_20_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_20_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_20_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_20_string = "REMUW ";
      default : tmp_alu_ctrl_data_20_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_21)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_21_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_21_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_21_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_21_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_21_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_21_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_21_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_21_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_21_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_21_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_21_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_21_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_21_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_21_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_21_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_21_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_21_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_21_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_21_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_21_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_21_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_21_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_21_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_21_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_21_string = "REMUW ";
      default : tmp_alu_ctrl_data_21_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_22)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_22_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_22_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_22_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_22_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_22_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_22_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_22_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_22_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_22_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_22_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_22_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_22_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_22_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_22_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_22_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_22_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_22_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_22_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_22_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_22_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_22_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_22_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_22_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_22_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_22_string = "REMUW ";
      default : tmp_alu_ctrl_data_22_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_ctrl_data_23)
      AluCtrlEnum_IDLE : tmp_alu_ctrl_data_23_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_ctrl_data_23_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_ctrl_data_23_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_ctrl_data_23_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_ctrl_data_23_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_ctrl_data_23_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_ctrl_data_23_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_ctrl_data_23_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_ctrl_data_23_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_ctrl_data_23_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_ctrl_data_23_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_ctrl_data_23_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_ctrl_data_23_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_ctrl_data_23_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_ctrl_data_23_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_ctrl_data_23_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_ctrl_data_23_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_ctrl_data_23_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_ctrl_data_23_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_ctrl_data_23_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_ctrl_data_23_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_ctrl_data_23_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_ctrl_data_23_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_ctrl_data_23_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_ctrl_data_23_string = "REMUW ";
      default : tmp_alu_ctrl_data_23_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_string = "CSR  ";
      default : tmp_bju_ctrl_data_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_1)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_1_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_1_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_1_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_1_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_1_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_1_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_1_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_1_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_1_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_1_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_1_string = "CSR  ";
      default : tmp_bju_ctrl_data_1_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_2)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_2_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_2_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_2_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_2_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_2_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_2_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_2_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_2_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_2_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_2_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_2_string = "CSR  ";
      default : tmp_bju_ctrl_data_2_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_3)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_3_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_3_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_3_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_3_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_3_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_3_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_3_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_3_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_3_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_3_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_3_string = "CSR  ";
      default : tmp_bju_ctrl_data_3_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_4)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_4_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_4_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_4_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_4_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_4_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_4_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_4_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_4_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_4_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_4_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_4_string = "CSR  ";
      default : tmp_bju_ctrl_data_4_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_5)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_5_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_5_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_5_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_5_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_5_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_5_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_5_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_5_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_5_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_5_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_5_string = "CSR  ";
      default : tmp_bju_ctrl_data_5_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_6)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_6_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_6_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_6_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_6_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_6_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_6_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_6_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_6_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_6_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_6_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_6_string = "CSR  ";
      default : tmp_bju_ctrl_data_6_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_7)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_7_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_7_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_7_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_7_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_7_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_7_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_7_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_7_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_7_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_7_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_7_string = "CSR  ";
      default : tmp_bju_ctrl_data_7_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_8)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_8_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_8_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_8_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_8_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_8_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_8_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_8_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_8_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_8_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_8_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_8_string = "CSR  ";
      default : tmp_bju_ctrl_data_8_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_ctrl_data_9)
      BjuCtrlEnum_IDLE : tmp_bju_ctrl_data_9_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_ctrl_data_9_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_ctrl_data_9_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_ctrl_data_9_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_ctrl_data_9_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_ctrl_data_9_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_ctrl_data_9_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_ctrl_data_9_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_ctrl_data_9_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_ctrl_data_9_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_ctrl_data_9_string = "CSR  ";
      default : tmp_bju_ctrl_data_9_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_string = "CSRRCI";
      default : tmp_exp_ctrl_data_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_1)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_1_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_1_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_1_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_1_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_1_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_1_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_1_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_1_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_1_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_1_string = "CSRRCI";
      default : tmp_exp_ctrl_data_1_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_2)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_2_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_2_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_2_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_2_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_2_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_2_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_2_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_2_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_2_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_2_string = "CSRRCI";
      default : tmp_exp_ctrl_data_2_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_3)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_3_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_3_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_3_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_3_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_3_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_3_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_3_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_3_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_3_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_3_string = "CSRRCI";
      default : tmp_exp_ctrl_data_3_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_4)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_4_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_4_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_4_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_4_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_4_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_4_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_4_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_4_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_4_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_4_string = "CSRRCI";
      default : tmp_exp_ctrl_data_4_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_5)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_5_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_5_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_5_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_5_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_5_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_5_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_5_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_5_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_5_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_5_string = "CSRRCI";
      default : tmp_exp_ctrl_data_5_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_6)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_6_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_6_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_6_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_6_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_6_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_6_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_6_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_6_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_6_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_6_string = "CSRRCI";
      default : tmp_exp_ctrl_data_6_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_7)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_7_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_7_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_7_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_7_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_7_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_7_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_7_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_7_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_7_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_7_string = "CSRRCI";
      default : tmp_exp_ctrl_data_7_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_exp_ctrl_data_8)
      ExpCtrlEnum_IDLE : tmp_exp_ctrl_data_8_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_exp_ctrl_data_8_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_exp_ctrl_data_8_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_exp_ctrl_data_8_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_exp_ctrl_data_8_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_exp_ctrl_data_8_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_exp_ctrl_data_8_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_exp_ctrl_data_8_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_exp_ctrl_data_8_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_exp_ctrl_data_8_string = "CSRRCI";
      default : tmp_exp_ctrl_data_8_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_string = "SD  ";
      default : tmp_lsu_ctrl_data_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_1)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_1_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_1_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_1_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_1_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_1_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_1_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_1_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_1_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_1_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_1_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_1_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_1_string = "SD  ";
      default : tmp_lsu_ctrl_data_1_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_2)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_2_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_2_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_2_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_2_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_2_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_2_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_2_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_2_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_2_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_2_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_2_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_2_string = "SD  ";
      default : tmp_lsu_ctrl_data_2_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_3)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_3_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_3_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_3_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_3_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_3_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_3_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_3_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_3_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_3_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_3_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_3_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_3_string = "SD  ";
      default : tmp_lsu_ctrl_data_3_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_4)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_4_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_4_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_4_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_4_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_4_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_4_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_4_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_4_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_4_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_4_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_4_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_4_string = "SD  ";
      default : tmp_lsu_ctrl_data_4_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_5)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_5_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_5_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_5_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_5_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_5_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_5_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_5_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_5_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_5_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_5_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_5_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_5_string = "SD  ";
      default : tmp_lsu_ctrl_data_5_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_6)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_6_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_6_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_6_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_6_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_6_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_6_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_6_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_6_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_6_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_6_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_6_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_6_string = "SD  ";
      default : tmp_lsu_ctrl_data_6_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_7)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_7_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_7_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_7_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_7_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_7_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_7_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_7_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_7_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_7_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_7_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_7_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_7_string = "SD  ";
      default : tmp_lsu_ctrl_data_7_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_8)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_8_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_8_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_8_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_8_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_8_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_8_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_8_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_8_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_8_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_8_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_8_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_8_string = "SD  ";
      default : tmp_lsu_ctrl_data_8_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_9)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_9_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_9_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_9_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_9_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_9_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_9_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_9_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_9_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_9_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_9_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_9_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_9_string = "SD  ";
      default : tmp_lsu_ctrl_data_9_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_ctrl_data_10)
      LsuCtrlEnum_IDLE : tmp_lsu_ctrl_data_10_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_ctrl_data_10_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_ctrl_data_10_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_ctrl_data_10_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_ctrl_data_10_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_ctrl_data_10_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_ctrl_data_10_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_ctrl_data_10_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_ctrl_data_10_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_ctrl_data_10_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_ctrl_data_10_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_ctrl_data_10_string = "SD  ";
      default : tmp_lsu_ctrl_data_10_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_alu_micro_op_alu_ctrl_op)
      AluCtrlEnum_IDLE : tmp_alu_micro_op_alu_ctrl_op_string = "IDLE  ";
      AluCtrlEnum_ADD : tmp_alu_micro_op_alu_ctrl_op_string = "ADD   ";
      AluCtrlEnum_SUB : tmp_alu_micro_op_alu_ctrl_op_string = "SUB   ";
      AluCtrlEnum_SLT : tmp_alu_micro_op_alu_ctrl_op_string = "SLT   ";
      AluCtrlEnum_SLTU : tmp_alu_micro_op_alu_ctrl_op_string = "SLTU  ";
      AluCtrlEnum_XOR_1 : tmp_alu_micro_op_alu_ctrl_op_string = "XOR_1 ";
      AluCtrlEnum_SLL_1 : tmp_alu_micro_op_alu_ctrl_op_string = "SLL_1 ";
      AluCtrlEnum_SRL_1 : tmp_alu_micro_op_alu_ctrl_op_string = "SRL_1 ";
      AluCtrlEnum_SRA_1 : tmp_alu_micro_op_alu_ctrl_op_string = "SRA_1 ";
      AluCtrlEnum_AND_1 : tmp_alu_micro_op_alu_ctrl_op_string = "AND_1 ";
      AluCtrlEnum_OR_1 : tmp_alu_micro_op_alu_ctrl_op_string = "OR_1  ";
      AluCtrlEnum_LUI : tmp_alu_micro_op_alu_ctrl_op_string = "LUI   ";
      AluCtrlEnum_MUL : tmp_alu_micro_op_alu_ctrl_op_string = "MUL   ";
      AluCtrlEnum_MULH : tmp_alu_micro_op_alu_ctrl_op_string = "MULH  ";
      AluCtrlEnum_MULHSU : tmp_alu_micro_op_alu_ctrl_op_string = "MULHSU";
      AluCtrlEnum_MULHU : tmp_alu_micro_op_alu_ctrl_op_string = "MULHU ";
      AluCtrlEnum_DIV : tmp_alu_micro_op_alu_ctrl_op_string = "DIV   ";
      AluCtrlEnum_DIVU : tmp_alu_micro_op_alu_ctrl_op_string = "DIVU  ";
      AluCtrlEnum_REM_1 : tmp_alu_micro_op_alu_ctrl_op_string = "REM_1 ";
      AluCtrlEnum_REMU : tmp_alu_micro_op_alu_ctrl_op_string = "REMU  ";
      AluCtrlEnum_MULW : tmp_alu_micro_op_alu_ctrl_op_string = "MULW  ";
      AluCtrlEnum_DIVW : tmp_alu_micro_op_alu_ctrl_op_string = "DIVW  ";
      AluCtrlEnum_DIVUW : tmp_alu_micro_op_alu_ctrl_op_string = "DIVUW ";
      AluCtrlEnum_REMW : tmp_alu_micro_op_alu_ctrl_op_string = "REMW  ";
      AluCtrlEnum_REMUW : tmp_alu_micro_op_alu_ctrl_op_string = "REMUW ";
      default : tmp_alu_micro_op_alu_ctrl_op_string = "??????";
    endcase
  end
  always @(*) begin
    case(tmp_lsu_micro_op_lsu_ctrl_op)
      LsuCtrlEnum_IDLE : tmp_lsu_micro_op_lsu_ctrl_op_string = "IDLE";
      LsuCtrlEnum_LB : tmp_lsu_micro_op_lsu_ctrl_op_string = "LB  ";
      LsuCtrlEnum_LBU : tmp_lsu_micro_op_lsu_ctrl_op_string = "LBU ";
      LsuCtrlEnum_LH : tmp_lsu_micro_op_lsu_ctrl_op_string = "LH  ";
      LsuCtrlEnum_LHU : tmp_lsu_micro_op_lsu_ctrl_op_string = "LHU ";
      LsuCtrlEnum_LW : tmp_lsu_micro_op_lsu_ctrl_op_string = "LW  ";
      LsuCtrlEnum_LWU : tmp_lsu_micro_op_lsu_ctrl_op_string = "LWU ";
      LsuCtrlEnum_LD : tmp_lsu_micro_op_lsu_ctrl_op_string = "LD  ";
      LsuCtrlEnum_SB : tmp_lsu_micro_op_lsu_ctrl_op_string = "SB  ";
      LsuCtrlEnum_SH : tmp_lsu_micro_op_lsu_ctrl_op_string = "SH  ";
      LsuCtrlEnum_SW : tmp_lsu_micro_op_lsu_ctrl_op_string = "SW  ";
      LsuCtrlEnum_SD : tmp_lsu_micro_op_lsu_ctrl_op_string = "SD  ";
      default : tmp_lsu_micro_op_lsu_ctrl_op_string = "????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_micro_op_bju_ctrl_op)
      BjuCtrlEnum_IDLE : tmp_bju_micro_op_bju_ctrl_op_string = "IDLE ";
      BjuCtrlEnum_AUIPC : tmp_bju_micro_op_bju_ctrl_op_string = "AUIPC";
      BjuCtrlEnum_JAL : tmp_bju_micro_op_bju_ctrl_op_string = "JAL  ";
      BjuCtrlEnum_JALR : tmp_bju_micro_op_bju_ctrl_op_string = "JALR ";
      BjuCtrlEnum_BEQ : tmp_bju_micro_op_bju_ctrl_op_string = "BEQ  ";
      BjuCtrlEnum_BNE : tmp_bju_micro_op_bju_ctrl_op_string = "BNE  ";
      BjuCtrlEnum_BLT : tmp_bju_micro_op_bju_ctrl_op_string = "BLT  ";
      BjuCtrlEnum_BGE : tmp_bju_micro_op_bju_ctrl_op_string = "BGE  ";
      BjuCtrlEnum_BLTU : tmp_bju_micro_op_bju_ctrl_op_string = "BLTU ";
      BjuCtrlEnum_BGEU : tmp_bju_micro_op_bju_ctrl_op_string = "BGEU ";
      BjuCtrlEnum_CSR : tmp_bju_micro_op_bju_ctrl_op_string = "CSR  ";
      default : tmp_bju_micro_op_bju_ctrl_op_string = "?????";
    endcase
  end
  always @(*) begin
    case(tmp_bju_micro_op_exp_ctrl_op)
      ExpCtrlEnum_IDLE : tmp_bju_micro_op_exp_ctrl_op_string = "IDLE  ";
      ExpCtrlEnum_ECALL : tmp_bju_micro_op_exp_ctrl_op_string = "ECALL ";
      ExpCtrlEnum_EBREAK : tmp_bju_micro_op_exp_ctrl_op_string = "EBREAK";
      ExpCtrlEnum_MRET : tmp_bju_micro_op_exp_ctrl_op_string = "MRET  ";
      ExpCtrlEnum_CSRRW : tmp_bju_micro_op_exp_ctrl_op_string = "CSRRW ";
      ExpCtrlEnum_CSRRS : tmp_bju_micro_op_exp_ctrl_op_string = "CSRRS ";
      ExpCtrlEnum_CSRRC : tmp_bju_micro_op_exp_ctrl_op_string = "CSRRC ";
      ExpCtrlEnum_CSRRWI : tmp_bju_micro_op_exp_ctrl_op_string = "CSRRWI";
      ExpCtrlEnum_CSRRSI : tmp_bju_micro_op_exp_ctrl_op_string = "CSRRSI";
      ExpCtrlEnum_CSRRCI : tmp_bju_micro_op_exp_ctrl_op_string = "CSRRCI";
      default : tmp_bju_micro_op_exp_ctrl_op_string = "??????";
    endcase
  end
  `endif

  assign opcode = instr[6 : 0]; // @ BaseType.scala l299
  assign rd = instr[11 : 7]; // @ BaseType.scala l299
  assign rs1 = instr[19 : 15]; // @ BaseType.scala l299
  assign rs2 = instr[24 : 20]; // @ BaseType.scala l299
  assign func3 = instr[14 : 12]; // @ BaseType.scala l299
  assign func7 = instr[31 : 25]; // @ BaseType.scala l299
  assign csr = instr[31 : 20]; // @ BaseType.scala l299
  assign op_is_imm = (opcode == 7'h13); // @ BaseType.scala l305
  assign op_is_alu = (opcode == 7'h33); // @ BaseType.scala l305
  assign op_is_load = (opcode == 7'h03); // @ BaseType.scala l305
  assign op_is_store = (opcode == 7'h23); // @ BaseType.scala l305
  assign op_is_jal = (opcode == 7'h6f); // @ BaseType.scala l305
  assign op_is_jalr = (opcode == 7'h67); // @ BaseType.scala l305
  assign op_is_branch = (opcode == 7'h63); // @ BaseType.scala l305
  assign op_is_lui = (opcode == 7'h37); // @ BaseType.scala l305
  assign op_is_auipc = (opcode == 7'h17); // @ BaseType.scala l305
  assign op_is_fence = (opcode == 7'h0f); // @ BaseType.scala l305
  assign op_is_sys = (opcode == 7'h73); // @ BaseType.scala l305
  assign op_is_word = (opcode == 7'h3b); // @ BaseType.scala l305
  assign op_is_wordi = (opcode == 7'h1b); // @ BaseType.scala l305
  assign func3_is_000 = (func3 == 3'b000); // @ BaseType.scala l305
  assign func3_is_001 = (func3 == 3'b001); // @ BaseType.scala l305
  assign func3_is_010 = (func3 == 3'b010); // @ BaseType.scala l305
  assign func3_is_011 = (func3 == 3'b011); // @ BaseType.scala l305
  assign func3_is_100 = (func3 == 3'b100); // @ BaseType.scala l305
  assign func3_is_101 = (func3 == 3'b101); // @ BaseType.scala l305
  assign func3_is_110 = (func3 == 3'b110); // @ BaseType.scala l305
  assign func3_is_111 = (func3 == 3'b111); // @ BaseType.scala l305
  assign func7_is_0000000 = (func7 == 7'h0); // @ BaseType.scala l305
  assign func7_is_0100000 = (func7 == 7'h20); // @ BaseType.scala l305
  assign func7_is_0011000 = (func7 == 7'h18); // @ BaseType.scala l305
  assign func7_is_0000001 = (func7 == 7'h01); // @ BaseType.scala l305
  assign instr_high_6bit_is_000000 = (instr[31 : 26] == 6'h0); // @ BaseType.scala l305
  assign instr_high_6bit_is_010000 = (instr[31 : 26] == 6'h10); // @ BaseType.scala l305
  assign add = ((op_is_alu && func3_is_000) && func7_is_0000000); // @ BaseType.scala l305
  assign and_1 = ((op_is_alu && func3_is_111) && func7_is_0000000); // @ BaseType.scala l305
  assign or_1 = ((op_is_alu && func3_is_110) && func7_is_0000000); // @ BaseType.scala l305
  assign sll_1 = ((op_is_alu && func3_is_001) && func7_is_0000000); // @ BaseType.scala l305
  assign slt = ((op_is_alu && func3_is_010) && func7_is_0000000); // @ BaseType.scala l305
  assign sltu = ((op_is_alu && func3_is_011) && func7_is_0000000); // @ BaseType.scala l305
  assign sra_1 = ((op_is_alu && func3_is_101) && func7_is_0100000); // @ BaseType.scala l305
  assign srl_1 = ((op_is_alu && func3_is_101) && func7_is_0000000); // @ BaseType.scala l305
  assign sub = ((op_is_alu && func3_is_000) && func7_is_0100000); // @ BaseType.scala l305
  assign xor_1 = ((op_is_alu && func3_is_100) && func7_is_0000000); // @ BaseType.scala l305
  assign subw = ((op_is_word && func3_is_000) && func7_is_0100000); // @ BaseType.scala l305
  assign srlw = ((op_is_word && func3_is_101) && func7_is_0000000); // @ BaseType.scala l305
  assign sraw = ((op_is_word && func3_is_101) && func7_is_0100000); // @ BaseType.scala l305
  assign addw = ((op_is_word && func3_is_000) && func7_is_0000000); // @ BaseType.scala l305
  assign sllw = ((op_is_word && func3_is_001) && func7_is_0000000); // @ BaseType.scala l305
  assign addi = (op_is_imm && func3_is_000); // @ BaseType.scala l305
  assign andi = (op_is_imm && func3_is_111); // @ BaseType.scala l305
  assign ori = (op_is_imm && func3_is_110); // @ BaseType.scala l305
  assign slli = ((op_is_imm && func3_is_001) && instr_high_6bit_is_000000); // @ BaseType.scala l305
  assign slti = (op_is_imm && func3_is_010); // @ BaseType.scala l305
  assign sltiu = (op_is_imm && func3_is_011); // @ BaseType.scala l305
  assign srai = ((op_is_imm && func3_is_101) && instr_high_6bit_is_010000); // @ BaseType.scala l305
  assign srli = ((op_is_imm && func3_is_101) && instr_high_6bit_is_000000); // @ BaseType.scala l305
  assign xori = (op_is_imm && func3_is_100); // @ BaseType.scala l305
  assign srliw = ((op_is_wordi && func3_is_101) && instr_high_6bit_is_000000); // @ BaseType.scala l305
  assign sraiw = ((op_is_wordi && func3_is_101) && instr_high_6bit_is_010000); // @ BaseType.scala l305
  assign addiw = (op_is_wordi && func3_is_000); // @ BaseType.scala l305
  assign slliw = ((op_is_wordi && func3_is_001) && instr_high_6bit_is_000000); // @ BaseType.scala l305
  assign mul = ((op_is_alu && func3_is_000) && func7_is_0000001); // @ BaseType.scala l305
  assign mulh = ((op_is_alu && func3_is_001) && func7_is_0000001); // @ BaseType.scala l305
  assign mulhsu = ((op_is_alu && func3_is_010) && func7_is_0000001); // @ BaseType.scala l305
  assign mulhu = ((op_is_alu && func3_is_011) && func7_is_0000001); // @ BaseType.scala l305
  assign div = ((op_is_alu && func3_is_100) && func7_is_0000001); // @ BaseType.scala l305
  assign divu = ((op_is_alu && func3_is_101) && func7_is_0000001); // @ BaseType.scala l305
  assign rem_1 = ((op_is_alu && func3_is_110) && func7_is_0000001); // @ BaseType.scala l305
  assign remu = ((op_is_alu && func3_is_111) && func7_is_0000001); // @ BaseType.scala l305
  assign mulw = ((op_is_word && func3_is_000) && func7_is_0000001); // @ BaseType.scala l305
  assign divw = ((op_is_word && func3_is_100) && func7_is_0000001); // @ BaseType.scala l305
  assign divuw = ((op_is_word && func3_is_101) && func7_is_0000001); // @ BaseType.scala l305
  assign remw = ((op_is_word && func3_is_110) && func7_is_0000001); // @ BaseType.scala l305
  assign remuw = ((op_is_word && func3_is_111) && func7_is_0000001); // @ BaseType.scala l305
  assign alu_add = (((add || addi) || addw) || addiw); // @ BaseType.scala l305
  assign alu_sub = (sub || subw); // @ BaseType.scala l305
  assign alu_slt = (slt || slti); // @ BaseType.scala l305
  assign alu_sltu = (sltu || sltiu); // @ BaseType.scala l305
  assign alu_xor = (xor_1 || xori); // @ BaseType.scala l305
  assign alu_sll = (((sll_1 || slli) || sllw) || slliw); // @ BaseType.scala l305
  assign alu_srl = (((srl_1 || srli) || srlw) || srliw); // @ BaseType.scala l305
  assign alu_sra = (((sra_1 || srai) || sraw) || sraiw); // @ BaseType.scala l305
  assign alu_and = (and_1 || andi); // @ BaseType.scala l305
  assign alu_or = (or_1 || ori); // @ BaseType.scala l305
  assign lb = (op_is_load && func3_is_000); // @ BaseType.scala l305
  assign lbu = (op_is_load && func3_is_100); // @ BaseType.scala l305
  assign ld = (op_is_load && func3_is_011); // @ BaseType.scala l305
  assign lh = (op_is_load && func3_is_001); // @ BaseType.scala l305
  assign lhu = (op_is_load && func3_is_101); // @ BaseType.scala l305
  assign lw = (op_is_load && func3_is_010); // @ BaseType.scala l305
  assign lwu = (op_is_load && func3_is_110); // @ BaseType.scala l305
  assign sb = (op_is_store && func3_is_000); // @ BaseType.scala l305
  assign sd = (op_is_store && func3_is_011); // @ BaseType.scala l305
  assign sh = (op_is_store && func3_is_001); // @ BaseType.scala l305
  assign sw = (op_is_store && func3_is_010); // @ BaseType.scala l305
  assign ebreak = (((op_is_sys && func3_is_000) && func7_is_0000000) && (rs2 == 5'h01)); // @ BaseType.scala l305
  assign ecall = (((op_is_sys && func3_is_000) && func7_is_0000000) && (rs2 == 5'h0)); // @ BaseType.scala l305
  assign mret = (((op_is_sys && func3_is_000) && func7_is_0011000) && (rs2 == 5'h02)); // @ BaseType.scala l305
  assign csrrw = (op_is_sys && func3_is_001); // @ BaseType.scala l305
  assign csrrs = (op_is_sys && func3_is_010); // @ BaseType.scala l305
  assign csrrc = (op_is_sys && func3_is_011); // @ BaseType.scala l305
  assign csrrwi = (op_is_sys && func3_is_101); // @ BaseType.scala l305
  assign csrrsi = (op_is_sys && func3_is_110); // @ BaseType.scala l305
  assign csrrci = (op_is_sys && func3_is_111); // @ BaseType.scala l305
  assign csri = ((csrrwi || csrrsi) || csrrci); // @ BaseType.scala l305
  assign csr_op = (((csri || csrrw) || csrrs) || csrrc); // @ BaseType.scala l305
  assign beq = (op_is_branch && func3_is_000); // @ BaseType.scala l305
  assign bge = (op_is_branch && func3_is_101); // @ BaseType.scala l305
  assign bgeu = (op_is_branch && func3_is_111); // @ BaseType.scala l305
  assign blt = (op_is_branch && func3_is_100); // @ BaseType.scala l305
  assign bltu = (op_is_branch && func3_is_110); // @ BaseType.scala l305
  assign bne = (op_is_branch && func3_is_001); // @ BaseType.scala l305
  assign csr_imm = {59'h0,rs1}; // @ BaseType.scala l299
  assign tmp_imm_data = tmp_tmp_imm_data[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_imm_data_1[31] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[30] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[29] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[28] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[27] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[26] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[25] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[24] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[23] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[22] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[21] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[20] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[19] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[18] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[17] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[16] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[15] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[14] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[13] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[12] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[11] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[10] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[9] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[8] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[7] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[6] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[5] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[4] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[3] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[2] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[1] = tmp_imm_data; // @ Literal.scala l87
    tmp_imm_data_1[0] = tmp_imm_data; // @ Literal.scala l87
  end

  assign tmp_imm_data_2 = tmp_tmp_imm_data_2[19]; // @ BaseType.scala l305
  always @(*) begin
    tmp_imm_data_3[42] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[41] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[40] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[39] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[38] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[37] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[36] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[35] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[34] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[33] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[32] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[31] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[30] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[29] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[28] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[27] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[26] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[25] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[24] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[23] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[22] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[21] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[20] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[19] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[18] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[17] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[16] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[15] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[14] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[13] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[12] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[11] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[10] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[9] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[8] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[7] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[6] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[5] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[4] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[3] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[2] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[1] = tmp_imm_data_2; // @ Literal.scala l87
    tmp_imm_data_3[0] = tmp_imm_data_2; // @ Literal.scala l87
  end

  assign tmp_imm_data_4 = tmp_tmp_imm_data_4[11]; // @ BaseType.scala l305
  always @(*) begin
    tmp_imm_data_5[50] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[49] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[48] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[47] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[46] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[45] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[44] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[43] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[42] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[41] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[40] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[39] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[38] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[37] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[36] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[35] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[34] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[33] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[32] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[31] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[30] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[29] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[28] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[27] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[26] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[25] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[24] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[23] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[22] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[21] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[20] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[19] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[18] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[17] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[16] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[15] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[14] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[13] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[12] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[11] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[10] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[9] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[8] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[7] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[6] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[5] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[4] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[3] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[2] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[1] = tmp_imm_data_4; // @ Literal.scala l87
    tmp_imm_data_5[0] = tmp_imm_data_4; // @ Literal.scala l87
  end

  assign tmp_imm_data_6 = tmp_tmp_imm_data_6[11]; // @ BaseType.scala l305
  always @(*) begin
    tmp_imm_data_7[51] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[50] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[49] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[48] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[47] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[46] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[45] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[44] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[43] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[42] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[41] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[40] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[39] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[38] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[37] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[36] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[35] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[34] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[33] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[32] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[31] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[30] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[29] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[28] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[27] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[26] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[25] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[24] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[23] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[22] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[21] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[20] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[19] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[18] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[17] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[16] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[15] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[14] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[13] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[12] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[11] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[10] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[9] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[8] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[7] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[6] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[5] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[4] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[3] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[2] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[1] = tmp_imm_data_6; // @ Literal.scala l87
    tmp_imm_data_7[0] = tmp_imm_data_6; // @ Literal.scala l87
  end

  assign tmp_imm_data_8 = instr[31]; // @ BaseType.scala l305
  always @(*) begin
    tmp_imm_data_9[51] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[50] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[49] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[48] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[47] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[46] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[45] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[44] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[43] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[42] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[41] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[40] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[39] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[38] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[37] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[36] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[35] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[34] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[33] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[32] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[31] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[30] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[29] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[28] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[27] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[26] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[25] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[24] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[23] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[22] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[21] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[20] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[19] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[18] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[17] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[16] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[15] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[14] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[13] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[12] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[11] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[10] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[9] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[8] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[7] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[6] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[5] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[4] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[3] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[2] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[1] = tmp_imm_data_8; // @ Literal.scala l87
    tmp_imm_data_9[0] = tmp_imm_data_8; // @ Literal.scala l87
  end

  assign imm_data = {{{{{{tmp_imm_data_1,{tmp_imm_data_10,tmp_imm_data_11}},{{tmp_imm_data_3,tmp_imm_data_12},tmp_imm_data_13}},{{tmp_imm_data_5,{tmp_imm_data_14,tmp_imm_data_15}},1'b0}},{tmp_imm_data_7,{instr[31 : 25],instr[11 : 7]}}},{tmp_imm_data_9,instr[31 : 20]}},csr_imm}; // @ BaseType.scala l299
  assign imm_type = {{{{{(tmp_imm_type || tmp_imm_type_1),(tmp_imm_type_2 == tmp_imm_type_3)},(instr[6 : 0] == 7'h63)},(instr[6 : 0] == 7'h23)},((((tmp_imm_type_4 == tmp_imm_type_5) || (tmp_imm_type_6 == tmp_imm_type_7)) || (instr[6 : 0] == 7'h03)) || (instr[6 : 0] == 7'h67))},csri}; // @ BaseType.scala l299
  assign tmp_imm = imm_type[0]; // @ BaseType.scala l305
  assign tmp_imm_1 = imm_type[1]; // @ BaseType.scala l305
  assign tmp_imm_2 = imm_type[2]; // @ BaseType.scala l305
  assign tmp_imm_3 = imm_type[3]; // @ BaseType.scala l305
  assign tmp_imm_4 = imm_type[4]; // @ BaseType.scala l305
  assign tmp_imm_5 = imm_type[5]; // @ BaseType.scala l305
  assign imm = (((((tmp_imm_6 | tmp_imm_47) | (tmp_imm_88 & tmp_imm_89)) | (imm_data[255 : 192] & {tmp_imm_130,tmp_imm_131})) | (imm_data[319 : 256] & {tmp_imm_4,{tmp_imm_172,tmp_imm_173}})) | (imm_data[383 : 320] & {tmp_imm_5,{tmp_imm_5,{tmp_imm_214,tmp_imm_215}}})); // @ Decode.scala l179
  assign alu_ctrl_sel = {{{{{{{{{{{tmp_alu_ctrl_sel,tmp_alu_ctrl_sel_3},alu_or},alu_and},alu_sra},alu_srl},alu_sll},alu_xor},alu_sltu},alu_slt},alu_sub},alu_add}; // @ BaseType.scala l299
  assign tmp_alu_ctrl_data = AluCtrlEnum_REMUW; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_1 = AluCtrlEnum_REMW; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_2 = AluCtrlEnum_DIVUW; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_3 = AluCtrlEnum_DIVW; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_4 = AluCtrlEnum_MULW; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_5 = AluCtrlEnum_REMU; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_6 = AluCtrlEnum_REM_1; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_7 = AluCtrlEnum_DIVU; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_8 = AluCtrlEnum_DIV; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_9 = AluCtrlEnum_MULHU; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_10 = AluCtrlEnum_MULHSU; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_11 = AluCtrlEnum_MULH; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_12 = AluCtrlEnum_MUL; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_13 = AluCtrlEnum_LUI; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_14 = AluCtrlEnum_OR_1; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_15 = AluCtrlEnum_AND_1; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_16 = AluCtrlEnum_SRA_1; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_17 = AluCtrlEnum_SRL_1; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_18 = AluCtrlEnum_SLL_1; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_19 = AluCtrlEnum_XOR_1; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_20 = AluCtrlEnum_SLTU; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_21 = AluCtrlEnum_SLT; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_22 = AluCtrlEnum_SUB; // @ Enum.scala l47
  assign tmp_alu_ctrl_data_23 = AluCtrlEnum_ADD; // @ Enum.scala l47
  assign alu_ctrl_data = {{{{{{{{{{{tmp_alu_ctrl_data_24,tmp_alu_ctrl_data_27},tmp_alu_ctrl_data_14},tmp_alu_ctrl_data_15},tmp_alu_ctrl_data_16},tmp_alu_ctrl_data_17},tmp_alu_ctrl_data_18},tmp_alu_ctrl_data_19},tmp_alu_ctrl_data_20},tmp_alu_ctrl_data_21},tmp_alu_ctrl_data_22},tmp_alu_ctrl_data_23}; // @ BaseType.scala l299
  assign tmp_alu_ctrl_op = alu_ctrl_sel[0]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_1 = alu_ctrl_sel[1]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_2 = alu_ctrl_sel[2]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_3 = alu_ctrl_sel[3]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_4 = alu_ctrl_sel[4]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_5 = alu_ctrl_sel[5]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_6 = alu_ctrl_sel[6]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_7 = alu_ctrl_sel[7]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_8 = alu_ctrl_sel[8]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_9 = alu_ctrl_sel[9]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_10 = alu_ctrl_sel[10]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_11 = alu_ctrl_sel[11]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_12 = alu_ctrl_sel[12]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_13 = alu_ctrl_sel[13]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_14 = alu_ctrl_sel[14]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_15 = alu_ctrl_sel[15]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_16 = alu_ctrl_sel[16]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_17 = alu_ctrl_sel[17]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_18 = alu_ctrl_sel[18]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_19 = alu_ctrl_sel[19]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_20 = alu_ctrl_sel[20]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_21 = alu_ctrl_sel[21]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_22 = alu_ctrl_sel[22]; // @ BaseType.scala l305
  assign tmp_alu_ctrl_op_23 = alu_ctrl_sel[23]; // @ BaseType.scala l305
  assign alu_ctrl_op = (((((tmp_alu_ctrl_op_24 | tmp_alu_ctrl_op_99) | (tmp_alu_ctrl_op_102 & tmp_alu_ctrl_op_103)) | (alu_ctrl_data[109 : 105] & {tmp_alu_ctrl_op_106,tmp_alu_ctrl_op_107})) | (alu_ctrl_data[114 : 110] & {tmp_alu_ctrl_op_22,{tmp_alu_ctrl_op_110,tmp_alu_ctrl_op_111}})) | (alu_ctrl_data[119 : 115] & {tmp_alu_ctrl_op_23,{tmp_alu_ctrl_op_23,{tmp_alu_ctrl_op_112,tmp_alu_ctrl_op_113}}})); // @ BaseType.scala l299
  assign bju_ctrl_sel = {{{{{{{{{csr_op,bgeu},bltu},bge},blt},bne},beq},op_is_jalr},op_is_jal},op_is_auipc}; // @ BaseType.scala l299
  assign tmp_bju_ctrl_data = BjuCtrlEnum_CSR; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_1 = BjuCtrlEnum_BGEU; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_2 = BjuCtrlEnum_BLTU; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_3 = BjuCtrlEnum_BGE; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_4 = BjuCtrlEnum_BLT; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_5 = BjuCtrlEnum_BNE; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_6 = BjuCtrlEnum_BEQ; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_7 = BjuCtrlEnum_JALR; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_8 = BjuCtrlEnum_JAL; // @ Enum.scala l47
  assign tmp_bju_ctrl_data_9 = BjuCtrlEnum_AUIPC; // @ Enum.scala l47
  assign bju_ctrl_data = {{{{{{{{{tmp_bju_ctrl_data,tmp_bju_ctrl_data_1},tmp_bju_ctrl_data_2},tmp_bju_ctrl_data_3},tmp_bju_ctrl_data_4},tmp_bju_ctrl_data_5},tmp_bju_ctrl_data_6},tmp_bju_ctrl_data_7},tmp_bju_ctrl_data_8},tmp_bju_ctrl_data_9}; // @ BaseType.scala l299
  assign tmp_bju_ctrl_op = bju_ctrl_sel[0]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_1 = bju_ctrl_sel[1]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_2 = bju_ctrl_sel[2]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_3 = bju_ctrl_sel[3]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_4 = bju_ctrl_sel[4]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_5 = bju_ctrl_sel[5]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_6 = bju_ctrl_sel[6]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_7 = bju_ctrl_sel[7]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_8 = bju_ctrl_sel[8]; // @ BaseType.scala l305
  assign tmp_bju_ctrl_op_9 = bju_ctrl_sel[9]; // @ BaseType.scala l305
  assign bju_ctrl_op = (((((tmp_bju_ctrl_op_10 | tmp_bju_ctrl_op_25) | (tmp_bju_ctrl_op_28 & tmp_bju_ctrl_op_29)) | (bju_ctrl_data[31 : 28] & {tmp_bju_ctrl_op_32,tmp_bju_ctrl_op_33})) | (bju_ctrl_data[35 : 32] & {tmp_bju_ctrl_op_8,{tmp_bju_ctrl_op_34,tmp_bju_ctrl_op_35}})) | (bju_ctrl_data[39 : 36] & {tmp_bju_ctrl_op_9,{tmp_bju_ctrl_op_9,{tmp_bju_ctrl_op_36,tmp_bju_ctrl_op_37}}})); // @ BaseType.scala l299
  assign exp_ctrl_sel = {{{{{{{{csrrci,csrrsi},csrrwi},csrrc},csrrs},csrrw},mret},ebreak},ecall}; // @ BaseType.scala l299
  assign tmp_exp_ctrl_data = ExpCtrlEnum_CSRRCI; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_1 = ExpCtrlEnum_CSRRSI; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_2 = ExpCtrlEnum_CSRRWI; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_3 = ExpCtrlEnum_CSRRC; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_4 = ExpCtrlEnum_CSRRS; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_5 = ExpCtrlEnum_CSRRW; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_6 = ExpCtrlEnum_MRET; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_7 = ExpCtrlEnum_EBREAK; // @ Enum.scala l47
  assign tmp_exp_ctrl_data_8 = ExpCtrlEnum_ECALL; // @ Enum.scala l47
  assign exp_ctrl_data = {{{{{{{{tmp_exp_ctrl_data,tmp_exp_ctrl_data_1},tmp_exp_ctrl_data_2},tmp_exp_ctrl_data_3},tmp_exp_ctrl_data_4},tmp_exp_ctrl_data_5},tmp_exp_ctrl_data_6},tmp_exp_ctrl_data_7},tmp_exp_ctrl_data_8}; // @ BaseType.scala l299
  assign tmp_exp_ctrl_op = exp_ctrl_sel[0]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_1 = exp_ctrl_sel[1]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_2 = exp_ctrl_sel[2]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_3 = exp_ctrl_sel[3]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_4 = exp_ctrl_sel[4]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_5 = exp_ctrl_sel[5]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_6 = exp_ctrl_sel[6]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_7 = exp_ctrl_sel[7]; // @ BaseType.scala l305
  assign tmp_exp_ctrl_op_8 = exp_ctrl_sel[8]; // @ BaseType.scala l305
  assign exp_ctrl_op = (((((tmp_exp_ctrl_op_9 | tmp_exp_ctrl_op_22) | (tmp_exp_ctrl_op_25 & tmp_exp_ctrl_op_26)) | (exp_ctrl_data[27 : 24] & {tmp_exp_ctrl_op_29,tmp_exp_ctrl_op_30})) | (exp_ctrl_data[31 : 28] & {tmp_exp_ctrl_op_7,{tmp_exp_ctrl_op_31,tmp_exp_ctrl_op_32}})) | (exp_ctrl_data[35 : 32] & {tmp_exp_ctrl_op_8,{tmp_exp_ctrl_op_8,{tmp_exp_ctrl_op_33,tmp_exp_ctrl_op_34}}})); // @ BaseType.scala l299
  assign lsu_ctrl_sel = {{{{{{{{{{sd,sw},sh},sb},ld},lwu},lw},lhu},lh},lbu},lb}; // @ BaseType.scala l299
  assign tmp_lsu_ctrl_data = LsuCtrlEnum_SD; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_1 = LsuCtrlEnum_SW; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_2 = LsuCtrlEnum_SH; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_3 = LsuCtrlEnum_SB; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_4 = LsuCtrlEnum_LD; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_5 = LsuCtrlEnum_LWU; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_6 = LsuCtrlEnum_LW; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_7 = LsuCtrlEnum_LHU; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_8 = LsuCtrlEnum_LH; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_9 = LsuCtrlEnum_LBU; // @ Enum.scala l47
  assign tmp_lsu_ctrl_data_10 = LsuCtrlEnum_LB; // @ Enum.scala l47
  assign lsu_ctrl_data = {{{{{{{{{{tmp_lsu_ctrl_data,tmp_lsu_ctrl_data_1},tmp_lsu_ctrl_data_2},tmp_lsu_ctrl_data_3},tmp_lsu_ctrl_data_4},tmp_lsu_ctrl_data_5},tmp_lsu_ctrl_data_6},tmp_lsu_ctrl_data_7},tmp_lsu_ctrl_data_8},tmp_lsu_ctrl_data_9},tmp_lsu_ctrl_data_10}; // @ BaseType.scala l299
  assign tmp_lsu_ctrl_op = lsu_ctrl_sel[0]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_1 = lsu_ctrl_sel[1]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_2 = lsu_ctrl_sel[2]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_3 = lsu_ctrl_sel[3]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_4 = lsu_ctrl_sel[4]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_5 = lsu_ctrl_sel[5]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_6 = lsu_ctrl_sel[6]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_7 = lsu_ctrl_sel[7]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_8 = lsu_ctrl_sel[8]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_9 = lsu_ctrl_sel[9]; // @ BaseType.scala l305
  assign tmp_lsu_ctrl_op_10 = lsu_ctrl_sel[10]; // @ BaseType.scala l305
  assign lsu_ctrl_op = (((((tmp_lsu_ctrl_op_11 | tmp_lsu_ctrl_op_28) | (tmp_lsu_ctrl_op_31 & tmp_lsu_ctrl_op_32)) | (lsu_ctrl_data[35 : 32] & {tmp_lsu_ctrl_op_35,tmp_lsu_ctrl_op_36})) | (lsu_ctrl_data[39 : 36] & {tmp_lsu_ctrl_op_9,{tmp_lsu_ctrl_op_37,tmp_lsu_ctrl_op_38}})) | (lsu_ctrl_data[43 : 40] & {tmp_lsu_ctrl_op_10,{tmp_lsu_ctrl_op_10,{tmp_lsu_ctrl_op_39,tmp_lsu_ctrl_op_40}}})); // @ BaseType.scala l299
  assign rs1_addr = rs1; // @ Decode.scala l232
  assign rs2_addr = rs2; // @ Decode.scala l233
  assign rs1_ren = (! (((instr[6 : 0] == 7'h37) || (instr[6 : 0] == 7'h17)) || (instr[6 : 0] == 7'h6f))); // @ Decode.scala l234
  assign rs2_ren = (! ((((instr[6 : 0] == 7'h37) || (instr[6 : 0] == 7'h17)) || (instr[6 : 0] == 7'h6f)) || ((((instr[6 : 0] == 7'h13) || (instr[6 : 0] == 7'h1b)) || (instr[6 : 0] == 7'h03)) || (instr[6 : 0] == 7'h67)))); // @ Decode.scala l235
  assign rd_wen = ((((((! (instr[6 : 0] == 7'h23)) && (! (instr[6 : 0] == 7'h63))) && (! ebreak)) && (! ecall)) && (! mret)) && (! op_is_fence)); // @ Decode.scala l236
  assign rd_addr = rd; // @ Decode.scala l242
  assign src2_is_imm = (((((((instr[6 : 0] == 7'h13) || (instr[6 : 0] == 7'h1b)) || (instr[6 : 0] == 7'h03)) || (instr[6 : 0] == 7'h67)) || (instr[6 : 0] == 7'h23)) || ((instr[6 : 0] == 7'h37) || (instr[6 : 0] == 7'h17))) || (instr[6 : 0] == 7'h6f)); // @ Decode.scala l243
  assign tmp_alu_micro_op_alu_ctrl_op = alu_ctrl_op; // @ Enum.scala l189
  assign alu_micro_op_alu_ctrl_op = tmp_alu_micro_op_alu_ctrl_op; // @ Enum.scala l191
  assign alu_micro_op_alu_is_word = (op_is_word || op_is_wordi); // @ Decode.scala l249
  assign alu_micro_op_src2_is_imm = src2_is_imm; // @ Decode.scala l250
  assign alu_micro_op_rd_wen = rd_wen; // @ Decode.scala l251
  assign tmp_lsu_micro_op_lsu_ctrl_op = lsu_ctrl_op; // @ Enum.scala l189
  assign lsu_micro_op_lsu_ctrl_op = tmp_lsu_micro_op_lsu_ctrl_op; // @ Enum.scala l191
  assign lsu_micro_op_lsu_is_load = op_is_load; // @ Decode.scala l254
  assign lsu_micro_op_lsu_is_store = op_is_store; // @ Decode.scala l255
  assign lsu_micro_op_src2_is_imm = 1'b0; // @ Decode.scala l256
  assign lsu_micro_op_rd_wen = rd_wen; // @ Decode.scala l257
  assign tmp_bju_micro_op_bju_ctrl_op = bju_ctrl_op; // @ Enum.scala l189
  assign bju_micro_op_bju_ctrl_op = tmp_bju_micro_op_bju_ctrl_op; // @ Enum.scala l191
  assign bju_micro_op_bju_rd_eq_rs1 = (rd == rs1); // @ Decode.scala l260
  assign bju_micro_op_bju_rd_is_link = ((rd == 5'h0) || (rd == 5'h05)); // @ Decode.scala l261
  assign bju_micro_op_bju_rs1_is_link = ((rs1 == 5'h0) || (rs1 == 5'h05)); // @ Decode.scala l262
  assign bju_micro_op_src2_is_imm = src2_is_imm; // @ Decode.scala l263
  assign bju_micro_op_rd_wen = rd_wen; // @ Decode.scala l264
  assign tmp_bju_micro_op_exp_ctrl_op = exp_ctrl_op; // @ Enum.scala l189
  assign bju_micro_op_exp_ctrl_op = tmp_bju_micro_op_exp_ctrl_op; // @ Enum.scala l191
  assign bju_micro_op_exp_csr_addr = csr; // @ Decode.scala l266
  assign bju_micro_op_exp_csr_wen = ((csrrw || csrrs) || csrrc); // @ Decode.scala l267
  always @(*) begin
    if(ecall) begin
      exception = ExceptionEnum_ECALL; // @ Enum.scala l151
    end else begin
      if(ebreak) begin
        exception = ExceptionEnum_EBREAK; // @ Enum.scala l151
      end else begin
        if(mret) begin
          exception = ExceptionEnum_MRET; // @ Enum.scala l151
        end else begin
          exception = ExceptionEnum_IDLE; // @ Enum.scala l151
        end
      end
    end
  end

  always @(*) begin
    if((op_is_load || op_is_store)) begin
      rob_micro_op = RobMicroOp_LSU; // @ Enum.scala l151
    end else begin
      if(((((op_is_imm || op_is_alu) || op_is_lui) || op_is_word) || op_is_wordi)) begin
        rob_micro_op = RobMicroOp_ALU; // @ Enum.scala l151
      end else begin
        if(((((op_is_jal || op_is_jalr) || op_is_branch) || op_is_auipc) || op_is_sys)) begin
          rob_micro_op = RobMicroOp_BJU; // @ Enum.scala l151
        end else begin
          rob_micro_op = RobMicroOp_IDLE; // @ Enum.scala l151
        end
      end
    end
  end


endmodule

module ARF (
  output     [63:0]   read_ports_rs1_data,
  output     [63:0]   read_ports_rs2_data,
  input      [4:0]    read_ports_rs1_addr,
  input      [4:0]    read_ports_rs2_addr,
  input               read_ports_rs1_req,
  input               read_ports_rs2_req,
  input      [63:0]   write_ports_rd_data,
  input      [4:0]    write_ports_rd_addr,
  input               write_ports_rd_wen,
  input               io_axiClk,
  input               cpu_rst
);

  reg        [63:0]   tmp_read_ports_rs1_data;
  reg        [63:0]   tmp_read_ports_rs2_data;
  reg        [63:0]   reg_file_0;
  reg        [63:0]   reg_file_1;
  reg        [63:0]   reg_file_2;
  reg        [63:0]   reg_file_3;
  reg        [63:0]   reg_file_4;
  reg        [63:0]   reg_file_5;
  reg        [63:0]   reg_file_6;
  reg        [63:0]   reg_file_7;
  reg        [63:0]   reg_file_8;
  reg        [63:0]   reg_file_9;
  reg        [63:0]   reg_file_10;
  reg        [63:0]   reg_file_11;
  reg        [63:0]   reg_file_12;
  reg        [63:0]   reg_file_13;
  reg        [63:0]   reg_file_14;
  reg        [63:0]   reg_file_15;
  reg        [63:0]   reg_file_16;
  reg        [63:0]   reg_file_17;
  reg        [63:0]   reg_file_18;
  reg        [63:0]   reg_file_19;
  reg        [63:0]   reg_file_20;
  reg        [63:0]   reg_file_21;
  reg        [63:0]   reg_file_22;
  reg        [63:0]   reg_file_23;
  reg        [63:0]   reg_file_24;
  reg        [63:0]   reg_file_25;
  reg        [63:0]   reg_file_26;
  reg        [63:0]   reg_file_27;
  reg        [63:0]   reg_file_28;
  reg        [63:0]   reg_file_29;
  reg        [63:0]   reg_file_30;
  reg        [63:0]   reg_file_31;
  wire                reg_file_wen_0;
  wire                reg_file_wen_1;
  wire                reg_file_wen_2;
  wire                reg_file_wen_3;
  wire                reg_file_wen_4;
  wire                reg_file_wen_5;
  wire                reg_file_wen_6;
  wire                reg_file_wen_7;
  wire                reg_file_wen_8;
  wire                reg_file_wen_9;
  wire                reg_file_wen_10;
  wire                reg_file_wen_11;
  wire                reg_file_wen_12;
  wire                reg_file_wen_13;
  wire                reg_file_wen_14;
  wire                reg_file_wen_15;
  wire                reg_file_wen_16;
  wire                reg_file_wen_17;
  wire                reg_file_wen_18;
  wire                reg_file_wen_19;
  wire                reg_file_wen_20;
  wire                reg_file_wen_21;
  wire                reg_file_wen_22;
  wire                reg_file_wen_23;
  wire                reg_file_wen_24;
  wire                reg_file_wen_25;
  wire                reg_file_wen_26;
  wire                reg_file_wen_27;
  wire                reg_file_wen_28;
  wire                reg_file_wen_29;
  wire                reg_file_wen_30;
  wire                reg_file_wen_31;
  wire       [63:0]   reg_file_wdata_0;
  wire       [63:0]   reg_file_wdata_1;
  wire       [63:0]   reg_file_wdata_2;
  wire       [63:0]   reg_file_wdata_3;
  wire       [63:0]   reg_file_wdata_4;
  wire       [63:0]   reg_file_wdata_5;
  wire       [63:0]   reg_file_wdata_6;
  wire       [63:0]   reg_file_wdata_7;
  wire       [63:0]   reg_file_wdata_8;
  wire       [63:0]   reg_file_wdata_9;
  wire       [63:0]   reg_file_wdata_10;
  wire       [63:0]   reg_file_wdata_11;
  wire       [63:0]   reg_file_wdata_12;
  wire       [63:0]   reg_file_wdata_13;
  wire       [63:0]   reg_file_wdata_14;
  wire       [63:0]   reg_file_wdata_15;
  wire       [63:0]   reg_file_wdata_16;
  wire       [63:0]   reg_file_wdata_17;
  wire       [63:0]   reg_file_wdata_18;
  wire       [63:0]   reg_file_wdata_19;
  wire       [63:0]   reg_file_wdata_20;
  wire       [63:0]   reg_file_wdata_21;
  wire       [63:0]   reg_file_wdata_22;
  wire       [63:0]   reg_file_wdata_23;
  wire       [63:0]   reg_file_wdata_24;
  wire       [63:0]   reg_file_wdata_25;
  wire       [63:0]   reg_file_wdata_26;
  wire       [63:0]   reg_file_wdata_27;
  wire       [63:0]   reg_file_wdata_28;
  wire       [63:0]   reg_file_wdata_29;
  wire       [63:0]   reg_file_wdata_30;
  wire       [63:0]   reg_file_wdata_31;

  always @(*) begin
    case(read_ports_rs1_addr)
      5'b00000 : tmp_read_ports_rs1_data = reg_file_0;
      5'b00001 : tmp_read_ports_rs1_data = reg_file_1;
      5'b00010 : tmp_read_ports_rs1_data = reg_file_2;
      5'b00011 : tmp_read_ports_rs1_data = reg_file_3;
      5'b00100 : tmp_read_ports_rs1_data = reg_file_4;
      5'b00101 : tmp_read_ports_rs1_data = reg_file_5;
      5'b00110 : tmp_read_ports_rs1_data = reg_file_6;
      5'b00111 : tmp_read_ports_rs1_data = reg_file_7;
      5'b01000 : tmp_read_ports_rs1_data = reg_file_8;
      5'b01001 : tmp_read_ports_rs1_data = reg_file_9;
      5'b01010 : tmp_read_ports_rs1_data = reg_file_10;
      5'b01011 : tmp_read_ports_rs1_data = reg_file_11;
      5'b01100 : tmp_read_ports_rs1_data = reg_file_12;
      5'b01101 : tmp_read_ports_rs1_data = reg_file_13;
      5'b01110 : tmp_read_ports_rs1_data = reg_file_14;
      5'b01111 : tmp_read_ports_rs1_data = reg_file_15;
      5'b10000 : tmp_read_ports_rs1_data = reg_file_16;
      5'b10001 : tmp_read_ports_rs1_data = reg_file_17;
      5'b10010 : tmp_read_ports_rs1_data = reg_file_18;
      5'b10011 : tmp_read_ports_rs1_data = reg_file_19;
      5'b10100 : tmp_read_ports_rs1_data = reg_file_20;
      5'b10101 : tmp_read_ports_rs1_data = reg_file_21;
      5'b10110 : tmp_read_ports_rs1_data = reg_file_22;
      5'b10111 : tmp_read_ports_rs1_data = reg_file_23;
      5'b11000 : tmp_read_ports_rs1_data = reg_file_24;
      5'b11001 : tmp_read_ports_rs1_data = reg_file_25;
      5'b11010 : tmp_read_ports_rs1_data = reg_file_26;
      5'b11011 : tmp_read_ports_rs1_data = reg_file_27;
      5'b11100 : tmp_read_ports_rs1_data = reg_file_28;
      5'b11101 : tmp_read_ports_rs1_data = reg_file_29;
      5'b11110 : tmp_read_ports_rs1_data = reg_file_30;
      default : tmp_read_ports_rs1_data = reg_file_31;
    endcase
  end

  always @(*) begin
    case(read_ports_rs2_addr)
      5'b00000 : tmp_read_ports_rs2_data = reg_file_0;
      5'b00001 : tmp_read_ports_rs2_data = reg_file_1;
      5'b00010 : tmp_read_ports_rs2_data = reg_file_2;
      5'b00011 : tmp_read_ports_rs2_data = reg_file_3;
      5'b00100 : tmp_read_ports_rs2_data = reg_file_4;
      5'b00101 : tmp_read_ports_rs2_data = reg_file_5;
      5'b00110 : tmp_read_ports_rs2_data = reg_file_6;
      5'b00111 : tmp_read_ports_rs2_data = reg_file_7;
      5'b01000 : tmp_read_ports_rs2_data = reg_file_8;
      5'b01001 : tmp_read_ports_rs2_data = reg_file_9;
      5'b01010 : tmp_read_ports_rs2_data = reg_file_10;
      5'b01011 : tmp_read_ports_rs2_data = reg_file_11;
      5'b01100 : tmp_read_ports_rs2_data = reg_file_12;
      5'b01101 : tmp_read_ports_rs2_data = reg_file_13;
      5'b01110 : tmp_read_ports_rs2_data = reg_file_14;
      5'b01111 : tmp_read_ports_rs2_data = reg_file_15;
      5'b10000 : tmp_read_ports_rs2_data = reg_file_16;
      5'b10001 : tmp_read_ports_rs2_data = reg_file_17;
      5'b10010 : tmp_read_ports_rs2_data = reg_file_18;
      5'b10011 : tmp_read_ports_rs2_data = reg_file_19;
      5'b10100 : tmp_read_ports_rs2_data = reg_file_20;
      5'b10101 : tmp_read_ports_rs2_data = reg_file_21;
      5'b10110 : tmp_read_ports_rs2_data = reg_file_22;
      5'b10111 : tmp_read_ports_rs2_data = reg_file_23;
      5'b11000 : tmp_read_ports_rs2_data = reg_file_24;
      5'b11001 : tmp_read_ports_rs2_data = reg_file_25;
      5'b11010 : tmp_read_ports_rs2_data = reg_file_26;
      5'b11011 : tmp_read_ports_rs2_data = reg_file_27;
      5'b11100 : tmp_read_ports_rs2_data = reg_file_28;
      5'b11101 : tmp_read_ports_rs2_data = reg_file_29;
      5'b11110 : tmp_read_ports_rs2_data = reg_file_30;
      default : tmp_read_ports_rs2_data = reg_file_31;
    endcase
  end

  assign reg_file_wen_0 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h0)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_0 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_1 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h01)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_1 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_2 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h02)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_2 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_3 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h03)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_3 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_4 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h04)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_4 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_5 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h05)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_5 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_6 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h06)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_6 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_7 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h07)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_7 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_8 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h08)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_8 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_9 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h09)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_9 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_10 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h0a)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_10 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_11 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h0b)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_11 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_12 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h0c)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_12 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_13 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h0d)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_13 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_14 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h0e)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_14 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_15 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h0f)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_15 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_16 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h10)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_16 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_17 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h11)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_17 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_18 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h12)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_18 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_19 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h13)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_19 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_20 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h14)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_20 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_21 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h15)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_21 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_22 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h16)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_22 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_23 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h17)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_23 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_24 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h18)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_24 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_25 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h19)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_25 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_26 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h1a)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_26 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_27 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h1b)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_27 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_28 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h1c)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_28 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_29 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h1d)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_29 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_30 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h1e)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_30 = write_ports_rd_data; // @ Tables.scala l79
  assign reg_file_wen_31 = ((write_ports_rd_wen && (write_ports_rd_addr == 5'h1f)) && (write_ports_rd_addr != 5'h0)); // @ Tables.scala l78
  assign reg_file_wdata_31 = write_ports_rd_data; // @ Tables.scala l79
  assign read_ports_rs1_data = ((write_ports_rd_wen && (write_ports_rd_addr == read_ports_rs1_addr)) ? write_ports_rd_data : tmp_read_ports_rs1_data); // @ Tables.scala l86
  assign read_ports_rs2_data = ((write_ports_rd_wen && (write_ports_rd_addr == read_ports_rs2_addr)) ? write_ports_rd_data : tmp_read_ports_rs2_data); // @ Tables.scala l87
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      reg_file_0 <= 64'h0; // @ Data.scala l400
      reg_file_1 <= 64'h0; // @ Data.scala l400
      reg_file_2 <= 64'h0; // @ Data.scala l400
      reg_file_3 <= 64'h0; // @ Data.scala l400
      reg_file_4 <= 64'h0; // @ Data.scala l400
      reg_file_5 <= 64'h0; // @ Data.scala l400
      reg_file_6 <= 64'h0; // @ Data.scala l400
      reg_file_7 <= 64'h0; // @ Data.scala l400
      reg_file_8 <= 64'h0; // @ Data.scala l400
      reg_file_9 <= 64'h0; // @ Data.scala l400
      reg_file_10 <= 64'h0; // @ Data.scala l400
      reg_file_11 <= 64'h0; // @ Data.scala l400
      reg_file_12 <= 64'h0; // @ Data.scala l400
      reg_file_13 <= 64'h0; // @ Data.scala l400
      reg_file_14 <= 64'h0; // @ Data.scala l400
      reg_file_15 <= 64'h0; // @ Data.scala l400
      reg_file_16 <= 64'h0; // @ Data.scala l400
      reg_file_17 <= 64'h0; // @ Data.scala l400
      reg_file_18 <= 64'h0; // @ Data.scala l400
      reg_file_19 <= 64'h0; // @ Data.scala l400
      reg_file_20 <= 64'h0; // @ Data.scala l400
      reg_file_21 <= 64'h0; // @ Data.scala l400
      reg_file_22 <= 64'h0; // @ Data.scala l400
      reg_file_23 <= 64'h0; // @ Data.scala l400
      reg_file_24 <= 64'h0; // @ Data.scala l400
      reg_file_25 <= 64'h0; // @ Data.scala l400
      reg_file_26 <= 64'h0; // @ Data.scala l400
      reg_file_27 <= 64'h0; // @ Data.scala l400
      reg_file_28 <= 64'h0; // @ Data.scala l400
      reg_file_29 <= 64'h0; // @ Data.scala l400
      reg_file_30 <= 64'h0; // @ Data.scala l400
      reg_file_31 <= 64'h0; // @ Data.scala l400
    end else begin
      if(reg_file_wen_0) begin
        reg_file_0 <= reg_file_wdata_0; // @ Tables.scala l81
      end
      if(reg_file_wen_1) begin
        reg_file_1 <= reg_file_wdata_1; // @ Tables.scala l81
      end
      if(reg_file_wen_2) begin
        reg_file_2 <= reg_file_wdata_2; // @ Tables.scala l81
      end
      if(reg_file_wen_3) begin
        reg_file_3 <= reg_file_wdata_3; // @ Tables.scala l81
      end
      if(reg_file_wen_4) begin
        reg_file_4 <= reg_file_wdata_4; // @ Tables.scala l81
      end
      if(reg_file_wen_5) begin
        reg_file_5 <= reg_file_wdata_5; // @ Tables.scala l81
      end
      if(reg_file_wen_6) begin
        reg_file_6 <= reg_file_wdata_6; // @ Tables.scala l81
      end
      if(reg_file_wen_7) begin
        reg_file_7 <= reg_file_wdata_7; // @ Tables.scala l81
      end
      if(reg_file_wen_8) begin
        reg_file_8 <= reg_file_wdata_8; // @ Tables.scala l81
      end
      if(reg_file_wen_9) begin
        reg_file_9 <= reg_file_wdata_9; // @ Tables.scala l81
      end
      if(reg_file_wen_10) begin
        reg_file_10 <= reg_file_wdata_10; // @ Tables.scala l81
      end
      if(reg_file_wen_11) begin
        reg_file_11 <= reg_file_wdata_11; // @ Tables.scala l81
      end
      if(reg_file_wen_12) begin
        reg_file_12 <= reg_file_wdata_12; // @ Tables.scala l81
      end
      if(reg_file_wen_13) begin
        reg_file_13 <= reg_file_wdata_13; // @ Tables.scala l81
      end
      if(reg_file_wen_14) begin
        reg_file_14 <= reg_file_wdata_14; // @ Tables.scala l81
      end
      if(reg_file_wen_15) begin
        reg_file_15 <= reg_file_wdata_15; // @ Tables.scala l81
      end
      if(reg_file_wen_16) begin
        reg_file_16 <= reg_file_wdata_16; // @ Tables.scala l81
      end
      if(reg_file_wen_17) begin
        reg_file_17 <= reg_file_wdata_17; // @ Tables.scala l81
      end
      if(reg_file_wen_18) begin
        reg_file_18 <= reg_file_wdata_18; // @ Tables.scala l81
      end
      if(reg_file_wen_19) begin
        reg_file_19 <= reg_file_wdata_19; // @ Tables.scala l81
      end
      if(reg_file_wen_20) begin
        reg_file_20 <= reg_file_wdata_20; // @ Tables.scala l81
      end
      if(reg_file_wen_21) begin
        reg_file_21 <= reg_file_wdata_21; // @ Tables.scala l81
      end
      if(reg_file_wen_22) begin
        reg_file_22 <= reg_file_wdata_22; // @ Tables.scala l81
      end
      if(reg_file_wen_23) begin
        reg_file_23 <= reg_file_wdata_23; // @ Tables.scala l81
      end
      if(reg_file_wen_24) begin
        reg_file_24 <= reg_file_wdata_24; // @ Tables.scala l81
      end
      if(reg_file_wen_25) begin
        reg_file_25 <= reg_file_wdata_25; // @ Tables.scala l81
      end
      if(reg_file_wen_26) begin
        reg_file_26 <= reg_file_wdata_26; // @ Tables.scala l81
      end
      if(reg_file_wen_27) begin
        reg_file_27 <= reg_file_wdata_27; // @ Tables.scala l81
      end
      if(reg_file_wen_28) begin
        reg_file_28 <= reg_file_wdata_28; // @ Tables.scala l81
      end
      if(reg_file_wen_29) begin
        reg_file_29 <= reg_file_wdata_29; // @ Tables.scala l81
      end
      if(reg_file_wen_30) begin
        reg_file_30 <= reg_file_wdata_30; // @ Tables.scala l81
      end
      if(reg_file_wen_31) begin
        reg_file_31 <= reg_file_wdata_31; // @ Tables.scala l81
      end
    end
  end


endmodule

//Sram_3 replaced by Sram

//Sram_2 replaced by Sram

//Sram_1 replaced by Sram

module Sram (
  input               ports_cmd_valid,
  input      [9:0]    ports_cmd_payload_addr,
  input               ports_cmd_payload_wen,
  input      [31:0]   ports_cmd_payload_wdata,
  input      [3:0]    ports_cmd_payload_wstrb,
  output              ports_rsp_valid,
  output     [31:0]   ports_rsp_payload_data,
  input               io_axiClk,
  input               cpu_rst
);

  reg        [31:0]   tmp_mem_port1;
  wire                tmp_mem_port;
  reg                 rsp_valid;
  reg [7:0] mem_symbol0 [0:1023];
  reg [7:0] mem_symbol1 [0:1023];
  reg [7:0] mem_symbol2 [0:1023];
  reg [7:0] mem_symbol3 [0:1023];
  reg [7:0] tmp_memsymbol_read;
  reg [7:0] tmp_memsymbol_read_1;
  reg [7:0] tmp_memsymbol_read_2;
  reg [7:0] tmp_memsymbol_read_3;

  assign tmp_mem_port = (ports_cmd_valid && ports_cmd_payload_wen);
  always @(*) begin
    tmp_mem_port1 = {tmp_memsymbol_read_3, tmp_memsymbol_read_2, tmp_memsymbol_read_1, tmp_memsymbol_read};
  end
  always @(posedge io_axiClk) begin
    if(ports_cmd_payload_wstrb[0] && tmp_mem_port) begin
      mem_symbol0[ports_cmd_payload_addr] <= ports_cmd_payload_wdata[7 : 0];
    end
    if(ports_cmd_payload_wstrb[1] && tmp_mem_port) begin
      mem_symbol1[ports_cmd_payload_addr] <= ports_cmd_payload_wdata[15 : 8];
    end
    if(ports_cmd_payload_wstrb[2] && tmp_mem_port) begin
      mem_symbol2[ports_cmd_payload_addr] <= ports_cmd_payload_wdata[23 : 16];
    end
    if(ports_cmd_payload_wstrb[3] && tmp_mem_port) begin
      mem_symbol3[ports_cmd_payload_addr] <= ports_cmd_payload_wdata[31 : 24];
    end
  end

  always @(posedge io_axiClk) begin
    if(ports_cmd_valid) begin
      tmp_memsymbol_read <= mem_symbol0[ports_cmd_payload_addr];
      tmp_memsymbol_read_1 <= mem_symbol1[ports_cmd_payload_addr];
      tmp_memsymbol_read_2 <= mem_symbol2[ports_cmd_payload_addr];
      tmp_memsymbol_read_3 <= mem_symbol3[ports_cmd_payload_addr];
    end
  end

  assign ports_rsp_payload_data = tmp_mem_port1; // @ Sram.scala l21
  assign ports_rsp_valid = rsp_valid; // @ Sram.scala l32
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      rsp_valid <= 1'b0; // @ Data.scala l400
    end else begin
      if((ports_cmd_valid && (! ports_cmd_payload_wen))) begin
        rsp_valid <= 1'b1; // @ Sram.scala l28
      end else begin
        rsp_valid <= 1'b0; // @ Sram.scala l30
      end
    end
  end


endmodule

module ICache (
  input               flush,
  input               cpu_cmd_valid,
  output              cpu_cmd_ready,
  input      [31:0]   cpu_cmd_payload_addr,
  output              cpu_rsp_valid,
  output     [31:0]   cpu_rsp_payload_data,
  output reg          sram_0_ports_cmd_valid,
  output reg [9:0]    sram_0_ports_cmd_payload_addr,
  output reg          sram_0_ports_cmd_payload_wen,
  output reg [31:0]   sram_0_ports_cmd_payload_wdata,
  output reg [3:0]    sram_0_ports_cmd_payload_wstrb,
  input               sram_0_ports_rsp_valid,
  input      [31:0]   sram_0_ports_rsp_payload_data,
  output reg          sram_1_ports_cmd_valid,
  output reg [9:0]    sram_1_ports_cmd_payload_addr,
  output reg          sram_1_ports_cmd_payload_wen,
  output reg [31:0]   sram_1_ports_cmd_payload_wdata,
  output reg [3:0]    sram_1_ports_cmd_payload_wstrb,
  input               sram_1_ports_rsp_valid,
  input      [31:0]   sram_1_ports_rsp_payload_data,
  output reg          sram_2_ports_cmd_valid,
  output reg [9:0]    sram_2_ports_cmd_payload_addr,
  output reg          sram_2_ports_cmd_payload_wen,
  output reg [31:0]   sram_2_ports_cmd_payload_wdata,
  output reg [3:0]    sram_2_ports_cmd_payload_wstrb,
  input               sram_2_ports_rsp_valid,
  input      [31:0]   sram_2_ports_rsp_payload_data,
  output reg          sram_3_ports_cmd_valid,
  output reg [9:0]    sram_3_ports_cmd_payload_addr,
  output reg          sram_3_ports_cmd_payload_wen,
  output reg [31:0]   sram_3_ports_cmd_payload_wdata,
  output reg [3:0]    sram_3_ports_cmd_payload_wstrb,
  input               sram_3_ports_rsp_valid,
  input      [31:0]   sram_3_ports_rsp_payload_data,
  output              next_level_cmd_valid,
  input               next_level_cmd_ready,
  output     [31:0]   next_level_cmd_payload_addr,
  output     [3:0]    next_level_cmd_payload_len,
  output     [2:0]    next_level_cmd_payload_size,
  input               next_level_rsp_valid,
  input      [63:0]   next_level_rsp_payload_data,
  input               io_axiClk,
  input               cpu_rst
);

  wire       [6:0]    tmp_flush_cnt_valueNext;
  wire       [0:0]    tmp_flush_cnt_valueNext_1;
  wire       [2:0]    tmp_next_level_data_cnt_valueNext;
  wire       [0:0]    tmp_next_level_data_cnt_valueNext_1;
  wire                tmp_when;
  reg        [18:0]   tmp_cache_tag_0;
  reg                 tmp_cache_hit_0;
  reg                 tmp_cache_mru_0;
  reg                 tmp_cache_invld_d1_0;
  reg                 tmp_cache_lru_d1_0;
  wire                tmp_when_1;
  wire                tmp_when_2;
  wire                tmp_when_3;
  wire       [9:0]    tmp_sram_0_ports_cmd_payload_addr;
  wire                tmp_when_4;
  wire                tmp_when_5;
  wire                tmp_when_6;
  wire       [9:0]    tmp_sram_1_ports_cmd_payload_addr;
  reg        [18:0]   tmp_cache_tag_1;
  reg                 tmp_cache_hit_1;
  reg                 tmp_cache_mru_1;
  reg                 tmp_cache_invld_d1_1;
  reg                 tmp_cache_lru_d1_1;
  wire                tmp_when_7;
  wire                tmp_when_8;
  wire                tmp_when_9;
  wire       [9:0]    tmp_sram_2_ports_cmd_payload_addr;
  wire                tmp_when_10;
  wire                tmp_when_11;
  wire                tmp_when_12;
  wire       [9:0]    tmp_sram_3_ports_cmd_payload_addr;
  reg        [31:0]   tmp_cpu_rsp_payload_data;
  reg        [31:0]   tmp_cpu_rsp_payload_data_1;
  reg                 tmp_cpu_rsp_valid;
  reg                 tmp_cpu_rsp_valid_1;
  reg                 ways_0_metas_0_vld;
  reg        [18:0]   ways_0_metas_0_tag;
  reg                 ways_0_metas_0_mru;
  reg                 ways_0_metas_1_vld;
  reg        [18:0]   ways_0_metas_1_tag;
  reg                 ways_0_metas_1_mru;
  reg                 ways_0_metas_2_vld;
  reg        [18:0]   ways_0_metas_2_tag;
  reg                 ways_0_metas_2_mru;
  reg                 ways_0_metas_3_vld;
  reg        [18:0]   ways_0_metas_3_tag;
  reg                 ways_0_metas_3_mru;
  reg                 ways_0_metas_4_vld;
  reg        [18:0]   ways_0_metas_4_tag;
  reg                 ways_0_metas_4_mru;
  reg                 ways_0_metas_5_vld;
  reg        [18:0]   ways_0_metas_5_tag;
  reg                 ways_0_metas_5_mru;
  reg                 ways_0_metas_6_vld;
  reg        [18:0]   ways_0_metas_6_tag;
  reg                 ways_0_metas_6_mru;
  reg                 ways_0_metas_7_vld;
  reg        [18:0]   ways_0_metas_7_tag;
  reg                 ways_0_metas_7_mru;
  reg                 ways_0_metas_8_vld;
  reg        [18:0]   ways_0_metas_8_tag;
  reg                 ways_0_metas_8_mru;
  reg                 ways_0_metas_9_vld;
  reg        [18:0]   ways_0_metas_9_tag;
  reg                 ways_0_metas_9_mru;
  reg                 ways_0_metas_10_vld;
  reg        [18:0]   ways_0_metas_10_tag;
  reg                 ways_0_metas_10_mru;
  reg                 ways_0_metas_11_vld;
  reg        [18:0]   ways_0_metas_11_tag;
  reg                 ways_0_metas_11_mru;
  reg                 ways_0_metas_12_vld;
  reg        [18:0]   ways_0_metas_12_tag;
  reg                 ways_0_metas_12_mru;
  reg                 ways_0_metas_13_vld;
  reg        [18:0]   ways_0_metas_13_tag;
  reg                 ways_0_metas_13_mru;
  reg                 ways_0_metas_14_vld;
  reg        [18:0]   ways_0_metas_14_tag;
  reg                 ways_0_metas_14_mru;
  reg                 ways_0_metas_15_vld;
  reg        [18:0]   ways_0_metas_15_tag;
  reg                 ways_0_metas_15_mru;
  reg                 ways_0_metas_16_vld;
  reg        [18:0]   ways_0_metas_16_tag;
  reg                 ways_0_metas_16_mru;
  reg                 ways_0_metas_17_vld;
  reg        [18:0]   ways_0_metas_17_tag;
  reg                 ways_0_metas_17_mru;
  reg                 ways_0_metas_18_vld;
  reg        [18:0]   ways_0_metas_18_tag;
  reg                 ways_0_metas_18_mru;
  reg                 ways_0_metas_19_vld;
  reg        [18:0]   ways_0_metas_19_tag;
  reg                 ways_0_metas_19_mru;
  reg                 ways_0_metas_20_vld;
  reg        [18:0]   ways_0_metas_20_tag;
  reg                 ways_0_metas_20_mru;
  reg                 ways_0_metas_21_vld;
  reg        [18:0]   ways_0_metas_21_tag;
  reg                 ways_0_metas_21_mru;
  reg                 ways_0_metas_22_vld;
  reg        [18:0]   ways_0_metas_22_tag;
  reg                 ways_0_metas_22_mru;
  reg                 ways_0_metas_23_vld;
  reg        [18:0]   ways_0_metas_23_tag;
  reg                 ways_0_metas_23_mru;
  reg                 ways_0_metas_24_vld;
  reg        [18:0]   ways_0_metas_24_tag;
  reg                 ways_0_metas_24_mru;
  reg                 ways_0_metas_25_vld;
  reg        [18:0]   ways_0_metas_25_tag;
  reg                 ways_0_metas_25_mru;
  reg                 ways_0_metas_26_vld;
  reg        [18:0]   ways_0_metas_26_tag;
  reg                 ways_0_metas_26_mru;
  reg                 ways_0_metas_27_vld;
  reg        [18:0]   ways_0_metas_27_tag;
  reg                 ways_0_metas_27_mru;
  reg                 ways_0_metas_28_vld;
  reg        [18:0]   ways_0_metas_28_tag;
  reg                 ways_0_metas_28_mru;
  reg                 ways_0_metas_29_vld;
  reg        [18:0]   ways_0_metas_29_tag;
  reg                 ways_0_metas_29_mru;
  reg                 ways_0_metas_30_vld;
  reg        [18:0]   ways_0_metas_30_tag;
  reg                 ways_0_metas_30_mru;
  reg                 ways_0_metas_31_vld;
  reg        [18:0]   ways_0_metas_31_tag;
  reg                 ways_0_metas_31_mru;
  reg                 ways_0_metas_32_vld;
  reg        [18:0]   ways_0_metas_32_tag;
  reg                 ways_0_metas_32_mru;
  reg                 ways_0_metas_33_vld;
  reg        [18:0]   ways_0_metas_33_tag;
  reg                 ways_0_metas_33_mru;
  reg                 ways_0_metas_34_vld;
  reg        [18:0]   ways_0_metas_34_tag;
  reg                 ways_0_metas_34_mru;
  reg                 ways_0_metas_35_vld;
  reg        [18:0]   ways_0_metas_35_tag;
  reg                 ways_0_metas_35_mru;
  reg                 ways_0_metas_36_vld;
  reg        [18:0]   ways_0_metas_36_tag;
  reg                 ways_0_metas_36_mru;
  reg                 ways_0_metas_37_vld;
  reg        [18:0]   ways_0_metas_37_tag;
  reg                 ways_0_metas_37_mru;
  reg                 ways_0_metas_38_vld;
  reg        [18:0]   ways_0_metas_38_tag;
  reg                 ways_0_metas_38_mru;
  reg                 ways_0_metas_39_vld;
  reg        [18:0]   ways_0_metas_39_tag;
  reg                 ways_0_metas_39_mru;
  reg                 ways_0_metas_40_vld;
  reg        [18:0]   ways_0_metas_40_tag;
  reg                 ways_0_metas_40_mru;
  reg                 ways_0_metas_41_vld;
  reg        [18:0]   ways_0_metas_41_tag;
  reg                 ways_0_metas_41_mru;
  reg                 ways_0_metas_42_vld;
  reg        [18:0]   ways_0_metas_42_tag;
  reg                 ways_0_metas_42_mru;
  reg                 ways_0_metas_43_vld;
  reg        [18:0]   ways_0_metas_43_tag;
  reg                 ways_0_metas_43_mru;
  reg                 ways_0_metas_44_vld;
  reg        [18:0]   ways_0_metas_44_tag;
  reg                 ways_0_metas_44_mru;
  reg                 ways_0_metas_45_vld;
  reg        [18:0]   ways_0_metas_45_tag;
  reg                 ways_0_metas_45_mru;
  reg                 ways_0_metas_46_vld;
  reg        [18:0]   ways_0_metas_46_tag;
  reg                 ways_0_metas_46_mru;
  reg                 ways_0_metas_47_vld;
  reg        [18:0]   ways_0_metas_47_tag;
  reg                 ways_0_metas_47_mru;
  reg                 ways_0_metas_48_vld;
  reg        [18:0]   ways_0_metas_48_tag;
  reg                 ways_0_metas_48_mru;
  reg                 ways_0_metas_49_vld;
  reg        [18:0]   ways_0_metas_49_tag;
  reg                 ways_0_metas_49_mru;
  reg                 ways_0_metas_50_vld;
  reg        [18:0]   ways_0_metas_50_tag;
  reg                 ways_0_metas_50_mru;
  reg                 ways_0_metas_51_vld;
  reg        [18:0]   ways_0_metas_51_tag;
  reg                 ways_0_metas_51_mru;
  reg                 ways_0_metas_52_vld;
  reg        [18:0]   ways_0_metas_52_tag;
  reg                 ways_0_metas_52_mru;
  reg                 ways_0_metas_53_vld;
  reg        [18:0]   ways_0_metas_53_tag;
  reg                 ways_0_metas_53_mru;
  reg                 ways_0_metas_54_vld;
  reg        [18:0]   ways_0_metas_54_tag;
  reg                 ways_0_metas_54_mru;
  reg                 ways_0_metas_55_vld;
  reg        [18:0]   ways_0_metas_55_tag;
  reg                 ways_0_metas_55_mru;
  reg                 ways_0_metas_56_vld;
  reg        [18:0]   ways_0_metas_56_tag;
  reg                 ways_0_metas_56_mru;
  reg                 ways_0_metas_57_vld;
  reg        [18:0]   ways_0_metas_57_tag;
  reg                 ways_0_metas_57_mru;
  reg                 ways_0_metas_58_vld;
  reg        [18:0]   ways_0_metas_58_tag;
  reg                 ways_0_metas_58_mru;
  reg                 ways_0_metas_59_vld;
  reg        [18:0]   ways_0_metas_59_tag;
  reg                 ways_0_metas_59_mru;
  reg                 ways_0_metas_60_vld;
  reg        [18:0]   ways_0_metas_60_tag;
  reg                 ways_0_metas_60_mru;
  reg                 ways_0_metas_61_vld;
  reg        [18:0]   ways_0_metas_61_tag;
  reg                 ways_0_metas_61_mru;
  reg                 ways_0_metas_62_vld;
  reg        [18:0]   ways_0_metas_62_tag;
  reg                 ways_0_metas_62_mru;
  reg                 ways_0_metas_63_vld;
  reg        [18:0]   ways_0_metas_63_tag;
  reg                 ways_0_metas_63_mru;
  reg                 ways_0_metas_64_vld;
  reg        [18:0]   ways_0_metas_64_tag;
  reg                 ways_0_metas_64_mru;
  reg                 ways_0_metas_65_vld;
  reg        [18:0]   ways_0_metas_65_tag;
  reg                 ways_0_metas_65_mru;
  reg                 ways_0_metas_66_vld;
  reg        [18:0]   ways_0_metas_66_tag;
  reg                 ways_0_metas_66_mru;
  reg                 ways_0_metas_67_vld;
  reg        [18:0]   ways_0_metas_67_tag;
  reg                 ways_0_metas_67_mru;
  reg                 ways_0_metas_68_vld;
  reg        [18:0]   ways_0_metas_68_tag;
  reg                 ways_0_metas_68_mru;
  reg                 ways_0_metas_69_vld;
  reg        [18:0]   ways_0_metas_69_tag;
  reg                 ways_0_metas_69_mru;
  reg                 ways_0_metas_70_vld;
  reg        [18:0]   ways_0_metas_70_tag;
  reg                 ways_0_metas_70_mru;
  reg                 ways_0_metas_71_vld;
  reg        [18:0]   ways_0_metas_71_tag;
  reg                 ways_0_metas_71_mru;
  reg                 ways_0_metas_72_vld;
  reg        [18:0]   ways_0_metas_72_tag;
  reg                 ways_0_metas_72_mru;
  reg                 ways_0_metas_73_vld;
  reg        [18:0]   ways_0_metas_73_tag;
  reg                 ways_0_metas_73_mru;
  reg                 ways_0_metas_74_vld;
  reg        [18:0]   ways_0_metas_74_tag;
  reg                 ways_0_metas_74_mru;
  reg                 ways_0_metas_75_vld;
  reg        [18:0]   ways_0_metas_75_tag;
  reg                 ways_0_metas_75_mru;
  reg                 ways_0_metas_76_vld;
  reg        [18:0]   ways_0_metas_76_tag;
  reg                 ways_0_metas_76_mru;
  reg                 ways_0_metas_77_vld;
  reg        [18:0]   ways_0_metas_77_tag;
  reg                 ways_0_metas_77_mru;
  reg                 ways_0_metas_78_vld;
  reg        [18:0]   ways_0_metas_78_tag;
  reg                 ways_0_metas_78_mru;
  reg                 ways_0_metas_79_vld;
  reg        [18:0]   ways_0_metas_79_tag;
  reg                 ways_0_metas_79_mru;
  reg                 ways_0_metas_80_vld;
  reg        [18:0]   ways_0_metas_80_tag;
  reg                 ways_0_metas_80_mru;
  reg                 ways_0_metas_81_vld;
  reg        [18:0]   ways_0_metas_81_tag;
  reg                 ways_0_metas_81_mru;
  reg                 ways_0_metas_82_vld;
  reg        [18:0]   ways_0_metas_82_tag;
  reg                 ways_0_metas_82_mru;
  reg                 ways_0_metas_83_vld;
  reg        [18:0]   ways_0_metas_83_tag;
  reg                 ways_0_metas_83_mru;
  reg                 ways_0_metas_84_vld;
  reg        [18:0]   ways_0_metas_84_tag;
  reg                 ways_0_metas_84_mru;
  reg                 ways_0_metas_85_vld;
  reg        [18:0]   ways_0_metas_85_tag;
  reg                 ways_0_metas_85_mru;
  reg                 ways_0_metas_86_vld;
  reg        [18:0]   ways_0_metas_86_tag;
  reg                 ways_0_metas_86_mru;
  reg                 ways_0_metas_87_vld;
  reg        [18:0]   ways_0_metas_87_tag;
  reg                 ways_0_metas_87_mru;
  reg                 ways_0_metas_88_vld;
  reg        [18:0]   ways_0_metas_88_tag;
  reg                 ways_0_metas_88_mru;
  reg                 ways_0_metas_89_vld;
  reg        [18:0]   ways_0_metas_89_tag;
  reg                 ways_0_metas_89_mru;
  reg                 ways_0_metas_90_vld;
  reg        [18:0]   ways_0_metas_90_tag;
  reg                 ways_0_metas_90_mru;
  reg                 ways_0_metas_91_vld;
  reg        [18:0]   ways_0_metas_91_tag;
  reg                 ways_0_metas_91_mru;
  reg                 ways_0_metas_92_vld;
  reg        [18:0]   ways_0_metas_92_tag;
  reg                 ways_0_metas_92_mru;
  reg                 ways_0_metas_93_vld;
  reg        [18:0]   ways_0_metas_93_tag;
  reg                 ways_0_metas_93_mru;
  reg                 ways_0_metas_94_vld;
  reg        [18:0]   ways_0_metas_94_tag;
  reg                 ways_0_metas_94_mru;
  reg                 ways_0_metas_95_vld;
  reg        [18:0]   ways_0_metas_95_tag;
  reg                 ways_0_metas_95_mru;
  reg                 ways_0_metas_96_vld;
  reg        [18:0]   ways_0_metas_96_tag;
  reg                 ways_0_metas_96_mru;
  reg                 ways_0_metas_97_vld;
  reg        [18:0]   ways_0_metas_97_tag;
  reg                 ways_0_metas_97_mru;
  reg                 ways_0_metas_98_vld;
  reg        [18:0]   ways_0_metas_98_tag;
  reg                 ways_0_metas_98_mru;
  reg                 ways_0_metas_99_vld;
  reg        [18:0]   ways_0_metas_99_tag;
  reg                 ways_0_metas_99_mru;
  reg                 ways_0_metas_100_vld;
  reg        [18:0]   ways_0_metas_100_tag;
  reg                 ways_0_metas_100_mru;
  reg                 ways_0_metas_101_vld;
  reg        [18:0]   ways_0_metas_101_tag;
  reg                 ways_0_metas_101_mru;
  reg                 ways_0_metas_102_vld;
  reg        [18:0]   ways_0_metas_102_tag;
  reg                 ways_0_metas_102_mru;
  reg                 ways_0_metas_103_vld;
  reg        [18:0]   ways_0_metas_103_tag;
  reg                 ways_0_metas_103_mru;
  reg                 ways_0_metas_104_vld;
  reg        [18:0]   ways_0_metas_104_tag;
  reg                 ways_0_metas_104_mru;
  reg                 ways_0_metas_105_vld;
  reg        [18:0]   ways_0_metas_105_tag;
  reg                 ways_0_metas_105_mru;
  reg                 ways_0_metas_106_vld;
  reg        [18:0]   ways_0_metas_106_tag;
  reg                 ways_0_metas_106_mru;
  reg                 ways_0_metas_107_vld;
  reg        [18:0]   ways_0_metas_107_tag;
  reg                 ways_0_metas_107_mru;
  reg                 ways_0_metas_108_vld;
  reg        [18:0]   ways_0_metas_108_tag;
  reg                 ways_0_metas_108_mru;
  reg                 ways_0_metas_109_vld;
  reg        [18:0]   ways_0_metas_109_tag;
  reg                 ways_0_metas_109_mru;
  reg                 ways_0_metas_110_vld;
  reg        [18:0]   ways_0_metas_110_tag;
  reg                 ways_0_metas_110_mru;
  reg                 ways_0_metas_111_vld;
  reg        [18:0]   ways_0_metas_111_tag;
  reg                 ways_0_metas_111_mru;
  reg                 ways_0_metas_112_vld;
  reg        [18:0]   ways_0_metas_112_tag;
  reg                 ways_0_metas_112_mru;
  reg                 ways_0_metas_113_vld;
  reg        [18:0]   ways_0_metas_113_tag;
  reg                 ways_0_metas_113_mru;
  reg                 ways_0_metas_114_vld;
  reg        [18:0]   ways_0_metas_114_tag;
  reg                 ways_0_metas_114_mru;
  reg                 ways_0_metas_115_vld;
  reg        [18:0]   ways_0_metas_115_tag;
  reg                 ways_0_metas_115_mru;
  reg                 ways_0_metas_116_vld;
  reg        [18:0]   ways_0_metas_116_tag;
  reg                 ways_0_metas_116_mru;
  reg                 ways_0_metas_117_vld;
  reg        [18:0]   ways_0_metas_117_tag;
  reg                 ways_0_metas_117_mru;
  reg                 ways_0_metas_118_vld;
  reg        [18:0]   ways_0_metas_118_tag;
  reg                 ways_0_metas_118_mru;
  reg                 ways_0_metas_119_vld;
  reg        [18:0]   ways_0_metas_119_tag;
  reg                 ways_0_metas_119_mru;
  reg                 ways_0_metas_120_vld;
  reg        [18:0]   ways_0_metas_120_tag;
  reg                 ways_0_metas_120_mru;
  reg                 ways_0_metas_121_vld;
  reg        [18:0]   ways_0_metas_121_tag;
  reg                 ways_0_metas_121_mru;
  reg                 ways_0_metas_122_vld;
  reg        [18:0]   ways_0_metas_122_tag;
  reg                 ways_0_metas_122_mru;
  reg                 ways_0_metas_123_vld;
  reg        [18:0]   ways_0_metas_123_tag;
  reg                 ways_0_metas_123_mru;
  reg                 ways_0_metas_124_vld;
  reg        [18:0]   ways_0_metas_124_tag;
  reg                 ways_0_metas_124_mru;
  reg                 ways_0_metas_125_vld;
  reg        [18:0]   ways_0_metas_125_tag;
  reg                 ways_0_metas_125_mru;
  reg                 ways_0_metas_126_vld;
  reg        [18:0]   ways_0_metas_126_tag;
  reg                 ways_0_metas_126_mru;
  reg                 ways_0_metas_127_vld;
  reg        [18:0]   ways_0_metas_127_tag;
  reg                 ways_0_metas_127_mru;
  reg                 ways_1_metas_0_vld;
  reg        [18:0]   ways_1_metas_0_tag;
  reg                 ways_1_metas_0_mru;
  reg                 ways_1_metas_1_vld;
  reg        [18:0]   ways_1_metas_1_tag;
  reg                 ways_1_metas_1_mru;
  reg                 ways_1_metas_2_vld;
  reg        [18:0]   ways_1_metas_2_tag;
  reg                 ways_1_metas_2_mru;
  reg                 ways_1_metas_3_vld;
  reg        [18:0]   ways_1_metas_3_tag;
  reg                 ways_1_metas_3_mru;
  reg                 ways_1_metas_4_vld;
  reg        [18:0]   ways_1_metas_4_tag;
  reg                 ways_1_metas_4_mru;
  reg                 ways_1_metas_5_vld;
  reg        [18:0]   ways_1_metas_5_tag;
  reg                 ways_1_metas_5_mru;
  reg                 ways_1_metas_6_vld;
  reg        [18:0]   ways_1_metas_6_tag;
  reg                 ways_1_metas_6_mru;
  reg                 ways_1_metas_7_vld;
  reg        [18:0]   ways_1_metas_7_tag;
  reg                 ways_1_metas_7_mru;
  reg                 ways_1_metas_8_vld;
  reg        [18:0]   ways_1_metas_8_tag;
  reg                 ways_1_metas_8_mru;
  reg                 ways_1_metas_9_vld;
  reg        [18:0]   ways_1_metas_9_tag;
  reg                 ways_1_metas_9_mru;
  reg                 ways_1_metas_10_vld;
  reg        [18:0]   ways_1_metas_10_tag;
  reg                 ways_1_metas_10_mru;
  reg                 ways_1_metas_11_vld;
  reg        [18:0]   ways_1_metas_11_tag;
  reg                 ways_1_metas_11_mru;
  reg                 ways_1_metas_12_vld;
  reg        [18:0]   ways_1_metas_12_tag;
  reg                 ways_1_metas_12_mru;
  reg                 ways_1_metas_13_vld;
  reg        [18:0]   ways_1_metas_13_tag;
  reg                 ways_1_metas_13_mru;
  reg                 ways_1_metas_14_vld;
  reg        [18:0]   ways_1_metas_14_tag;
  reg                 ways_1_metas_14_mru;
  reg                 ways_1_metas_15_vld;
  reg        [18:0]   ways_1_metas_15_tag;
  reg                 ways_1_metas_15_mru;
  reg                 ways_1_metas_16_vld;
  reg        [18:0]   ways_1_metas_16_tag;
  reg                 ways_1_metas_16_mru;
  reg                 ways_1_metas_17_vld;
  reg        [18:0]   ways_1_metas_17_tag;
  reg                 ways_1_metas_17_mru;
  reg                 ways_1_metas_18_vld;
  reg        [18:0]   ways_1_metas_18_tag;
  reg                 ways_1_metas_18_mru;
  reg                 ways_1_metas_19_vld;
  reg        [18:0]   ways_1_metas_19_tag;
  reg                 ways_1_metas_19_mru;
  reg                 ways_1_metas_20_vld;
  reg        [18:0]   ways_1_metas_20_tag;
  reg                 ways_1_metas_20_mru;
  reg                 ways_1_metas_21_vld;
  reg        [18:0]   ways_1_metas_21_tag;
  reg                 ways_1_metas_21_mru;
  reg                 ways_1_metas_22_vld;
  reg        [18:0]   ways_1_metas_22_tag;
  reg                 ways_1_metas_22_mru;
  reg                 ways_1_metas_23_vld;
  reg        [18:0]   ways_1_metas_23_tag;
  reg                 ways_1_metas_23_mru;
  reg                 ways_1_metas_24_vld;
  reg        [18:0]   ways_1_metas_24_tag;
  reg                 ways_1_metas_24_mru;
  reg                 ways_1_metas_25_vld;
  reg        [18:0]   ways_1_metas_25_tag;
  reg                 ways_1_metas_25_mru;
  reg                 ways_1_metas_26_vld;
  reg        [18:0]   ways_1_metas_26_tag;
  reg                 ways_1_metas_26_mru;
  reg                 ways_1_metas_27_vld;
  reg        [18:0]   ways_1_metas_27_tag;
  reg                 ways_1_metas_27_mru;
  reg                 ways_1_metas_28_vld;
  reg        [18:0]   ways_1_metas_28_tag;
  reg                 ways_1_metas_28_mru;
  reg                 ways_1_metas_29_vld;
  reg        [18:0]   ways_1_metas_29_tag;
  reg                 ways_1_metas_29_mru;
  reg                 ways_1_metas_30_vld;
  reg        [18:0]   ways_1_metas_30_tag;
  reg                 ways_1_metas_30_mru;
  reg                 ways_1_metas_31_vld;
  reg        [18:0]   ways_1_metas_31_tag;
  reg                 ways_1_metas_31_mru;
  reg                 ways_1_metas_32_vld;
  reg        [18:0]   ways_1_metas_32_tag;
  reg                 ways_1_metas_32_mru;
  reg                 ways_1_metas_33_vld;
  reg        [18:0]   ways_1_metas_33_tag;
  reg                 ways_1_metas_33_mru;
  reg                 ways_1_metas_34_vld;
  reg        [18:0]   ways_1_metas_34_tag;
  reg                 ways_1_metas_34_mru;
  reg                 ways_1_metas_35_vld;
  reg        [18:0]   ways_1_metas_35_tag;
  reg                 ways_1_metas_35_mru;
  reg                 ways_1_metas_36_vld;
  reg        [18:0]   ways_1_metas_36_tag;
  reg                 ways_1_metas_36_mru;
  reg                 ways_1_metas_37_vld;
  reg        [18:0]   ways_1_metas_37_tag;
  reg                 ways_1_metas_37_mru;
  reg                 ways_1_metas_38_vld;
  reg        [18:0]   ways_1_metas_38_tag;
  reg                 ways_1_metas_38_mru;
  reg                 ways_1_metas_39_vld;
  reg        [18:0]   ways_1_metas_39_tag;
  reg                 ways_1_metas_39_mru;
  reg                 ways_1_metas_40_vld;
  reg        [18:0]   ways_1_metas_40_tag;
  reg                 ways_1_metas_40_mru;
  reg                 ways_1_metas_41_vld;
  reg        [18:0]   ways_1_metas_41_tag;
  reg                 ways_1_metas_41_mru;
  reg                 ways_1_metas_42_vld;
  reg        [18:0]   ways_1_metas_42_tag;
  reg                 ways_1_metas_42_mru;
  reg                 ways_1_metas_43_vld;
  reg        [18:0]   ways_1_metas_43_tag;
  reg                 ways_1_metas_43_mru;
  reg                 ways_1_metas_44_vld;
  reg        [18:0]   ways_1_metas_44_tag;
  reg                 ways_1_metas_44_mru;
  reg                 ways_1_metas_45_vld;
  reg        [18:0]   ways_1_metas_45_tag;
  reg                 ways_1_metas_45_mru;
  reg                 ways_1_metas_46_vld;
  reg        [18:0]   ways_1_metas_46_tag;
  reg                 ways_1_metas_46_mru;
  reg                 ways_1_metas_47_vld;
  reg        [18:0]   ways_1_metas_47_tag;
  reg                 ways_1_metas_47_mru;
  reg                 ways_1_metas_48_vld;
  reg        [18:0]   ways_1_metas_48_tag;
  reg                 ways_1_metas_48_mru;
  reg                 ways_1_metas_49_vld;
  reg        [18:0]   ways_1_metas_49_tag;
  reg                 ways_1_metas_49_mru;
  reg                 ways_1_metas_50_vld;
  reg        [18:0]   ways_1_metas_50_tag;
  reg                 ways_1_metas_50_mru;
  reg                 ways_1_metas_51_vld;
  reg        [18:0]   ways_1_metas_51_tag;
  reg                 ways_1_metas_51_mru;
  reg                 ways_1_metas_52_vld;
  reg        [18:0]   ways_1_metas_52_tag;
  reg                 ways_1_metas_52_mru;
  reg                 ways_1_metas_53_vld;
  reg        [18:0]   ways_1_metas_53_tag;
  reg                 ways_1_metas_53_mru;
  reg                 ways_1_metas_54_vld;
  reg        [18:0]   ways_1_metas_54_tag;
  reg                 ways_1_metas_54_mru;
  reg                 ways_1_metas_55_vld;
  reg        [18:0]   ways_1_metas_55_tag;
  reg                 ways_1_metas_55_mru;
  reg                 ways_1_metas_56_vld;
  reg        [18:0]   ways_1_metas_56_tag;
  reg                 ways_1_metas_56_mru;
  reg                 ways_1_metas_57_vld;
  reg        [18:0]   ways_1_metas_57_tag;
  reg                 ways_1_metas_57_mru;
  reg                 ways_1_metas_58_vld;
  reg        [18:0]   ways_1_metas_58_tag;
  reg                 ways_1_metas_58_mru;
  reg                 ways_1_metas_59_vld;
  reg        [18:0]   ways_1_metas_59_tag;
  reg                 ways_1_metas_59_mru;
  reg                 ways_1_metas_60_vld;
  reg        [18:0]   ways_1_metas_60_tag;
  reg                 ways_1_metas_60_mru;
  reg                 ways_1_metas_61_vld;
  reg        [18:0]   ways_1_metas_61_tag;
  reg                 ways_1_metas_61_mru;
  reg                 ways_1_metas_62_vld;
  reg        [18:0]   ways_1_metas_62_tag;
  reg                 ways_1_metas_62_mru;
  reg                 ways_1_metas_63_vld;
  reg        [18:0]   ways_1_metas_63_tag;
  reg                 ways_1_metas_63_mru;
  reg                 ways_1_metas_64_vld;
  reg        [18:0]   ways_1_metas_64_tag;
  reg                 ways_1_metas_64_mru;
  reg                 ways_1_metas_65_vld;
  reg        [18:0]   ways_1_metas_65_tag;
  reg                 ways_1_metas_65_mru;
  reg                 ways_1_metas_66_vld;
  reg        [18:0]   ways_1_metas_66_tag;
  reg                 ways_1_metas_66_mru;
  reg                 ways_1_metas_67_vld;
  reg        [18:0]   ways_1_metas_67_tag;
  reg                 ways_1_metas_67_mru;
  reg                 ways_1_metas_68_vld;
  reg        [18:0]   ways_1_metas_68_tag;
  reg                 ways_1_metas_68_mru;
  reg                 ways_1_metas_69_vld;
  reg        [18:0]   ways_1_metas_69_tag;
  reg                 ways_1_metas_69_mru;
  reg                 ways_1_metas_70_vld;
  reg        [18:0]   ways_1_metas_70_tag;
  reg                 ways_1_metas_70_mru;
  reg                 ways_1_metas_71_vld;
  reg        [18:0]   ways_1_metas_71_tag;
  reg                 ways_1_metas_71_mru;
  reg                 ways_1_metas_72_vld;
  reg        [18:0]   ways_1_metas_72_tag;
  reg                 ways_1_metas_72_mru;
  reg                 ways_1_metas_73_vld;
  reg        [18:0]   ways_1_metas_73_tag;
  reg                 ways_1_metas_73_mru;
  reg                 ways_1_metas_74_vld;
  reg        [18:0]   ways_1_metas_74_tag;
  reg                 ways_1_metas_74_mru;
  reg                 ways_1_metas_75_vld;
  reg        [18:0]   ways_1_metas_75_tag;
  reg                 ways_1_metas_75_mru;
  reg                 ways_1_metas_76_vld;
  reg        [18:0]   ways_1_metas_76_tag;
  reg                 ways_1_metas_76_mru;
  reg                 ways_1_metas_77_vld;
  reg        [18:0]   ways_1_metas_77_tag;
  reg                 ways_1_metas_77_mru;
  reg                 ways_1_metas_78_vld;
  reg        [18:0]   ways_1_metas_78_tag;
  reg                 ways_1_metas_78_mru;
  reg                 ways_1_metas_79_vld;
  reg        [18:0]   ways_1_metas_79_tag;
  reg                 ways_1_metas_79_mru;
  reg                 ways_1_metas_80_vld;
  reg        [18:0]   ways_1_metas_80_tag;
  reg                 ways_1_metas_80_mru;
  reg                 ways_1_metas_81_vld;
  reg        [18:0]   ways_1_metas_81_tag;
  reg                 ways_1_metas_81_mru;
  reg                 ways_1_metas_82_vld;
  reg        [18:0]   ways_1_metas_82_tag;
  reg                 ways_1_metas_82_mru;
  reg                 ways_1_metas_83_vld;
  reg        [18:0]   ways_1_metas_83_tag;
  reg                 ways_1_metas_83_mru;
  reg                 ways_1_metas_84_vld;
  reg        [18:0]   ways_1_metas_84_tag;
  reg                 ways_1_metas_84_mru;
  reg                 ways_1_metas_85_vld;
  reg        [18:0]   ways_1_metas_85_tag;
  reg                 ways_1_metas_85_mru;
  reg                 ways_1_metas_86_vld;
  reg        [18:0]   ways_1_metas_86_tag;
  reg                 ways_1_metas_86_mru;
  reg                 ways_1_metas_87_vld;
  reg        [18:0]   ways_1_metas_87_tag;
  reg                 ways_1_metas_87_mru;
  reg                 ways_1_metas_88_vld;
  reg        [18:0]   ways_1_metas_88_tag;
  reg                 ways_1_metas_88_mru;
  reg                 ways_1_metas_89_vld;
  reg        [18:0]   ways_1_metas_89_tag;
  reg                 ways_1_metas_89_mru;
  reg                 ways_1_metas_90_vld;
  reg        [18:0]   ways_1_metas_90_tag;
  reg                 ways_1_metas_90_mru;
  reg                 ways_1_metas_91_vld;
  reg        [18:0]   ways_1_metas_91_tag;
  reg                 ways_1_metas_91_mru;
  reg                 ways_1_metas_92_vld;
  reg        [18:0]   ways_1_metas_92_tag;
  reg                 ways_1_metas_92_mru;
  reg                 ways_1_metas_93_vld;
  reg        [18:0]   ways_1_metas_93_tag;
  reg                 ways_1_metas_93_mru;
  reg                 ways_1_metas_94_vld;
  reg        [18:0]   ways_1_metas_94_tag;
  reg                 ways_1_metas_94_mru;
  reg                 ways_1_metas_95_vld;
  reg        [18:0]   ways_1_metas_95_tag;
  reg                 ways_1_metas_95_mru;
  reg                 ways_1_metas_96_vld;
  reg        [18:0]   ways_1_metas_96_tag;
  reg                 ways_1_metas_96_mru;
  reg                 ways_1_metas_97_vld;
  reg        [18:0]   ways_1_metas_97_tag;
  reg                 ways_1_metas_97_mru;
  reg                 ways_1_metas_98_vld;
  reg        [18:0]   ways_1_metas_98_tag;
  reg                 ways_1_metas_98_mru;
  reg                 ways_1_metas_99_vld;
  reg        [18:0]   ways_1_metas_99_tag;
  reg                 ways_1_metas_99_mru;
  reg                 ways_1_metas_100_vld;
  reg        [18:0]   ways_1_metas_100_tag;
  reg                 ways_1_metas_100_mru;
  reg                 ways_1_metas_101_vld;
  reg        [18:0]   ways_1_metas_101_tag;
  reg                 ways_1_metas_101_mru;
  reg                 ways_1_metas_102_vld;
  reg        [18:0]   ways_1_metas_102_tag;
  reg                 ways_1_metas_102_mru;
  reg                 ways_1_metas_103_vld;
  reg        [18:0]   ways_1_metas_103_tag;
  reg                 ways_1_metas_103_mru;
  reg                 ways_1_metas_104_vld;
  reg        [18:0]   ways_1_metas_104_tag;
  reg                 ways_1_metas_104_mru;
  reg                 ways_1_metas_105_vld;
  reg        [18:0]   ways_1_metas_105_tag;
  reg                 ways_1_metas_105_mru;
  reg                 ways_1_metas_106_vld;
  reg        [18:0]   ways_1_metas_106_tag;
  reg                 ways_1_metas_106_mru;
  reg                 ways_1_metas_107_vld;
  reg        [18:0]   ways_1_metas_107_tag;
  reg                 ways_1_metas_107_mru;
  reg                 ways_1_metas_108_vld;
  reg        [18:0]   ways_1_metas_108_tag;
  reg                 ways_1_metas_108_mru;
  reg                 ways_1_metas_109_vld;
  reg        [18:0]   ways_1_metas_109_tag;
  reg                 ways_1_metas_109_mru;
  reg                 ways_1_metas_110_vld;
  reg        [18:0]   ways_1_metas_110_tag;
  reg                 ways_1_metas_110_mru;
  reg                 ways_1_metas_111_vld;
  reg        [18:0]   ways_1_metas_111_tag;
  reg                 ways_1_metas_111_mru;
  reg                 ways_1_metas_112_vld;
  reg        [18:0]   ways_1_metas_112_tag;
  reg                 ways_1_metas_112_mru;
  reg                 ways_1_metas_113_vld;
  reg        [18:0]   ways_1_metas_113_tag;
  reg                 ways_1_metas_113_mru;
  reg                 ways_1_metas_114_vld;
  reg        [18:0]   ways_1_metas_114_tag;
  reg                 ways_1_metas_114_mru;
  reg                 ways_1_metas_115_vld;
  reg        [18:0]   ways_1_metas_115_tag;
  reg                 ways_1_metas_115_mru;
  reg                 ways_1_metas_116_vld;
  reg        [18:0]   ways_1_metas_116_tag;
  reg                 ways_1_metas_116_mru;
  reg                 ways_1_metas_117_vld;
  reg        [18:0]   ways_1_metas_117_tag;
  reg                 ways_1_metas_117_mru;
  reg                 ways_1_metas_118_vld;
  reg        [18:0]   ways_1_metas_118_tag;
  reg                 ways_1_metas_118_mru;
  reg                 ways_1_metas_119_vld;
  reg        [18:0]   ways_1_metas_119_tag;
  reg                 ways_1_metas_119_mru;
  reg                 ways_1_metas_120_vld;
  reg        [18:0]   ways_1_metas_120_tag;
  reg                 ways_1_metas_120_mru;
  reg                 ways_1_metas_121_vld;
  reg        [18:0]   ways_1_metas_121_tag;
  reg                 ways_1_metas_121_mru;
  reg                 ways_1_metas_122_vld;
  reg        [18:0]   ways_1_metas_122_tag;
  reg                 ways_1_metas_122_mru;
  reg                 ways_1_metas_123_vld;
  reg        [18:0]   ways_1_metas_123_tag;
  reg                 ways_1_metas_123_mru;
  reg                 ways_1_metas_124_vld;
  reg        [18:0]   ways_1_metas_124_tag;
  reg                 ways_1_metas_124_mru;
  reg                 ways_1_metas_125_vld;
  reg        [18:0]   ways_1_metas_125_tag;
  reg                 ways_1_metas_125_mru;
  reg                 ways_1_metas_126_vld;
  reg        [18:0]   ways_1_metas_126_tag;
  reg                 ways_1_metas_126_mru;
  reg                 ways_1_metas_127_vld;
  reg        [18:0]   ways_1_metas_127_tag;
  reg                 ways_1_metas_127_mru;
  wire       [18:0]   cache_tag_0;
  wire       [18:0]   cache_tag_1;
  wire                cache_hit_0;
  wire                cache_hit_1;
  wire                cache_invld_d1_0;
  wire                cache_invld_d1_1;
  wire                cache_victim_0;
  wire                cache_victim_1;
  wire                cache_mru_0;
  wire                cache_mru_1;
  wire                cache_lru_d1_0;
  wire                cache_lru_d1_1;
  wire       [0:0]    hit_id;
  reg        [0:0]    hit_id_d1;
  wire       [0:0]    evict_id;
  wire       [0:0]    invld_id;
  wire       [0:0]    victim_id;
  wire                mru_full;
  wire                cpu_cmd_fire;
  wire                is_hit;
  reg                 is_hit_d1;
  wire                cpu_cmd_fire_1;
  wire                is_miss;
  wire                is_diff;
  reg                 flush_busy;
  reg                 flush_cnt_willIncrement;
  reg                 flush_cnt_willClear;
  reg        [6:0]    flush_cnt_valueNext;
  reg        [6:0]    flush_cnt_value;
  wire                flush_cnt_willOverflowIfInc;
  wire                flush_cnt_willOverflow;
  wire                flush_done;
  reg        [0:0]    evict_id_miss;
  wire       [18:0]   cpu_tag;
  wire       [6:0]    cpu_set;
  wire       [9:0]    cpu_bank_addr;
  wire       [0:0]    cpu_bank_index;
  wire                cpu_cmd_fire_2;
  reg        [31:0]   cpu_addr_d1;
  wire       [6:0]    cpu_set_d1;
  wire       [18:0]   cpu_tag_d1;
  wire       [9:0]    cpu_bank_addr_d1;
  wire       [0:0]    cpu_bank_index_d1;
  reg                 cpu_cmd_ready_1;
  wire       [31:0]   sram_banks_data_0;
  wire       [31:0]   sram_banks_data_1;
  wire                sram_banks_valid_0;
  wire                sram_banks_valid_1;
  reg                 next_level_cmd_valid_1;
  reg                 next_level_data_cnt_willIncrement;
  reg                 next_level_data_cnt_willClear;
  reg        [2:0]    next_level_data_cnt_valueNext;
  reg        [2:0]    next_level_data_cnt_value;
  wire                next_level_data_cnt_willOverflowIfInc;
  wire                next_level_data_cnt_willOverflow;
  wire       [6:0]    next_level_bank_addr;
  reg                 next_level_done;
  wire                next_level_cmd_fire;
  wire       [127:0]  tmp_1;
  wire                tmp_2;
  wire                tmp_3;
  wire                tmp_4;
  wire                tmp_5;
  wire                tmp_6;
  wire                tmp_7;
  wire                tmp_8;
  wire                tmp_9;
  wire                tmp_10;
  wire                tmp_11;
  wire                tmp_12;
  wire                tmp_13;
  wire                tmp_14;
  wire                tmp_15;
  wire                tmp_16;
  wire                tmp_17;
  wire                tmp_18;
  wire                tmp_19;
  wire                tmp_20;
  wire                tmp_21;
  wire                tmp_22;
  wire                tmp_23;
  wire                tmp_24;
  wire                tmp_25;
  wire                tmp_26;
  wire                tmp_27;
  wire                tmp_28;
  wire                tmp_29;
  wire                tmp_30;
  wire                tmp_31;
  wire                tmp_32;
  wire                tmp_33;
  wire                tmp_34;
  wire                tmp_35;
  wire                tmp_36;
  wire                tmp_37;
  wire                tmp_38;
  wire                tmp_39;
  wire                tmp_40;
  wire                tmp_41;
  wire                tmp_42;
  wire                tmp_43;
  wire                tmp_44;
  wire                tmp_45;
  wire                tmp_46;
  wire                tmp_47;
  wire                tmp_48;
  wire                tmp_49;
  wire                tmp_50;
  wire                tmp_51;
  wire                tmp_52;
  wire                tmp_53;
  wire                tmp_54;
  wire                tmp_55;
  wire                tmp_56;
  wire                tmp_57;
  wire                tmp_58;
  wire                tmp_59;
  wire                tmp_60;
  wire                tmp_61;
  wire                tmp_62;
  wire                tmp_63;
  wire                tmp_64;
  wire                tmp_65;
  wire                tmp_66;
  wire                tmp_67;
  wire                tmp_68;
  wire                tmp_69;
  wire                tmp_70;
  wire                tmp_71;
  wire                tmp_72;
  wire                tmp_73;
  wire                tmp_74;
  wire                tmp_75;
  wire                tmp_76;
  wire                tmp_77;
  wire                tmp_78;
  wire                tmp_79;
  wire                tmp_80;
  wire                tmp_81;
  wire                tmp_82;
  wire                tmp_83;
  wire                tmp_84;
  wire                tmp_85;
  wire                tmp_86;
  wire                tmp_87;
  wire                tmp_88;
  wire                tmp_89;
  wire                tmp_90;
  wire                tmp_91;
  wire                tmp_92;
  wire                tmp_93;
  wire                tmp_94;
  wire                tmp_95;
  wire                tmp_96;
  wire                tmp_97;
  wire                tmp_98;
  wire                tmp_99;
  wire                tmp_100;
  wire                tmp_101;
  wire                tmp_102;
  wire                tmp_103;
  wire                tmp_104;
  wire                tmp_105;
  wire                tmp_106;
  wire                tmp_107;
  wire                tmp_108;
  wire                tmp_109;
  wire                tmp_110;
  wire                tmp_111;
  wire                tmp_112;
  wire                tmp_113;
  wire                tmp_114;
  wire                tmp_115;
  wire                tmp_116;
  wire                tmp_117;
  wire                tmp_118;
  wire                tmp_119;
  wire                tmp_120;
  wire                tmp_121;
  wire                tmp_122;
  wire                tmp_123;
  wire                tmp_124;
  wire                tmp_125;
  wire                tmp_126;
  wire                tmp_127;
  wire                tmp_128;
  wire                tmp_129;
  wire       [127:0]  tmp_130;
  wire                tmp_131;
  wire                tmp_132;
  wire                tmp_133;
  wire                tmp_134;
  wire                tmp_135;
  wire                tmp_136;
  wire                tmp_137;
  wire                tmp_138;
  wire                tmp_139;
  wire                tmp_140;
  wire                tmp_141;
  wire                tmp_142;
  wire                tmp_143;
  wire                tmp_144;
  wire                tmp_145;
  wire                tmp_146;
  wire                tmp_147;
  wire                tmp_148;
  wire                tmp_149;
  wire                tmp_150;
  wire                tmp_151;
  wire                tmp_152;
  wire                tmp_153;
  wire                tmp_154;
  wire                tmp_155;
  wire                tmp_156;
  wire                tmp_157;
  wire                tmp_158;
  wire                tmp_159;
  wire                tmp_160;
  wire                tmp_161;
  wire                tmp_162;
  wire                tmp_163;
  wire                tmp_164;
  wire                tmp_165;
  wire                tmp_166;
  wire                tmp_167;
  wire                tmp_168;
  wire                tmp_169;
  wire                tmp_170;
  wire                tmp_171;
  wire                tmp_172;
  wire                tmp_173;
  wire                tmp_174;
  wire                tmp_175;
  wire                tmp_176;
  wire                tmp_177;
  wire                tmp_178;
  wire                tmp_179;
  wire                tmp_180;
  wire                tmp_181;
  wire                tmp_182;
  wire                tmp_183;
  wire                tmp_184;
  wire                tmp_185;
  wire                tmp_186;
  wire                tmp_187;
  wire                tmp_188;
  wire                tmp_189;
  wire                tmp_190;
  wire                tmp_191;
  wire                tmp_192;
  wire                tmp_193;
  wire                tmp_194;
  wire                tmp_195;
  wire                tmp_196;
  wire                tmp_197;
  wire                tmp_198;
  wire                tmp_199;
  wire                tmp_200;
  wire                tmp_201;
  wire                tmp_202;
  wire                tmp_203;
  wire                tmp_204;
  wire                tmp_205;
  wire                tmp_206;
  wire                tmp_207;
  wire                tmp_208;
  wire                tmp_209;
  wire                tmp_210;
  wire                tmp_211;
  wire                tmp_212;
  wire                tmp_213;
  wire                tmp_214;
  wire                tmp_215;
  wire                tmp_216;
  wire                tmp_217;
  wire                tmp_218;
  wire                tmp_219;
  wire                tmp_220;
  wire                tmp_221;
  wire                tmp_222;
  wire                tmp_223;
  wire                tmp_224;
  wire                tmp_225;
  wire                tmp_226;
  wire                tmp_227;
  wire                tmp_228;
  wire                tmp_229;
  wire                tmp_230;
  wire                tmp_231;
  wire                tmp_232;
  wire                tmp_233;
  wire                tmp_234;
  wire                tmp_235;
  wire                tmp_236;
  wire                tmp_237;
  wire                tmp_238;
  wire                tmp_239;
  wire                tmp_240;
  wire                tmp_241;
  wire                tmp_242;
  wire                tmp_243;
  wire                tmp_244;
  wire                tmp_245;
  wire                tmp_246;
  wire                tmp_247;
  wire                tmp_248;
  wire                tmp_249;
  wire                tmp_250;
  wire                tmp_251;
  wire                tmp_252;
  wire                tmp_253;
  wire                tmp_254;
  wire                tmp_255;
  wire                tmp_256;
  wire                tmp_257;
  wire                tmp_258;
  wire       [127:0]  tmp_259;
  wire                tmp_260;
  wire                tmp_261;
  wire                tmp_262;
  wire                tmp_263;
  wire                tmp_264;
  wire                tmp_265;
  wire                tmp_266;
  wire                tmp_267;
  wire                tmp_268;
  wire                tmp_269;
  wire                tmp_270;
  wire                tmp_271;
  wire                tmp_272;
  wire                tmp_273;
  wire                tmp_274;
  wire                tmp_275;
  wire                tmp_276;
  wire                tmp_277;
  wire                tmp_278;
  wire                tmp_279;
  wire                tmp_280;
  wire                tmp_281;
  wire                tmp_282;
  wire                tmp_283;
  wire                tmp_284;
  wire                tmp_285;
  wire                tmp_286;
  wire                tmp_287;
  wire                tmp_288;
  wire                tmp_289;
  wire                tmp_290;
  wire                tmp_291;
  wire                tmp_292;
  wire                tmp_293;
  wire                tmp_294;
  wire                tmp_295;
  wire                tmp_296;
  wire                tmp_297;
  wire                tmp_298;
  wire                tmp_299;
  wire                tmp_300;
  wire                tmp_301;
  wire                tmp_302;
  wire                tmp_303;
  wire                tmp_304;
  wire                tmp_305;
  wire                tmp_306;
  wire                tmp_307;
  wire                tmp_308;
  wire                tmp_309;
  wire                tmp_310;
  wire                tmp_311;
  wire                tmp_312;
  wire                tmp_313;
  wire                tmp_314;
  wire                tmp_315;
  wire                tmp_316;
  wire                tmp_317;
  wire                tmp_318;
  wire                tmp_319;
  wire                tmp_320;
  wire                tmp_321;
  wire                tmp_322;
  wire                tmp_323;
  wire                tmp_324;
  wire                tmp_325;
  wire                tmp_326;
  wire                tmp_327;
  wire                tmp_328;
  wire                tmp_329;
  wire                tmp_330;
  wire                tmp_331;
  wire                tmp_332;
  wire                tmp_333;
  wire                tmp_334;
  wire                tmp_335;
  wire                tmp_336;
  wire                tmp_337;
  wire                tmp_338;
  wire                tmp_339;
  wire                tmp_340;
  wire                tmp_341;
  wire                tmp_342;
  wire                tmp_343;
  wire                tmp_344;
  wire                tmp_345;
  wire                tmp_346;
  wire                tmp_347;
  wire                tmp_348;
  wire                tmp_349;
  wire                tmp_350;
  wire                tmp_351;
  wire                tmp_352;
  wire                tmp_353;
  wire                tmp_354;
  wire                tmp_355;
  wire                tmp_356;
  wire                tmp_357;
  wire                tmp_358;
  wire                tmp_359;
  wire                tmp_360;
  wire                tmp_361;
  wire                tmp_362;
  wire                tmp_363;
  wire                tmp_364;
  wire                tmp_365;
  wire                tmp_366;
  wire                tmp_367;
  wire                tmp_368;
  wire                tmp_369;
  wire                tmp_370;
  wire                tmp_371;
  wire                tmp_372;
  wire                tmp_373;
  wire                tmp_374;
  wire                tmp_375;
  wire                tmp_376;
  wire                tmp_377;
  wire                tmp_378;
  wire                tmp_379;
  wire                tmp_380;
  wire                tmp_381;
  wire                tmp_382;
  wire                tmp_383;
  wire                tmp_384;
  wire                tmp_385;
  wire                tmp_386;
  wire                tmp_387;
  wire       [127:0]  tmp_388;
  wire                tmp_389;
  wire                tmp_390;
  wire                tmp_391;
  wire                tmp_392;
  wire                tmp_393;
  wire                tmp_394;
  wire                tmp_395;
  wire                tmp_396;
  wire                tmp_397;
  wire                tmp_398;
  wire                tmp_399;
  wire                tmp_400;
  wire                tmp_401;
  wire                tmp_402;
  wire                tmp_403;
  wire                tmp_404;
  wire                tmp_405;
  wire                tmp_406;
  wire                tmp_407;
  wire                tmp_408;
  wire                tmp_409;
  wire                tmp_410;
  wire                tmp_411;
  wire                tmp_412;
  wire                tmp_413;
  wire                tmp_414;
  wire                tmp_415;
  wire                tmp_416;
  wire                tmp_417;
  wire                tmp_418;
  wire                tmp_419;
  wire                tmp_420;
  wire                tmp_421;
  wire                tmp_422;
  wire                tmp_423;
  wire                tmp_424;
  wire                tmp_425;
  wire                tmp_426;
  wire                tmp_427;
  wire                tmp_428;
  wire                tmp_429;
  wire                tmp_430;
  wire                tmp_431;
  wire                tmp_432;
  wire                tmp_433;
  wire                tmp_434;
  wire                tmp_435;
  wire                tmp_436;
  wire                tmp_437;
  wire                tmp_438;
  wire                tmp_439;
  wire                tmp_440;
  wire                tmp_441;
  wire                tmp_442;
  wire                tmp_443;
  wire                tmp_444;
  wire                tmp_445;
  wire                tmp_446;
  wire                tmp_447;
  wire                tmp_448;
  wire                tmp_449;
  wire                tmp_450;
  wire                tmp_451;
  wire                tmp_452;
  wire                tmp_453;
  wire                tmp_454;
  wire                tmp_455;
  wire                tmp_456;
  wire                tmp_457;
  wire                tmp_458;
  wire                tmp_459;
  wire                tmp_460;
  wire                tmp_461;
  wire                tmp_462;
  wire                tmp_463;
  wire                tmp_464;
  wire                tmp_465;
  wire                tmp_466;
  wire                tmp_467;
  wire                tmp_468;
  wire                tmp_469;
  wire                tmp_470;
  wire                tmp_471;
  wire                tmp_472;
  wire                tmp_473;
  wire                tmp_474;
  wire                tmp_475;
  wire                tmp_476;
  wire                tmp_477;
  wire                tmp_478;
  wire                tmp_479;
  wire                tmp_480;
  wire                tmp_481;
  wire                tmp_482;
  wire                tmp_483;
  wire                tmp_484;
  wire                tmp_485;
  wire                tmp_486;
  wire                tmp_487;
  wire                tmp_488;
  wire                tmp_489;
  wire                tmp_490;
  wire                tmp_491;
  wire                tmp_492;
  wire                tmp_493;
  wire                tmp_494;
  wire                tmp_495;
  wire                tmp_496;
  wire                tmp_497;
  wire                tmp_498;
  wire                tmp_499;
  wire                tmp_500;
  wire                tmp_501;
  wire                tmp_502;
  wire                tmp_503;
  wire                tmp_504;
  wire                tmp_505;
  wire                tmp_506;
  wire                tmp_507;
  wire                tmp_508;
  wire                tmp_509;
  wire                tmp_510;
  wire                tmp_511;
  wire                tmp_512;
  wire                tmp_513;
  wire                tmp_514;
  wire                tmp_515;
  wire                tmp_516;
  wire       [127:0]  tmp_517;
  wire                tmp_518;
  wire                tmp_519;
  wire                tmp_520;
  wire                tmp_521;
  wire                tmp_522;
  wire                tmp_523;
  wire                tmp_524;
  wire                tmp_525;
  wire                tmp_526;
  wire                tmp_527;
  wire                tmp_528;
  wire                tmp_529;
  wire                tmp_530;
  wire                tmp_531;
  wire                tmp_532;
  wire                tmp_533;
  wire                tmp_534;
  wire                tmp_535;
  wire                tmp_536;
  wire                tmp_537;
  wire                tmp_538;
  wire                tmp_539;
  wire                tmp_540;
  wire                tmp_541;
  wire                tmp_542;
  wire                tmp_543;
  wire                tmp_544;
  wire                tmp_545;
  wire                tmp_546;
  wire                tmp_547;
  wire                tmp_548;
  wire                tmp_549;
  wire                tmp_550;
  wire                tmp_551;
  wire                tmp_552;
  wire                tmp_553;
  wire                tmp_554;
  wire                tmp_555;
  wire                tmp_556;
  wire                tmp_557;
  wire                tmp_558;
  wire                tmp_559;
  wire                tmp_560;
  wire                tmp_561;
  wire                tmp_562;
  wire                tmp_563;
  wire                tmp_564;
  wire                tmp_565;
  wire                tmp_566;
  wire                tmp_567;
  wire                tmp_568;
  wire                tmp_569;
  wire                tmp_570;
  wire                tmp_571;
  wire                tmp_572;
  wire                tmp_573;
  wire                tmp_574;
  wire                tmp_575;
  wire                tmp_576;
  wire                tmp_577;
  wire                tmp_578;
  wire                tmp_579;
  wire                tmp_580;
  wire                tmp_581;
  wire                tmp_582;
  wire                tmp_583;
  wire                tmp_584;
  wire                tmp_585;
  wire                tmp_586;
  wire                tmp_587;
  wire                tmp_588;
  wire                tmp_589;
  wire                tmp_590;
  wire                tmp_591;
  wire                tmp_592;
  wire                tmp_593;
  wire                tmp_594;
  wire                tmp_595;
  wire                tmp_596;
  wire                tmp_597;
  wire                tmp_598;
  wire                tmp_599;
  wire                tmp_600;
  wire                tmp_601;
  wire                tmp_602;
  wire                tmp_603;
  wire                tmp_604;
  wire                tmp_605;
  wire                tmp_606;
  wire                tmp_607;
  wire                tmp_608;
  wire                tmp_609;
  wire                tmp_610;
  wire                tmp_611;
  wire                tmp_612;
  wire                tmp_613;
  wire                tmp_614;
  wire                tmp_615;
  wire                tmp_616;
  wire                tmp_617;
  wire                tmp_618;
  wire                tmp_619;
  wire                tmp_620;
  wire                tmp_621;
  wire                tmp_622;
  wire                tmp_623;
  wire                tmp_624;
  wire                tmp_625;
  wire                tmp_626;
  wire                tmp_627;
  wire                tmp_628;
  wire                tmp_629;
  wire                tmp_630;
  wire                tmp_631;
  wire                tmp_632;
  wire                tmp_633;
  wire                tmp_634;
  wire                tmp_635;
  wire                tmp_636;
  wire                tmp_637;
  wire                tmp_638;
  wire                tmp_639;
  wire                tmp_640;
  wire                tmp_641;
  wire                tmp_642;
  wire                tmp_643;
  wire                tmp_644;
  wire                tmp_645;
  wire       [127:0]  tmp_646;
  wire                tmp_647;
  wire                tmp_648;
  wire                tmp_649;
  wire                tmp_650;
  wire                tmp_651;
  wire                tmp_652;
  wire                tmp_653;
  wire                tmp_654;
  wire                tmp_655;
  wire                tmp_656;
  wire                tmp_657;
  wire                tmp_658;
  wire                tmp_659;
  wire                tmp_660;
  wire                tmp_661;
  wire                tmp_662;
  wire                tmp_663;
  wire                tmp_664;
  wire                tmp_665;
  wire                tmp_666;
  wire                tmp_667;
  wire                tmp_668;
  wire                tmp_669;
  wire                tmp_670;
  wire                tmp_671;
  wire                tmp_672;
  wire                tmp_673;
  wire                tmp_674;
  wire                tmp_675;
  wire                tmp_676;
  wire                tmp_677;
  wire                tmp_678;
  wire                tmp_679;
  wire                tmp_680;
  wire                tmp_681;
  wire                tmp_682;
  wire                tmp_683;
  wire                tmp_684;
  wire                tmp_685;
  wire                tmp_686;
  wire                tmp_687;
  wire                tmp_688;
  wire                tmp_689;
  wire                tmp_690;
  wire                tmp_691;
  wire                tmp_692;
  wire                tmp_693;
  wire                tmp_694;
  wire                tmp_695;
  wire                tmp_696;
  wire                tmp_697;
  wire                tmp_698;
  wire                tmp_699;
  wire                tmp_700;
  wire                tmp_701;
  wire                tmp_702;
  wire                tmp_703;
  wire                tmp_704;
  wire                tmp_705;
  wire                tmp_706;
  wire                tmp_707;
  wire                tmp_708;
  wire                tmp_709;
  wire                tmp_710;
  wire                tmp_711;
  wire                tmp_712;
  wire                tmp_713;
  wire                tmp_714;
  wire                tmp_715;
  wire                tmp_716;
  wire                tmp_717;
  wire                tmp_718;
  wire                tmp_719;
  wire                tmp_720;
  wire                tmp_721;
  wire                tmp_722;
  wire                tmp_723;
  wire                tmp_724;
  wire                tmp_725;
  wire                tmp_726;
  wire                tmp_727;
  wire                tmp_728;
  wire                tmp_729;
  wire                tmp_730;
  wire                tmp_731;
  wire                tmp_732;
  wire                tmp_733;
  wire                tmp_734;
  wire                tmp_735;
  wire                tmp_736;
  wire                tmp_737;
  wire                tmp_738;
  wire                tmp_739;
  wire                tmp_740;
  wire                tmp_741;
  wire                tmp_742;
  wire                tmp_743;
  wire                tmp_744;
  wire                tmp_745;
  wire                tmp_746;
  wire                tmp_747;
  wire                tmp_748;
  wire                tmp_749;
  wire                tmp_750;
  wire                tmp_751;
  wire                tmp_752;
  wire                tmp_753;
  wire                tmp_754;
  wire                tmp_755;
  wire                tmp_756;
  wire                tmp_757;
  wire                tmp_758;
  wire                tmp_759;
  wire                tmp_760;
  wire                tmp_761;
  wire                tmp_762;
  wire                tmp_763;
  wire                tmp_764;
  wire                tmp_765;
  wire                tmp_766;
  wire                tmp_767;
  wire                tmp_768;
  wire                tmp_769;
  wire                tmp_770;
  wire                tmp_771;
  wire                tmp_772;
  wire                tmp_773;
  wire                tmp_774;

  assign tmp_when = (flush_busy && (flush_cnt_value == 7'h7f));
  assign tmp_when_1 = (is_hit && (1'b0 == hit_id));
  assign tmp_when_2 = (next_level_done && (1'b0 == evict_id_miss));
  assign tmp_when_3 = (next_level_rsp_valid && (1'b0 == evict_id_miss));
  assign tmp_when_4 = (is_hit && (1'b0 == hit_id));
  assign tmp_when_5 = (next_level_done && (1'b0 == evict_id_miss));
  assign tmp_when_6 = (next_level_rsp_valid && (1'b0 == evict_id_miss));
  assign tmp_when_7 = (is_hit && (1'b1 == hit_id));
  assign tmp_when_8 = (next_level_done && (1'b1 == evict_id_miss));
  assign tmp_when_9 = (next_level_rsp_valid && (1'b1 == evict_id_miss));
  assign tmp_when_10 = (is_hit && (1'b1 == hit_id));
  assign tmp_when_11 = (next_level_done && (1'b1 == evict_id_miss));
  assign tmp_when_12 = (next_level_rsp_valid && (1'b1 == evict_id_miss));
  assign tmp_flush_cnt_valueNext_1 = flush_cnt_willIncrement;
  assign tmp_flush_cnt_valueNext = {6'd0, tmp_flush_cnt_valueNext_1};
  assign tmp_next_level_data_cnt_valueNext_1 = next_level_data_cnt_willIncrement;
  assign tmp_next_level_data_cnt_valueNext = {2'd0, tmp_next_level_data_cnt_valueNext_1};
  assign tmp_sram_0_ports_cmd_payload_addr = {7'd0, next_level_data_cnt_value};
  assign tmp_sram_1_ports_cmd_payload_addr = {7'd0, next_level_data_cnt_value};
  assign tmp_sram_2_ports_cmd_payload_addr = {7'd0, next_level_data_cnt_value};
  assign tmp_sram_3_ports_cmd_payload_addr = {7'd0, next_level_data_cnt_value};
  always @(*) begin
    case(cpu_set)
      7'b0000000 : begin
        tmp_cache_tag_0 = ways_0_metas_0_tag;
        tmp_cache_hit_0 = ways_0_metas_0_vld;
        tmp_cache_mru_0 = ways_0_metas_0_mru;
        tmp_cache_tag_1 = ways_1_metas_0_tag;
        tmp_cache_hit_1 = ways_1_metas_0_vld;
        tmp_cache_mru_1 = ways_1_metas_0_mru;
      end
      7'b0000001 : begin
        tmp_cache_tag_0 = ways_0_metas_1_tag;
        tmp_cache_hit_0 = ways_0_metas_1_vld;
        tmp_cache_mru_0 = ways_0_metas_1_mru;
        tmp_cache_tag_1 = ways_1_metas_1_tag;
        tmp_cache_hit_1 = ways_1_metas_1_vld;
        tmp_cache_mru_1 = ways_1_metas_1_mru;
      end
      7'b0000010 : begin
        tmp_cache_tag_0 = ways_0_metas_2_tag;
        tmp_cache_hit_0 = ways_0_metas_2_vld;
        tmp_cache_mru_0 = ways_0_metas_2_mru;
        tmp_cache_tag_1 = ways_1_metas_2_tag;
        tmp_cache_hit_1 = ways_1_metas_2_vld;
        tmp_cache_mru_1 = ways_1_metas_2_mru;
      end
      7'b0000011 : begin
        tmp_cache_tag_0 = ways_0_metas_3_tag;
        tmp_cache_hit_0 = ways_0_metas_3_vld;
        tmp_cache_mru_0 = ways_0_metas_3_mru;
        tmp_cache_tag_1 = ways_1_metas_3_tag;
        tmp_cache_hit_1 = ways_1_metas_3_vld;
        tmp_cache_mru_1 = ways_1_metas_3_mru;
      end
      7'b0000100 : begin
        tmp_cache_tag_0 = ways_0_metas_4_tag;
        tmp_cache_hit_0 = ways_0_metas_4_vld;
        tmp_cache_mru_0 = ways_0_metas_4_mru;
        tmp_cache_tag_1 = ways_1_metas_4_tag;
        tmp_cache_hit_1 = ways_1_metas_4_vld;
        tmp_cache_mru_1 = ways_1_metas_4_mru;
      end
      7'b0000101 : begin
        tmp_cache_tag_0 = ways_0_metas_5_tag;
        tmp_cache_hit_0 = ways_0_metas_5_vld;
        tmp_cache_mru_0 = ways_0_metas_5_mru;
        tmp_cache_tag_1 = ways_1_metas_5_tag;
        tmp_cache_hit_1 = ways_1_metas_5_vld;
        tmp_cache_mru_1 = ways_1_metas_5_mru;
      end
      7'b0000110 : begin
        tmp_cache_tag_0 = ways_0_metas_6_tag;
        tmp_cache_hit_0 = ways_0_metas_6_vld;
        tmp_cache_mru_0 = ways_0_metas_6_mru;
        tmp_cache_tag_1 = ways_1_metas_6_tag;
        tmp_cache_hit_1 = ways_1_metas_6_vld;
        tmp_cache_mru_1 = ways_1_metas_6_mru;
      end
      7'b0000111 : begin
        tmp_cache_tag_0 = ways_0_metas_7_tag;
        tmp_cache_hit_0 = ways_0_metas_7_vld;
        tmp_cache_mru_0 = ways_0_metas_7_mru;
        tmp_cache_tag_1 = ways_1_metas_7_tag;
        tmp_cache_hit_1 = ways_1_metas_7_vld;
        tmp_cache_mru_1 = ways_1_metas_7_mru;
      end
      7'b0001000 : begin
        tmp_cache_tag_0 = ways_0_metas_8_tag;
        tmp_cache_hit_0 = ways_0_metas_8_vld;
        tmp_cache_mru_0 = ways_0_metas_8_mru;
        tmp_cache_tag_1 = ways_1_metas_8_tag;
        tmp_cache_hit_1 = ways_1_metas_8_vld;
        tmp_cache_mru_1 = ways_1_metas_8_mru;
      end
      7'b0001001 : begin
        tmp_cache_tag_0 = ways_0_metas_9_tag;
        tmp_cache_hit_0 = ways_0_metas_9_vld;
        tmp_cache_mru_0 = ways_0_metas_9_mru;
        tmp_cache_tag_1 = ways_1_metas_9_tag;
        tmp_cache_hit_1 = ways_1_metas_9_vld;
        tmp_cache_mru_1 = ways_1_metas_9_mru;
      end
      7'b0001010 : begin
        tmp_cache_tag_0 = ways_0_metas_10_tag;
        tmp_cache_hit_0 = ways_0_metas_10_vld;
        tmp_cache_mru_0 = ways_0_metas_10_mru;
        tmp_cache_tag_1 = ways_1_metas_10_tag;
        tmp_cache_hit_1 = ways_1_metas_10_vld;
        tmp_cache_mru_1 = ways_1_metas_10_mru;
      end
      7'b0001011 : begin
        tmp_cache_tag_0 = ways_0_metas_11_tag;
        tmp_cache_hit_0 = ways_0_metas_11_vld;
        tmp_cache_mru_0 = ways_0_metas_11_mru;
        tmp_cache_tag_1 = ways_1_metas_11_tag;
        tmp_cache_hit_1 = ways_1_metas_11_vld;
        tmp_cache_mru_1 = ways_1_metas_11_mru;
      end
      7'b0001100 : begin
        tmp_cache_tag_0 = ways_0_metas_12_tag;
        tmp_cache_hit_0 = ways_0_metas_12_vld;
        tmp_cache_mru_0 = ways_0_metas_12_mru;
        tmp_cache_tag_1 = ways_1_metas_12_tag;
        tmp_cache_hit_1 = ways_1_metas_12_vld;
        tmp_cache_mru_1 = ways_1_metas_12_mru;
      end
      7'b0001101 : begin
        tmp_cache_tag_0 = ways_0_metas_13_tag;
        tmp_cache_hit_0 = ways_0_metas_13_vld;
        tmp_cache_mru_0 = ways_0_metas_13_mru;
        tmp_cache_tag_1 = ways_1_metas_13_tag;
        tmp_cache_hit_1 = ways_1_metas_13_vld;
        tmp_cache_mru_1 = ways_1_metas_13_mru;
      end
      7'b0001110 : begin
        tmp_cache_tag_0 = ways_0_metas_14_tag;
        tmp_cache_hit_0 = ways_0_metas_14_vld;
        tmp_cache_mru_0 = ways_0_metas_14_mru;
        tmp_cache_tag_1 = ways_1_metas_14_tag;
        tmp_cache_hit_1 = ways_1_metas_14_vld;
        tmp_cache_mru_1 = ways_1_metas_14_mru;
      end
      7'b0001111 : begin
        tmp_cache_tag_0 = ways_0_metas_15_tag;
        tmp_cache_hit_0 = ways_0_metas_15_vld;
        tmp_cache_mru_0 = ways_0_metas_15_mru;
        tmp_cache_tag_1 = ways_1_metas_15_tag;
        tmp_cache_hit_1 = ways_1_metas_15_vld;
        tmp_cache_mru_1 = ways_1_metas_15_mru;
      end
      7'b0010000 : begin
        tmp_cache_tag_0 = ways_0_metas_16_tag;
        tmp_cache_hit_0 = ways_0_metas_16_vld;
        tmp_cache_mru_0 = ways_0_metas_16_mru;
        tmp_cache_tag_1 = ways_1_metas_16_tag;
        tmp_cache_hit_1 = ways_1_metas_16_vld;
        tmp_cache_mru_1 = ways_1_metas_16_mru;
      end
      7'b0010001 : begin
        tmp_cache_tag_0 = ways_0_metas_17_tag;
        tmp_cache_hit_0 = ways_0_metas_17_vld;
        tmp_cache_mru_0 = ways_0_metas_17_mru;
        tmp_cache_tag_1 = ways_1_metas_17_tag;
        tmp_cache_hit_1 = ways_1_metas_17_vld;
        tmp_cache_mru_1 = ways_1_metas_17_mru;
      end
      7'b0010010 : begin
        tmp_cache_tag_0 = ways_0_metas_18_tag;
        tmp_cache_hit_0 = ways_0_metas_18_vld;
        tmp_cache_mru_0 = ways_0_metas_18_mru;
        tmp_cache_tag_1 = ways_1_metas_18_tag;
        tmp_cache_hit_1 = ways_1_metas_18_vld;
        tmp_cache_mru_1 = ways_1_metas_18_mru;
      end
      7'b0010011 : begin
        tmp_cache_tag_0 = ways_0_metas_19_tag;
        tmp_cache_hit_0 = ways_0_metas_19_vld;
        tmp_cache_mru_0 = ways_0_metas_19_mru;
        tmp_cache_tag_1 = ways_1_metas_19_tag;
        tmp_cache_hit_1 = ways_1_metas_19_vld;
        tmp_cache_mru_1 = ways_1_metas_19_mru;
      end
      7'b0010100 : begin
        tmp_cache_tag_0 = ways_0_metas_20_tag;
        tmp_cache_hit_0 = ways_0_metas_20_vld;
        tmp_cache_mru_0 = ways_0_metas_20_mru;
        tmp_cache_tag_1 = ways_1_metas_20_tag;
        tmp_cache_hit_1 = ways_1_metas_20_vld;
        tmp_cache_mru_1 = ways_1_metas_20_mru;
      end
      7'b0010101 : begin
        tmp_cache_tag_0 = ways_0_metas_21_tag;
        tmp_cache_hit_0 = ways_0_metas_21_vld;
        tmp_cache_mru_0 = ways_0_metas_21_mru;
        tmp_cache_tag_1 = ways_1_metas_21_tag;
        tmp_cache_hit_1 = ways_1_metas_21_vld;
        tmp_cache_mru_1 = ways_1_metas_21_mru;
      end
      7'b0010110 : begin
        tmp_cache_tag_0 = ways_0_metas_22_tag;
        tmp_cache_hit_0 = ways_0_metas_22_vld;
        tmp_cache_mru_0 = ways_0_metas_22_mru;
        tmp_cache_tag_1 = ways_1_metas_22_tag;
        tmp_cache_hit_1 = ways_1_metas_22_vld;
        tmp_cache_mru_1 = ways_1_metas_22_mru;
      end
      7'b0010111 : begin
        tmp_cache_tag_0 = ways_0_metas_23_tag;
        tmp_cache_hit_0 = ways_0_metas_23_vld;
        tmp_cache_mru_0 = ways_0_metas_23_mru;
        tmp_cache_tag_1 = ways_1_metas_23_tag;
        tmp_cache_hit_1 = ways_1_metas_23_vld;
        tmp_cache_mru_1 = ways_1_metas_23_mru;
      end
      7'b0011000 : begin
        tmp_cache_tag_0 = ways_0_metas_24_tag;
        tmp_cache_hit_0 = ways_0_metas_24_vld;
        tmp_cache_mru_0 = ways_0_metas_24_mru;
        tmp_cache_tag_1 = ways_1_metas_24_tag;
        tmp_cache_hit_1 = ways_1_metas_24_vld;
        tmp_cache_mru_1 = ways_1_metas_24_mru;
      end
      7'b0011001 : begin
        tmp_cache_tag_0 = ways_0_metas_25_tag;
        tmp_cache_hit_0 = ways_0_metas_25_vld;
        tmp_cache_mru_0 = ways_0_metas_25_mru;
        tmp_cache_tag_1 = ways_1_metas_25_tag;
        tmp_cache_hit_1 = ways_1_metas_25_vld;
        tmp_cache_mru_1 = ways_1_metas_25_mru;
      end
      7'b0011010 : begin
        tmp_cache_tag_0 = ways_0_metas_26_tag;
        tmp_cache_hit_0 = ways_0_metas_26_vld;
        tmp_cache_mru_0 = ways_0_metas_26_mru;
        tmp_cache_tag_1 = ways_1_metas_26_tag;
        tmp_cache_hit_1 = ways_1_metas_26_vld;
        tmp_cache_mru_1 = ways_1_metas_26_mru;
      end
      7'b0011011 : begin
        tmp_cache_tag_0 = ways_0_metas_27_tag;
        tmp_cache_hit_0 = ways_0_metas_27_vld;
        tmp_cache_mru_0 = ways_0_metas_27_mru;
        tmp_cache_tag_1 = ways_1_metas_27_tag;
        tmp_cache_hit_1 = ways_1_metas_27_vld;
        tmp_cache_mru_1 = ways_1_metas_27_mru;
      end
      7'b0011100 : begin
        tmp_cache_tag_0 = ways_0_metas_28_tag;
        tmp_cache_hit_0 = ways_0_metas_28_vld;
        tmp_cache_mru_0 = ways_0_metas_28_mru;
        tmp_cache_tag_1 = ways_1_metas_28_tag;
        tmp_cache_hit_1 = ways_1_metas_28_vld;
        tmp_cache_mru_1 = ways_1_metas_28_mru;
      end
      7'b0011101 : begin
        tmp_cache_tag_0 = ways_0_metas_29_tag;
        tmp_cache_hit_0 = ways_0_metas_29_vld;
        tmp_cache_mru_0 = ways_0_metas_29_mru;
        tmp_cache_tag_1 = ways_1_metas_29_tag;
        tmp_cache_hit_1 = ways_1_metas_29_vld;
        tmp_cache_mru_1 = ways_1_metas_29_mru;
      end
      7'b0011110 : begin
        tmp_cache_tag_0 = ways_0_metas_30_tag;
        tmp_cache_hit_0 = ways_0_metas_30_vld;
        tmp_cache_mru_0 = ways_0_metas_30_mru;
        tmp_cache_tag_1 = ways_1_metas_30_tag;
        tmp_cache_hit_1 = ways_1_metas_30_vld;
        tmp_cache_mru_1 = ways_1_metas_30_mru;
      end
      7'b0011111 : begin
        tmp_cache_tag_0 = ways_0_metas_31_tag;
        tmp_cache_hit_0 = ways_0_metas_31_vld;
        tmp_cache_mru_0 = ways_0_metas_31_mru;
        tmp_cache_tag_1 = ways_1_metas_31_tag;
        tmp_cache_hit_1 = ways_1_metas_31_vld;
        tmp_cache_mru_1 = ways_1_metas_31_mru;
      end
      7'b0100000 : begin
        tmp_cache_tag_0 = ways_0_metas_32_tag;
        tmp_cache_hit_0 = ways_0_metas_32_vld;
        tmp_cache_mru_0 = ways_0_metas_32_mru;
        tmp_cache_tag_1 = ways_1_metas_32_tag;
        tmp_cache_hit_1 = ways_1_metas_32_vld;
        tmp_cache_mru_1 = ways_1_metas_32_mru;
      end
      7'b0100001 : begin
        tmp_cache_tag_0 = ways_0_metas_33_tag;
        tmp_cache_hit_0 = ways_0_metas_33_vld;
        tmp_cache_mru_0 = ways_0_metas_33_mru;
        tmp_cache_tag_1 = ways_1_metas_33_tag;
        tmp_cache_hit_1 = ways_1_metas_33_vld;
        tmp_cache_mru_1 = ways_1_metas_33_mru;
      end
      7'b0100010 : begin
        tmp_cache_tag_0 = ways_0_metas_34_tag;
        tmp_cache_hit_0 = ways_0_metas_34_vld;
        tmp_cache_mru_0 = ways_0_metas_34_mru;
        tmp_cache_tag_1 = ways_1_metas_34_tag;
        tmp_cache_hit_1 = ways_1_metas_34_vld;
        tmp_cache_mru_1 = ways_1_metas_34_mru;
      end
      7'b0100011 : begin
        tmp_cache_tag_0 = ways_0_metas_35_tag;
        tmp_cache_hit_0 = ways_0_metas_35_vld;
        tmp_cache_mru_0 = ways_0_metas_35_mru;
        tmp_cache_tag_1 = ways_1_metas_35_tag;
        tmp_cache_hit_1 = ways_1_metas_35_vld;
        tmp_cache_mru_1 = ways_1_metas_35_mru;
      end
      7'b0100100 : begin
        tmp_cache_tag_0 = ways_0_metas_36_tag;
        tmp_cache_hit_0 = ways_0_metas_36_vld;
        tmp_cache_mru_0 = ways_0_metas_36_mru;
        tmp_cache_tag_1 = ways_1_metas_36_tag;
        tmp_cache_hit_1 = ways_1_metas_36_vld;
        tmp_cache_mru_1 = ways_1_metas_36_mru;
      end
      7'b0100101 : begin
        tmp_cache_tag_0 = ways_0_metas_37_tag;
        tmp_cache_hit_0 = ways_0_metas_37_vld;
        tmp_cache_mru_0 = ways_0_metas_37_mru;
        tmp_cache_tag_1 = ways_1_metas_37_tag;
        tmp_cache_hit_1 = ways_1_metas_37_vld;
        tmp_cache_mru_1 = ways_1_metas_37_mru;
      end
      7'b0100110 : begin
        tmp_cache_tag_0 = ways_0_metas_38_tag;
        tmp_cache_hit_0 = ways_0_metas_38_vld;
        tmp_cache_mru_0 = ways_0_metas_38_mru;
        tmp_cache_tag_1 = ways_1_metas_38_tag;
        tmp_cache_hit_1 = ways_1_metas_38_vld;
        tmp_cache_mru_1 = ways_1_metas_38_mru;
      end
      7'b0100111 : begin
        tmp_cache_tag_0 = ways_0_metas_39_tag;
        tmp_cache_hit_0 = ways_0_metas_39_vld;
        tmp_cache_mru_0 = ways_0_metas_39_mru;
        tmp_cache_tag_1 = ways_1_metas_39_tag;
        tmp_cache_hit_1 = ways_1_metas_39_vld;
        tmp_cache_mru_1 = ways_1_metas_39_mru;
      end
      7'b0101000 : begin
        tmp_cache_tag_0 = ways_0_metas_40_tag;
        tmp_cache_hit_0 = ways_0_metas_40_vld;
        tmp_cache_mru_0 = ways_0_metas_40_mru;
        tmp_cache_tag_1 = ways_1_metas_40_tag;
        tmp_cache_hit_1 = ways_1_metas_40_vld;
        tmp_cache_mru_1 = ways_1_metas_40_mru;
      end
      7'b0101001 : begin
        tmp_cache_tag_0 = ways_0_metas_41_tag;
        tmp_cache_hit_0 = ways_0_metas_41_vld;
        tmp_cache_mru_0 = ways_0_metas_41_mru;
        tmp_cache_tag_1 = ways_1_metas_41_tag;
        tmp_cache_hit_1 = ways_1_metas_41_vld;
        tmp_cache_mru_1 = ways_1_metas_41_mru;
      end
      7'b0101010 : begin
        tmp_cache_tag_0 = ways_0_metas_42_tag;
        tmp_cache_hit_0 = ways_0_metas_42_vld;
        tmp_cache_mru_0 = ways_0_metas_42_mru;
        tmp_cache_tag_1 = ways_1_metas_42_tag;
        tmp_cache_hit_1 = ways_1_metas_42_vld;
        tmp_cache_mru_1 = ways_1_metas_42_mru;
      end
      7'b0101011 : begin
        tmp_cache_tag_0 = ways_0_metas_43_tag;
        tmp_cache_hit_0 = ways_0_metas_43_vld;
        tmp_cache_mru_0 = ways_0_metas_43_mru;
        tmp_cache_tag_1 = ways_1_metas_43_tag;
        tmp_cache_hit_1 = ways_1_metas_43_vld;
        tmp_cache_mru_1 = ways_1_metas_43_mru;
      end
      7'b0101100 : begin
        tmp_cache_tag_0 = ways_0_metas_44_tag;
        tmp_cache_hit_0 = ways_0_metas_44_vld;
        tmp_cache_mru_0 = ways_0_metas_44_mru;
        tmp_cache_tag_1 = ways_1_metas_44_tag;
        tmp_cache_hit_1 = ways_1_metas_44_vld;
        tmp_cache_mru_1 = ways_1_metas_44_mru;
      end
      7'b0101101 : begin
        tmp_cache_tag_0 = ways_0_metas_45_tag;
        tmp_cache_hit_0 = ways_0_metas_45_vld;
        tmp_cache_mru_0 = ways_0_metas_45_mru;
        tmp_cache_tag_1 = ways_1_metas_45_tag;
        tmp_cache_hit_1 = ways_1_metas_45_vld;
        tmp_cache_mru_1 = ways_1_metas_45_mru;
      end
      7'b0101110 : begin
        tmp_cache_tag_0 = ways_0_metas_46_tag;
        tmp_cache_hit_0 = ways_0_metas_46_vld;
        tmp_cache_mru_0 = ways_0_metas_46_mru;
        tmp_cache_tag_1 = ways_1_metas_46_tag;
        tmp_cache_hit_1 = ways_1_metas_46_vld;
        tmp_cache_mru_1 = ways_1_metas_46_mru;
      end
      7'b0101111 : begin
        tmp_cache_tag_0 = ways_0_metas_47_tag;
        tmp_cache_hit_0 = ways_0_metas_47_vld;
        tmp_cache_mru_0 = ways_0_metas_47_mru;
        tmp_cache_tag_1 = ways_1_metas_47_tag;
        tmp_cache_hit_1 = ways_1_metas_47_vld;
        tmp_cache_mru_1 = ways_1_metas_47_mru;
      end
      7'b0110000 : begin
        tmp_cache_tag_0 = ways_0_metas_48_tag;
        tmp_cache_hit_0 = ways_0_metas_48_vld;
        tmp_cache_mru_0 = ways_0_metas_48_mru;
        tmp_cache_tag_1 = ways_1_metas_48_tag;
        tmp_cache_hit_1 = ways_1_metas_48_vld;
        tmp_cache_mru_1 = ways_1_metas_48_mru;
      end
      7'b0110001 : begin
        tmp_cache_tag_0 = ways_0_metas_49_tag;
        tmp_cache_hit_0 = ways_0_metas_49_vld;
        tmp_cache_mru_0 = ways_0_metas_49_mru;
        tmp_cache_tag_1 = ways_1_metas_49_tag;
        tmp_cache_hit_1 = ways_1_metas_49_vld;
        tmp_cache_mru_1 = ways_1_metas_49_mru;
      end
      7'b0110010 : begin
        tmp_cache_tag_0 = ways_0_metas_50_tag;
        tmp_cache_hit_0 = ways_0_metas_50_vld;
        tmp_cache_mru_0 = ways_0_metas_50_mru;
        tmp_cache_tag_1 = ways_1_metas_50_tag;
        tmp_cache_hit_1 = ways_1_metas_50_vld;
        tmp_cache_mru_1 = ways_1_metas_50_mru;
      end
      7'b0110011 : begin
        tmp_cache_tag_0 = ways_0_metas_51_tag;
        tmp_cache_hit_0 = ways_0_metas_51_vld;
        tmp_cache_mru_0 = ways_0_metas_51_mru;
        tmp_cache_tag_1 = ways_1_metas_51_tag;
        tmp_cache_hit_1 = ways_1_metas_51_vld;
        tmp_cache_mru_1 = ways_1_metas_51_mru;
      end
      7'b0110100 : begin
        tmp_cache_tag_0 = ways_0_metas_52_tag;
        tmp_cache_hit_0 = ways_0_metas_52_vld;
        tmp_cache_mru_0 = ways_0_metas_52_mru;
        tmp_cache_tag_1 = ways_1_metas_52_tag;
        tmp_cache_hit_1 = ways_1_metas_52_vld;
        tmp_cache_mru_1 = ways_1_metas_52_mru;
      end
      7'b0110101 : begin
        tmp_cache_tag_0 = ways_0_metas_53_tag;
        tmp_cache_hit_0 = ways_0_metas_53_vld;
        tmp_cache_mru_0 = ways_0_metas_53_mru;
        tmp_cache_tag_1 = ways_1_metas_53_tag;
        tmp_cache_hit_1 = ways_1_metas_53_vld;
        tmp_cache_mru_1 = ways_1_metas_53_mru;
      end
      7'b0110110 : begin
        tmp_cache_tag_0 = ways_0_metas_54_tag;
        tmp_cache_hit_0 = ways_0_metas_54_vld;
        tmp_cache_mru_0 = ways_0_metas_54_mru;
        tmp_cache_tag_1 = ways_1_metas_54_tag;
        tmp_cache_hit_1 = ways_1_metas_54_vld;
        tmp_cache_mru_1 = ways_1_metas_54_mru;
      end
      7'b0110111 : begin
        tmp_cache_tag_0 = ways_0_metas_55_tag;
        tmp_cache_hit_0 = ways_0_metas_55_vld;
        tmp_cache_mru_0 = ways_0_metas_55_mru;
        tmp_cache_tag_1 = ways_1_metas_55_tag;
        tmp_cache_hit_1 = ways_1_metas_55_vld;
        tmp_cache_mru_1 = ways_1_metas_55_mru;
      end
      7'b0111000 : begin
        tmp_cache_tag_0 = ways_0_metas_56_tag;
        tmp_cache_hit_0 = ways_0_metas_56_vld;
        tmp_cache_mru_0 = ways_0_metas_56_mru;
        tmp_cache_tag_1 = ways_1_metas_56_tag;
        tmp_cache_hit_1 = ways_1_metas_56_vld;
        tmp_cache_mru_1 = ways_1_metas_56_mru;
      end
      7'b0111001 : begin
        tmp_cache_tag_0 = ways_0_metas_57_tag;
        tmp_cache_hit_0 = ways_0_metas_57_vld;
        tmp_cache_mru_0 = ways_0_metas_57_mru;
        tmp_cache_tag_1 = ways_1_metas_57_tag;
        tmp_cache_hit_1 = ways_1_metas_57_vld;
        tmp_cache_mru_1 = ways_1_metas_57_mru;
      end
      7'b0111010 : begin
        tmp_cache_tag_0 = ways_0_metas_58_tag;
        tmp_cache_hit_0 = ways_0_metas_58_vld;
        tmp_cache_mru_0 = ways_0_metas_58_mru;
        tmp_cache_tag_1 = ways_1_metas_58_tag;
        tmp_cache_hit_1 = ways_1_metas_58_vld;
        tmp_cache_mru_1 = ways_1_metas_58_mru;
      end
      7'b0111011 : begin
        tmp_cache_tag_0 = ways_0_metas_59_tag;
        tmp_cache_hit_0 = ways_0_metas_59_vld;
        tmp_cache_mru_0 = ways_0_metas_59_mru;
        tmp_cache_tag_1 = ways_1_metas_59_tag;
        tmp_cache_hit_1 = ways_1_metas_59_vld;
        tmp_cache_mru_1 = ways_1_metas_59_mru;
      end
      7'b0111100 : begin
        tmp_cache_tag_0 = ways_0_metas_60_tag;
        tmp_cache_hit_0 = ways_0_metas_60_vld;
        tmp_cache_mru_0 = ways_0_metas_60_mru;
        tmp_cache_tag_1 = ways_1_metas_60_tag;
        tmp_cache_hit_1 = ways_1_metas_60_vld;
        tmp_cache_mru_1 = ways_1_metas_60_mru;
      end
      7'b0111101 : begin
        tmp_cache_tag_0 = ways_0_metas_61_tag;
        tmp_cache_hit_0 = ways_0_metas_61_vld;
        tmp_cache_mru_0 = ways_0_metas_61_mru;
        tmp_cache_tag_1 = ways_1_metas_61_tag;
        tmp_cache_hit_1 = ways_1_metas_61_vld;
        tmp_cache_mru_1 = ways_1_metas_61_mru;
      end
      7'b0111110 : begin
        tmp_cache_tag_0 = ways_0_metas_62_tag;
        tmp_cache_hit_0 = ways_0_metas_62_vld;
        tmp_cache_mru_0 = ways_0_metas_62_mru;
        tmp_cache_tag_1 = ways_1_metas_62_tag;
        tmp_cache_hit_1 = ways_1_metas_62_vld;
        tmp_cache_mru_1 = ways_1_metas_62_mru;
      end
      7'b0111111 : begin
        tmp_cache_tag_0 = ways_0_metas_63_tag;
        tmp_cache_hit_0 = ways_0_metas_63_vld;
        tmp_cache_mru_0 = ways_0_metas_63_mru;
        tmp_cache_tag_1 = ways_1_metas_63_tag;
        tmp_cache_hit_1 = ways_1_metas_63_vld;
        tmp_cache_mru_1 = ways_1_metas_63_mru;
      end
      7'b1000000 : begin
        tmp_cache_tag_0 = ways_0_metas_64_tag;
        tmp_cache_hit_0 = ways_0_metas_64_vld;
        tmp_cache_mru_0 = ways_0_metas_64_mru;
        tmp_cache_tag_1 = ways_1_metas_64_tag;
        tmp_cache_hit_1 = ways_1_metas_64_vld;
        tmp_cache_mru_1 = ways_1_metas_64_mru;
      end
      7'b1000001 : begin
        tmp_cache_tag_0 = ways_0_metas_65_tag;
        tmp_cache_hit_0 = ways_0_metas_65_vld;
        tmp_cache_mru_0 = ways_0_metas_65_mru;
        tmp_cache_tag_1 = ways_1_metas_65_tag;
        tmp_cache_hit_1 = ways_1_metas_65_vld;
        tmp_cache_mru_1 = ways_1_metas_65_mru;
      end
      7'b1000010 : begin
        tmp_cache_tag_0 = ways_0_metas_66_tag;
        tmp_cache_hit_0 = ways_0_metas_66_vld;
        tmp_cache_mru_0 = ways_0_metas_66_mru;
        tmp_cache_tag_1 = ways_1_metas_66_tag;
        tmp_cache_hit_1 = ways_1_metas_66_vld;
        tmp_cache_mru_1 = ways_1_metas_66_mru;
      end
      7'b1000011 : begin
        tmp_cache_tag_0 = ways_0_metas_67_tag;
        tmp_cache_hit_0 = ways_0_metas_67_vld;
        tmp_cache_mru_0 = ways_0_metas_67_mru;
        tmp_cache_tag_1 = ways_1_metas_67_tag;
        tmp_cache_hit_1 = ways_1_metas_67_vld;
        tmp_cache_mru_1 = ways_1_metas_67_mru;
      end
      7'b1000100 : begin
        tmp_cache_tag_0 = ways_0_metas_68_tag;
        tmp_cache_hit_0 = ways_0_metas_68_vld;
        tmp_cache_mru_0 = ways_0_metas_68_mru;
        tmp_cache_tag_1 = ways_1_metas_68_tag;
        tmp_cache_hit_1 = ways_1_metas_68_vld;
        tmp_cache_mru_1 = ways_1_metas_68_mru;
      end
      7'b1000101 : begin
        tmp_cache_tag_0 = ways_0_metas_69_tag;
        tmp_cache_hit_0 = ways_0_metas_69_vld;
        tmp_cache_mru_0 = ways_0_metas_69_mru;
        tmp_cache_tag_1 = ways_1_metas_69_tag;
        tmp_cache_hit_1 = ways_1_metas_69_vld;
        tmp_cache_mru_1 = ways_1_metas_69_mru;
      end
      7'b1000110 : begin
        tmp_cache_tag_0 = ways_0_metas_70_tag;
        tmp_cache_hit_0 = ways_0_metas_70_vld;
        tmp_cache_mru_0 = ways_0_metas_70_mru;
        tmp_cache_tag_1 = ways_1_metas_70_tag;
        tmp_cache_hit_1 = ways_1_metas_70_vld;
        tmp_cache_mru_1 = ways_1_metas_70_mru;
      end
      7'b1000111 : begin
        tmp_cache_tag_0 = ways_0_metas_71_tag;
        tmp_cache_hit_0 = ways_0_metas_71_vld;
        tmp_cache_mru_0 = ways_0_metas_71_mru;
        tmp_cache_tag_1 = ways_1_metas_71_tag;
        tmp_cache_hit_1 = ways_1_metas_71_vld;
        tmp_cache_mru_1 = ways_1_metas_71_mru;
      end
      7'b1001000 : begin
        tmp_cache_tag_0 = ways_0_metas_72_tag;
        tmp_cache_hit_0 = ways_0_metas_72_vld;
        tmp_cache_mru_0 = ways_0_metas_72_mru;
        tmp_cache_tag_1 = ways_1_metas_72_tag;
        tmp_cache_hit_1 = ways_1_metas_72_vld;
        tmp_cache_mru_1 = ways_1_metas_72_mru;
      end
      7'b1001001 : begin
        tmp_cache_tag_0 = ways_0_metas_73_tag;
        tmp_cache_hit_0 = ways_0_metas_73_vld;
        tmp_cache_mru_0 = ways_0_metas_73_mru;
        tmp_cache_tag_1 = ways_1_metas_73_tag;
        tmp_cache_hit_1 = ways_1_metas_73_vld;
        tmp_cache_mru_1 = ways_1_metas_73_mru;
      end
      7'b1001010 : begin
        tmp_cache_tag_0 = ways_0_metas_74_tag;
        tmp_cache_hit_0 = ways_0_metas_74_vld;
        tmp_cache_mru_0 = ways_0_metas_74_mru;
        tmp_cache_tag_1 = ways_1_metas_74_tag;
        tmp_cache_hit_1 = ways_1_metas_74_vld;
        tmp_cache_mru_1 = ways_1_metas_74_mru;
      end
      7'b1001011 : begin
        tmp_cache_tag_0 = ways_0_metas_75_tag;
        tmp_cache_hit_0 = ways_0_metas_75_vld;
        tmp_cache_mru_0 = ways_0_metas_75_mru;
        tmp_cache_tag_1 = ways_1_metas_75_tag;
        tmp_cache_hit_1 = ways_1_metas_75_vld;
        tmp_cache_mru_1 = ways_1_metas_75_mru;
      end
      7'b1001100 : begin
        tmp_cache_tag_0 = ways_0_metas_76_tag;
        tmp_cache_hit_0 = ways_0_metas_76_vld;
        tmp_cache_mru_0 = ways_0_metas_76_mru;
        tmp_cache_tag_1 = ways_1_metas_76_tag;
        tmp_cache_hit_1 = ways_1_metas_76_vld;
        tmp_cache_mru_1 = ways_1_metas_76_mru;
      end
      7'b1001101 : begin
        tmp_cache_tag_0 = ways_0_metas_77_tag;
        tmp_cache_hit_0 = ways_0_metas_77_vld;
        tmp_cache_mru_0 = ways_0_metas_77_mru;
        tmp_cache_tag_1 = ways_1_metas_77_tag;
        tmp_cache_hit_1 = ways_1_metas_77_vld;
        tmp_cache_mru_1 = ways_1_metas_77_mru;
      end
      7'b1001110 : begin
        tmp_cache_tag_0 = ways_0_metas_78_tag;
        tmp_cache_hit_0 = ways_0_metas_78_vld;
        tmp_cache_mru_0 = ways_0_metas_78_mru;
        tmp_cache_tag_1 = ways_1_metas_78_tag;
        tmp_cache_hit_1 = ways_1_metas_78_vld;
        tmp_cache_mru_1 = ways_1_metas_78_mru;
      end
      7'b1001111 : begin
        tmp_cache_tag_0 = ways_0_metas_79_tag;
        tmp_cache_hit_0 = ways_0_metas_79_vld;
        tmp_cache_mru_0 = ways_0_metas_79_mru;
        tmp_cache_tag_1 = ways_1_metas_79_tag;
        tmp_cache_hit_1 = ways_1_metas_79_vld;
        tmp_cache_mru_1 = ways_1_metas_79_mru;
      end
      7'b1010000 : begin
        tmp_cache_tag_0 = ways_0_metas_80_tag;
        tmp_cache_hit_0 = ways_0_metas_80_vld;
        tmp_cache_mru_0 = ways_0_metas_80_mru;
        tmp_cache_tag_1 = ways_1_metas_80_tag;
        tmp_cache_hit_1 = ways_1_metas_80_vld;
        tmp_cache_mru_1 = ways_1_metas_80_mru;
      end
      7'b1010001 : begin
        tmp_cache_tag_0 = ways_0_metas_81_tag;
        tmp_cache_hit_0 = ways_0_metas_81_vld;
        tmp_cache_mru_0 = ways_0_metas_81_mru;
        tmp_cache_tag_1 = ways_1_metas_81_tag;
        tmp_cache_hit_1 = ways_1_metas_81_vld;
        tmp_cache_mru_1 = ways_1_metas_81_mru;
      end
      7'b1010010 : begin
        tmp_cache_tag_0 = ways_0_metas_82_tag;
        tmp_cache_hit_0 = ways_0_metas_82_vld;
        tmp_cache_mru_0 = ways_0_metas_82_mru;
        tmp_cache_tag_1 = ways_1_metas_82_tag;
        tmp_cache_hit_1 = ways_1_metas_82_vld;
        tmp_cache_mru_1 = ways_1_metas_82_mru;
      end
      7'b1010011 : begin
        tmp_cache_tag_0 = ways_0_metas_83_tag;
        tmp_cache_hit_0 = ways_0_metas_83_vld;
        tmp_cache_mru_0 = ways_0_metas_83_mru;
        tmp_cache_tag_1 = ways_1_metas_83_tag;
        tmp_cache_hit_1 = ways_1_metas_83_vld;
        tmp_cache_mru_1 = ways_1_metas_83_mru;
      end
      7'b1010100 : begin
        tmp_cache_tag_0 = ways_0_metas_84_tag;
        tmp_cache_hit_0 = ways_0_metas_84_vld;
        tmp_cache_mru_0 = ways_0_metas_84_mru;
        tmp_cache_tag_1 = ways_1_metas_84_tag;
        tmp_cache_hit_1 = ways_1_metas_84_vld;
        tmp_cache_mru_1 = ways_1_metas_84_mru;
      end
      7'b1010101 : begin
        tmp_cache_tag_0 = ways_0_metas_85_tag;
        tmp_cache_hit_0 = ways_0_metas_85_vld;
        tmp_cache_mru_0 = ways_0_metas_85_mru;
        tmp_cache_tag_1 = ways_1_metas_85_tag;
        tmp_cache_hit_1 = ways_1_metas_85_vld;
        tmp_cache_mru_1 = ways_1_metas_85_mru;
      end
      7'b1010110 : begin
        tmp_cache_tag_0 = ways_0_metas_86_tag;
        tmp_cache_hit_0 = ways_0_metas_86_vld;
        tmp_cache_mru_0 = ways_0_metas_86_mru;
        tmp_cache_tag_1 = ways_1_metas_86_tag;
        tmp_cache_hit_1 = ways_1_metas_86_vld;
        tmp_cache_mru_1 = ways_1_metas_86_mru;
      end
      7'b1010111 : begin
        tmp_cache_tag_0 = ways_0_metas_87_tag;
        tmp_cache_hit_0 = ways_0_metas_87_vld;
        tmp_cache_mru_0 = ways_0_metas_87_mru;
        tmp_cache_tag_1 = ways_1_metas_87_tag;
        tmp_cache_hit_1 = ways_1_metas_87_vld;
        tmp_cache_mru_1 = ways_1_metas_87_mru;
      end
      7'b1011000 : begin
        tmp_cache_tag_0 = ways_0_metas_88_tag;
        tmp_cache_hit_0 = ways_0_metas_88_vld;
        tmp_cache_mru_0 = ways_0_metas_88_mru;
        tmp_cache_tag_1 = ways_1_metas_88_tag;
        tmp_cache_hit_1 = ways_1_metas_88_vld;
        tmp_cache_mru_1 = ways_1_metas_88_mru;
      end
      7'b1011001 : begin
        tmp_cache_tag_0 = ways_0_metas_89_tag;
        tmp_cache_hit_0 = ways_0_metas_89_vld;
        tmp_cache_mru_0 = ways_0_metas_89_mru;
        tmp_cache_tag_1 = ways_1_metas_89_tag;
        tmp_cache_hit_1 = ways_1_metas_89_vld;
        tmp_cache_mru_1 = ways_1_metas_89_mru;
      end
      7'b1011010 : begin
        tmp_cache_tag_0 = ways_0_metas_90_tag;
        tmp_cache_hit_0 = ways_0_metas_90_vld;
        tmp_cache_mru_0 = ways_0_metas_90_mru;
        tmp_cache_tag_1 = ways_1_metas_90_tag;
        tmp_cache_hit_1 = ways_1_metas_90_vld;
        tmp_cache_mru_1 = ways_1_metas_90_mru;
      end
      7'b1011011 : begin
        tmp_cache_tag_0 = ways_0_metas_91_tag;
        tmp_cache_hit_0 = ways_0_metas_91_vld;
        tmp_cache_mru_0 = ways_0_metas_91_mru;
        tmp_cache_tag_1 = ways_1_metas_91_tag;
        tmp_cache_hit_1 = ways_1_metas_91_vld;
        tmp_cache_mru_1 = ways_1_metas_91_mru;
      end
      7'b1011100 : begin
        tmp_cache_tag_0 = ways_0_metas_92_tag;
        tmp_cache_hit_0 = ways_0_metas_92_vld;
        tmp_cache_mru_0 = ways_0_metas_92_mru;
        tmp_cache_tag_1 = ways_1_metas_92_tag;
        tmp_cache_hit_1 = ways_1_metas_92_vld;
        tmp_cache_mru_1 = ways_1_metas_92_mru;
      end
      7'b1011101 : begin
        tmp_cache_tag_0 = ways_0_metas_93_tag;
        tmp_cache_hit_0 = ways_0_metas_93_vld;
        tmp_cache_mru_0 = ways_0_metas_93_mru;
        tmp_cache_tag_1 = ways_1_metas_93_tag;
        tmp_cache_hit_1 = ways_1_metas_93_vld;
        tmp_cache_mru_1 = ways_1_metas_93_mru;
      end
      7'b1011110 : begin
        tmp_cache_tag_0 = ways_0_metas_94_tag;
        tmp_cache_hit_0 = ways_0_metas_94_vld;
        tmp_cache_mru_0 = ways_0_metas_94_mru;
        tmp_cache_tag_1 = ways_1_metas_94_tag;
        tmp_cache_hit_1 = ways_1_metas_94_vld;
        tmp_cache_mru_1 = ways_1_metas_94_mru;
      end
      7'b1011111 : begin
        tmp_cache_tag_0 = ways_0_metas_95_tag;
        tmp_cache_hit_0 = ways_0_metas_95_vld;
        tmp_cache_mru_0 = ways_0_metas_95_mru;
        tmp_cache_tag_1 = ways_1_metas_95_tag;
        tmp_cache_hit_1 = ways_1_metas_95_vld;
        tmp_cache_mru_1 = ways_1_metas_95_mru;
      end
      7'b1100000 : begin
        tmp_cache_tag_0 = ways_0_metas_96_tag;
        tmp_cache_hit_0 = ways_0_metas_96_vld;
        tmp_cache_mru_0 = ways_0_metas_96_mru;
        tmp_cache_tag_1 = ways_1_metas_96_tag;
        tmp_cache_hit_1 = ways_1_metas_96_vld;
        tmp_cache_mru_1 = ways_1_metas_96_mru;
      end
      7'b1100001 : begin
        tmp_cache_tag_0 = ways_0_metas_97_tag;
        tmp_cache_hit_0 = ways_0_metas_97_vld;
        tmp_cache_mru_0 = ways_0_metas_97_mru;
        tmp_cache_tag_1 = ways_1_metas_97_tag;
        tmp_cache_hit_1 = ways_1_metas_97_vld;
        tmp_cache_mru_1 = ways_1_metas_97_mru;
      end
      7'b1100010 : begin
        tmp_cache_tag_0 = ways_0_metas_98_tag;
        tmp_cache_hit_0 = ways_0_metas_98_vld;
        tmp_cache_mru_0 = ways_0_metas_98_mru;
        tmp_cache_tag_1 = ways_1_metas_98_tag;
        tmp_cache_hit_1 = ways_1_metas_98_vld;
        tmp_cache_mru_1 = ways_1_metas_98_mru;
      end
      7'b1100011 : begin
        tmp_cache_tag_0 = ways_0_metas_99_tag;
        tmp_cache_hit_0 = ways_0_metas_99_vld;
        tmp_cache_mru_0 = ways_0_metas_99_mru;
        tmp_cache_tag_1 = ways_1_metas_99_tag;
        tmp_cache_hit_1 = ways_1_metas_99_vld;
        tmp_cache_mru_1 = ways_1_metas_99_mru;
      end
      7'b1100100 : begin
        tmp_cache_tag_0 = ways_0_metas_100_tag;
        tmp_cache_hit_0 = ways_0_metas_100_vld;
        tmp_cache_mru_0 = ways_0_metas_100_mru;
        tmp_cache_tag_1 = ways_1_metas_100_tag;
        tmp_cache_hit_1 = ways_1_metas_100_vld;
        tmp_cache_mru_1 = ways_1_metas_100_mru;
      end
      7'b1100101 : begin
        tmp_cache_tag_0 = ways_0_metas_101_tag;
        tmp_cache_hit_0 = ways_0_metas_101_vld;
        tmp_cache_mru_0 = ways_0_metas_101_mru;
        tmp_cache_tag_1 = ways_1_metas_101_tag;
        tmp_cache_hit_1 = ways_1_metas_101_vld;
        tmp_cache_mru_1 = ways_1_metas_101_mru;
      end
      7'b1100110 : begin
        tmp_cache_tag_0 = ways_0_metas_102_tag;
        tmp_cache_hit_0 = ways_0_metas_102_vld;
        tmp_cache_mru_0 = ways_0_metas_102_mru;
        tmp_cache_tag_1 = ways_1_metas_102_tag;
        tmp_cache_hit_1 = ways_1_metas_102_vld;
        tmp_cache_mru_1 = ways_1_metas_102_mru;
      end
      7'b1100111 : begin
        tmp_cache_tag_0 = ways_0_metas_103_tag;
        tmp_cache_hit_0 = ways_0_metas_103_vld;
        tmp_cache_mru_0 = ways_0_metas_103_mru;
        tmp_cache_tag_1 = ways_1_metas_103_tag;
        tmp_cache_hit_1 = ways_1_metas_103_vld;
        tmp_cache_mru_1 = ways_1_metas_103_mru;
      end
      7'b1101000 : begin
        tmp_cache_tag_0 = ways_0_metas_104_tag;
        tmp_cache_hit_0 = ways_0_metas_104_vld;
        tmp_cache_mru_0 = ways_0_metas_104_mru;
        tmp_cache_tag_1 = ways_1_metas_104_tag;
        tmp_cache_hit_1 = ways_1_metas_104_vld;
        tmp_cache_mru_1 = ways_1_metas_104_mru;
      end
      7'b1101001 : begin
        tmp_cache_tag_0 = ways_0_metas_105_tag;
        tmp_cache_hit_0 = ways_0_metas_105_vld;
        tmp_cache_mru_0 = ways_0_metas_105_mru;
        tmp_cache_tag_1 = ways_1_metas_105_tag;
        tmp_cache_hit_1 = ways_1_metas_105_vld;
        tmp_cache_mru_1 = ways_1_metas_105_mru;
      end
      7'b1101010 : begin
        tmp_cache_tag_0 = ways_0_metas_106_tag;
        tmp_cache_hit_0 = ways_0_metas_106_vld;
        tmp_cache_mru_0 = ways_0_metas_106_mru;
        tmp_cache_tag_1 = ways_1_metas_106_tag;
        tmp_cache_hit_1 = ways_1_metas_106_vld;
        tmp_cache_mru_1 = ways_1_metas_106_mru;
      end
      7'b1101011 : begin
        tmp_cache_tag_0 = ways_0_metas_107_tag;
        tmp_cache_hit_0 = ways_0_metas_107_vld;
        tmp_cache_mru_0 = ways_0_metas_107_mru;
        tmp_cache_tag_1 = ways_1_metas_107_tag;
        tmp_cache_hit_1 = ways_1_metas_107_vld;
        tmp_cache_mru_1 = ways_1_metas_107_mru;
      end
      7'b1101100 : begin
        tmp_cache_tag_0 = ways_0_metas_108_tag;
        tmp_cache_hit_0 = ways_0_metas_108_vld;
        tmp_cache_mru_0 = ways_0_metas_108_mru;
        tmp_cache_tag_1 = ways_1_metas_108_tag;
        tmp_cache_hit_1 = ways_1_metas_108_vld;
        tmp_cache_mru_1 = ways_1_metas_108_mru;
      end
      7'b1101101 : begin
        tmp_cache_tag_0 = ways_0_metas_109_tag;
        tmp_cache_hit_0 = ways_0_metas_109_vld;
        tmp_cache_mru_0 = ways_0_metas_109_mru;
        tmp_cache_tag_1 = ways_1_metas_109_tag;
        tmp_cache_hit_1 = ways_1_metas_109_vld;
        tmp_cache_mru_1 = ways_1_metas_109_mru;
      end
      7'b1101110 : begin
        tmp_cache_tag_0 = ways_0_metas_110_tag;
        tmp_cache_hit_0 = ways_0_metas_110_vld;
        tmp_cache_mru_0 = ways_0_metas_110_mru;
        tmp_cache_tag_1 = ways_1_metas_110_tag;
        tmp_cache_hit_1 = ways_1_metas_110_vld;
        tmp_cache_mru_1 = ways_1_metas_110_mru;
      end
      7'b1101111 : begin
        tmp_cache_tag_0 = ways_0_metas_111_tag;
        tmp_cache_hit_0 = ways_0_metas_111_vld;
        tmp_cache_mru_0 = ways_0_metas_111_mru;
        tmp_cache_tag_1 = ways_1_metas_111_tag;
        tmp_cache_hit_1 = ways_1_metas_111_vld;
        tmp_cache_mru_1 = ways_1_metas_111_mru;
      end
      7'b1110000 : begin
        tmp_cache_tag_0 = ways_0_metas_112_tag;
        tmp_cache_hit_0 = ways_0_metas_112_vld;
        tmp_cache_mru_0 = ways_0_metas_112_mru;
        tmp_cache_tag_1 = ways_1_metas_112_tag;
        tmp_cache_hit_1 = ways_1_metas_112_vld;
        tmp_cache_mru_1 = ways_1_metas_112_mru;
      end
      7'b1110001 : begin
        tmp_cache_tag_0 = ways_0_metas_113_tag;
        tmp_cache_hit_0 = ways_0_metas_113_vld;
        tmp_cache_mru_0 = ways_0_metas_113_mru;
        tmp_cache_tag_1 = ways_1_metas_113_tag;
        tmp_cache_hit_1 = ways_1_metas_113_vld;
        tmp_cache_mru_1 = ways_1_metas_113_mru;
      end
      7'b1110010 : begin
        tmp_cache_tag_0 = ways_0_metas_114_tag;
        tmp_cache_hit_0 = ways_0_metas_114_vld;
        tmp_cache_mru_0 = ways_0_metas_114_mru;
        tmp_cache_tag_1 = ways_1_metas_114_tag;
        tmp_cache_hit_1 = ways_1_metas_114_vld;
        tmp_cache_mru_1 = ways_1_metas_114_mru;
      end
      7'b1110011 : begin
        tmp_cache_tag_0 = ways_0_metas_115_tag;
        tmp_cache_hit_0 = ways_0_metas_115_vld;
        tmp_cache_mru_0 = ways_0_metas_115_mru;
        tmp_cache_tag_1 = ways_1_metas_115_tag;
        tmp_cache_hit_1 = ways_1_metas_115_vld;
        tmp_cache_mru_1 = ways_1_metas_115_mru;
      end
      7'b1110100 : begin
        tmp_cache_tag_0 = ways_0_metas_116_tag;
        tmp_cache_hit_0 = ways_0_metas_116_vld;
        tmp_cache_mru_0 = ways_0_metas_116_mru;
        tmp_cache_tag_1 = ways_1_metas_116_tag;
        tmp_cache_hit_1 = ways_1_metas_116_vld;
        tmp_cache_mru_1 = ways_1_metas_116_mru;
      end
      7'b1110101 : begin
        tmp_cache_tag_0 = ways_0_metas_117_tag;
        tmp_cache_hit_0 = ways_0_metas_117_vld;
        tmp_cache_mru_0 = ways_0_metas_117_mru;
        tmp_cache_tag_1 = ways_1_metas_117_tag;
        tmp_cache_hit_1 = ways_1_metas_117_vld;
        tmp_cache_mru_1 = ways_1_metas_117_mru;
      end
      7'b1110110 : begin
        tmp_cache_tag_0 = ways_0_metas_118_tag;
        tmp_cache_hit_0 = ways_0_metas_118_vld;
        tmp_cache_mru_0 = ways_0_metas_118_mru;
        tmp_cache_tag_1 = ways_1_metas_118_tag;
        tmp_cache_hit_1 = ways_1_metas_118_vld;
        tmp_cache_mru_1 = ways_1_metas_118_mru;
      end
      7'b1110111 : begin
        tmp_cache_tag_0 = ways_0_metas_119_tag;
        tmp_cache_hit_0 = ways_0_metas_119_vld;
        tmp_cache_mru_0 = ways_0_metas_119_mru;
        tmp_cache_tag_1 = ways_1_metas_119_tag;
        tmp_cache_hit_1 = ways_1_metas_119_vld;
        tmp_cache_mru_1 = ways_1_metas_119_mru;
      end
      7'b1111000 : begin
        tmp_cache_tag_0 = ways_0_metas_120_tag;
        tmp_cache_hit_0 = ways_0_metas_120_vld;
        tmp_cache_mru_0 = ways_0_metas_120_mru;
        tmp_cache_tag_1 = ways_1_metas_120_tag;
        tmp_cache_hit_1 = ways_1_metas_120_vld;
        tmp_cache_mru_1 = ways_1_metas_120_mru;
      end
      7'b1111001 : begin
        tmp_cache_tag_0 = ways_0_metas_121_tag;
        tmp_cache_hit_0 = ways_0_metas_121_vld;
        tmp_cache_mru_0 = ways_0_metas_121_mru;
        tmp_cache_tag_1 = ways_1_metas_121_tag;
        tmp_cache_hit_1 = ways_1_metas_121_vld;
        tmp_cache_mru_1 = ways_1_metas_121_mru;
      end
      7'b1111010 : begin
        tmp_cache_tag_0 = ways_0_metas_122_tag;
        tmp_cache_hit_0 = ways_0_metas_122_vld;
        tmp_cache_mru_0 = ways_0_metas_122_mru;
        tmp_cache_tag_1 = ways_1_metas_122_tag;
        tmp_cache_hit_1 = ways_1_metas_122_vld;
        tmp_cache_mru_1 = ways_1_metas_122_mru;
      end
      7'b1111011 : begin
        tmp_cache_tag_0 = ways_0_metas_123_tag;
        tmp_cache_hit_0 = ways_0_metas_123_vld;
        tmp_cache_mru_0 = ways_0_metas_123_mru;
        tmp_cache_tag_1 = ways_1_metas_123_tag;
        tmp_cache_hit_1 = ways_1_metas_123_vld;
        tmp_cache_mru_1 = ways_1_metas_123_mru;
      end
      7'b1111100 : begin
        tmp_cache_tag_0 = ways_0_metas_124_tag;
        tmp_cache_hit_0 = ways_0_metas_124_vld;
        tmp_cache_mru_0 = ways_0_metas_124_mru;
        tmp_cache_tag_1 = ways_1_metas_124_tag;
        tmp_cache_hit_1 = ways_1_metas_124_vld;
        tmp_cache_mru_1 = ways_1_metas_124_mru;
      end
      7'b1111101 : begin
        tmp_cache_tag_0 = ways_0_metas_125_tag;
        tmp_cache_hit_0 = ways_0_metas_125_vld;
        tmp_cache_mru_0 = ways_0_metas_125_mru;
        tmp_cache_tag_1 = ways_1_metas_125_tag;
        tmp_cache_hit_1 = ways_1_metas_125_vld;
        tmp_cache_mru_1 = ways_1_metas_125_mru;
      end
      7'b1111110 : begin
        tmp_cache_tag_0 = ways_0_metas_126_tag;
        tmp_cache_hit_0 = ways_0_metas_126_vld;
        tmp_cache_mru_0 = ways_0_metas_126_mru;
        tmp_cache_tag_1 = ways_1_metas_126_tag;
        tmp_cache_hit_1 = ways_1_metas_126_vld;
        tmp_cache_mru_1 = ways_1_metas_126_mru;
      end
      default : begin
        tmp_cache_tag_0 = ways_0_metas_127_tag;
        tmp_cache_hit_0 = ways_0_metas_127_vld;
        tmp_cache_mru_0 = ways_0_metas_127_mru;
        tmp_cache_tag_1 = ways_1_metas_127_tag;
        tmp_cache_hit_1 = ways_1_metas_127_vld;
        tmp_cache_mru_1 = ways_1_metas_127_mru;
      end
    endcase
  end

  always @(*) begin
    case(cpu_set_d1)
      7'b0000000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_0_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_0_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_0_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_0_mru;
      end
      7'b0000001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_1_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_1_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_1_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_1_mru;
      end
      7'b0000010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_2_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_2_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_2_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_2_mru;
      end
      7'b0000011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_3_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_3_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_3_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_3_mru;
      end
      7'b0000100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_4_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_4_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_4_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_4_mru;
      end
      7'b0000101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_5_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_5_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_5_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_5_mru;
      end
      7'b0000110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_6_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_6_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_6_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_6_mru;
      end
      7'b0000111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_7_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_7_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_7_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_7_mru;
      end
      7'b0001000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_8_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_8_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_8_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_8_mru;
      end
      7'b0001001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_9_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_9_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_9_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_9_mru;
      end
      7'b0001010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_10_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_10_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_10_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_10_mru;
      end
      7'b0001011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_11_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_11_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_11_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_11_mru;
      end
      7'b0001100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_12_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_12_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_12_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_12_mru;
      end
      7'b0001101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_13_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_13_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_13_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_13_mru;
      end
      7'b0001110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_14_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_14_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_14_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_14_mru;
      end
      7'b0001111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_15_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_15_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_15_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_15_mru;
      end
      7'b0010000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_16_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_16_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_16_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_16_mru;
      end
      7'b0010001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_17_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_17_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_17_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_17_mru;
      end
      7'b0010010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_18_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_18_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_18_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_18_mru;
      end
      7'b0010011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_19_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_19_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_19_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_19_mru;
      end
      7'b0010100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_20_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_20_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_20_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_20_mru;
      end
      7'b0010101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_21_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_21_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_21_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_21_mru;
      end
      7'b0010110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_22_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_22_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_22_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_22_mru;
      end
      7'b0010111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_23_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_23_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_23_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_23_mru;
      end
      7'b0011000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_24_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_24_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_24_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_24_mru;
      end
      7'b0011001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_25_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_25_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_25_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_25_mru;
      end
      7'b0011010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_26_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_26_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_26_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_26_mru;
      end
      7'b0011011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_27_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_27_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_27_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_27_mru;
      end
      7'b0011100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_28_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_28_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_28_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_28_mru;
      end
      7'b0011101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_29_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_29_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_29_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_29_mru;
      end
      7'b0011110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_30_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_30_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_30_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_30_mru;
      end
      7'b0011111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_31_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_31_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_31_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_31_mru;
      end
      7'b0100000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_32_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_32_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_32_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_32_mru;
      end
      7'b0100001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_33_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_33_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_33_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_33_mru;
      end
      7'b0100010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_34_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_34_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_34_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_34_mru;
      end
      7'b0100011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_35_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_35_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_35_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_35_mru;
      end
      7'b0100100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_36_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_36_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_36_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_36_mru;
      end
      7'b0100101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_37_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_37_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_37_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_37_mru;
      end
      7'b0100110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_38_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_38_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_38_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_38_mru;
      end
      7'b0100111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_39_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_39_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_39_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_39_mru;
      end
      7'b0101000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_40_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_40_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_40_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_40_mru;
      end
      7'b0101001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_41_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_41_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_41_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_41_mru;
      end
      7'b0101010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_42_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_42_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_42_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_42_mru;
      end
      7'b0101011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_43_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_43_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_43_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_43_mru;
      end
      7'b0101100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_44_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_44_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_44_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_44_mru;
      end
      7'b0101101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_45_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_45_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_45_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_45_mru;
      end
      7'b0101110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_46_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_46_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_46_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_46_mru;
      end
      7'b0101111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_47_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_47_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_47_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_47_mru;
      end
      7'b0110000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_48_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_48_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_48_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_48_mru;
      end
      7'b0110001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_49_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_49_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_49_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_49_mru;
      end
      7'b0110010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_50_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_50_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_50_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_50_mru;
      end
      7'b0110011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_51_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_51_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_51_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_51_mru;
      end
      7'b0110100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_52_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_52_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_52_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_52_mru;
      end
      7'b0110101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_53_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_53_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_53_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_53_mru;
      end
      7'b0110110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_54_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_54_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_54_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_54_mru;
      end
      7'b0110111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_55_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_55_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_55_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_55_mru;
      end
      7'b0111000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_56_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_56_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_56_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_56_mru;
      end
      7'b0111001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_57_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_57_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_57_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_57_mru;
      end
      7'b0111010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_58_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_58_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_58_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_58_mru;
      end
      7'b0111011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_59_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_59_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_59_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_59_mru;
      end
      7'b0111100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_60_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_60_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_60_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_60_mru;
      end
      7'b0111101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_61_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_61_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_61_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_61_mru;
      end
      7'b0111110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_62_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_62_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_62_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_62_mru;
      end
      7'b0111111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_63_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_63_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_63_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_63_mru;
      end
      7'b1000000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_64_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_64_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_64_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_64_mru;
      end
      7'b1000001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_65_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_65_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_65_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_65_mru;
      end
      7'b1000010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_66_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_66_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_66_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_66_mru;
      end
      7'b1000011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_67_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_67_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_67_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_67_mru;
      end
      7'b1000100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_68_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_68_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_68_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_68_mru;
      end
      7'b1000101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_69_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_69_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_69_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_69_mru;
      end
      7'b1000110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_70_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_70_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_70_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_70_mru;
      end
      7'b1000111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_71_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_71_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_71_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_71_mru;
      end
      7'b1001000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_72_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_72_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_72_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_72_mru;
      end
      7'b1001001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_73_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_73_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_73_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_73_mru;
      end
      7'b1001010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_74_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_74_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_74_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_74_mru;
      end
      7'b1001011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_75_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_75_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_75_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_75_mru;
      end
      7'b1001100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_76_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_76_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_76_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_76_mru;
      end
      7'b1001101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_77_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_77_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_77_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_77_mru;
      end
      7'b1001110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_78_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_78_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_78_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_78_mru;
      end
      7'b1001111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_79_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_79_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_79_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_79_mru;
      end
      7'b1010000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_80_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_80_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_80_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_80_mru;
      end
      7'b1010001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_81_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_81_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_81_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_81_mru;
      end
      7'b1010010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_82_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_82_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_82_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_82_mru;
      end
      7'b1010011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_83_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_83_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_83_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_83_mru;
      end
      7'b1010100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_84_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_84_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_84_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_84_mru;
      end
      7'b1010101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_85_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_85_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_85_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_85_mru;
      end
      7'b1010110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_86_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_86_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_86_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_86_mru;
      end
      7'b1010111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_87_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_87_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_87_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_87_mru;
      end
      7'b1011000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_88_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_88_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_88_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_88_mru;
      end
      7'b1011001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_89_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_89_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_89_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_89_mru;
      end
      7'b1011010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_90_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_90_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_90_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_90_mru;
      end
      7'b1011011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_91_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_91_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_91_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_91_mru;
      end
      7'b1011100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_92_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_92_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_92_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_92_mru;
      end
      7'b1011101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_93_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_93_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_93_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_93_mru;
      end
      7'b1011110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_94_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_94_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_94_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_94_mru;
      end
      7'b1011111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_95_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_95_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_95_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_95_mru;
      end
      7'b1100000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_96_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_96_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_96_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_96_mru;
      end
      7'b1100001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_97_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_97_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_97_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_97_mru;
      end
      7'b1100010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_98_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_98_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_98_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_98_mru;
      end
      7'b1100011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_99_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_99_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_99_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_99_mru;
      end
      7'b1100100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_100_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_100_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_100_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_100_mru;
      end
      7'b1100101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_101_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_101_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_101_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_101_mru;
      end
      7'b1100110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_102_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_102_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_102_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_102_mru;
      end
      7'b1100111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_103_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_103_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_103_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_103_mru;
      end
      7'b1101000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_104_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_104_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_104_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_104_mru;
      end
      7'b1101001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_105_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_105_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_105_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_105_mru;
      end
      7'b1101010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_106_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_106_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_106_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_106_mru;
      end
      7'b1101011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_107_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_107_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_107_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_107_mru;
      end
      7'b1101100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_108_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_108_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_108_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_108_mru;
      end
      7'b1101101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_109_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_109_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_109_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_109_mru;
      end
      7'b1101110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_110_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_110_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_110_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_110_mru;
      end
      7'b1101111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_111_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_111_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_111_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_111_mru;
      end
      7'b1110000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_112_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_112_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_112_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_112_mru;
      end
      7'b1110001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_113_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_113_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_113_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_113_mru;
      end
      7'b1110010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_114_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_114_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_114_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_114_mru;
      end
      7'b1110011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_115_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_115_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_115_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_115_mru;
      end
      7'b1110100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_116_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_116_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_116_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_116_mru;
      end
      7'b1110101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_117_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_117_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_117_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_117_mru;
      end
      7'b1110110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_118_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_118_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_118_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_118_mru;
      end
      7'b1110111 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_119_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_119_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_119_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_119_mru;
      end
      7'b1111000 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_120_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_120_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_120_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_120_mru;
      end
      7'b1111001 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_121_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_121_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_121_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_121_mru;
      end
      7'b1111010 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_122_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_122_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_122_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_122_mru;
      end
      7'b1111011 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_123_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_123_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_123_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_123_mru;
      end
      7'b1111100 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_124_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_124_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_124_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_124_mru;
      end
      7'b1111101 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_125_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_125_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_125_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_125_mru;
      end
      7'b1111110 : begin
        tmp_cache_invld_d1_0 = ways_0_metas_126_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_126_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_126_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_126_mru;
      end
      default : begin
        tmp_cache_invld_d1_0 = ways_0_metas_127_vld;
        tmp_cache_lru_d1_0 = ways_0_metas_127_mru;
        tmp_cache_invld_d1_1 = ways_1_metas_127_vld;
        tmp_cache_lru_d1_1 = ways_1_metas_127_mru;
      end
    endcase
  end

  always @(*) begin
    case(hit_id_d1)
      1'b0 : begin
        tmp_cpu_rsp_payload_data = sram_banks_data_0;
        tmp_cpu_rsp_valid = sram_banks_valid_0;
      end
      default : begin
        tmp_cpu_rsp_payload_data = sram_banks_data_1;
        tmp_cpu_rsp_valid = sram_banks_valid_1;
      end
    endcase
  end

  always @(*) begin
    case(evict_id_miss)
      1'b0 : begin
        tmp_cpu_rsp_payload_data_1 = sram_banks_data_0;
        tmp_cpu_rsp_valid_1 = sram_banks_valid_0;
      end
      default : begin
        tmp_cpu_rsp_payload_data_1 = sram_banks_data_1;
        tmp_cpu_rsp_valid_1 = sram_banks_valid_1;
      end
    endcase
  end

  assign mru_full = (&{cache_mru_1,cache_mru_0}); // @ BaseType.scala l312
  assign cpu_cmd_fire = (cpu_cmd_valid && cpu_cmd_ready); // @ BaseType.scala l305
  assign is_hit = ((|{cache_hit_1,cache_hit_0}) && cpu_cmd_fire); // @ BaseType.scala l305
  assign cpu_cmd_fire_1 = (cpu_cmd_valid && cpu_cmd_ready); // @ BaseType.scala l305
  assign is_miss = ((! (|{cache_hit_1,cache_hit_0})) && cpu_cmd_fire_1); // @ BaseType.scala l305
  assign is_diff = (! (|{cache_victim_1,cache_victim_0})); // @ BaseType.scala l299
  always @(*) begin
    flush_cnt_willIncrement = 1'b0; // @ Utils.scala l536
    if(!tmp_when) begin
      if(flush_busy) begin
        flush_cnt_willIncrement = 1'b1; // @ Utils.scala l540
      end
    end
  end

  always @(*) begin
    flush_cnt_willClear = 1'b0; // @ Utils.scala l537
    if(tmp_when) begin
      flush_cnt_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign flush_cnt_willOverflowIfInc = (flush_cnt_value == 7'h7f); // @ BaseType.scala l305
  assign flush_cnt_willOverflow = (flush_cnt_willOverflowIfInc && flush_cnt_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    flush_cnt_valueNext = (flush_cnt_value + tmp_flush_cnt_valueNext); // @ Utils.scala l548
    if(flush_cnt_willClear) begin
      flush_cnt_valueNext = 7'h0; // @ Utils.scala l558
    end
  end

  assign flush_done = (flush_busy && (flush_cnt_value == 7'h7f)); // @ BaseType.scala l305
  assign cpu_tag = cpu_cmd_payload_addr[31 : 13]; // @ BaseType.scala l299
  assign cpu_set = cpu_cmd_payload_addr[12 : 6]; // @ BaseType.scala l299
  assign cpu_bank_addr = cpu_cmd_payload_addr[12 : 3]; // @ BaseType.scala l299
  assign cpu_bank_index = cpu_cmd_payload_addr[2 : 2]; // @ BaseType.scala l299
  assign cpu_cmd_fire_2 = (cpu_cmd_valid && cpu_cmd_ready); // @ BaseType.scala l305
  assign cpu_set_d1 = cpu_addr_d1[12 : 6]; // @ BaseType.scala l299
  assign cpu_tag_d1 = cpu_addr_d1[31 : 13]; // @ BaseType.scala l299
  assign cpu_bank_addr_d1 = cpu_addr_d1[12 : 3]; // @ BaseType.scala l299
  assign cpu_bank_index_d1 = cpu_addr_d1[2 : 2]; // @ BaseType.scala l299
  always @(*) begin
    next_level_data_cnt_willIncrement = 1'b0; // @ Utils.scala l536
    if(!is_miss) begin
      if(!next_level_done) begin
        if(next_level_rsp_valid) begin
          next_level_data_cnt_willIncrement = 1'b1; // @ Utils.scala l540
        end
      end
    end
  end

  always @(*) begin
    next_level_data_cnt_willClear = 1'b0; // @ Utils.scala l537
    if(is_miss) begin
      next_level_data_cnt_willClear = 1'b1; // @ Utils.scala l539
    end else begin
      if(next_level_done) begin
        next_level_data_cnt_willClear = 1'b1; // @ Utils.scala l539
      end
    end
  end

  assign next_level_data_cnt_willOverflowIfInc = (next_level_data_cnt_value == 3'b111); // @ BaseType.scala l305
  assign next_level_data_cnt_willOverflow = (next_level_data_cnt_willOverflowIfInc && next_level_data_cnt_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    next_level_data_cnt_valueNext = (next_level_data_cnt_value + tmp_next_level_data_cnt_valueNext); // @ Utils.scala l548
    if(next_level_data_cnt_willClear) begin
      next_level_data_cnt_valueNext = 3'b000; // @ Utils.scala l558
    end
  end

  assign next_level_bank_addr = cpu_addr_d1[12 : 6]; // @ BaseType.scala l299
  assign next_level_cmd_fire = (next_level_cmd_valid && next_level_cmd_ready); // @ BaseType.scala l305
  assign hit_id = cache_hit_1; // @ ICache.scala l110
  assign invld_id = cache_invld_d1_1; // @ ICache.scala l111
  assign victim_id = cache_victim_1; // @ ICache.scala l112
  assign evict_id = (is_diff ? invld_id : victim_id); // @ ICache.scala l113
  assign tmp_1 = ({127'd0,1'b1} <<< cpu_set); // @ BaseType.scala l299
  assign tmp_2 = tmp_1[0]; // @ BaseType.scala l305
  assign tmp_3 = tmp_1[1]; // @ BaseType.scala l305
  assign tmp_4 = tmp_1[2]; // @ BaseType.scala l305
  assign tmp_5 = tmp_1[3]; // @ BaseType.scala l305
  assign tmp_6 = tmp_1[4]; // @ BaseType.scala l305
  assign tmp_7 = tmp_1[5]; // @ BaseType.scala l305
  assign tmp_8 = tmp_1[6]; // @ BaseType.scala l305
  assign tmp_9 = tmp_1[7]; // @ BaseType.scala l305
  assign tmp_10 = tmp_1[8]; // @ BaseType.scala l305
  assign tmp_11 = tmp_1[9]; // @ BaseType.scala l305
  assign tmp_12 = tmp_1[10]; // @ BaseType.scala l305
  assign tmp_13 = tmp_1[11]; // @ BaseType.scala l305
  assign tmp_14 = tmp_1[12]; // @ BaseType.scala l305
  assign tmp_15 = tmp_1[13]; // @ BaseType.scala l305
  assign tmp_16 = tmp_1[14]; // @ BaseType.scala l305
  assign tmp_17 = tmp_1[15]; // @ BaseType.scala l305
  assign tmp_18 = tmp_1[16]; // @ BaseType.scala l305
  assign tmp_19 = tmp_1[17]; // @ BaseType.scala l305
  assign tmp_20 = tmp_1[18]; // @ BaseType.scala l305
  assign tmp_21 = tmp_1[19]; // @ BaseType.scala l305
  assign tmp_22 = tmp_1[20]; // @ BaseType.scala l305
  assign tmp_23 = tmp_1[21]; // @ BaseType.scala l305
  assign tmp_24 = tmp_1[22]; // @ BaseType.scala l305
  assign tmp_25 = tmp_1[23]; // @ BaseType.scala l305
  assign tmp_26 = tmp_1[24]; // @ BaseType.scala l305
  assign tmp_27 = tmp_1[25]; // @ BaseType.scala l305
  assign tmp_28 = tmp_1[26]; // @ BaseType.scala l305
  assign tmp_29 = tmp_1[27]; // @ BaseType.scala l305
  assign tmp_30 = tmp_1[28]; // @ BaseType.scala l305
  assign tmp_31 = tmp_1[29]; // @ BaseType.scala l305
  assign tmp_32 = tmp_1[30]; // @ BaseType.scala l305
  assign tmp_33 = tmp_1[31]; // @ BaseType.scala l305
  assign tmp_34 = tmp_1[32]; // @ BaseType.scala l305
  assign tmp_35 = tmp_1[33]; // @ BaseType.scala l305
  assign tmp_36 = tmp_1[34]; // @ BaseType.scala l305
  assign tmp_37 = tmp_1[35]; // @ BaseType.scala l305
  assign tmp_38 = tmp_1[36]; // @ BaseType.scala l305
  assign tmp_39 = tmp_1[37]; // @ BaseType.scala l305
  assign tmp_40 = tmp_1[38]; // @ BaseType.scala l305
  assign tmp_41 = tmp_1[39]; // @ BaseType.scala l305
  assign tmp_42 = tmp_1[40]; // @ BaseType.scala l305
  assign tmp_43 = tmp_1[41]; // @ BaseType.scala l305
  assign tmp_44 = tmp_1[42]; // @ BaseType.scala l305
  assign tmp_45 = tmp_1[43]; // @ BaseType.scala l305
  assign tmp_46 = tmp_1[44]; // @ BaseType.scala l305
  assign tmp_47 = tmp_1[45]; // @ BaseType.scala l305
  assign tmp_48 = tmp_1[46]; // @ BaseType.scala l305
  assign tmp_49 = tmp_1[47]; // @ BaseType.scala l305
  assign tmp_50 = tmp_1[48]; // @ BaseType.scala l305
  assign tmp_51 = tmp_1[49]; // @ BaseType.scala l305
  assign tmp_52 = tmp_1[50]; // @ BaseType.scala l305
  assign tmp_53 = tmp_1[51]; // @ BaseType.scala l305
  assign tmp_54 = tmp_1[52]; // @ BaseType.scala l305
  assign tmp_55 = tmp_1[53]; // @ BaseType.scala l305
  assign tmp_56 = tmp_1[54]; // @ BaseType.scala l305
  assign tmp_57 = tmp_1[55]; // @ BaseType.scala l305
  assign tmp_58 = tmp_1[56]; // @ BaseType.scala l305
  assign tmp_59 = tmp_1[57]; // @ BaseType.scala l305
  assign tmp_60 = tmp_1[58]; // @ BaseType.scala l305
  assign tmp_61 = tmp_1[59]; // @ BaseType.scala l305
  assign tmp_62 = tmp_1[60]; // @ BaseType.scala l305
  assign tmp_63 = tmp_1[61]; // @ BaseType.scala l305
  assign tmp_64 = tmp_1[62]; // @ BaseType.scala l305
  assign tmp_65 = tmp_1[63]; // @ BaseType.scala l305
  assign tmp_66 = tmp_1[64]; // @ BaseType.scala l305
  assign tmp_67 = tmp_1[65]; // @ BaseType.scala l305
  assign tmp_68 = tmp_1[66]; // @ BaseType.scala l305
  assign tmp_69 = tmp_1[67]; // @ BaseType.scala l305
  assign tmp_70 = tmp_1[68]; // @ BaseType.scala l305
  assign tmp_71 = tmp_1[69]; // @ BaseType.scala l305
  assign tmp_72 = tmp_1[70]; // @ BaseType.scala l305
  assign tmp_73 = tmp_1[71]; // @ BaseType.scala l305
  assign tmp_74 = tmp_1[72]; // @ BaseType.scala l305
  assign tmp_75 = tmp_1[73]; // @ BaseType.scala l305
  assign tmp_76 = tmp_1[74]; // @ BaseType.scala l305
  assign tmp_77 = tmp_1[75]; // @ BaseType.scala l305
  assign tmp_78 = tmp_1[76]; // @ BaseType.scala l305
  assign tmp_79 = tmp_1[77]; // @ BaseType.scala l305
  assign tmp_80 = tmp_1[78]; // @ BaseType.scala l305
  assign tmp_81 = tmp_1[79]; // @ BaseType.scala l305
  assign tmp_82 = tmp_1[80]; // @ BaseType.scala l305
  assign tmp_83 = tmp_1[81]; // @ BaseType.scala l305
  assign tmp_84 = tmp_1[82]; // @ BaseType.scala l305
  assign tmp_85 = tmp_1[83]; // @ BaseType.scala l305
  assign tmp_86 = tmp_1[84]; // @ BaseType.scala l305
  assign tmp_87 = tmp_1[85]; // @ BaseType.scala l305
  assign tmp_88 = tmp_1[86]; // @ BaseType.scala l305
  assign tmp_89 = tmp_1[87]; // @ BaseType.scala l305
  assign tmp_90 = tmp_1[88]; // @ BaseType.scala l305
  assign tmp_91 = tmp_1[89]; // @ BaseType.scala l305
  assign tmp_92 = tmp_1[90]; // @ BaseType.scala l305
  assign tmp_93 = tmp_1[91]; // @ BaseType.scala l305
  assign tmp_94 = tmp_1[92]; // @ BaseType.scala l305
  assign tmp_95 = tmp_1[93]; // @ BaseType.scala l305
  assign tmp_96 = tmp_1[94]; // @ BaseType.scala l305
  assign tmp_97 = tmp_1[95]; // @ BaseType.scala l305
  assign tmp_98 = tmp_1[96]; // @ BaseType.scala l305
  assign tmp_99 = tmp_1[97]; // @ BaseType.scala l305
  assign tmp_100 = tmp_1[98]; // @ BaseType.scala l305
  assign tmp_101 = tmp_1[99]; // @ BaseType.scala l305
  assign tmp_102 = tmp_1[100]; // @ BaseType.scala l305
  assign tmp_103 = tmp_1[101]; // @ BaseType.scala l305
  assign tmp_104 = tmp_1[102]; // @ BaseType.scala l305
  assign tmp_105 = tmp_1[103]; // @ BaseType.scala l305
  assign tmp_106 = tmp_1[104]; // @ BaseType.scala l305
  assign tmp_107 = tmp_1[105]; // @ BaseType.scala l305
  assign tmp_108 = tmp_1[106]; // @ BaseType.scala l305
  assign tmp_109 = tmp_1[107]; // @ BaseType.scala l305
  assign tmp_110 = tmp_1[108]; // @ BaseType.scala l305
  assign tmp_111 = tmp_1[109]; // @ BaseType.scala l305
  assign tmp_112 = tmp_1[110]; // @ BaseType.scala l305
  assign tmp_113 = tmp_1[111]; // @ BaseType.scala l305
  assign tmp_114 = tmp_1[112]; // @ BaseType.scala l305
  assign tmp_115 = tmp_1[113]; // @ BaseType.scala l305
  assign tmp_116 = tmp_1[114]; // @ BaseType.scala l305
  assign tmp_117 = tmp_1[115]; // @ BaseType.scala l305
  assign tmp_118 = tmp_1[116]; // @ BaseType.scala l305
  assign tmp_119 = tmp_1[117]; // @ BaseType.scala l305
  assign tmp_120 = tmp_1[118]; // @ BaseType.scala l305
  assign tmp_121 = tmp_1[119]; // @ BaseType.scala l305
  assign tmp_122 = tmp_1[120]; // @ BaseType.scala l305
  assign tmp_123 = tmp_1[121]; // @ BaseType.scala l305
  assign tmp_124 = tmp_1[122]; // @ BaseType.scala l305
  assign tmp_125 = tmp_1[123]; // @ BaseType.scala l305
  assign tmp_126 = tmp_1[124]; // @ BaseType.scala l305
  assign tmp_127 = tmp_1[125]; // @ BaseType.scala l305
  assign tmp_128 = tmp_1[126]; // @ BaseType.scala l305
  assign tmp_129 = tmp_1[127]; // @ BaseType.scala l305
  assign cache_tag_0 = tmp_cache_tag_0; // @ ICache.scala l117
  assign cache_hit_0 = ((cache_tag_0 == cpu_tag) && tmp_cache_hit_0); // @ ICache.scala l118
  assign cache_mru_0 = tmp_cache_mru_0; // @ ICache.scala l119
  assign tmp_130 = ({127'd0,1'b1} <<< cpu_set_d1); // @ BaseType.scala l299
  assign tmp_131 = tmp_130[0]; // @ BaseType.scala l305
  assign tmp_132 = tmp_130[1]; // @ BaseType.scala l305
  assign tmp_133 = tmp_130[2]; // @ BaseType.scala l305
  assign tmp_134 = tmp_130[3]; // @ BaseType.scala l305
  assign tmp_135 = tmp_130[4]; // @ BaseType.scala l305
  assign tmp_136 = tmp_130[5]; // @ BaseType.scala l305
  assign tmp_137 = tmp_130[6]; // @ BaseType.scala l305
  assign tmp_138 = tmp_130[7]; // @ BaseType.scala l305
  assign tmp_139 = tmp_130[8]; // @ BaseType.scala l305
  assign tmp_140 = tmp_130[9]; // @ BaseType.scala l305
  assign tmp_141 = tmp_130[10]; // @ BaseType.scala l305
  assign tmp_142 = tmp_130[11]; // @ BaseType.scala l305
  assign tmp_143 = tmp_130[12]; // @ BaseType.scala l305
  assign tmp_144 = tmp_130[13]; // @ BaseType.scala l305
  assign tmp_145 = tmp_130[14]; // @ BaseType.scala l305
  assign tmp_146 = tmp_130[15]; // @ BaseType.scala l305
  assign tmp_147 = tmp_130[16]; // @ BaseType.scala l305
  assign tmp_148 = tmp_130[17]; // @ BaseType.scala l305
  assign tmp_149 = tmp_130[18]; // @ BaseType.scala l305
  assign tmp_150 = tmp_130[19]; // @ BaseType.scala l305
  assign tmp_151 = tmp_130[20]; // @ BaseType.scala l305
  assign tmp_152 = tmp_130[21]; // @ BaseType.scala l305
  assign tmp_153 = tmp_130[22]; // @ BaseType.scala l305
  assign tmp_154 = tmp_130[23]; // @ BaseType.scala l305
  assign tmp_155 = tmp_130[24]; // @ BaseType.scala l305
  assign tmp_156 = tmp_130[25]; // @ BaseType.scala l305
  assign tmp_157 = tmp_130[26]; // @ BaseType.scala l305
  assign tmp_158 = tmp_130[27]; // @ BaseType.scala l305
  assign tmp_159 = tmp_130[28]; // @ BaseType.scala l305
  assign tmp_160 = tmp_130[29]; // @ BaseType.scala l305
  assign tmp_161 = tmp_130[30]; // @ BaseType.scala l305
  assign tmp_162 = tmp_130[31]; // @ BaseType.scala l305
  assign tmp_163 = tmp_130[32]; // @ BaseType.scala l305
  assign tmp_164 = tmp_130[33]; // @ BaseType.scala l305
  assign tmp_165 = tmp_130[34]; // @ BaseType.scala l305
  assign tmp_166 = tmp_130[35]; // @ BaseType.scala l305
  assign tmp_167 = tmp_130[36]; // @ BaseType.scala l305
  assign tmp_168 = tmp_130[37]; // @ BaseType.scala l305
  assign tmp_169 = tmp_130[38]; // @ BaseType.scala l305
  assign tmp_170 = tmp_130[39]; // @ BaseType.scala l305
  assign tmp_171 = tmp_130[40]; // @ BaseType.scala l305
  assign tmp_172 = tmp_130[41]; // @ BaseType.scala l305
  assign tmp_173 = tmp_130[42]; // @ BaseType.scala l305
  assign tmp_174 = tmp_130[43]; // @ BaseType.scala l305
  assign tmp_175 = tmp_130[44]; // @ BaseType.scala l305
  assign tmp_176 = tmp_130[45]; // @ BaseType.scala l305
  assign tmp_177 = tmp_130[46]; // @ BaseType.scala l305
  assign tmp_178 = tmp_130[47]; // @ BaseType.scala l305
  assign tmp_179 = tmp_130[48]; // @ BaseType.scala l305
  assign tmp_180 = tmp_130[49]; // @ BaseType.scala l305
  assign tmp_181 = tmp_130[50]; // @ BaseType.scala l305
  assign tmp_182 = tmp_130[51]; // @ BaseType.scala l305
  assign tmp_183 = tmp_130[52]; // @ BaseType.scala l305
  assign tmp_184 = tmp_130[53]; // @ BaseType.scala l305
  assign tmp_185 = tmp_130[54]; // @ BaseType.scala l305
  assign tmp_186 = tmp_130[55]; // @ BaseType.scala l305
  assign tmp_187 = tmp_130[56]; // @ BaseType.scala l305
  assign tmp_188 = tmp_130[57]; // @ BaseType.scala l305
  assign tmp_189 = tmp_130[58]; // @ BaseType.scala l305
  assign tmp_190 = tmp_130[59]; // @ BaseType.scala l305
  assign tmp_191 = tmp_130[60]; // @ BaseType.scala l305
  assign tmp_192 = tmp_130[61]; // @ BaseType.scala l305
  assign tmp_193 = tmp_130[62]; // @ BaseType.scala l305
  assign tmp_194 = tmp_130[63]; // @ BaseType.scala l305
  assign tmp_195 = tmp_130[64]; // @ BaseType.scala l305
  assign tmp_196 = tmp_130[65]; // @ BaseType.scala l305
  assign tmp_197 = tmp_130[66]; // @ BaseType.scala l305
  assign tmp_198 = tmp_130[67]; // @ BaseType.scala l305
  assign tmp_199 = tmp_130[68]; // @ BaseType.scala l305
  assign tmp_200 = tmp_130[69]; // @ BaseType.scala l305
  assign tmp_201 = tmp_130[70]; // @ BaseType.scala l305
  assign tmp_202 = tmp_130[71]; // @ BaseType.scala l305
  assign tmp_203 = tmp_130[72]; // @ BaseType.scala l305
  assign tmp_204 = tmp_130[73]; // @ BaseType.scala l305
  assign tmp_205 = tmp_130[74]; // @ BaseType.scala l305
  assign tmp_206 = tmp_130[75]; // @ BaseType.scala l305
  assign tmp_207 = tmp_130[76]; // @ BaseType.scala l305
  assign tmp_208 = tmp_130[77]; // @ BaseType.scala l305
  assign tmp_209 = tmp_130[78]; // @ BaseType.scala l305
  assign tmp_210 = tmp_130[79]; // @ BaseType.scala l305
  assign tmp_211 = tmp_130[80]; // @ BaseType.scala l305
  assign tmp_212 = tmp_130[81]; // @ BaseType.scala l305
  assign tmp_213 = tmp_130[82]; // @ BaseType.scala l305
  assign tmp_214 = tmp_130[83]; // @ BaseType.scala l305
  assign tmp_215 = tmp_130[84]; // @ BaseType.scala l305
  assign tmp_216 = tmp_130[85]; // @ BaseType.scala l305
  assign tmp_217 = tmp_130[86]; // @ BaseType.scala l305
  assign tmp_218 = tmp_130[87]; // @ BaseType.scala l305
  assign tmp_219 = tmp_130[88]; // @ BaseType.scala l305
  assign tmp_220 = tmp_130[89]; // @ BaseType.scala l305
  assign tmp_221 = tmp_130[90]; // @ BaseType.scala l305
  assign tmp_222 = tmp_130[91]; // @ BaseType.scala l305
  assign tmp_223 = tmp_130[92]; // @ BaseType.scala l305
  assign tmp_224 = tmp_130[93]; // @ BaseType.scala l305
  assign tmp_225 = tmp_130[94]; // @ BaseType.scala l305
  assign tmp_226 = tmp_130[95]; // @ BaseType.scala l305
  assign tmp_227 = tmp_130[96]; // @ BaseType.scala l305
  assign tmp_228 = tmp_130[97]; // @ BaseType.scala l305
  assign tmp_229 = tmp_130[98]; // @ BaseType.scala l305
  assign tmp_230 = tmp_130[99]; // @ BaseType.scala l305
  assign tmp_231 = tmp_130[100]; // @ BaseType.scala l305
  assign tmp_232 = tmp_130[101]; // @ BaseType.scala l305
  assign tmp_233 = tmp_130[102]; // @ BaseType.scala l305
  assign tmp_234 = tmp_130[103]; // @ BaseType.scala l305
  assign tmp_235 = tmp_130[104]; // @ BaseType.scala l305
  assign tmp_236 = tmp_130[105]; // @ BaseType.scala l305
  assign tmp_237 = tmp_130[106]; // @ BaseType.scala l305
  assign tmp_238 = tmp_130[107]; // @ BaseType.scala l305
  assign tmp_239 = tmp_130[108]; // @ BaseType.scala l305
  assign tmp_240 = tmp_130[109]; // @ BaseType.scala l305
  assign tmp_241 = tmp_130[110]; // @ BaseType.scala l305
  assign tmp_242 = tmp_130[111]; // @ BaseType.scala l305
  assign tmp_243 = tmp_130[112]; // @ BaseType.scala l305
  assign tmp_244 = tmp_130[113]; // @ BaseType.scala l305
  assign tmp_245 = tmp_130[114]; // @ BaseType.scala l305
  assign tmp_246 = tmp_130[115]; // @ BaseType.scala l305
  assign tmp_247 = tmp_130[116]; // @ BaseType.scala l305
  assign tmp_248 = tmp_130[117]; // @ BaseType.scala l305
  assign tmp_249 = tmp_130[118]; // @ BaseType.scala l305
  assign tmp_250 = tmp_130[119]; // @ BaseType.scala l305
  assign tmp_251 = tmp_130[120]; // @ BaseType.scala l305
  assign tmp_252 = tmp_130[121]; // @ BaseType.scala l305
  assign tmp_253 = tmp_130[122]; // @ BaseType.scala l305
  assign tmp_254 = tmp_130[123]; // @ BaseType.scala l305
  assign tmp_255 = tmp_130[124]; // @ BaseType.scala l305
  assign tmp_256 = tmp_130[125]; // @ BaseType.scala l305
  assign tmp_257 = tmp_130[126]; // @ BaseType.scala l305
  assign tmp_258 = tmp_130[127]; // @ BaseType.scala l305
  assign cache_invld_d1_0 = (! tmp_cache_invld_d1_0); // @ ICache.scala l122
  assign cache_lru_d1_0 = (! tmp_cache_lru_d1_0); // @ ICache.scala l123
  assign cache_victim_0 = (cache_invld_d1_0 && cache_lru_d1_0); // @ ICache.scala l124
  assign sram_banks_data_0 = ((cpu_bank_index_d1 == 1'b0) ? sram_0_ports_rsp_payload_data : sram_1_ports_rsp_payload_data); // @ ICache.scala l128
  assign sram_banks_valid_0 = sram_0_ports_rsp_valid; // @ ICache.scala l129
  always @(*) begin
    if(tmp_when_1) begin
      sram_0_ports_cmd_payload_addr = cpu_bank_addr; // @ ICache.scala l134
    end else begin
      if(tmp_when_2) begin
        sram_0_ports_cmd_payload_addr = cpu_bank_addr_d1; // @ ICache.scala l141
      end else begin
        if(tmp_when_3) begin
          sram_0_ports_cmd_payload_addr = ({next_level_bank_addr,3'b000} + tmp_sram_0_ports_cmd_payload_addr); // @ ICache.scala l148
        end else begin
          sram_0_ports_cmd_payload_addr = 10'h0; // @ ICache.scala l156
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_1) begin
      sram_0_ports_cmd_valid = 1'b1; // @ ICache.scala l135
    end else begin
      if(tmp_when_2) begin
        sram_0_ports_cmd_valid = 1'b1; // @ ICache.scala l142
      end else begin
        if(tmp_when_3) begin
          sram_0_ports_cmd_valid = 1'b1; // @ ICache.scala l150
        end else begin
          sram_0_ports_cmd_valid = 1'b0; // @ ICache.scala l157
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_1) begin
      sram_0_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l136
    end else begin
      if(tmp_when_2) begin
        sram_0_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l143
      end else begin
        if(tmp_when_3) begin
          sram_0_ports_cmd_payload_wen = 1'b1; // @ ICache.scala l151
        end else begin
          sram_0_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l158
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_1) begin
      sram_0_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l137
    end else begin
      if(tmp_when_2) begin
        sram_0_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l144
      end else begin
        if(tmp_when_3) begin
          sram_0_ports_cmd_payload_wdata = next_level_rsp_payload_data[31 : 0]; // @ ICache.scala l152
        end else begin
          sram_0_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l159
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_1) begin
      sram_0_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l138
    end else begin
      if(tmp_when_2) begin
        sram_0_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l145
      end else begin
        if(tmp_when_3) begin
          sram_0_ports_cmd_payload_wstrb = 4'b1111; // @ ICache.scala l153
        end else begin
          sram_0_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l160
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_4) begin
      sram_1_ports_cmd_payload_addr = cpu_bank_addr; // @ ICache.scala l134
    end else begin
      if(tmp_when_5) begin
        sram_1_ports_cmd_payload_addr = cpu_bank_addr_d1; // @ ICache.scala l141
      end else begin
        if(tmp_when_6) begin
          sram_1_ports_cmd_payload_addr = ({next_level_bank_addr,3'b000} + tmp_sram_1_ports_cmd_payload_addr); // @ ICache.scala l148
        end else begin
          sram_1_ports_cmd_payload_addr = 10'h0; // @ ICache.scala l156
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_4) begin
      sram_1_ports_cmd_valid = 1'b1; // @ ICache.scala l135
    end else begin
      if(tmp_when_5) begin
        sram_1_ports_cmd_valid = 1'b1; // @ ICache.scala l142
      end else begin
        if(tmp_when_6) begin
          sram_1_ports_cmd_valid = 1'b1; // @ ICache.scala l150
        end else begin
          sram_1_ports_cmd_valid = 1'b0; // @ ICache.scala l157
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_4) begin
      sram_1_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l136
    end else begin
      if(tmp_when_5) begin
        sram_1_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l143
      end else begin
        if(tmp_when_6) begin
          sram_1_ports_cmd_payload_wen = 1'b1; // @ ICache.scala l151
        end else begin
          sram_1_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l158
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_4) begin
      sram_1_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l137
    end else begin
      if(tmp_when_5) begin
        sram_1_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l144
      end else begin
        if(tmp_when_6) begin
          sram_1_ports_cmd_payload_wdata = next_level_rsp_payload_data[63 : 32]; // @ ICache.scala l152
        end else begin
          sram_1_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l159
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_4) begin
      sram_1_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l138
    end else begin
      if(tmp_when_5) begin
        sram_1_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l145
      end else begin
        if(tmp_when_6) begin
          sram_1_ports_cmd_payload_wstrb = 4'b1111; // @ ICache.scala l153
        end else begin
          sram_1_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l160
        end
      end
    end
  end

  assign tmp_259 = ({127'd0,1'b1} <<< flush_cnt_value); // @ BaseType.scala l299
  assign tmp_260 = tmp_259[0]; // @ BaseType.scala l305
  assign tmp_261 = tmp_259[1]; // @ BaseType.scala l305
  assign tmp_262 = tmp_259[2]; // @ BaseType.scala l305
  assign tmp_263 = tmp_259[3]; // @ BaseType.scala l305
  assign tmp_264 = tmp_259[4]; // @ BaseType.scala l305
  assign tmp_265 = tmp_259[5]; // @ BaseType.scala l305
  assign tmp_266 = tmp_259[6]; // @ BaseType.scala l305
  assign tmp_267 = tmp_259[7]; // @ BaseType.scala l305
  assign tmp_268 = tmp_259[8]; // @ BaseType.scala l305
  assign tmp_269 = tmp_259[9]; // @ BaseType.scala l305
  assign tmp_270 = tmp_259[10]; // @ BaseType.scala l305
  assign tmp_271 = tmp_259[11]; // @ BaseType.scala l305
  assign tmp_272 = tmp_259[12]; // @ BaseType.scala l305
  assign tmp_273 = tmp_259[13]; // @ BaseType.scala l305
  assign tmp_274 = tmp_259[14]; // @ BaseType.scala l305
  assign tmp_275 = tmp_259[15]; // @ BaseType.scala l305
  assign tmp_276 = tmp_259[16]; // @ BaseType.scala l305
  assign tmp_277 = tmp_259[17]; // @ BaseType.scala l305
  assign tmp_278 = tmp_259[18]; // @ BaseType.scala l305
  assign tmp_279 = tmp_259[19]; // @ BaseType.scala l305
  assign tmp_280 = tmp_259[20]; // @ BaseType.scala l305
  assign tmp_281 = tmp_259[21]; // @ BaseType.scala l305
  assign tmp_282 = tmp_259[22]; // @ BaseType.scala l305
  assign tmp_283 = tmp_259[23]; // @ BaseType.scala l305
  assign tmp_284 = tmp_259[24]; // @ BaseType.scala l305
  assign tmp_285 = tmp_259[25]; // @ BaseType.scala l305
  assign tmp_286 = tmp_259[26]; // @ BaseType.scala l305
  assign tmp_287 = tmp_259[27]; // @ BaseType.scala l305
  assign tmp_288 = tmp_259[28]; // @ BaseType.scala l305
  assign tmp_289 = tmp_259[29]; // @ BaseType.scala l305
  assign tmp_290 = tmp_259[30]; // @ BaseType.scala l305
  assign tmp_291 = tmp_259[31]; // @ BaseType.scala l305
  assign tmp_292 = tmp_259[32]; // @ BaseType.scala l305
  assign tmp_293 = tmp_259[33]; // @ BaseType.scala l305
  assign tmp_294 = tmp_259[34]; // @ BaseType.scala l305
  assign tmp_295 = tmp_259[35]; // @ BaseType.scala l305
  assign tmp_296 = tmp_259[36]; // @ BaseType.scala l305
  assign tmp_297 = tmp_259[37]; // @ BaseType.scala l305
  assign tmp_298 = tmp_259[38]; // @ BaseType.scala l305
  assign tmp_299 = tmp_259[39]; // @ BaseType.scala l305
  assign tmp_300 = tmp_259[40]; // @ BaseType.scala l305
  assign tmp_301 = tmp_259[41]; // @ BaseType.scala l305
  assign tmp_302 = tmp_259[42]; // @ BaseType.scala l305
  assign tmp_303 = tmp_259[43]; // @ BaseType.scala l305
  assign tmp_304 = tmp_259[44]; // @ BaseType.scala l305
  assign tmp_305 = tmp_259[45]; // @ BaseType.scala l305
  assign tmp_306 = tmp_259[46]; // @ BaseType.scala l305
  assign tmp_307 = tmp_259[47]; // @ BaseType.scala l305
  assign tmp_308 = tmp_259[48]; // @ BaseType.scala l305
  assign tmp_309 = tmp_259[49]; // @ BaseType.scala l305
  assign tmp_310 = tmp_259[50]; // @ BaseType.scala l305
  assign tmp_311 = tmp_259[51]; // @ BaseType.scala l305
  assign tmp_312 = tmp_259[52]; // @ BaseType.scala l305
  assign tmp_313 = tmp_259[53]; // @ BaseType.scala l305
  assign tmp_314 = tmp_259[54]; // @ BaseType.scala l305
  assign tmp_315 = tmp_259[55]; // @ BaseType.scala l305
  assign tmp_316 = tmp_259[56]; // @ BaseType.scala l305
  assign tmp_317 = tmp_259[57]; // @ BaseType.scala l305
  assign tmp_318 = tmp_259[58]; // @ BaseType.scala l305
  assign tmp_319 = tmp_259[59]; // @ BaseType.scala l305
  assign tmp_320 = tmp_259[60]; // @ BaseType.scala l305
  assign tmp_321 = tmp_259[61]; // @ BaseType.scala l305
  assign tmp_322 = tmp_259[62]; // @ BaseType.scala l305
  assign tmp_323 = tmp_259[63]; // @ BaseType.scala l305
  assign tmp_324 = tmp_259[64]; // @ BaseType.scala l305
  assign tmp_325 = tmp_259[65]; // @ BaseType.scala l305
  assign tmp_326 = tmp_259[66]; // @ BaseType.scala l305
  assign tmp_327 = tmp_259[67]; // @ BaseType.scala l305
  assign tmp_328 = tmp_259[68]; // @ BaseType.scala l305
  assign tmp_329 = tmp_259[69]; // @ BaseType.scala l305
  assign tmp_330 = tmp_259[70]; // @ BaseType.scala l305
  assign tmp_331 = tmp_259[71]; // @ BaseType.scala l305
  assign tmp_332 = tmp_259[72]; // @ BaseType.scala l305
  assign tmp_333 = tmp_259[73]; // @ BaseType.scala l305
  assign tmp_334 = tmp_259[74]; // @ BaseType.scala l305
  assign tmp_335 = tmp_259[75]; // @ BaseType.scala l305
  assign tmp_336 = tmp_259[76]; // @ BaseType.scala l305
  assign tmp_337 = tmp_259[77]; // @ BaseType.scala l305
  assign tmp_338 = tmp_259[78]; // @ BaseType.scala l305
  assign tmp_339 = tmp_259[79]; // @ BaseType.scala l305
  assign tmp_340 = tmp_259[80]; // @ BaseType.scala l305
  assign tmp_341 = tmp_259[81]; // @ BaseType.scala l305
  assign tmp_342 = tmp_259[82]; // @ BaseType.scala l305
  assign tmp_343 = tmp_259[83]; // @ BaseType.scala l305
  assign tmp_344 = tmp_259[84]; // @ BaseType.scala l305
  assign tmp_345 = tmp_259[85]; // @ BaseType.scala l305
  assign tmp_346 = tmp_259[86]; // @ BaseType.scala l305
  assign tmp_347 = tmp_259[87]; // @ BaseType.scala l305
  assign tmp_348 = tmp_259[88]; // @ BaseType.scala l305
  assign tmp_349 = tmp_259[89]; // @ BaseType.scala l305
  assign tmp_350 = tmp_259[90]; // @ BaseType.scala l305
  assign tmp_351 = tmp_259[91]; // @ BaseType.scala l305
  assign tmp_352 = tmp_259[92]; // @ BaseType.scala l305
  assign tmp_353 = tmp_259[93]; // @ BaseType.scala l305
  assign tmp_354 = tmp_259[94]; // @ BaseType.scala l305
  assign tmp_355 = tmp_259[95]; // @ BaseType.scala l305
  assign tmp_356 = tmp_259[96]; // @ BaseType.scala l305
  assign tmp_357 = tmp_259[97]; // @ BaseType.scala l305
  assign tmp_358 = tmp_259[98]; // @ BaseType.scala l305
  assign tmp_359 = tmp_259[99]; // @ BaseType.scala l305
  assign tmp_360 = tmp_259[100]; // @ BaseType.scala l305
  assign tmp_361 = tmp_259[101]; // @ BaseType.scala l305
  assign tmp_362 = tmp_259[102]; // @ BaseType.scala l305
  assign tmp_363 = tmp_259[103]; // @ BaseType.scala l305
  assign tmp_364 = tmp_259[104]; // @ BaseType.scala l305
  assign tmp_365 = tmp_259[105]; // @ BaseType.scala l305
  assign tmp_366 = tmp_259[106]; // @ BaseType.scala l305
  assign tmp_367 = tmp_259[107]; // @ BaseType.scala l305
  assign tmp_368 = tmp_259[108]; // @ BaseType.scala l305
  assign tmp_369 = tmp_259[109]; // @ BaseType.scala l305
  assign tmp_370 = tmp_259[110]; // @ BaseType.scala l305
  assign tmp_371 = tmp_259[111]; // @ BaseType.scala l305
  assign tmp_372 = tmp_259[112]; // @ BaseType.scala l305
  assign tmp_373 = tmp_259[113]; // @ BaseType.scala l305
  assign tmp_374 = tmp_259[114]; // @ BaseType.scala l305
  assign tmp_375 = tmp_259[115]; // @ BaseType.scala l305
  assign tmp_376 = tmp_259[116]; // @ BaseType.scala l305
  assign tmp_377 = tmp_259[117]; // @ BaseType.scala l305
  assign tmp_378 = tmp_259[118]; // @ BaseType.scala l305
  assign tmp_379 = tmp_259[119]; // @ BaseType.scala l305
  assign tmp_380 = tmp_259[120]; // @ BaseType.scala l305
  assign tmp_381 = tmp_259[121]; // @ BaseType.scala l305
  assign tmp_382 = tmp_259[122]; // @ BaseType.scala l305
  assign tmp_383 = tmp_259[123]; // @ BaseType.scala l305
  assign tmp_384 = tmp_259[124]; // @ BaseType.scala l305
  assign tmp_385 = tmp_259[125]; // @ BaseType.scala l305
  assign tmp_386 = tmp_259[126]; // @ BaseType.scala l305
  assign tmp_387 = tmp_259[127]; // @ BaseType.scala l305
  assign tmp_388 = ({127'd0,1'b1} <<< cpu_set); // @ BaseType.scala l299
  assign tmp_389 = tmp_388[0]; // @ BaseType.scala l305
  assign tmp_390 = tmp_388[1]; // @ BaseType.scala l305
  assign tmp_391 = tmp_388[2]; // @ BaseType.scala l305
  assign tmp_392 = tmp_388[3]; // @ BaseType.scala l305
  assign tmp_393 = tmp_388[4]; // @ BaseType.scala l305
  assign tmp_394 = tmp_388[5]; // @ BaseType.scala l305
  assign tmp_395 = tmp_388[6]; // @ BaseType.scala l305
  assign tmp_396 = tmp_388[7]; // @ BaseType.scala l305
  assign tmp_397 = tmp_388[8]; // @ BaseType.scala l305
  assign tmp_398 = tmp_388[9]; // @ BaseType.scala l305
  assign tmp_399 = tmp_388[10]; // @ BaseType.scala l305
  assign tmp_400 = tmp_388[11]; // @ BaseType.scala l305
  assign tmp_401 = tmp_388[12]; // @ BaseType.scala l305
  assign tmp_402 = tmp_388[13]; // @ BaseType.scala l305
  assign tmp_403 = tmp_388[14]; // @ BaseType.scala l305
  assign tmp_404 = tmp_388[15]; // @ BaseType.scala l305
  assign tmp_405 = tmp_388[16]; // @ BaseType.scala l305
  assign tmp_406 = tmp_388[17]; // @ BaseType.scala l305
  assign tmp_407 = tmp_388[18]; // @ BaseType.scala l305
  assign tmp_408 = tmp_388[19]; // @ BaseType.scala l305
  assign tmp_409 = tmp_388[20]; // @ BaseType.scala l305
  assign tmp_410 = tmp_388[21]; // @ BaseType.scala l305
  assign tmp_411 = tmp_388[22]; // @ BaseType.scala l305
  assign tmp_412 = tmp_388[23]; // @ BaseType.scala l305
  assign tmp_413 = tmp_388[24]; // @ BaseType.scala l305
  assign tmp_414 = tmp_388[25]; // @ BaseType.scala l305
  assign tmp_415 = tmp_388[26]; // @ BaseType.scala l305
  assign tmp_416 = tmp_388[27]; // @ BaseType.scala l305
  assign tmp_417 = tmp_388[28]; // @ BaseType.scala l305
  assign tmp_418 = tmp_388[29]; // @ BaseType.scala l305
  assign tmp_419 = tmp_388[30]; // @ BaseType.scala l305
  assign tmp_420 = tmp_388[31]; // @ BaseType.scala l305
  assign tmp_421 = tmp_388[32]; // @ BaseType.scala l305
  assign tmp_422 = tmp_388[33]; // @ BaseType.scala l305
  assign tmp_423 = tmp_388[34]; // @ BaseType.scala l305
  assign tmp_424 = tmp_388[35]; // @ BaseType.scala l305
  assign tmp_425 = tmp_388[36]; // @ BaseType.scala l305
  assign tmp_426 = tmp_388[37]; // @ BaseType.scala l305
  assign tmp_427 = tmp_388[38]; // @ BaseType.scala l305
  assign tmp_428 = tmp_388[39]; // @ BaseType.scala l305
  assign tmp_429 = tmp_388[40]; // @ BaseType.scala l305
  assign tmp_430 = tmp_388[41]; // @ BaseType.scala l305
  assign tmp_431 = tmp_388[42]; // @ BaseType.scala l305
  assign tmp_432 = tmp_388[43]; // @ BaseType.scala l305
  assign tmp_433 = tmp_388[44]; // @ BaseType.scala l305
  assign tmp_434 = tmp_388[45]; // @ BaseType.scala l305
  assign tmp_435 = tmp_388[46]; // @ BaseType.scala l305
  assign tmp_436 = tmp_388[47]; // @ BaseType.scala l305
  assign tmp_437 = tmp_388[48]; // @ BaseType.scala l305
  assign tmp_438 = tmp_388[49]; // @ BaseType.scala l305
  assign tmp_439 = tmp_388[50]; // @ BaseType.scala l305
  assign tmp_440 = tmp_388[51]; // @ BaseType.scala l305
  assign tmp_441 = tmp_388[52]; // @ BaseType.scala l305
  assign tmp_442 = tmp_388[53]; // @ BaseType.scala l305
  assign tmp_443 = tmp_388[54]; // @ BaseType.scala l305
  assign tmp_444 = tmp_388[55]; // @ BaseType.scala l305
  assign tmp_445 = tmp_388[56]; // @ BaseType.scala l305
  assign tmp_446 = tmp_388[57]; // @ BaseType.scala l305
  assign tmp_447 = tmp_388[58]; // @ BaseType.scala l305
  assign tmp_448 = tmp_388[59]; // @ BaseType.scala l305
  assign tmp_449 = tmp_388[60]; // @ BaseType.scala l305
  assign tmp_450 = tmp_388[61]; // @ BaseType.scala l305
  assign tmp_451 = tmp_388[62]; // @ BaseType.scala l305
  assign tmp_452 = tmp_388[63]; // @ BaseType.scala l305
  assign tmp_453 = tmp_388[64]; // @ BaseType.scala l305
  assign tmp_454 = tmp_388[65]; // @ BaseType.scala l305
  assign tmp_455 = tmp_388[66]; // @ BaseType.scala l305
  assign tmp_456 = tmp_388[67]; // @ BaseType.scala l305
  assign tmp_457 = tmp_388[68]; // @ BaseType.scala l305
  assign tmp_458 = tmp_388[69]; // @ BaseType.scala l305
  assign tmp_459 = tmp_388[70]; // @ BaseType.scala l305
  assign tmp_460 = tmp_388[71]; // @ BaseType.scala l305
  assign tmp_461 = tmp_388[72]; // @ BaseType.scala l305
  assign tmp_462 = tmp_388[73]; // @ BaseType.scala l305
  assign tmp_463 = tmp_388[74]; // @ BaseType.scala l305
  assign tmp_464 = tmp_388[75]; // @ BaseType.scala l305
  assign tmp_465 = tmp_388[76]; // @ BaseType.scala l305
  assign tmp_466 = tmp_388[77]; // @ BaseType.scala l305
  assign tmp_467 = tmp_388[78]; // @ BaseType.scala l305
  assign tmp_468 = tmp_388[79]; // @ BaseType.scala l305
  assign tmp_469 = tmp_388[80]; // @ BaseType.scala l305
  assign tmp_470 = tmp_388[81]; // @ BaseType.scala l305
  assign tmp_471 = tmp_388[82]; // @ BaseType.scala l305
  assign tmp_472 = tmp_388[83]; // @ BaseType.scala l305
  assign tmp_473 = tmp_388[84]; // @ BaseType.scala l305
  assign tmp_474 = tmp_388[85]; // @ BaseType.scala l305
  assign tmp_475 = tmp_388[86]; // @ BaseType.scala l305
  assign tmp_476 = tmp_388[87]; // @ BaseType.scala l305
  assign tmp_477 = tmp_388[88]; // @ BaseType.scala l305
  assign tmp_478 = tmp_388[89]; // @ BaseType.scala l305
  assign tmp_479 = tmp_388[90]; // @ BaseType.scala l305
  assign tmp_480 = tmp_388[91]; // @ BaseType.scala l305
  assign tmp_481 = tmp_388[92]; // @ BaseType.scala l305
  assign tmp_482 = tmp_388[93]; // @ BaseType.scala l305
  assign tmp_483 = tmp_388[94]; // @ BaseType.scala l305
  assign tmp_484 = tmp_388[95]; // @ BaseType.scala l305
  assign tmp_485 = tmp_388[96]; // @ BaseType.scala l305
  assign tmp_486 = tmp_388[97]; // @ BaseType.scala l305
  assign tmp_487 = tmp_388[98]; // @ BaseType.scala l305
  assign tmp_488 = tmp_388[99]; // @ BaseType.scala l305
  assign tmp_489 = tmp_388[100]; // @ BaseType.scala l305
  assign tmp_490 = tmp_388[101]; // @ BaseType.scala l305
  assign tmp_491 = tmp_388[102]; // @ BaseType.scala l305
  assign tmp_492 = tmp_388[103]; // @ BaseType.scala l305
  assign tmp_493 = tmp_388[104]; // @ BaseType.scala l305
  assign tmp_494 = tmp_388[105]; // @ BaseType.scala l305
  assign tmp_495 = tmp_388[106]; // @ BaseType.scala l305
  assign tmp_496 = tmp_388[107]; // @ BaseType.scala l305
  assign tmp_497 = tmp_388[108]; // @ BaseType.scala l305
  assign tmp_498 = tmp_388[109]; // @ BaseType.scala l305
  assign tmp_499 = tmp_388[110]; // @ BaseType.scala l305
  assign tmp_500 = tmp_388[111]; // @ BaseType.scala l305
  assign tmp_501 = tmp_388[112]; // @ BaseType.scala l305
  assign tmp_502 = tmp_388[113]; // @ BaseType.scala l305
  assign tmp_503 = tmp_388[114]; // @ BaseType.scala l305
  assign tmp_504 = tmp_388[115]; // @ BaseType.scala l305
  assign tmp_505 = tmp_388[116]; // @ BaseType.scala l305
  assign tmp_506 = tmp_388[117]; // @ BaseType.scala l305
  assign tmp_507 = tmp_388[118]; // @ BaseType.scala l305
  assign tmp_508 = tmp_388[119]; // @ BaseType.scala l305
  assign tmp_509 = tmp_388[120]; // @ BaseType.scala l305
  assign tmp_510 = tmp_388[121]; // @ BaseType.scala l305
  assign tmp_511 = tmp_388[122]; // @ BaseType.scala l305
  assign tmp_512 = tmp_388[123]; // @ BaseType.scala l305
  assign tmp_513 = tmp_388[124]; // @ BaseType.scala l305
  assign tmp_514 = tmp_388[125]; // @ BaseType.scala l305
  assign tmp_515 = tmp_388[126]; // @ BaseType.scala l305
  assign tmp_516 = tmp_388[127]; // @ BaseType.scala l305
  assign cache_tag_1 = tmp_cache_tag_1; // @ ICache.scala l117
  assign cache_hit_1 = ((cache_tag_1 == cpu_tag) && tmp_cache_hit_1); // @ ICache.scala l118
  assign cache_mru_1 = tmp_cache_mru_1; // @ ICache.scala l119
  assign tmp_517 = ({127'd0,1'b1} <<< cpu_set_d1); // @ BaseType.scala l299
  assign tmp_518 = tmp_517[0]; // @ BaseType.scala l305
  assign tmp_519 = tmp_517[1]; // @ BaseType.scala l305
  assign tmp_520 = tmp_517[2]; // @ BaseType.scala l305
  assign tmp_521 = tmp_517[3]; // @ BaseType.scala l305
  assign tmp_522 = tmp_517[4]; // @ BaseType.scala l305
  assign tmp_523 = tmp_517[5]; // @ BaseType.scala l305
  assign tmp_524 = tmp_517[6]; // @ BaseType.scala l305
  assign tmp_525 = tmp_517[7]; // @ BaseType.scala l305
  assign tmp_526 = tmp_517[8]; // @ BaseType.scala l305
  assign tmp_527 = tmp_517[9]; // @ BaseType.scala l305
  assign tmp_528 = tmp_517[10]; // @ BaseType.scala l305
  assign tmp_529 = tmp_517[11]; // @ BaseType.scala l305
  assign tmp_530 = tmp_517[12]; // @ BaseType.scala l305
  assign tmp_531 = tmp_517[13]; // @ BaseType.scala l305
  assign tmp_532 = tmp_517[14]; // @ BaseType.scala l305
  assign tmp_533 = tmp_517[15]; // @ BaseType.scala l305
  assign tmp_534 = tmp_517[16]; // @ BaseType.scala l305
  assign tmp_535 = tmp_517[17]; // @ BaseType.scala l305
  assign tmp_536 = tmp_517[18]; // @ BaseType.scala l305
  assign tmp_537 = tmp_517[19]; // @ BaseType.scala l305
  assign tmp_538 = tmp_517[20]; // @ BaseType.scala l305
  assign tmp_539 = tmp_517[21]; // @ BaseType.scala l305
  assign tmp_540 = tmp_517[22]; // @ BaseType.scala l305
  assign tmp_541 = tmp_517[23]; // @ BaseType.scala l305
  assign tmp_542 = tmp_517[24]; // @ BaseType.scala l305
  assign tmp_543 = tmp_517[25]; // @ BaseType.scala l305
  assign tmp_544 = tmp_517[26]; // @ BaseType.scala l305
  assign tmp_545 = tmp_517[27]; // @ BaseType.scala l305
  assign tmp_546 = tmp_517[28]; // @ BaseType.scala l305
  assign tmp_547 = tmp_517[29]; // @ BaseType.scala l305
  assign tmp_548 = tmp_517[30]; // @ BaseType.scala l305
  assign tmp_549 = tmp_517[31]; // @ BaseType.scala l305
  assign tmp_550 = tmp_517[32]; // @ BaseType.scala l305
  assign tmp_551 = tmp_517[33]; // @ BaseType.scala l305
  assign tmp_552 = tmp_517[34]; // @ BaseType.scala l305
  assign tmp_553 = tmp_517[35]; // @ BaseType.scala l305
  assign tmp_554 = tmp_517[36]; // @ BaseType.scala l305
  assign tmp_555 = tmp_517[37]; // @ BaseType.scala l305
  assign tmp_556 = tmp_517[38]; // @ BaseType.scala l305
  assign tmp_557 = tmp_517[39]; // @ BaseType.scala l305
  assign tmp_558 = tmp_517[40]; // @ BaseType.scala l305
  assign tmp_559 = tmp_517[41]; // @ BaseType.scala l305
  assign tmp_560 = tmp_517[42]; // @ BaseType.scala l305
  assign tmp_561 = tmp_517[43]; // @ BaseType.scala l305
  assign tmp_562 = tmp_517[44]; // @ BaseType.scala l305
  assign tmp_563 = tmp_517[45]; // @ BaseType.scala l305
  assign tmp_564 = tmp_517[46]; // @ BaseType.scala l305
  assign tmp_565 = tmp_517[47]; // @ BaseType.scala l305
  assign tmp_566 = tmp_517[48]; // @ BaseType.scala l305
  assign tmp_567 = tmp_517[49]; // @ BaseType.scala l305
  assign tmp_568 = tmp_517[50]; // @ BaseType.scala l305
  assign tmp_569 = tmp_517[51]; // @ BaseType.scala l305
  assign tmp_570 = tmp_517[52]; // @ BaseType.scala l305
  assign tmp_571 = tmp_517[53]; // @ BaseType.scala l305
  assign tmp_572 = tmp_517[54]; // @ BaseType.scala l305
  assign tmp_573 = tmp_517[55]; // @ BaseType.scala l305
  assign tmp_574 = tmp_517[56]; // @ BaseType.scala l305
  assign tmp_575 = tmp_517[57]; // @ BaseType.scala l305
  assign tmp_576 = tmp_517[58]; // @ BaseType.scala l305
  assign tmp_577 = tmp_517[59]; // @ BaseType.scala l305
  assign tmp_578 = tmp_517[60]; // @ BaseType.scala l305
  assign tmp_579 = tmp_517[61]; // @ BaseType.scala l305
  assign tmp_580 = tmp_517[62]; // @ BaseType.scala l305
  assign tmp_581 = tmp_517[63]; // @ BaseType.scala l305
  assign tmp_582 = tmp_517[64]; // @ BaseType.scala l305
  assign tmp_583 = tmp_517[65]; // @ BaseType.scala l305
  assign tmp_584 = tmp_517[66]; // @ BaseType.scala l305
  assign tmp_585 = tmp_517[67]; // @ BaseType.scala l305
  assign tmp_586 = tmp_517[68]; // @ BaseType.scala l305
  assign tmp_587 = tmp_517[69]; // @ BaseType.scala l305
  assign tmp_588 = tmp_517[70]; // @ BaseType.scala l305
  assign tmp_589 = tmp_517[71]; // @ BaseType.scala l305
  assign tmp_590 = tmp_517[72]; // @ BaseType.scala l305
  assign tmp_591 = tmp_517[73]; // @ BaseType.scala l305
  assign tmp_592 = tmp_517[74]; // @ BaseType.scala l305
  assign tmp_593 = tmp_517[75]; // @ BaseType.scala l305
  assign tmp_594 = tmp_517[76]; // @ BaseType.scala l305
  assign tmp_595 = tmp_517[77]; // @ BaseType.scala l305
  assign tmp_596 = tmp_517[78]; // @ BaseType.scala l305
  assign tmp_597 = tmp_517[79]; // @ BaseType.scala l305
  assign tmp_598 = tmp_517[80]; // @ BaseType.scala l305
  assign tmp_599 = tmp_517[81]; // @ BaseType.scala l305
  assign tmp_600 = tmp_517[82]; // @ BaseType.scala l305
  assign tmp_601 = tmp_517[83]; // @ BaseType.scala l305
  assign tmp_602 = tmp_517[84]; // @ BaseType.scala l305
  assign tmp_603 = tmp_517[85]; // @ BaseType.scala l305
  assign tmp_604 = tmp_517[86]; // @ BaseType.scala l305
  assign tmp_605 = tmp_517[87]; // @ BaseType.scala l305
  assign tmp_606 = tmp_517[88]; // @ BaseType.scala l305
  assign tmp_607 = tmp_517[89]; // @ BaseType.scala l305
  assign tmp_608 = tmp_517[90]; // @ BaseType.scala l305
  assign tmp_609 = tmp_517[91]; // @ BaseType.scala l305
  assign tmp_610 = tmp_517[92]; // @ BaseType.scala l305
  assign tmp_611 = tmp_517[93]; // @ BaseType.scala l305
  assign tmp_612 = tmp_517[94]; // @ BaseType.scala l305
  assign tmp_613 = tmp_517[95]; // @ BaseType.scala l305
  assign tmp_614 = tmp_517[96]; // @ BaseType.scala l305
  assign tmp_615 = tmp_517[97]; // @ BaseType.scala l305
  assign tmp_616 = tmp_517[98]; // @ BaseType.scala l305
  assign tmp_617 = tmp_517[99]; // @ BaseType.scala l305
  assign tmp_618 = tmp_517[100]; // @ BaseType.scala l305
  assign tmp_619 = tmp_517[101]; // @ BaseType.scala l305
  assign tmp_620 = tmp_517[102]; // @ BaseType.scala l305
  assign tmp_621 = tmp_517[103]; // @ BaseType.scala l305
  assign tmp_622 = tmp_517[104]; // @ BaseType.scala l305
  assign tmp_623 = tmp_517[105]; // @ BaseType.scala l305
  assign tmp_624 = tmp_517[106]; // @ BaseType.scala l305
  assign tmp_625 = tmp_517[107]; // @ BaseType.scala l305
  assign tmp_626 = tmp_517[108]; // @ BaseType.scala l305
  assign tmp_627 = tmp_517[109]; // @ BaseType.scala l305
  assign tmp_628 = tmp_517[110]; // @ BaseType.scala l305
  assign tmp_629 = tmp_517[111]; // @ BaseType.scala l305
  assign tmp_630 = tmp_517[112]; // @ BaseType.scala l305
  assign tmp_631 = tmp_517[113]; // @ BaseType.scala l305
  assign tmp_632 = tmp_517[114]; // @ BaseType.scala l305
  assign tmp_633 = tmp_517[115]; // @ BaseType.scala l305
  assign tmp_634 = tmp_517[116]; // @ BaseType.scala l305
  assign tmp_635 = tmp_517[117]; // @ BaseType.scala l305
  assign tmp_636 = tmp_517[118]; // @ BaseType.scala l305
  assign tmp_637 = tmp_517[119]; // @ BaseType.scala l305
  assign tmp_638 = tmp_517[120]; // @ BaseType.scala l305
  assign tmp_639 = tmp_517[121]; // @ BaseType.scala l305
  assign tmp_640 = tmp_517[122]; // @ BaseType.scala l305
  assign tmp_641 = tmp_517[123]; // @ BaseType.scala l305
  assign tmp_642 = tmp_517[124]; // @ BaseType.scala l305
  assign tmp_643 = tmp_517[125]; // @ BaseType.scala l305
  assign tmp_644 = tmp_517[126]; // @ BaseType.scala l305
  assign tmp_645 = tmp_517[127]; // @ BaseType.scala l305
  assign cache_invld_d1_1 = (! tmp_cache_invld_d1_1); // @ ICache.scala l122
  assign cache_lru_d1_1 = (! tmp_cache_lru_d1_1); // @ ICache.scala l123
  assign cache_victim_1 = (cache_invld_d1_1 && cache_lru_d1_1); // @ ICache.scala l124
  assign sram_banks_data_1 = ((cpu_bank_index_d1 == 1'b0) ? sram_2_ports_rsp_payload_data : sram_3_ports_rsp_payload_data); // @ ICache.scala l128
  assign sram_banks_valid_1 = sram_2_ports_rsp_valid; // @ ICache.scala l129
  always @(*) begin
    if(tmp_when_7) begin
      sram_2_ports_cmd_payload_addr = cpu_bank_addr; // @ ICache.scala l134
    end else begin
      if(tmp_when_8) begin
        sram_2_ports_cmd_payload_addr = cpu_bank_addr_d1; // @ ICache.scala l141
      end else begin
        if(tmp_when_9) begin
          sram_2_ports_cmd_payload_addr = ({next_level_bank_addr,3'b000} + tmp_sram_2_ports_cmd_payload_addr); // @ ICache.scala l148
        end else begin
          sram_2_ports_cmd_payload_addr = 10'h0; // @ ICache.scala l156
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_7) begin
      sram_2_ports_cmd_valid = 1'b1; // @ ICache.scala l135
    end else begin
      if(tmp_when_8) begin
        sram_2_ports_cmd_valid = 1'b1; // @ ICache.scala l142
      end else begin
        if(tmp_when_9) begin
          sram_2_ports_cmd_valid = 1'b1; // @ ICache.scala l150
        end else begin
          sram_2_ports_cmd_valid = 1'b0; // @ ICache.scala l157
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_7) begin
      sram_2_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l136
    end else begin
      if(tmp_when_8) begin
        sram_2_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l143
      end else begin
        if(tmp_when_9) begin
          sram_2_ports_cmd_payload_wen = 1'b1; // @ ICache.scala l151
        end else begin
          sram_2_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l158
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_7) begin
      sram_2_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l137
    end else begin
      if(tmp_when_8) begin
        sram_2_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l144
      end else begin
        if(tmp_when_9) begin
          sram_2_ports_cmd_payload_wdata = next_level_rsp_payload_data[31 : 0]; // @ ICache.scala l152
        end else begin
          sram_2_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l159
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_7) begin
      sram_2_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l138
    end else begin
      if(tmp_when_8) begin
        sram_2_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l145
      end else begin
        if(tmp_when_9) begin
          sram_2_ports_cmd_payload_wstrb = 4'b1111; // @ ICache.scala l153
        end else begin
          sram_2_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l160
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_10) begin
      sram_3_ports_cmd_payload_addr = cpu_bank_addr; // @ ICache.scala l134
    end else begin
      if(tmp_when_11) begin
        sram_3_ports_cmd_payload_addr = cpu_bank_addr_d1; // @ ICache.scala l141
      end else begin
        if(tmp_when_12) begin
          sram_3_ports_cmd_payload_addr = ({next_level_bank_addr,3'b000} + tmp_sram_3_ports_cmd_payload_addr); // @ ICache.scala l148
        end else begin
          sram_3_ports_cmd_payload_addr = 10'h0; // @ ICache.scala l156
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_10) begin
      sram_3_ports_cmd_valid = 1'b1; // @ ICache.scala l135
    end else begin
      if(tmp_when_11) begin
        sram_3_ports_cmd_valid = 1'b1; // @ ICache.scala l142
      end else begin
        if(tmp_when_12) begin
          sram_3_ports_cmd_valid = 1'b1; // @ ICache.scala l150
        end else begin
          sram_3_ports_cmd_valid = 1'b0; // @ ICache.scala l157
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_10) begin
      sram_3_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l136
    end else begin
      if(tmp_when_11) begin
        sram_3_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l143
      end else begin
        if(tmp_when_12) begin
          sram_3_ports_cmd_payload_wen = 1'b1; // @ ICache.scala l151
        end else begin
          sram_3_ports_cmd_payload_wen = 1'b0; // @ ICache.scala l158
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_10) begin
      sram_3_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l137
    end else begin
      if(tmp_when_11) begin
        sram_3_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l144
      end else begin
        if(tmp_when_12) begin
          sram_3_ports_cmd_payload_wdata = next_level_rsp_payload_data[63 : 32]; // @ ICache.scala l152
        end else begin
          sram_3_ports_cmd_payload_wdata = 32'h0; // @ ICache.scala l159
        end
      end
    end
  end

  always @(*) begin
    if(tmp_when_10) begin
      sram_3_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l138
    end else begin
      if(tmp_when_11) begin
        sram_3_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l145
      end else begin
        if(tmp_when_12) begin
          sram_3_ports_cmd_payload_wstrb = 4'b1111; // @ ICache.scala l153
        end else begin
          sram_3_ports_cmd_payload_wstrb = 4'b0000; // @ ICache.scala l160
        end
      end
    end
  end

  assign tmp_646 = ({127'd0,1'b1} <<< flush_cnt_value); // @ BaseType.scala l299
  assign tmp_647 = tmp_646[0]; // @ BaseType.scala l305
  assign tmp_648 = tmp_646[1]; // @ BaseType.scala l305
  assign tmp_649 = tmp_646[2]; // @ BaseType.scala l305
  assign tmp_650 = tmp_646[3]; // @ BaseType.scala l305
  assign tmp_651 = tmp_646[4]; // @ BaseType.scala l305
  assign tmp_652 = tmp_646[5]; // @ BaseType.scala l305
  assign tmp_653 = tmp_646[6]; // @ BaseType.scala l305
  assign tmp_654 = tmp_646[7]; // @ BaseType.scala l305
  assign tmp_655 = tmp_646[8]; // @ BaseType.scala l305
  assign tmp_656 = tmp_646[9]; // @ BaseType.scala l305
  assign tmp_657 = tmp_646[10]; // @ BaseType.scala l305
  assign tmp_658 = tmp_646[11]; // @ BaseType.scala l305
  assign tmp_659 = tmp_646[12]; // @ BaseType.scala l305
  assign tmp_660 = tmp_646[13]; // @ BaseType.scala l305
  assign tmp_661 = tmp_646[14]; // @ BaseType.scala l305
  assign tmp_662 = tmp_646[15]; // @ BaseType.scala l305
  assign tmp_663 = tmp_646[16]; // @ BaseType.scala l305
  assign tmp_664 = tmp_646[17]; // @ BaseType.scala l305
  assign tmp_665 = tmp_646[18]; // @ BaseType.scala l305
  assign tmp_666 = tmp_646[19]; // @ BaseType.scala l305
  assign tmp_667 = tmp_646[20]; // @ BaseType.scala l305
  assign tmp_668 = tmp_646[21]; // @ BaseType.scala l305
  assign tmp_669 = tmp_646[22]; // @ BaseType.scala l305
  assign tmp_670 = tmp_646[23]; // @ BaseType.scala l305
  assign tmp_671 = tmp_646[24]; // @ BaseType.scala l305
  assign tmp_672 = tmp_646[25]; // @ BaseType.scala l305
  assign tmp_673 = tmp_646[26]; // @ BaseType.scala l305
  assign tmp_674 = tmp_646[27]; // @ BaseType.scala l305
  assign tmp_675 = tmp_646[28]; // @ BaseType.scala l305
  assign tmp_676 = tmp_646[29]; // @ BaseType.scala l305
  assign tmp_677 = tmp_646[30]; // @ BaseType.scala l305
  assign tmp_678 = tmp_646[31]; // @ BaseType.scala l305
  assign tmp_679 = tmp_646[32]; // @ BaseType.scala l305
  assign tmp_680 = tmp_646[33]; // @ BaseType.scala l305
  assign tmp_681 = tmp_646[34]; // @ BaseType.scala l305
  assign tmp_682 = tmp_646[35]; // @ BaseType.scala l305
  assign tmp_683 = tmp_646[36]; // @ BaseType.scala l305
  assign tmp_684 = tmp_646[37]; // @ BaseType.scala l305
  assign tmp_685 = tmp_646[38]; // @ BaseType.scala l305
  assign tmp_686 = tmp_646[39]; // @ BaseType.scala l305
  assign tmp_687 = tmp_646[40]; // @ BaseType.scala l305
  assign tmp_688 = tmp_646[41]; // @ BaseType.scala l305
  assign tmp_689 = tmp_646[42]; // @ BaseType.scala l305
  assign tmp_690 = tmp_646[43]; // @ BaseType.scala l305
  assign tmp_691 = tmp_646[44]; // @ BaseType.scala l305
  assign tmp_692 = tmp_646[45]; // @ BaseType.scala l305
  assign tmp_693 = tmp_646[46]; // @ BaseType.scala l305
  assign tmp_694 = tmp_646[47]; // @ BaseType.scala l305
  assign tmp_695 = tmp_646[48]; // @ BaseType.scala l305
  assign tmp_696 = tmp_646[49]; // @ BaseType.scala l305
  assign tmp_697 = tmp_646[50]; // @ BaseType.scala l305
  assign tmp_698 = tmp_646[51]; // @ BaseType.scala l305
  assign tmp_699 = tmp_646[52]; // @ BaseType.scala l305
  assign tmp_700 = tmp_646[53]; // @ BaseType.scala l305
  assign tmp_701 = tmp_646[54]; // @ BaseType.scala l305
  assign tmp_702 = tmp_646[55]; // @ BaseType.scala l305
  assign tmp_703 = tmp_646[56]; // @ BaseType.scala l305
  assign tmp_704 = tmp_646[57]; // @ BaseType.scala l305
  assign tmp_705 = tmp_646[58]; // @ BaseType.scala l305
  assign tmp_706 = tmp_646[59]; // @ BaseType.scala l305
  assign tmp_707 = tmp_646[60]; // @ BaseType.scala l305
  assign tmp_708 = tmp_646[61]; // @ BaseType.scala l305
  assign tmp_709 = tmp_646[62]; // @ BaseType.scala l305
  assign tmp_710 = tmp_646[63]; // @ BaseType.scala l305
  assign tmp_711 = tmp_646[64]; // @ BaseType.scala l305
  assign tmp_712 = tmp_646[65]; // @ BaseType.scala l305
  assign tmp_713 = tmp_646[66]; // @ BaseType.scala l305
  assign tmp_714 = tmp_646[67]; // @ BaseType.scala l305
  assign tmp_715 = tmp_646[68]; // @ BaseType.scala l305
  assign tmp_716 = tmp_646[69]; // @ BaseType.scala l305
  assign tmp_717 = tmp_646[70]; // @ BaseType.scala l305
  assign tmp_718 = tmp_646[71]; // @ BaseType.scala l305
  assign tmp_719 = tmp_646[72]; // @ BaseType.scala l305
  assign tmp_720 = tmp_646[73]; // @ BaseType.scala l305
  assign tmp_721 = tmp_646[74]; // @ BaseType.scala l305
  assign tmp_722 = tmp_646[75]; // @ BaseType.scala l305
  assign tmp_723 = tmp_646[76]; // @ BaseType.scala l305
  assign tmp_724 = tmp_646[77]; // @ BaseType.scala l305
  assign tmp_725 = tmp_646[78]; // @ BaseType.scala l305
  assign tmp_726 = tmp_646[79]; // @ BaseType.scala l305
  assign tmp_727 = tmp_646[80]; // @ BaseType.scala l305
  assign tmp_728 = tmp_646[81]; // @ BaseType.scala l305
  assign tmp_729 = tmp_646[82]; // @ BaseType.scala l305
  assign tmp_730 = tmp_646[83]; // @ BaseType.scala l305
  assign tmp_731 = tmp_646[84]; // @ BaseType.scala l305
  assign tmp_732 = tmp_646[85]; // @ BaseType.scala l305
  assign tmp_733 = tmp_646[86]; // @ BaseType.scala l305
  assign tmp_734 = tmp_646[87]; // @ BaseType.scala l305
  assign tmp_735 = tmp_646[88]; // @ BaseType.scala l305
  assign tmp_736 = tmp_646[89]; // @ BaseType.scala l305
  assign tmp_737 = tmp_646[90]; // @ BaseType.scala l305
  assign tmp_738 = tmp_646[91]; // @ BaseType.scala l305
  assign tmp_739 = tmp_646[92]; // @ BaseType.scala l305
  assign tmp_740 = tmp_646[93]; // @ BaseType.scala l305
  assign tmp_741 = tmp_646[94]; // @ BaseType.scala l305
  assign tmp_742 = tmp_646[95]; // @ BaseType.scala l305
  assign tmp_743 = tmp_646[96]; // @ BaseType.scala l305
  assign tmp_744 = tmp_646[97]; // @ BaseType.scala l305
  assign tmp_745 = tmp_646[98]; // @ BaseType.scala l305
  assign tmp_746 = tmp_646[99]; // @ BaseType.scala l305
  assign tmp_747 = tmp_646[100]; // @ BaseType.scala l305
  assign tmp_748 = tmp_646[101]; // @ BaseType.scala l305
  assign tmp_749 = tmp_646[102]; // @ BaseType.scala l305
  assign tmp_750 = tmp_646[103]; // @ BaseType.scala l305
  assign tmp_751 = tmp_646[104]; // @ BaseType.scala l305
  assign tmp_752 = tmp_646[105]; // @ BaseType.scala l305
  assign tmp_753 = tmp_646[106]; // @ BaseType.scala l305
  assign tmp_754 = tmp_646[107]; // @ BaseType.scala l305
  assign tmp_755 = tmp_646[108]; // @ BaseType.scala l305
  assign tmp_756 = tmp_646[109]; // @ BaseType.scala l305
  assign tmp_757 = tmp_646[110]; // @ BaseType.scala l305
  assign tmp_758 = tmp_646[111]; // @ BaseType.scala l305
  assign tmp_759 = tmp_646[112]; // @ BaseType.scala l305
  assign tmp_760 = tmp_646[113]; // @ BaseType.scala l305
  assign tmp_761 = tmp_646[114]; // @ BaseType.scala l305
  assign tmp_762 = tmp_646[115]; // @ BaseType.scala l305
  assign tmp_763 = tmp_646[116]; // @ BaseType.scala l305
  assign tmp_764 = tmp_646[117]; // @ BaseType.scala l305
  assign tmp_765 = tmp_646[118]; // @ BaseType.scala l305
  assign tmp_766 = tmp_646[119]; // @ BaseType.scala l305
  assign tmp_767 = tmp_646[120]; // @ BaseType.scala l305
  assign tmp_768 = tmp_646[121]; // @ BaseType.scala l305
  assign tmp_769 = tmp_646[122]; // @ BaseType.scala l305
  assign tmp_770 = tmp_646[123]; // @ BaseType.scala l305
  assign tmp_771 = tmp_646[124]; // @ BaseType.scala l305
  assign tmp_772 = tmp_646[125]; // @ BaseType.scala l305
  assign tmp_773 = tmp_646[126]; // @ BaseType.scala l305
  assign tmp_774 = tmp_646[127]; // @ BaseType.scala l305
  assign cpu_rsp_payload_data = (is_hit_d1 ? tmp_cpu_rsp_payload_data : tmp_cpu_rsp_payload_data_1); // @ ICache.scala l200
  assign cpu_rsp_valid = (is_hit_d1 ? tmp_cpu_rsp_valid : tmp_cpu_rsp_valid_1); // @ ICache.scala l201
  assign cpu_cmd_ready = cpu_cmd_ready_1; // @ ICache.scala l202
  assign next_level_cmd_payload_addr = {cpu_addr_d1[31 : 6],6'h0}; // @ ICache.scala l205
  assign next_level_cmd_payload_len = 4'b0111; // @ ICache.scala l206
  assign next_level_cmd_payload_size = 3'b011; // @ ICache.scala l207
  assign next_level_cmd_valid = next_level_cmd_valid_1; // @ ICache.scala l208
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      ways_0_metas_0_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_0_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_0_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_1_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_1_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_1_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_2_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_2_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_2_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_3_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_3_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_3_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_4_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_4_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_4_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_5_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_5_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_5_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_6_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_6_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_6_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_7_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_7_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_7_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_8_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_8_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_8_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_9_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_9_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_9_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_10_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_10_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_10_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_11_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_11_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_11_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_12_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_12_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_12_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_13_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_13_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_13_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_14_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_14_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_14_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_15_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_15_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_15_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_16_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_16_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_16_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_17_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_17_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_17_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_18_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_18_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_18_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_19_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_19_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_19_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_20_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_20_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_20_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_21_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_21_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_21_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_22_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_22_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_22_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_23_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_23_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_23_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_24_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_24_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_24_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_25_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_25_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_25_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_26_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_26_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_26_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_27_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_27_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_27_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_28_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_28_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_28_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_29_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_29_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_29_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_30_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_30_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_30_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_31_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_31_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_31_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_32_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_32_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_32_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_33_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_33_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_33_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_34_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_34_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_34_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_35_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_35_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_35_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_36_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_36_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_36_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_37_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_37_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_37_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_38_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_38_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_38_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_39_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_39_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_39_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_40_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_40_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_40_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_41_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_41_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_41_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_42_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_42_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_42_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_43_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_43_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_43_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_44_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_44_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_44_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_45_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_45_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_45_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_46_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_46_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_46_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_47_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_47_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_47_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_48_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_48_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_48_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_49_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_49_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_49_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_50_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_50_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_50_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_51_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_51_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_51_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_52_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_52_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_52_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_53_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_53_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_53_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_54_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_54_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_54_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_55_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_55_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_55_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_56_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_56_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_56_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_57_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_57_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_57_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_58_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_58_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_58_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_59_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_59_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_59_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_60_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_60_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_60_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_61_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_61_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_61_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_62_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_62_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_62_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_63_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_63_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_63_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_64_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_64_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_64_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_65_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_65_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_65_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_66_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_66_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_66_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_67_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_67_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_67_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_68_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_68_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_68_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_69_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_69_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_69_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_70_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_70_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_70_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_71_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_71_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_71_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_72_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_72_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_72_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_73_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_73_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_73_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_74_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_74_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_74_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_75_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_75_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_75_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_76_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_76_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_76_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_77_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_77_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_77_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_78_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_78_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_78_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_79_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_79_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_79_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_80_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_80_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_80_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_81_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_81_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_81_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_82_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_82_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_82_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_83_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_83_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_83_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_84_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_84_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_84_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_85_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_85_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_85_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_86_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_86_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_86_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_87_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_87_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_87_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_88_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_88_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_88_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_89_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_89_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_89_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_90_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_90_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_90_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_91_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_91_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_91_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_92_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_92_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_92_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_93_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_93_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_93_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_94_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_94_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_94_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_95_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_95_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_95_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_96_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_96_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_96_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_97_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_97_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_97_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_98_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_98_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_98_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_99_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_99_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_99_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_100_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_100_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_100_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_101_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_101_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_101_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_102_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_102_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_102_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_103_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_103_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_103_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_104_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_104_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_104_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_105_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_105_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_105_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_106_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_106_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_106_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_107_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_107_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_107_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_108_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_108_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_108_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_109_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_109_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_109_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_110_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_110_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_110_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_111_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_111_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_111_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_112_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_112_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_112_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_113_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_113_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_113_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_114_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_114_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_114_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_115_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_115_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_115_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_116_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_116_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_116_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_117_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_117_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_117_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_118_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_118_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_118_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_119_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_119_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_119_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_120_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_120_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_120_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_121_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_121_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_121_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_122_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_122_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_122_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_123_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_123_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_123_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_124_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_124_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_124_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_125_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_125_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_125_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_126_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_126_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_126_mru <= 1'b0; // @ Data.scala l400
      ways_0_metas_127_vld <= 1'b0; // @ Data.scala l400
      ways_0_metas_127_tag <= 19'h0; // @ Data.scala l400
      ways_0_metas_127_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_0_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_0_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_0_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_1_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_1_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_1_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_2_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_2_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_2_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_3_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_3_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_3_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_4_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_4_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_4_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_5_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_5_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_5_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_6_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_6_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_6_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_7_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_7_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_7_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_8_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_8_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_8_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_9_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_9_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_9_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_10_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_10_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_10_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_11_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_11_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_11_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_12_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_12_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_12_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_13_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_13_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_13_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_14_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_14_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_14_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_15_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_15_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_15_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_16_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_16_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_16_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_17_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_17_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_17_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_18_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_18_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_18_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_19_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_19_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_19_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_20_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_20_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_20_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_21_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_21_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_21_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_22_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_22_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_22_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_23_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_23_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_23_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_24_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_24_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_24_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_25_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_25_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_25_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_26_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_26_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_26_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_27_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_27_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_27_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_28_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_28_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_28_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_29_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_29_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_29_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_30_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_30_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_30_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_31_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_31_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_31_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_32_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_32_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_32_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_33_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_33_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_33_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_34_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_34_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_34_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_35_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_35_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_35_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_36_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_36_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_36_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_37_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_37_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_37_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_38_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_38_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_38_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_39_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_39_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_39_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_40_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_40_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_40_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_41_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_41_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_41_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_42_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_42_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_42_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_43_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_43_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_43_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_44_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_44_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_44_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_45_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_45_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_45_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_46_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_46_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_46_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_47_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_47_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_47_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_48_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_48_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_48_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_49_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_49_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_49_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_50_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_50_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_50_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_51_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_51_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_51_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_52_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_52_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_52_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_53_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_53_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_53_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_54_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_54_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_54_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_55_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_55_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_55_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_56_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_56_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_56_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_57_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_57_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_57_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_58_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_58_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_58_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_59_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_59_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_59_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_60_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_60_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_60_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_61_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_61_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_61_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_62_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_62_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_62_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_63_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_63_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_63_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_64_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_64_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_64_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_65_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_65_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_65_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_66_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_66_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_66_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_67_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_67_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_67_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_68_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_68_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_68_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_69_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_69_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_69_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_70_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_70_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_70_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_71_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_71_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_71_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_72_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_72_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_72_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_73_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_73_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_73_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_74_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_74_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_74_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_75_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_75_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_75_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_76_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_76_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_76_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_77_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_77_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_77_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_78_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_78_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_78_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_79_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_79_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_79_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_80_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_80_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_80_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_81_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_81_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_81_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_82_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_82_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_82_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_83_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_83_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_83_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_84_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_84_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_84_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_85_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_85_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_85_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_86_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_86_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_86_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_87_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_87_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_87_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_88_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_88_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_88_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_89_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_89_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_89_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_90_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_90_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_90_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_91_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_91_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_91_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_92_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_92_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_92_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_93_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_93_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_93_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_94_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_94_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_94_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_95_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_95_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_95_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_96_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_96_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_96_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_97_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_97_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_97_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_98_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_98_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_98_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_99_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_99_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_99_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_100_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_100_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_100_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_101_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_101_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_101_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_102_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_102_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_102_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_103_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_103_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_103_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_104_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_104_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_104_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_105_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_105_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_105_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_106_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_106_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_106_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_107_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_107_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_107_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_108_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_108_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_108_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_109_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_109_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_109_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_110_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_110_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_110_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_111_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_111_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_111_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_112_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_112_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_112_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_113_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_113_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_113_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_114_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_114_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_114_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_115_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_115_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_115_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_116_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_116_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_116_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_117_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_117_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_117_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_118_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_118_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_118_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_119_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_119_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_119_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_120_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_120_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_120_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_121_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_121_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_121_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_122_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_122_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_122_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_123_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_123_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_123_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_124_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_124_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_124_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_125_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_125_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_125_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_126_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_126_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_126_mru <= 1'b0; // @ Data.scala l400
      ways_1_metas_127_vld <= 1'b0; // @ Data.scala l400
      ways_1_metas_127_tag <= 19'h0; // @ Data.scala l400
      ways_1_metas_127_mru <= 1'b0; // @ Data.scala l400
      flush_busy <= 1'b0; // @ Data.scala l400
      flush_cnt_value <= 7'h0; // @ Data.scala l400
      cpu_addr_d1 <= 32'h0; // @ Data.scala l400
      cpu_cmd_ready_1 <= 1'b1; // @ Data.scala l400
      next_level_cmd_valid_1 <= 1'b0; // @ Data.scala l400
      next_level_data_cnt_value <= 3'b000; // @ Data.scala l400
    end else begin
      flush_cnt_value <= flush_cnt_valueNext; // @ Reg.scala l39
      if(cpu_cmd_fire_2) begin
        cpu_addr_d1 <= cpu_cmd_payload_addr; // @ ICache.scala l59
      end
      next_level_data_cnt_value <= next_level_data_cnt_valueNext; // @ Reg.scala l39
      if(is_miss) begin
        next_level_cmd_valid_1 <= 1'b1; // @ ICache.scala l77
      end else begin
        if(next_level_cmd_fire) begin
          next_level_cmd_valid_1 <= 1'b0; // @ ICache.scala l80
        end
      end
      if(flush) begin
        flush_busy <= 1'b1; // @ ICache.scala l95
      end else begin
        if(flush_done) begin
          flush_busy <= 1'b0; // @ ICache.scala l98
        end
      end
      if(flush_busy) begin
        if(tmp_260) begin
          ways_0_metas_0_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_261) begin
          ways_0_metas_1_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_262) begin
          ways_0_metas_2_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_263) begin
          ways_0_metas_3_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_264) begin
          ways_0_metas_4_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_265) begin
          ways_0_metas_5_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_266) begin
          ways_0_metas_6_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_267) begin
          ways_0_metas_7_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_268) begin
          ways_0_metas_8_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_269) begin
          ways_0_metas_9_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_270) begin
          ways_0_metas_10_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_271) begin
          ways_0_metas_11_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_272) begin
          ways_0_metas_12_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_273) begin
          ways_0_metas_13_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_274) begin
          ways_0_metas_14_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_275) begin
          ways_0_metas_15_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_276) begin
          ways_0_metas_16_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_277) begin
          ways_0_metas_17_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_278) begin
          ways_0_metas_18_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_279) begin
          ways_0_metas_19_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_280) begin
          ways_0_metas_20_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_281) begin
          ways_0_metas_21_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_282) begin
          ways_0_metas_22_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_283) begin
          ways_0_metas_23_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_284) begin
          ways_0_metas_24_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_285) begin
          ways_0_metas_25_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_286) begin
          ways_0_metas_26_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_287) begin
          ways_0_metas_27_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_288) begin
          ways_0_metas_28_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_289) begin
          ways_0_metas_29_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_290) begin
          ways_0_metas_30_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_291) begin
          ways_0_metas_31_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_292) begin
          ways_0_metas_32_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_293) begin
          ways_0_metas_33_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_294) begin
          ways_0_metas_34_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_295) begin
          ways_0_metas_35_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_296) begin
          ways_0_metas_36_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_297) begin
          ways_0_metas_37_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_298) begin
          ways_0_metas_38_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_299) begin
          ways_0_metas_39_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_300) begin
          ways_0_metas_40_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_301) begin
          ways_0_metas_41_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_302) begin
          ways_0_metas_42_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_303) begin
          ways_0_metas_43_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_304) begin
          ways_0_metas_44_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_305) begin
          ways_0_metas_45_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_306) begin
          ways_0_metas_46_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_307) begin
          ways_0_metas_47_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_308) begin
          ways_0_metas_48_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_309) begin
          ways_0_metas_49_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_310) begin
          ways_0_metas_50_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_311) begin
          ways_0_metas_51_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_312) begin
          ways_0_metas_52_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_313) begin
          ways_0_metas_53_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_314) begin
          ways_0_metas_54_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_315) begin
          ways_0_metas_55_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_316) begin
          ways_0_metas_56_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_317) begin
          ways_0_metas_57_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_318) begin
          ways_0_metas_58_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_319) begin
          ways_0_metas_59_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_320) begin
          ways_0_metas_60_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_321) begin
          ways_0_metas_61_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_322) begin
          ways_0_metas_62_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_323) begin
          ways_0_metas_63_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_324) begin
          ways_0_metas_64_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_325) begin
          ways_0_metas_65_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_326) begin
          ways_0_metas_66_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_327) begin
          ways_0_metas_67_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_328) begin
          ways_0_metas_68_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_329) begin
          ways_0_metas_69_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_330) begin
          ways_0_metas_70_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_331) begin
          ways_0_metas_71_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_332) begin
          ways_0_metas_72_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_333) begin
          ways_0_metas_73_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_334) begin
          ways_0_metas_74_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_335) begin
          ways_0_metas_75_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_336) begin
          ways_0_metas_76_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_337) begin
          ways_0_metas_77_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_338) begin
          ways_0_metas_78_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_339) begin
          ways_0_metas_79_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_340) begin
          ways_0_metas_80_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_341) begin
          ways_0_metas_81_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_342) begin
          ways_0_metas_82_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_343) begin
          ways_0_metas_83_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_344) begin
          ways_0_metas_84_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_345) begin
          ways_0_metas_85_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_346) begin
          ways_0_metas_86_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_347) begin
          ways_0_metas_87_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_348) begin
          ways_0_metas_88_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_349) begin
          ways_0_metas_89_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_350) begin
          ways_0_metas_90_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_351) begin
          ways_0_metas_91_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_352) begin
          ways_0_metas_92_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_353) begin
          ways_0_metas_93_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_354) begin
          ways_0_metas_94_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_355) begin
          ways_0_metas_95_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_356) begin
          ways_0_metas_96_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_357) begin
          ways_0_metas_97_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_358) begin
          ways_0_metas_98_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_359) begin
          ways_0_metas_99_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_360) begin
          ways_0_metas_100_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_361) begin
          ways_0_metas_101_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_362) begin
          ways_0_metas_102_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_363) begin
          ways_0_metas_103_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_364) begin
          ways_0_metas_104_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_365) begin
          ways_0_metas_105_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_366) begin
          ways_0_metas_106_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_367) begin
          ways_0_metas_107_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_368) begin
          ways_0_metas_108_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_369) begin
          ways_0_metas_109_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_370) begin
          ways_0_metas_110_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_371) begin
          ways_0_metas_111_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_372) begin
          ways_0_metas_112_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_373) begin
          ways_0_metas_113_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_374) begin
          ways_0_metas_114_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_375) begin
          ways_0_metas_115_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_376) begin
          ways_0_metas_116_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_377) begin
          ways_0_metas_117_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_378) begin
          ways_0_metas_118_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_379) begin
          ways_0_metas_119_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_380) begin
          ways_0_metas_120_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_381) begin
          ways_0_metas_121_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_382) begin
          ways_0_metas_122_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_383) begin
          ways_0_metas_123_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_384) begin
          ways_0_metas_124_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_385) begin
          ways_0_metas_125_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_386) begin
          ways_0_metas_126_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_387) begin
          ways_0_metas_127_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_260) begin
          ways_0_metas_0_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_261) begin
          ways_0_metas_1_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_262) begin
          ways_0_metas_2_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_263) begin
          ways_0_metas_3_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_264) begin
          ways_0_metas_4_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_265) begin
          ways_0_metas_5_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_266) begin
          ways_0_metas_6_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_267) begin
          ways_0_metas_7_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_268) begin
          ways_0_metas_8_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_269) begin
          ways_0_metas_9_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_270) begin
          ways_0_metas_10_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_271) begin
          ways_0_metas_11_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_272) begin
          ways_0_metas_12_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_273) begin
          ways_0_metas_13_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_274) begin
          ways_0_metas_14_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_275) begin
          ways_0_metas_15_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_276) begin
          ways_0_metas_16_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_277) begin
          ways_0_metas_17_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_278) begin
          ways_0_metas_18_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_279) begin
          ways_0_metas_19_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_280) begin
          ways_0_metas_20_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_281) begin
          ways_0_metas_21_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_282) begin
          ways_0_metas_22_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_283) begin
          ways_0_metas_23_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_284) begin
          ways_0_metas_24_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_285) begin
          ways_0_metas_25_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_286) begin
          ways_0_metas_26_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_287) begin
          ways_0_metas_27_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_288) begin
          ways_0_metas_28_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_289) begin
          ways_0_metas_29_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_290) begin
          ways_0_metas_30_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_291) begin
          ways_0_metas_31_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_292) begin
          ways_0_metas_32_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_293) begin
          ways_0_metas_33_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_294) begin
          ways_0_metas_34_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_295) begin
          ways_0_metas_35_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_296) begin
          ways_0_metas_36_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_297) begin
          ways_0_metas_37_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_298) begin
          ways_0_metas_38_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_299) begin
          ways_0_metas_39_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_300) begin
          ways_0_metas_40_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_301) begin
          ways_0_metas_41_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_302) begin
          ways_0_metas_42_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_303) begin
          ways_0_metas_43_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_304) begin
          ways_0_metas_44_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_305) begin
          ways_0_metas_45_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_306) begin
          ways_0_metas_46_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_307) begin
          ways_0_metas_47_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_308) begin
          ways_0_metas_48_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_309) begin
          ways_0_metas_49_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_310) begin
          ways_0_metas_50_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_311) begin
          ways_0_metas_51_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_312) begin
          ways_0_metas_52_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_313) begin
          ways_0_metas_53_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_314) begin
          ways_0_metas_54_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_315) begin
          ways_0_metas_55_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_316) begin
          ways_0_metas_56_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_317) begin
          ways_0_metas_57_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_318) begin
          ways_0_metas_58_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_319) begin
          ways_0_metas_59_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_320) begin
          ways_0_metas_60_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_321) begin
          ways_0_metas_61_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_322) begin
          ways_0_metas_62_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_323) begin
          ways_0_metas_63_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_324) begin
          ways_0_metas_64_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_325) begin
          ways_0_metas_65_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_326) begin
          ways_0_metas_66_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_327) begin
          ways_0_metas_67_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_328) begin
          ways_0_metas_68_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_329) begin
          ways_0_metas_69_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_330) begin
          ways_0_metas_70_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_331) begin
          ways_0_metas_71_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_332) begin
          ways_0_metas_72_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_333) begin
          ways_0_metas_73_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_334) begin
          ways_0_metas_74_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_335) begin
          ways_0_metas_75_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_336) begin
          ways_0_metas_76_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_337) begin
          ways_0_metas_77_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_338) begin
          ways_0_metas_78_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_339) begin
          ways_0_metas_79_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_340) begin
          ways_0_metas_80_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_341) begin
          ways_0_metas_81_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_342) begin
          ways_0_metas_82_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_343) begin
          ways_0_metas_83_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_344) begin
          ways_0_metas_84_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_345) begin
          ways_0_metas_85_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_346) begin
          ways_0_metas_86_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_347) begin
          ways_0_metas_87_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_348) begin
          ways_0_metas_88_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_349) begin
          ways_0_metas_89_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_350) begin
          ways_0_metas_90_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_351) begin
          ways_0_metas_91_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_352) begin
          ways_0_metas_92_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_353) begin
          ways_0_metas_93_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_354) begin
          ways_0_metas_94_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_355) begin
          ways_0_metas_95_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_356) begin
          ways_0_metas_96_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_357) begin
          ways_0_metas_97_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_358) begin
          ways_0_metas_98_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_359) begin
          ways_0_metas_99_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_360) begin
          ways_0_metas_100_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_361) begin
          ways_0_metas_101_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_362) begin
          ways_0_metas_102_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_363) begin
          ways_0_metas_103_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_364) begin
          ways_0_metas_104_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_365) begin
          ways_0_metas_105_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_366) begin
          ways_0_metas_106_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_367) begin
          ways_0_metas_107_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_368) begin
          ways_0_metas_108_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_369) begin
          ways_0_metas_109_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_370) begin
          ways_0_metas_110_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_371) begin
          ways_0_metas_111_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_372) begin
          ways_0_metas_112_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_373) begin
          ways_0_metas_113_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_374) begin
          ways_0_metas_114_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_375) begin
          ways_0_metas_115_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_376) begin
          ways_0_metas_116_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_377) begin
          ways_0_metas_117_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_378) begin
          ways_0_metas_118_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_379) begin
          ways_0_metas_119_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_380) begin
          ways_0_metas_120_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_381) begin
          ways_0_metas_121_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_382) begin
          ways_0_metas_122_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_383) begin
          ways_0_metas_123_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_384) begin
          ways_0_metas_124_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_385) begin
          ways_0_metas_125_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_386) begin
          ways_0_metas_126_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_387) begin
          ways_0_metas_127_vld <= 1'b0; // @ ICache.scala l167
        end
      end else begin
        if((is_hit && mru_full)) begin
          if(cache_hit_0) begin
            if(tmp_2) begin
              ways_0_metas_0_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_3) begin
              ways_0_metas_1_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_4) begin
              ways_0_metas_2_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_5) begin
              ways_0_metas_3_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_6) begin
              ways_0_metas_4_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_7) begin
              ways_0_metas_5_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_8) begin
              ways_0_metas_6_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_9) begin
              ways_0_metas_7_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_10) begin
              ways_0_metas_8_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_11) begin
              ways_0_metas_9_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_12) begin
              ways_0_metas_10_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_13) begin
              ways_0_metas_11_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_14) begin
              ways_0_metas_12_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_15) begin
              ways_0_metas_13_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_16) begin
              ways_0_metas_14_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_17) begin
              ways_0_metas_15_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_18) begin
              ways_0_metas_16_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_19) begin
              ways_0_metas_17_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_20) begin
              ways_0_metas_18_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_21) begin
              ways_0_metas_19_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_22) begin
              ways_0_metas_20_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_23) begin
              ways_0_metas_21_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_24) begin
              ways_0_metas_22_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_25) begin
              ways_0_metas_23_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_26) begin
              ways_0_metas_24_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_27) begin
              ways_0_metas_25_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_28) begin
              ways_0_metas_26_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_29) begin
              ways_0_metas_27_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_30) begin
              ways_0_metas_28_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_31) begin
              ways_0_metas_29_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_32) begin
              ways_0_metas_30_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_33) begin
              ways_0_metas_31_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_34) begin
              ways_0_metas_32_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_35) begin
              ways_0_metas_33_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_36) begin
              ways_0_metas_34_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_37) begin
              ways_0_metas_35_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_38) begin
              ways_0_metas_36_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_39) begin
              ways_0_metas_37_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_40) begin
              ways_0_metas_38_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_41) begin
              ways_0_metas_39_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_42) begin
              ways_0_metas_40_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_43) begin
              ways_0_metas_41_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_44) begin
              ways_0_metas_42_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_45) begin
              ways_0_metas_43_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_46) begin
              ways_0_metas_44_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_47) begin
              ways_0_metas_45_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_48) begin
              ways_0_metas_46_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_49) begin
              ways_0_metas_47_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_50) begin
              ways_0_metas_48_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_51) begin
              ways_0_metas_49_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_52) begin
              ways_0_metas_50_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_53) begin
              ways_0_metas_51_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_54) begin
              ways_0_metas_52_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_55) begin
              ways_0_metas_53_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_56) begin
              ways_0_metas_54_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_57) begin
              ways_0_metas_55_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_58) begin
              ways_0_metas_56_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_59) begin
              ways_0_metas_57_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_60) begin
              ways_0_metas_58_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_61) begin
              ways_0_metas_59_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_62) begin
              ways_0_metas_60_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_63) begin
              ways_0_metas_61_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_64) begin
              ways_0_metas_62_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_65) begin
              ways_0_metas_63_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_66) begin
              ways_0_metas_64_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_67) begin
              ways_0_metas_65_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_68) begin
              ways_0_metas_66_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_69) begin
              ways_0_metas_67_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_70) begin
              ways_0_metas_68_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_71) begin
              ways_0_metas_69_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_72) begin
              ways_0_metas_70_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_73) begin
              ways_0_metas_71_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_74) begin
              ways_0_metas_72_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_75) begin
              ways_0_metas_73_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_76) begin
              ways_0_metas_74_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_77) begin
              ways_0_metas_75_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_78) begin
              ways_0_metas_76_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_79) begin
              ways_0_metas_77_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_80) begin
              ways_0_metas_78_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_81) begin
              ways_0_metas_79_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_82) begin
              ways_0_metas_80_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_83) begin
              ways_0_metas_81_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_84) begin
              ways_0_metas_82_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_85) begin
              ways_0_metas_83_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_86) begin
              ways_0_metas_84_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_87) begin
              ways_0_metas_85_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_88) begin
              ways_0_metas_86_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_89) begin
              ways_0_metas_87_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_90) begin
              ways_0_metas_88_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_91) begin
              ways_0_metas_89_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_92) begin
              ways_0_metas_90_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_93) begin
              ways_0_metas_91_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_94) begin
              ways_0_metas_92_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_95) begin
              ways_0_metas_93_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_96) begin
              ways_0_metas_94_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_97) begin
              ways_0_metas_95_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_98) begin
              ways_0_metas_96_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_99) begin
              ways_0_metas_97_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_100) begin
              ways_0_metas_98_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_101) begin
              ways_0_metas_99_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_102) begin
              ways_0_metas_100_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_103) begin
              ways_0_metas_101_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_104) begin
              ways_0_metas_102_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_105) begin
              ways_0_metas_103_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_106) begin
              ways_0_metas_104_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_107) begin
              ways_0_metas_105_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_108) begin
              ways_0_metas_106_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_109) begin
              ways_0_metas_107_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_110) begin
              ways_0_metas_108_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_111) begin
              ways_0_metas_109_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_112) begin
              ways_0_metas_110_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_113) begin
              ways_0_metas_111_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_114) begin
              ways_0_metas_112_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_115) begin
              ways_0_metas_113_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_116) begin
              ways_0_metas_114_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_117) begin
              ways_0_metas_115_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_118) begin
              ways_0_metas_116_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_119) begin
              ways_0_metas_117_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_120) begin
              ways_0_metas_118_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_121) begin
              ways_0_metas_119_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_122) begin
              ways_0_metas_120_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_123) begin
              ways_0_metas_121_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_124) begin
              ways_0_metas_122_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_125) begin
              ways_0_metas_123_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_126) begin
              ways_0_metas_124_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_127) begin
              ways_0_metas_125_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_128) begin
              ways_0_metas_126_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_129) begin
              ways_0_metas_127_mru <= 1'b1; // @ ICache.scala l173
            end
          end else begin
            if(tmp_2) begin
              ways_0_metas_0_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_3) begin
              ways_0_metas_1_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_4) begin
              ways_0_metas_2_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_5) begin
              ways_0_metas_3_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_6) begin
              ways_0_metas_4_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_7) begin
              ways_0_metas_5_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_8) begin
              ways_0_metas_6_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_9) begin
              ways_0_metas_7_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_10) begin
              ways_0_metas_8_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_11) begin
              ways_0_metas_9_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_12) begin
              ways_0_metas_10_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_13) begin
              ways_0_metas_11_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_14) begin
              ways_0_metas_12_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_15) begin
              ways_0_metas_13_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_16) begin
              ways_0_metas_14_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_17) begin
              ways_0_metas_15_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_18) begin
              ways_0_metas_16_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_19) begin
              ways_0_metas_17_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_20) begin
              ways_0_metas_18_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_21) begin
              ways_0_metas_19_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_22) begin
              ways_0_metas_20_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_23) begin
              ways_0_metas_21_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_24) begin
              ways_0_metas_22_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_25) begin
              ways_0_metas_23_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_26) begin
              ways_0_metas_24_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_27) begin
              ways_0_metas_25_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_28) begin
              ways_0_metas_26_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_29) begin
              ways_0_metas_27_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_30) begin
              ways_0_metas_28_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_31) begin
              ways_0_metas_29_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_32) begin
              ways_0_metas_30_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_33) begin
              ways_0_metas_31_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_34) begin
              ways_0_metas_32_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_35) begin
              ways_0_metas_33_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_36) begin
              ways_0_metas_34_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_37) begin
              ways_0_metas_35_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_38) begin
              ways_0_metas_36_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_39) begin
              ways_0_metas_37_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_40) begin
              ways_0_metas_38_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_41) begin
              ways_0_metas_39_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_42) begin
              ways_0_metas_40_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_43) begin
              ways_0_metas_41_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_44) begin
              ways_0_metas_42_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_45) begin
              ways_0_metas_43_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_46) begin
              ways_0_metas_44_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_47) begin
              ways_0_metas_45_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_48) begin
              ways_0_metas_46_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_49) begin
              ways_0_metas_47_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_50) begin
              ways_0_metas_48_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_51) begin
              ways_0_metas_49_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_52) begin
              ways_0_metas_50_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_53) begin
              ways_0_metas_51_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_54) begin
              ways_0_metas_52_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_55) begin
              ways_0_metas_53_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_56) begin
              ways_0_metas_54_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_57) begin
              ways_0_metas_55_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_58) begin
              ways_0_metas_56_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_59) begin
              ways_0_metas_57_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_60) begin
              ways_0_metas_58_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_61) begin
              ways_0_metas_59_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_62) begin
              ways_0_metas_60_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_63) begin
              ways_0_metas_61_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_64) begin
              ways_0_metas_62_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_65) begin
              ways_0_metas_63_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_66) begin
              ways_0_metas_64_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_67) begin
              ways_0_metas_65_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_68) begin
              ways_0_metas_66_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_69) begin
              ways_0_metas_67_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_70) begin
              ways_0_metas_68_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_71) begin
              ways_0_metas_69_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_72) begin
              ways_0_metas_70_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_73) begin
              ways_0_metas_71_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_74) begin
              ways_0_metas_72_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_75) begin
              ways_0_metas_73_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_76) begin
              ways_0_metas_74_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_77) begin
              ways_0_metas_75_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_78) begin
              ways_0_metas_76_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_79) begin
              ways_0_metas_77_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_80) begin
              ways_0_metas_78_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_81) begin
              ways_0_metas_79_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_82) begin
              ways_0_metas_80_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_83) begin
              ways_0_metas_81_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_84) begin
              ways_0_metas_82_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_85) begin
              ways_0_metas_83_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_86) begin
              ways_0_metas_84_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_87) begin
              ways_0_metas_85_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_88) begin
              ways_0_metas_86_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_89) begin
              ways_0_metas_87_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_90) begin
              ways_0_metas_88_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_91) begin
              ways_0_metas_89_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_92) begin
              ways_0_metas_90_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_93) begin
              ways_0_metas_91_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_94) begin
              ways_0_metas_92_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_95) begin
              ways_0_metas_93_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_96) begin
              ways_0_metas_94_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_97) begin
              ways_0_metas_95_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_98) begin
              ways_0_metas_96_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_99) begin
              ways_0_metas_97_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_100) begin
              ways_0_metas_98_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_101) begin
              ways_0_metas_99_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_102) begin
              ways_0_metas_100_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_103) begin
              ways_0_metas_101_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_104) begin
              ways_0_metas_102_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_105) begin
              ways_0_metas_103_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_106) begin
              ways_0_metas_104_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_107) begin
              ways_0_metas_105_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_108) begin
              ways_0_metas_106_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_109) begin
              ways_0_metas_107_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_110) begin
              ways_0_metas_108_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_111) begin
              ways_0_metas_109_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_112) begin
              ways_0_metas_110_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_113) begin
              ways_0_metas_111_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_114) begin
              ways_0_metas_112_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_115) begin
              ways_0_metas_113_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_116) begin
              ways_0_metas_114_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_117) begin
              ways_0_metas_115_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_118) begin
              ways_0_metas_116_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_119) begin
              ways_0_metas_117_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_120) begin
              ways_0_metas_118_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_121) begin
              ways_0_metas_119_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_122) begin
              ways_0_metas_120_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_123) begin
              ways_0_metas_121_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_124) begin
              ways_0_metas_122_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_125) begin
              ways_0_metas_123_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_126) begin
              ways_0_metas_124_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_127) begin
              ways_0_metas_125_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_128) begin
              ways_0_metas_126_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_129) begin
              ways_0_metas_127_mru <= 1'b0; // @ ICache.scala l175
            end
          end
        end else begin
          if((is_hit && cache_hit_0)) begin
            if(tmp_2) begin
              ways_0_metas_0_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_3) begin
              ways_0_metas_1_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_4) begin
              ways_0_metas_2_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_5) begin
              ways_0_metas_3_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_6) begin
              ways_0_metas_4_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_7) begin
              ways_0_metas_5_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_8) begin
              ways_0_metas_6_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_9) begin
              ways_0_metas_7_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_10) begin
              ways_0_metas_8_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_11) begin
              ways_0_metas_9_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_12) begin
              ways_0_metas_10_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_13) begin
              ways_0_metas_11_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_14) begin
              ways_0_metas_12_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_15) begin
              ways_0_metas_13_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_16) begin
              ways_0_metas_14_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_17) begin
              ways_0_metas_15_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_18) begin
              ways_0_metas_16_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_19) begin
              ways_0_metas_17_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_20) begin
              ways_0_metas_18_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_21) begin
              ways_0_metas_19_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_22) begin
              ways_0_metas_20_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_23) begin
              ways_0_metas_21_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_24) begin
              ways_0_metas_22_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_25) begin
              ways_0_metas_23_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_26) begin
              ways_0_metas_24_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_27) begin
              ways_0_metas_25_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_28) begin
              ways_0_metas_26_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_29) begin
              ways_0_metas_27_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_30) begin
              ways_0_metas_28_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_31) begin
              ways_0_metas_29_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_32) begin
              ways_0_metas_30_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_33) begin
              ways_0_metas_31_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_34) begin
              ways_0_metas_32_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_35) begin
              ways_0_metas_33_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_36) begin
              ways_0_metas_34_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_37) begin
              ways_0_metas_35_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_38) begin
              ways_0_metas_36_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_39) begin
              ways_0_metas_37_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_40) begin
              ways_0_metas_38_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_41) begin
              ways_0_metas_39_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_42) begin
              ways_0_metas_40_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_43) begin
              ways_0_metas_41_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_44) begin
              ways_0_metas_42_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_45) begin
              ways_0_metas_43_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_46) begin
              ways_0_metas_44_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_47) begin
              ways_0_metas_45_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_48) begin
              ways_0_metas_46_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_49) begin
              ways_0_metas_47_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_50) begin
              ways_0_metas_48_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_51) begin
              ways_0_metas_49_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_52) begin
              ways_0_metas_50_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_53) begin
              ways_0_metas_51_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_54) begin
              ways_0_metas_52_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_55) begin
              ways_0_metas_53_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_56) begin
              ways_0_metas_54_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_57) begin
              ways_0_metas_55_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_58) begin
              ways_0_metas_56_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_59) begin
              ways_0_metas_57_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_60) begin
              ways_0_metas_58_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_61) begin
              ways_0_metas_59_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_62) begin
              ways_0_metas_60_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_63) begin
              ways_0_metas_61_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_64) begin
              ways_0_metas_62_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_65) begin
              ways_0_metas_63_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_66) begin
              ways_0_metas_64_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_67) begin
              ways_0_metas_65_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_68) begin
              ways_0_metas_66_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_69) begin
              ways_0_metas_67_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_70) begin
              ways_0_metas_68_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_71) begin
              ways_0_metas_69_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_72) begin
              ways_0_metas_70_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_73) begin
              ways_0_metas_71_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_74) begin
              ways_0_metas_72_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_75) begin
              ways_0_metas_73_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_76) begin
              ways_0_metas_74_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_77) begin
              ways_0_metas_75_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_78) begin
              ways_0_metas_76_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_79) begin
              ways_0_metas_77_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_80) begin
              ways_0_metas_78_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_81) begin
              ways_0_metas_79_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_82) begin
              ways_0_metas_80_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_83) begin
              ways_0_metas_81_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_84) begin
              ways_0_metas_82_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_85) begin
              ways_0_metas_83_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_86) begin
              ways_0_metas_84_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_87) begin
              ways_0_metas_85_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_88) begin
              ways_0_metas_86_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_89) begin
              ways_0_metas_87_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_90) begin
              ways_0_metas_88_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_91) begin
              ways_0_metas_89_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_92) begin
              ways_0_metas_90_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_93) begin
              ways_0_metas_91_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_94) begin
              ways_0_metas_92_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_95) begin
              ways_0_metas_93_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_96) begin
              ways_0_metas_94_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_97) begin
              ways_0_metas_95_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_98) begin
              ways_0_metas_96_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_99) begin
              ways_0_metas_97_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_100) begin
              ways_0_metas_98_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_101) begin
              ways_0_metas_99_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_102) begin
              ways_0_metas_100_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_103) begin
              ways_0_metas_101_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_104) begin
              ways_0_metas_102_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_105) begin
              ways_0_metas_103_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_106) begin
              ways_0_metas_104_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_107) begin
              ways_0_metas_105_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_108) begin
              ways_0_metas_106_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_109) begin
              ways_0_metas_107_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_110) begin
              ways_0_metas_108_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_111) begin
              ways_0_metas_109_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_112) begin
              ways_0_metas_110_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_113) begin
              ways_0_metas_111_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_114) begin
              ways_0_metas_112_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_115) begin
              ways_0_metas_113_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_116) begin
              ways_0_metas_114_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_117) begin
              ways_0_metas_115_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_118) begin
              ways_0_metas_116_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_119) begin
              ways_0_metas_117_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_120) begin
              ways_0_metas_118_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_121) begin
              ways_0_metas_119_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_122) begin
              ways_0_metas_120_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_123) begin
              ways_0_metas_121_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_124) begin
              ways_0_metas_122_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_125) begin
              ways_0_metas_123_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_126) begin
              ways_0_metas_124_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_127) begin
              ways_0_metas_125_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_128) begin
              ways_0_metas_126_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_129) begin
              ways_0_metas_127_mru <= 1'b1; // @ ICache.scala l179
            end
          end else begin
            if((next_level_done && (1'b0 == evict_id_miss))) begin
              if(tmp_131) begin
                ways_0_metas_0_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_132) begin
                ways_0_metas_1_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_133) begin
                ways_0_metas_2_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_134) begin
                ways_0_metas_3_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_135) begin
                ways_0_metas_4_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_136) begin
                ways_0_metas_5_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_137) begin
                ways_0_metas_6_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_138) begin
                ways_0_metas_7_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_139) begin
                ways_0_metas_8_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_140) begin
                ways_0_metas_9_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_141) begin
                ways_0_metas_10_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_142) begin
                ways_0_metas_11_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_143) begin
                ways_0_metas_12_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_144) begin
                ways_0_metas_13_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_145) begin
                ways_0_metas_14_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_146) begin
                ways_0_metas_15_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_147) begin
                ways_0_metas_16_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_148) begin
                ways_0_metas_17_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_149) begin
                ways_0_metas_18_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_150) begin
                ways_0_metas_19_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_151) begin
                ways_0_metas_20_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_152) begin
                ways_0_metas_21_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_153) begin
                ways_0_metas_22_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_154) begin
                ways_0_metas_23_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_155) begin
                ways_0_metas_24_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_156) begin
                ways_0_metas_25_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_157) begin
                ways_0_metas_26_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_158) begin
                ways_0_metas_27_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_159) begin
                ways_0_metas_28_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_160) begin
                ways_0_metas_29_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_161) begin
                ways_0_metas_30_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_162) begin
                ways_0_metas_31_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_163) begin
                ways_0_metas_32_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_164) begin
                ways_0_metas_33_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_165) begin
                ways_0_metas_34_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_166) begin
                ways_0_metas_35_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_167) begin
                ways_0_metas_36_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_168) begin
                ways_0_metas_37_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_169) begin
                ways_0_metas_38_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_170) begin
                ways_0_metas_39_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_171) begin
                ways_0_metas_40_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_172) begin
                ways_0_metas_41_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_173) begin
                ways_0_metas_42_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_174) begin
                ways_0_metas_43_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_175) begin
                ways_0_metas_44_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_176) begin
                ways_0_metas_45_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_177) begin
                ways_0_metas_46_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_178) begin
                ways_0_metas_47_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_179) begin
                ways_0_metas_48_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_180) begin
                ways_0_metas_49_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_181) begin
                ways_0_metas_50_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_182) begin
                ways_0_metas_51_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_183) begin
                ways_0_metas_52_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_184) begin
                ways_0_metas_53_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_185) begin
                ways_0_metas_54_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_186) begin
                ways_0_metas_55_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_187) begin
                ways_0_metas_56_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_188) begin
                ways_0_metas_57_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_189) begin
                ways_0_metas_58_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_190) begin
                ways_0_metas_59_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_191) begin
                ways_0_metas_60_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_192) begin
                ways_0_metas_61_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_193) begin
                ways_0_metas_62_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_194) begin
                ways_0_metas_63_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_195) begin
                ways_0_metas_64_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_196) begin
                ways_0_metas_65_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_197) begin
                ways_0_metas_66_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_198) begin
                ways_0_metas_67_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_199) begin
                ways_0_metas_68_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_200) begin
                ways_0_metas_69_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_201) begin
                ways_0_metas_70_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_202) begin
                ways_0_metas_71_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_203) begin
                ways_0_metas_72_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_204) begin
                ways_0_metas_73_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_205) begin
                ways_0_metas_74_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_206) begin
                ways_0_metas_75_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_207) begin
                ways_0_metas_76_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_208) begin
                ways_0_metas_77_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_209) begin
                ways_0_metas_78_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_210) begin
                ways_0_metas_79_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_211) begin
                ways_0_metas_80_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_212) begin
                ways_0_metas_81_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_213) begin
                ways_0_metas_82_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_214) begin
                ways_0_metas_83_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_215) begin
                ways_0_metas_84_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_216) begin
                ways_0_metas_85_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_217) begin
                ways_0_metas_86_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_218) begin
                ways_0_metas_87_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_219) begin
                ways_0_metas_88_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_220) begin
                ways_0_metas_89_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_221) begin
                ways_0_metas_90_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_222) begin
                ways_0_metas_91_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_223) begin
                ways_0_metas_92_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_224) begin
                ways_0_metas_93_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_225) begin
                ways_0_metas_94_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_226) begin
                ways_0_metas_95_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_227) begin
                ways_0_metas_96_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_228) begin
                ways_0_metas_97_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_229) begin
                ways_0_metas_98_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_230) begin
                ways_0_metas_99_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_231) begin
                ways_0_metas_100_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_232) begin
                ways_0_metas_101_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_233) begin
                ways_0_metas_102_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_234) begin
                ways_0_metas_103_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_235) begin
                ways_0_metas_104_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_236) begin
                ways_0_metas_105_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_237) begin
                ways_0_metas_106_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_238) begin
                ways_0_metas_107_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_239) begin
                ways_0_metas_108_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_240) begin
                ways_0_metas_109_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_241) begin
                ways_0_metas_110_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_242) begin
                ways_0_metas_111_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_243) begin
                ways_0_metas_112_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_244) begin
                ways_0_metas_113_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_245) begin
                ways_0_metas_114_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_246) begin
                ways_0_metas_115_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_247) begin
                ways_0_metas_116_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_248) begin
                ways_0_metas_117_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_249) begin
                ways_0_metas_118_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_250) begin
                ways_0_metas_119_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_251) begin
                ways_0_metas_120_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_252) begin
                ways_0_metas_121_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_253) begin
                ways_0_metas_122_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_254) begin
                ways_0_metas_123_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_255) begin
                ways_0_metas_124_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_256) begin
                ways_0_metas_125_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_257) begin
                ways_0_metas_126_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_258) begin
                ways_0_metas_127_vld <= 1'b1; // @ ICache.scala l182
              end
            end
          end
        end
      end
      if((next_level_done && (1'b0 == evict_id_miss))) begin
        if(tmp_131) begin
          ways_0_metas_0_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_132) begin
          ways_0_metas_1_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_133) begin
          ways_0_metas_2_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_134) begin
          ways_0_metas_3_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_135) begin
          ways_0_metas_4_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_136) begin
          ways_0_metas_5_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_137) begin
          ways_0_metas_6_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_138) begin
          ways_0_metas_7_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_139) begin
          ways_0_metas_8_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_140) begin
          ways_0_metas_9_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_141) begin
          ways_0_metas_10_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_142) begin
          ways_0_metas_11_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_143) begin
          ways_0_metas_12_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_144) begin
          ways_0_metas_13_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_145) begin
          ways_0_metas_14_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_146) begin
          ways_0_metas_15_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_147) begin
          ways_0_metas_16_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_148) begin
          ways_0_metas_17_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_149) begin
          ways_0_metas_18_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_150) begin
          ways_0_metas_19_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_151) begin
          ways_0_metas_20_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_152) begin
          ways_0_metas_21_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_153) begin
          ways_0_metas_22_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_154) begin
          ways_0_metas_23_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_155) begin
          ways_0_metas_24_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_156) begin
          ways_0_metas_25_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_157) begin
          ways_0_metas_26_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_158) begin
          ways_0_metas_27_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_159) begin
          ways_0_metas_28_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_160) begin
          ways_0_metas_29_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_161) begin
          ways_0_metas_30_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_162) begin
          ways_0_metas_31_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_163) begin
          ways_0_metas_32_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_164) begin
          ways_0_metas_33_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_165) begin
          ways_0_metas_34_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_166) begin
          ways_0_metas_35_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_167) begin
          ways_0_metas_36_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_168) begin
          ways_0_metas_37_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_169) begin
          ways_0_metas_38_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_170) begin
          ways_0_metas_39_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_171) begin
          ways_0_metas_40_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_172) begin
          ways_0_metas_41_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_173) begin
          ways_0_metas_42_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_174) begin
          ways_0_metas_43_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_175) begin
          ways_0_metas_44_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_176) begin
          ways_0_metas_45_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_177) begin
          ways_0_metas_46_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_178) begin
          ways_0_metas_47_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_179) begin
          ways_0_metas_48_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_180) begin
          ways_0_metas_49_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_181) begin
          ways_0_metas_50_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_182) begin
          ways_0_metas_51_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_183) begin
          ways_0_metas_52_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_184) begin
          ways_0_metas_53_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_185) begin
          ways_0_metas_54_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_186) begin
          ways_0_metas_55_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_187) begin
          ways_0_metas_56_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_188) begin
          ways_0_metas_57_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_189) begin
          ways_0_metas_58_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_190) begin
          ways_0_metas_59_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_191) begin
          ways_0_metas_60_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_192) begin
          ways_0_metas_61_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_193) begin
          ways_0_metas_62_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_194) begin
          ways_0_metas_63_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_195) begin
          ways_0_metas_64_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_196) begin
          ways_0_metas_65_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_197) begin
          ways_0_metas_66_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_198) begin
          ways_0_metas_67_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_199) begin
          ways_0_metas_68_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_200) begin
          ways_0_metas_69_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_201) begin
          ways_0_metas_70_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_202) begin
          ways_0_metas_71_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_203) begin
          ways_0_metas_72_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_204) begin
          ways_0_metas_73_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_205) begin
          ways_0_metas_74_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_206) begin
          ways_0_metas_75_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_207) begin
          ways_0_metas_76_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_208) begin
          ways_0_metas_77_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_209) begin
          ways_0_metas_78_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_210) begin
          ways_0_metas_79_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_211) begin
          ways_0_metas_80_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_212) begin
          ways_0_metas_81_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_213) begin
          ways_0_metas_82_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_214) begin
          ways_0_metas_83_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_215) begin
          ways_0_metas_84_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_216) begin
          ways_0_metas_85_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_217) begin
          ways_0_metas_86_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_218) begin
          ways_0_metas_87_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_219) begin
          ways_0_metas_88_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_220) begin
          ways_0_metas_89_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_221) begin
          ways_0_metas_90_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_222) begin
          ways_0_metas_91_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_223) begin
          ways_0_metas_92_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_224) begin
          ways_0_metas_93_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_225) begin
          ways_0_metas_94_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_226) begin
          ways_0_metas_95_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_227) begin
          ways_0_metas_96_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_228) begin
          ways_0_metas_97_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_229) begin
          ways_0_metas_98_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_230) begin
          ways_0_metas_99_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_231) begin
          ways_0_metas_100_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_232) begin
          ways_0_metas_101_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_233) begin
          ways_0_metas_102_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_234) begin
          ways_0_metas_103_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_235) begin
          ways_0_metas_104_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_236) begin
          ways_0_metas_105_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_237) begin
          ways_0_metas_106_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_238) begin
          ways_0_metas_107_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_239) begin
          ways_0_metas_108_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_240) begin
          ways_0_metas_109_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_241) begin
          ways_0_metas_110_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_242) begin
          ways_0_metas_111_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_243) begin
          ways_0_metas_112_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_244) begin
          ways_0_metas_113_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_245) begin
          ways_0_metas_114_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_246) begin
          ways_0_metas_115_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_247) begin
          ways_0_metas_116_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_248) begin
          ways_0_metas_117_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_249) begin
          ways_0_metas_118_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_250) begin
          ways_0_metas_119_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_251) begin
          ways_0_metas_120_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_252) begin
          ways_0_metas_121_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_253) begin
          ways_0_metas_122_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_254) begin
          ways_0_metas_123_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_255) begin
          ways_0_metas_124_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_256) begin
          ways_0_metas_125_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_257) begin
          ways_0_metas_126_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_258) begin
          ways_0_metas_127_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
      end
      if((flush || is_miss)) begin
        cpu_cmd_ready_1 <= 1'b0; // @ ICache.scala l192
      end else begin
        if((flush_done || next_level_done)) begin
          cpu_cmd_ready_1 <= 1'b1; // @ ICache.scala l195
        end
      end
      if(flush_busy) begin
        if(tmp_647) begin
          ways_1_metas_0_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_648) begin
          ways_1_metas_1_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_649) begin
          ways_1_metas_2_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_650) begin
          ways_1_metas_3_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_651) begin
          ways_1_metas_4_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_652) begin
          ways_1_metas_5_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_653) begin
          ways_1_metas_6_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_654) begin
          ways_1_metas_7_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_655) begin
          ways_1_metas_8_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_656) begin
          ways_1_metas_9_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_657) begin
          ways_1_metas_10_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_658) begin
          ways_1_metas_11_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_659) begin
          ways_1_metas_12_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_660) begin
          ways_1_metas_13_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_661) begin
          ways_1_metas_14_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_662) begin
          ways_1_metas_15_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_663) begin
          ways_1_metas_16_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_664) begin
          ways_1_metas_17_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_665) begin
          ways_1_metas_18_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_666) begin
          ways_1_metas_19_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_667) begin
          ways_1_metas_20_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_668) begin
          ways_1_metas_21_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_669) begin
          ways_1_metas_22_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_670) begin
          ways_1_metas_23_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_671) begin
          ways_1_metas_24_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_672) begin
          ways_1_metas_25_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_673) begin
          ways_1_metas_26_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_674) begin
          ways_1_metas_27_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_675) begin
          ways_1_metas_28_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_676) begin
          ways_1_metas_29_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_677) begin
          ways_1_metas_30_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_678) begin
          ways_1_metas_31_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_679) begin
          ways_1_metas_32_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_680) begin
          ways_1_metas_33_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_681) begin
          ways_1_metas_34_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_682) begin
          ways_1_metas_35_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_683) begin
          ways_1_metas_36_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_684) begin
          ways_1_metas_37_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_685) begin
          ways_1_metas_38_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_686) begin
          ways_1_metas_39_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_687) begin
          ways_1_metas_40_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_688) begin
          ways_1_metas_41_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_689) begin
          ways_1_metas_42_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_690) begin
          ways_1_metas_43_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_691) begin
          ways_1_metas_44_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_692) begin
          ways_1_metas_45_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_693) begin
          ways_1_metas_46_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_694) begin
          ways_1_metas_47_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_695) begin
          ways_1_metas_48_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_696) begin
          ways_1_metas_49_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_697) begin
          ways_1_metas_50_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_698) begin
          ways_1_metas_51_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_699) begin
          ways_1_metas_52_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_700) begin
          ways_1_metas_53_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_701) begin
          ways_1_metas_54_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_702) begin
          ways_1_metas_55_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_703) begin
          ways_1_metas_56_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_704) begin
          ways_1_metas_57_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_705) begin
          ways_1_metas_58_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_706) begin
          ways_1_metas_59_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_707) begin
          ways_1_metas_60_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_708) begin
          ways_1_metas_61_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_709) begin
          ways_1_metas_62_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_710) begin
          ways_1_metas_63_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_711) begin
          ways_1_metas_64_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_712) begin
          ways_1_metas_65_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_713) begin
          ways_1_metas_66_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_714) begin
          ways_1_metas_67_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_715) begin
          ways_1_metas_68_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_716) begin
          ways_1_metas_69_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_717) begin
          ways_1_metas_70_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_718) begin
          ways_1_metas_71_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_719) begin
          ways_1_metas_72_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_720) begin
          ways_1_metas_73_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_721) begin
          ways_1_metas_74_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_722) begin
          ways_1_metas_75_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_723) begin
          ways_1_metas_76_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_724) begin
          ways_1_metas_77_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_725) begin
          ways_1_metas_78_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_726) begin
          ways_1_metas_79_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_727) begin
          ways_1_metas_80_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_728) begin
          ways_1_metas_81_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_729) begin
          ways_1_metas_82_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_730) begin
          ways_1_metas_83_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_731) begin
          ways_1_metas_84_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_732) begin
          ways_1_metas_85_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_733) begin
          ways_1_metas_86_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_734) begin
          ways_1_metas_87_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_735) begin
          ways_1_metas_88_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_736) begin
          ways_1_metas_89_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_737) begin
          ways_1_metas_90_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_738) begin
          ways_1_metas_91_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_739) begin
          ways_1_metas_92_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_740) begin
          ways_1_metas_93_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_741) begin
          ways_1_metas_94_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_742) begin
          ways_1_metas_95_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_743) begin
          ways_1_metas_96_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_744) begin
          ways_1_metas_97_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_745) begin
          ways_1_metas_98_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_746) begin
          ways_1_metas_99_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_747) begin
          ways_1_metas_100_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_748) begin
          ways_1_metas_101_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_749) begin
          ways_1_metas_102_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_750) begin
          ways_1_metas_103_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_751) begin
          ways_1_metas_104_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_752) begin
          ways_1_metas_105_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_753) begin
          ways_1_metas_106_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_754) begin
          ways_1_metas_107_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_755) begin
          ways_1_metas_108_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_756) begin
          ways_1_metas_109_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_757) begin
          ways_1_metas_110_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_758) begin
          ways_1_metas_111_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_759) begin
          ways_1_metas_112_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_760) begin
          ways_1_metas_113_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_761) begin
          ways_1_metas_114_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_762) begin
          ways_1_metas_115_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_763) begin
          ways_1_metas_116_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_764) begin
          ways_1_metas_117_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_765) begin
          ways_1_metas_118_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_766) begin
          ways_1_metas_119_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_767) begin
          ways_1_metas_120_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_768) begin
          ways_1_metas_121_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_769) begin
          ways_1_metas_122_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_770) begin
          ways_1_metas_123_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_771) begin
          ways_1_metas_124_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_772) begin
          ways_1_metas_125_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_773) begin
          ways_1_metas_126_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_774) begin
          ways_1_metas_127_mru <= 1'b0; // @ ICache.scala l166
        end
        if(tmp_647) begin
          ways_1_metas_0_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_648) begin
          ways_1_metas_1_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_649) begin
          ways_1_metas_2_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_650) begin
          ways_1_metas_3_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_651) begin
          ways_1_metas_4_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_652) begin
          ways_1_metas_5_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_653) begin
          ways_1_metas_6_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_654) begin
          ways_1_metas_7_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_655) begin
          ways_1_metas_8_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_656) begin
          ways_1_metas_9_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_657) begin
          ways_1_metas_10_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_658) begin
          ways_1_metas_11_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_659) begin
          ways_1_metas_12_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_660) begin
          ways_1_metas_13_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_661) begin
          ways_1_metas_14_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_662) begin
          ways_1_metas_15_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_663) begin
          ways_1_metas_16_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_664) begin
          ways_1_metas_17_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_665) begin
          ways_1_metas_18_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_666) begin
          ways_1_metas_19_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_667) begin
          ways_1_metas_20_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_668) begin
          ways_1_metas_21_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_669) begin
          ways_1_metas_22_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_670) begin
          ways_1_metas_23_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_671) begin
          ways_1_metas_24_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_672) begin
          ways_1_metas_25_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_673) begin
          ways_1_metas_26_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_674) begin
          ways_1_metas_27_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_675) begin
          ways_1_metas_28_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_676) begin
          ways_1_metas_29_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_677) begin
          ways_1_metas_30_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_678) begin
          ways_1_metas_31_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_679) begin
          ways_1_metas_32_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_680) begin
          ways_1_metas_33_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_681) begin
          ways_1_metas_34_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_682) begin
          ways_1_metas_35_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_683) begin
          ways_1_metas_36_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_684) begin
          ways_1_metas_37_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_685) begin
          ways_1_metas_38_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_686) begin
          ways_1_metas_39_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_687) begin
          ways_1_metas_40_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_688) begin
          ways_1_metas_41_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_689) begin
          ways_1_metas_42_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_690) begin
          ways_1_metas_43_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_691) begin
          ways_1_metas_44_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_692) begin
          ways_1_metas_45_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_693) begin
          ways_1_metas_46_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_694) begin
          ways_1_metas_47_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_695) begin
          ways_1_metas_48_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_696) begin
          ways_1_metas_49_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_697) begin
          ways_1_metas_50_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_698) begin
          ways_1_metas_51_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_699) begin
          ways_1_metas_52_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_700) begin
          ways_1_metas_53_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_701) begin
          ways_1_metas_54_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_702) begin
          ways_1_metas_55_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_703) begin
          ways_1_metas_56_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_704) begin
          ways_1_metas_57_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_705) begin
          ways_1_metas_58_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_706) begin
          ways_1_metas_59_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_707) begin
          ways_1_metas_60_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_708) begin
          ways_1_metas_61_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_709) begin
          ways_1_metas_62_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_710) begin
          ways_1_metas_63_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_711) begin
          ways_1_metas_64_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_712) begin
          ways_1_metas_65_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_713) begin
          ways_1_metas_66_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_714) begin
          ways_1_metas_67_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_715) begin
          ways_1_metas_68_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_716) begin
          ways_1_metas_69_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_717) begin
          ways_1_metas_70_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_718) begin
          ways_1_metas_71_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_719) begin
          ways_1_metas_72_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_720) begin
          ways_1_metas_73_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_721) begin
          ways_1_metas_74_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_722) begin
          ways_1_metas_75_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_723) begin
          ways_1_metas_76_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_724) begin
          ways_1_metas_77_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_725) begin
          ways_1_metas_78_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_726) begin
          ways_1_metas_79_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_727) begin
          ways_1_metas_80_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_728) begin
          ways_1_metas_81_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_729) begin
          ways_1_metas_82_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_730) begin
          ways_1_metas_83_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_731) begin
          ways_1_metas_84_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_732) begin
          ways_1_metas_85_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_733) begin
          ways_1_metas_86_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_734) begin
          ways_1_metas_87_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_735) begin
          ways_1_metas_88_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_736) begin
          ways_1_metas_89_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_737) begin
          ways_1_metas_90_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_738) begin
          ways_1_metas_91_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_739) begin
          ways_1_metas_92_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_740) begin
          ways_1_metas_93_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_741) begin
          ways_1_metas_94_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_742) begin
          ways_1_metas_95_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_743) begin
          ways_1_metas_96_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_744) begin
          ways_1_metas_97_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_745) begin
          ways_1_metas_98_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_746) begin
          ways_1_metas_99_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_747) begin
          ways_1_metas_100_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_748) begin
          ways_1_metas_101_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_749) begin
          ways_1_metas_102_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_750) begin
          ways_1_metas_103_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_751) begin
          ways_1_metas_104_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_752) begin
          ways_1_metas_105_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_753) begin
          ways_1_metas_106_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_754) begin
          ways_1_metas_107_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_755) begin
          ways_1_metas_108_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_756) begin
          ways_1_metas_109_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_757) begin
          ways_1_metas_110_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_758) begin
          ways_1_metas_111_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_759) begin
          ways_1_metas_112_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_760) begin
          ways_1_metas_113_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_761) begin
          ways_1_metas_114_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_762) begin
          ways_1_metas_115_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_763) begin
          ways_1_metas_116_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_764) begin
          ways_1_metas_117_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_765) begin
          ways_1_metas_118_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_766) begin
          ways_1_metas_119_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_767) begin
          ways_1_metas_120_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_768) begin
          ways_1_metas_121_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_769) begin
          ways_1_metas_122_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_770) begin
          ways_1_metas_123_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_771) begin
          ways_1_metas_124_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_772) begin
          ways_1_metas_125_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_773) begin
          ways_1_metas_126_vld <= 1'b0; // @ ICache.scala l167
        end
        if(tmp_774) begin
          ways_1_metas_127_vld <= 1'b0; // @ ICache.scala l167
        end
      end else begin
        if((is_hit && mru_full)) begin
          if(cache_hit_1) begin
            if(tmp_389) begin
              ways_1_metas_0_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_390) begin
              ways_1_metas_1_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_391) begin
              ways_1_metas_2_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_392) begin
              ways_1_metas_3_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_393) begin
              ways_1_metas_4_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_394) begin
              ways_1_metas_5_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_395) begin
              ways_1_metas_6_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_396) begin
              ways_1_metas_7_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_397) begin
              ways_1_metas_8_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_398) begin
              ways_1_metas_9_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_399) begin
              ways_1_metas_10_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_400) begin
              ways_1_metas_11_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_401) begin
              ways_1_metas_12_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_402) begin
              ways_1_metas_13_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_403) begin
              ways_1_metas_14_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_404) begin
              ways_1_metas_15_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_405) begin
              ways_1_metas_16_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_406) begin
              ways_1_metas_17_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_407) begin
              ways_1_metas_18_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_408) begin
              ways_1_metas_19_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_409) begin
              ways_1_metas_20_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_410) begin
              ways_1_metas_21_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_411) begin
              ways_1_metas_22_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_412) begin
              ways_1_metas_23_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_413) begin
              ways_1_metas_24_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_414) begin
              ways_1_metas_25_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_415) begin
              ways_1_metas_26_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_416) begin
              ways_1_metas_27_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_417) begin
              ways_1_metas_28_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_418) begin
              ways_1_metas_29_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_419) begin
              ways_1_metas_30_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_420) begin
              ways_1_metas_31_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_421) begin
              ways_1_metas_32_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_422) begin
              ways_1_metas_33_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_423) begin
              ways_1_metas_34_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_424) begin
              ways_1_metas_35_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_425) begin
              ways_1_metas_36_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_426) begin
              ways_1_metas_37_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_427) begin
              ways_1_metas_38_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_428) begin
              ways_1_metas_39_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_429) begin
              ways_1_metas_40_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_430) begin
              ways_1_metas_41_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_431) begin
              ways_1_metas_42_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_432) begin
              ways_1_metas_43_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_433) begin
              ways_1_metas_44_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_434) begin
              ways_1_metas_45_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_435) begin
              ways_1_metas_46_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_436) begin
              ways_1_metas_47_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_437) begin
              ways_1_metas_48_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_438) begin
              ways_1_metas_49_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_439) begin
              ways_1_metas_50_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_440) begin
              ways_1_metas_51_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_441) begin
              ways_1_metas_52_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_442) begin
              ways_1_metas_53_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_443) begin
              ways_1_metas_54_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_444) begin
              ways_1_metas_55_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_445) begin
              ways_1_metas_56_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_446) begin
              ways_1_metas_57_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_447) begin
              ways_1_metas_58_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_448) begin
              ways_1_metas_59_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_449) begin
              ways_1_metas_60_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_450) begin
              ways_1_metas_61_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_451) begin
              ways_1_metas_62_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_452) begin
              ways_1_metas_63_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_453) begin
              ways_1_metas_64_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_454) begin
              ways_1_metas_65_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_455) begin
              ways_1_metas_66_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_456) begin
              ways_1_metas_67_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_457) begin
              ways_1_metas_68_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_458) begin
              ways_1_metas_69_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_459) begin
              ways_1_metas_70_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_460) begin
              ways_1_metas_71_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_461) begin
              ways_1_metas_72_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_462) begin
              ways_1_metas_73_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_463) begin
              ways_1_metas_74_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_464) begin
              ways_1_metas_75_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_465) begin
              ways_1_metas_76_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_466) begin
              ways_1_metas_77_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_467) begin
              ways_1_metas_78_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_468) begin
              ways_1_metas_79_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_469) begin
              ways_1_metas_80_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_470) begin
              ways_1_metas_81_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_471) begin
              ways_1_metas_82_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_472) begin
              ways_1_metas_83_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_473) begin
              ways_1_metas_84_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_474) begin
              ways_1_metas_85_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_475) begin
              ways_1_metas_86_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_476) begin
              ways_1_metas_87_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_477) begin
              ways_1_metas_88_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_478) begin
              ways_1_metas_89_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_479) begin
              ways_1_metas_90_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_480) begin
              ways_1_metas_91_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_481) begin
              ways_1_metas_92_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_482) begin
              ways_1_metas_93_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_483) begin
              ways_1_metas_94_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_484) begin
              ways_1_metas_95_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_485) begin
              ways_1_metas_96_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_486) begin
              ways_1_metas_97_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_487) begin
              ways_1_metas_98_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_488) begin
              ways_1_metas_99_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_489) begin
              ways_1_metas_100_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_490) begin
              ways_1_metas_101_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_491) begin
              ways_1_metas_102_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_492) begin
              ways_1_metas_103_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_493) begin
              ways_1_metas_104_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_494) begin
              ways_1_metas_105_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_495) begin
              ways_1_metas_106_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_496) begin
              ways_1_metas_107_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_497) begin
              ways_1_metas_108_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_498) begin
              ways_1_metas_109_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_499) begin
              ways_1_metas_110_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_500) begin
              ways_1_metas_111_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_501) begin
              ways_1_metas_112_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_502) begin
              ways_1_metas_113_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_503) begin
              ways_1_metas_114_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_504) begin
              ways_1_metas_115_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_505) begin
              ways_1_metas_116_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_506) begin
              ways_1_metas_117_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_507) begin
              ways_1_metas_118_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_508) begin
              ways_1_metas_119_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_509) begin
              ways_1_metas_120_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_510) begin
              ways_1_metas_121_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_511) begin
              ways_1_metas_122_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_512) begin
              ways_1_metas_123_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_513) begin
              ways_1_metas_124_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_514) begin
              ways_1_metas_125_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_515) begin
              ways_1_metas_126_mru <= 1'b1; // @ ICache.scala l173
            end
            if(tmp_516) begin
              ways_1_metas_127_mru <= 1'b1; // @ ICache.scala l173
            end
          end else begin
            if(tmp_389) begin
              ways_1_metas_0_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_390) begin
              ways_1_metas_1_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_391) begin
              ways_1_metas_2_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_392) begin
              ways_1_metas_3_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_393) begin
              ways_1_metas_4_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_394) begin
              ways_1_metas_5_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_395) begin
              ways_1_metas_6_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_396) begin
              ways_1_metas_7_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_397) begin
              ways_1_metas_8_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_398) begin
              ways_1_metas_9_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_399) begin
              ways_1_metas_10_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_400) begin
              ways_1_metas_11_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_401) begin
              ways_1_metas_12_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_402) begin
              ways_1_metas_13_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_403) begin
              ways_1_metas_14_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_404) begin
              ways_1_metas_15_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_405) begin
              ways_1_metas_16_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_406) begin
              ways_1_metas_17_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_407) begin
              ways_1_metas_18_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_408) begin
              ways_1_metas_19_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_409) begin
              ways_1_metas_20_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_410) begin
              ways_1_metas_21_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_411) begin
              ways_1_metas_22_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_412) begin
              ways_1_metas_23_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_413) begin
              ways_1_metas_24_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_414) begin
              ways_1_metas_25_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_415) begin
              ways_1_metas_26_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_416) begin
              ways_1_metas_27_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_417) begin
              ways_1_metas_28_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_418) begin
              ways_1_metas_29_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_419) begin
              ways_1_metas_30_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_420) begin
              ways_1_metas_31_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_421) begin
              ways_1_metas_32_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_422) begin
              ways_1_metas_33_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_423) begin
              ways_1_metas_34_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_424) begin
              ways_1_metas_35_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_425) begin
              ways_1_metas_36_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_426) begin
              ways_1_metas_37_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_427) begin
              ways_1_metas_38_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_428) begin
              ways_1_metas_39_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_429) begin
              ways_1_metas_40_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_430) begin
              ways_1_metas_41_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_431) begin
              ways_1_metas_42_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_432) begin
              ways_1_metas_43_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_433) begin
              ways_1_metas_44_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_434) begin
              ways_1_metas_45_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_435) begin
              ways_1_metas_46_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_436) begin
              ways_1_metas_47_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_437) begin
              ways_1_metas_48_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_438) begin
              ways_1_metas_49_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_439) begin
              ways_1_metas_50_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_440) begin
              ways_1_metas_51_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_441) begin
              ways_1_metas_52_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_442) begin
              ways_1_metas_53_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_443) begin
              ways_1_metas_54_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_444) begin
              ways_1_metas_55_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_445) begin
              ways_1_metas_56_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_446) begin
              ways_1_metas_57_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_447) begin
              ways_1_metas_58_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_448) begin
              ways_1_metas_59_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_449) begin
              ways_1_metas_60_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_450) begin
              ways_1_metas_61_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_451) begin
              ways_1_metas_62_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_452) begin
              ways_1_metas_63_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_453) begin
              ways_1_metas_64_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_454) begin
              ways_1_metas_65_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_455) begin
              ways_1_metas_66_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_456) begin
              ways_1_metas_67_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_457) begin
              ways_1_metas_68_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_458) begin
              ways_1_metas_69_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_459) begin
              ways_1_metas_70_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_460) begin
              ways_1_metas_71_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_461) begin
              ways_1_metas_72_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_462) begin
              ways_1_metas_73_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_463) begin
              ways_1_metas_74_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_464) begin
              ways_1_metas_75_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_465) begin
              ways_1_metas_76_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_466) begin
              ways_1_metas_77_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_467) begin
              ways_1_metas_78_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_468) begin
              ways_1_metas_79_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_469) begin
              ways_1_metas_80_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_470) begin
              ways_1_metas_81_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_471) begin
              ways_1_metas_82_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_472) begin
              ways_1_metas_83_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_473) begin
              ways_1_metas_84_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_474) begin
              ways_1_metas_85_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_475) begin
              ways_1_metas_86_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_476) begin
              ways_1_metas_87_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_477) begin
              ways_1_metas_88_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_478) begin
              ways_1_metas_89_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_479) begin
              ways_1_metas_90_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_480) begin
              ways_1_metas_91_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_481) begin
              ways_1_metas_92_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_482) begin
              ways_1_metas_93_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_483) begin
              ways_1_metas_94_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_484) begin
              ways_1_metas_95_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_485) begin
              ways_1_metas_96_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_486) begin
              ways_1_metas_97_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_487) begin
              ways_1_metas_98_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_488) begin
              ways_1_metas_99_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_489) begin
              ways_1_metas_100_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_490) begin
              ways_1_metas_101_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_491) begin
              ways_1_metas_102_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_492) begin
              ways_1_metas_103_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_493) begin
              ways_1_metas_104_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_494) begin
              ways_1_metas_105_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_495) begin
              ways_1_metas_106_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_496) begin
              ways_1_metas_107_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_497) begin
              ways_1_metas_108_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_498) begin
              ways_1_metas_109_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_499) begin
              ways_1_metas_110_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_500) begin
              ways_1_metas_111_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_501) begin
              ways_1_metas_112_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_502) begin
              ways_1_metas_113_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_503) begin
              ways_1_metas_114_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_504) begin
              ways_1_metas_115_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_505) begin
              ways_1_metas_116_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_506) begin
              ways_1_metas_117_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_507) begin
              ways_1_metas_118_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_508) begin
              ways_1_metas_119_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_509) begin
              ways_1_metas_120_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_510) begin
              ways_1_metas_121_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_511) begin
              ways_1_metas_122_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_512) begin
              ways_1_metas_123_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_513) begin
              ways_1_metas_124_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_514) begin
              ways_1_metas_125_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_515) begin
              ways_1_metas_126_mru <= 1'b0; // @ ICache.scala l175
            end
            if(tmp_516) begin
              ways_1_metas_127_mru <= 1'b0; // @ ICache.scala l175
            end
          end
        end else begin
          if((is_hit && cache_hit_1)) begin
            if(tmp_389) begin
              ways_1_metas_0_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_390) begin
              ways_1_metas_1_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_391) begin
              ways_1_metas_2_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_392) begin
              ways_1_metas_3_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_393) begin
              ways_1_metas_4_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_394) begin
              ways_1_metas_5_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_395) begin
              ways_1_metas_6_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_396) begin
              ways_1_metas_7_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_397) begin
              ways_1_metas_8_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_398) begin
              ways_1_metas_9_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_399) begin
              ways_1_metas_10_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_400) begin
              ways_1_metas_11_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_401) begin
              ways_1_metas_12_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_402) begin
              ways_1_metas_13_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_403) begin
              ways_1_metas_14_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_404) begin
              ways_1_metas_15_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_405) begin
              ways_1_metas_16_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_406) begin
              ways_1_metas_17_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_407) begin
              ways_1_metas_18_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_408) begin
              ways_1_metas_19_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_409) begin
              ways_1_metas_20_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_410) begin
              ways_1_metas_21_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_411) begin
              ways_1_metas_22_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_412) begin
              ways_1_metas_23_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_413) begin
              ways_1_metas_24_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_414) begin
              ways_1_metas_25_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_415) begin
              ways_1_metas_26_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_416) begin
              ways_1_metas_27_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_417) begin
              ways_1_metas_28_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_418) begin
              ways_1_metas_29_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_419) begin
              ways_1_metas_30_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_420) begin
              ways_1_metas_31_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_421) begin
              ways_1_metas_32_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_422) begin
              ways_1_metas_33_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_423) begin
              ways_1_metas_34_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_424) begin
              ways_1_metas_35_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_425) begin
              ways_1_metas_36_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_426) begin
              ways_1_metas_37_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_427) begin
              ways_1_metas_38_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_428) begin
              ways_1_metas_39_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_429) begin
              ways_1_metas_40_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_430) begin
              ways_1_metas_41_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_431) begin
              ways_1_metas_42_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_432) begin
              ways_1_metas_43_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_433) begin
              ways_1_metas_44_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_434) begin
              ways_1_metas_45_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_435) begin
              ways_1_metas_46_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_436) begin
              ways_1_metas_47_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_437) begin
              ways_1_metas_48_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_438) begin
              ways_1_metas_49_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_439) begin
              ways_1_metas_50_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_440) begin
              ways_1_metas_51_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_441) begin
              ways_1_metas_52_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_442) begin
              ways_1_metas_53_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_443) begin
              ways_1_metas_54_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_444) begin
              ways_1_metas_55_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_445) begin
              ways_1_metas_56_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_446) begin
              ways_1_metas_57_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_447) begin
              ways_1_metas_58_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_448) begin
              ways_1_metas_59_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_449) begin
              ways_1_metas_60_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_450) begin
              ways_1_metas_61_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_451) begin
              ways_1_metas_62_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_452) begin
              ways_1_metas_63_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_453) begin
              ways_1_metas_64_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_454) begin
              ways_1_metas_65_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_455) begin
              ways_1_metas_66_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_456) begin
              ways_1_metas_67_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_457) begin
              ways_1_metas_68_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_458) begin
              ways_1_metas_69_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_459) begin
              ways_1_metas_70_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_460) begin
              ways_1_metas_71_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_461) begin
              ways_1_metas_72_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_462) begin
              ways_1_metas_73_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_463) begin
              ways_1_metas_74_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_464) begin
              ways_1_metas_75_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_465) begin
              ways_1_metas_76_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_466) begin
              ways_1_metas_77_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_467) begin
              ways_1_metas_78_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_468) begin
              ways_1_metas_79_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_469) begin
              ways_1_metas_80_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_470) begin
              ways_1_metas_81_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_471) begin
              ways_1_metas_82_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_472) begin
              ways_1_metas_83_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_473) begin
              ways_1_metas_84_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_474) begin
              ways_1_metas_85_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_475) begin
              ways_1_metas_86_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_476) begin
              ways_1_metas_87_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_477) begin
              ways_1_metas_88_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_478) begin
              ways_1_metas_89_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_479) begin
              ways_1_metas_90_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_480) begin
              ways_1_metas_91_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_481) begin
              ways_1_metas_92_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_482) begin
              ways_1_metas_93_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_483) begin
              ways_1_metas_94_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_484) begin
              ways_1_metas_95_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_485) begin
              ways_1_metas_96_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_486) begin
              ways_1_metas_97_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_487) begin
              ways_1_metas_98_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_488) begin
              ways_1_metas_99_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_489) begin
              ways_1_metas_100_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_490) begin
              ways_1_metas_101_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_491) begin
              ways_1_metas_102_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_492) begin
              ways_1_metas_103_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_493) begin
              ways_1_metas_104_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_494) begin
              ways_1_metas_105_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_495) begin
              ways_1_metas_106_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_496) begin
              ways_1_metas_107_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_497) begin
              ways_1_metas_108_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_498) begin
              ways_1_metas_109_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_499) begin
              ways_1_metas_110_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_500) begin
              ways_1_metas_111_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_501) begin
              ways_1_metas_112_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_502) begin
              ways_1_metas_113_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_503) begin
              ways_1_metas_114_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_504) begin
              ways_1_metas_115_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_505) begin
              ways_1_metas_116_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_506) begin
              ways_1_metas_117_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_507) begin
              ways_1_metas_118_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_508) begin
              ways_1_metas_119_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_509) begin
              ways_1_metas_120_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_510) begin
              ways_1_metas_121_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_511) begin
              ways_1_metas_122_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_512) begin
              ways_1_metas_123_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_513) begin
              ways_1_metas_124_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_514) begin
              ways_1_metas_125_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_515) begin
              ways_1_metas_126_mru <= 1'b1; // @ ICache.scala l179
            end
            if(tmp_516) begin
              ways_1_metas_127_mru <= 1'b1; // @ ICache.scala l179
            end
          end else begin
            if((next_level_done && (1'b1 == evict_id_miss))) begin
              if(tmp_518) begin
                ways_1_metas_0_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_519) begin
                ways_1_metas_1_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_520) begin
                ways_1_metas_2_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_521) begin
                ways_1_metas_3_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_522) begin
                ways_1_metas_4_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_523) begin
                ways_1_metas_5_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_524) begin
                ways_1_metas_6_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_525) begin
                ways_1_metas_7_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_526) begin
                ways_1_metas_8_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_527) begin
                ways_1_metas_9_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_528) begin
                ways_1_metas_10_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_529) begin
                ways_1_metas_11_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_530) begin
                ways_1_metas_12_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_531) begin
                ways_1_metas_13_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_532) begin
                ways_1_metas_14_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_533) begin
                ways_1_metas_15_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_534) begin
                ways_1_metas_16_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_535) begin
                ways_1_metas_17_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_536) begin
                ways_1_metas_18_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_537) begin
                ways_1_metas_19_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_538) begin
                ways_1_metas_20_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_539) begin
                ways_1_metas_21_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_540) begin
                ways_1_metas_22_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_541) begin
                ways_1_metas_23_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_542) begin
                ways_1_metas_24_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_543) begin
                ways_1_metas_25_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_544) begin
                ways_1_metas_26_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_545) begin
                ways_1_metas_27_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_546) begin
                ways_1_metas_28_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_547) begin
                ways_1_metas_29_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_548) begin
                ways_1_metas_30_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_549) begin
                ways_1_metas_31_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_550) begin
                ways_1_metas_32_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_551) begin
                ways_1_metas_33_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_552) begin
                ways_1_metas_34_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_553) begin
                ways_1_metas_35_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_554) begin
                ways_1_metas_36_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_555) begin
                ways_1_metas_37_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_556) begin
                ways_1_metas_38_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_557) begin
                ways_1_metas_39_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_558) begin
                ways_1_metas_40_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_559) begin
                ways_1_metas_41_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_560) begin
                ways_1_metas_42_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_561) begin
                ways_1_metas_43_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_562) begin
                ways_1_metas_44_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_563) begin
                ways_1_metas_45_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_564) begin
                ways_1_metas_46_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_565) begin
                ways_1_metas_47_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_566) begin
                ways_1_metas_48_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_567) begin
                ways_1_metas_49_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_568) begin
                ways_1_metas_50_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_569) begin
                ways_1_metas_51_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_570) begin
                ways_1_metas_52_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_571) begin
                ways_1_metas_53_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_572) begin
                ways_1_metas_54_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_573) begin
                ways_1_metas_55_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_574) begin
                ways_1_metas_56_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_575) begin
                ways_1_metas_57_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_576) begin
                ways_1_metas_58_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_577) begin
                ways_1_metas_59_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_578) begin
                ways_1_metas_60_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_579) begin
                ways_1_metas_61_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_580) begin
                ways_1_metas_62_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_581) begin
                ways_1_metas_63_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_582) begin
                ways_1_metas_64_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_583) begin
                ways_1_metas_65_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_584) begin
                ways_1_metas_66_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_585) begin
                ways_1_metas_67_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_586) begin
                ways_1_metas_68_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_587) begin
                ways_1_metas_69_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_588) begin
                ways_1_metas_70_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_589) begin
                ways_1_metas_71_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_590) begin
                ways_1_metas_72_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_591) begin
                ways_1_metas_73_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_592) begin
                ways_1_metas_74_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_593) begin
                ways_1_metas_75_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_594) begin
                ways_1_metas_76_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_595) begin
                ways_1_metas_77_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_596) begin
                ways_1_metas_78_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_597) begin
                ways_1_metas_79_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_598) begin
                ways_1_metas_80_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_599) begin
                ways_1_metas_81_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_600) begin
                ways_1_metas_82_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_601) begin
                ways_1_metas_83_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_602) begin
                ways_1_metas_84_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_603) begin
                ways_1_metas_85_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_604) begin
                ways_1_metas_86_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_605) begin
                ways_1_metas_87_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_606) begin
                ways_1_metas_88_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_607) begin
                ways_1_metas_89_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_608) begin
                ways_1_metas_90_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_609) begin
                ways_1_metas_91_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_610) begin
                ways_1_metas_92_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_611) begin
                ways_1_metas_93_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_612) begin
                ways_1_metas_94_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_613) begin
                ways_1_metas_95_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_614) begin
                ways_1_metas_96_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_615) begin
                ways_1_metas_97_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_616) begin
                ways_1_metas_98_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_617) begin
                ways_1_metas_99_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_618) begin
                ways_1_metas_100_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_619) begin
                ways_1_metas_101_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_620) begin
                ways_1_metas_102_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_621) begin
                ways_1_metas_103_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_622) begin
                ways_1_metas_104_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_623) begin
                ways_1_metas_105_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_624) begin
                ways_1_metas_106_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_625) begin
                ways_1_metas_107_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_626) begin
                ways_1_metas_108_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_627) begin
                ways_1_metas_109_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_628) begin
                ways_1_metas_110_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_629) begin
                ways_1_metas_111_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_630) begin
                ways_1_metas_112_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_631) begin
                ways_1_metas_113_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_632) begin
                ways_1_metas_114_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_633) begin
                ways_1_metas_115_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_634) begin
                ways_1_metas_116_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_635) begin
                ways_1_metas_117_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_636) begin
                ways_1_metas_118_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_637) begin
                ways_1_metas_119_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_638) begin
                ways_1_metas_120_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_639) begin
                ways_1_metas_121_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_640) begin
                ways_1_metas_122_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_641) begin
                ways_1_metas_123_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_642) begin
                ways_1_metas_124_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_643) begin
                ways_1_metas_125_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_644) begin
                ways_1_metas_126_vld <= 1'b1; // @ ICache.scala l182
              end
              if(tmp_645) begin
                ways_1_metas_127_vld <= 1'b1; // @ ICache.scala l182
              end
            end
          end
        end
      end
      if((next_level_done && (1'b1 == evict_id_miss))) begin
        if(tmp_518) begin
          ways_1_metas_0_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_519) begin
          ways_1_metas_1_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_520) begin
          ways_1_metas_2_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_521) begin
          ways_1_metas_3_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_522) begin
          ways_1_metas_4_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_523) begin
          ways_1_metas_5_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_524) begin
          ways_1_metas_6_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_525) begin
          ways_1_metas_7_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_526) begin
          ways_1_metas_8_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_527) begin
          ways_1_metas_9_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_528) begin
          ways_1_metas_10_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_529) begin
          ways_1_metas_11_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_530) begin
          ways_1_metas_12_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_531) begin
          ways_1_metas_13_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_532) begin
          ways_1_metas_14_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_533) begin
          ways_1_metas_15_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_534) begin
          ways_1_metas_16_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_535) begin
          ways_1_metas_17_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_536) begin
          ways_1_metas_18_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_537) begin
          ways_1_metas_19_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_538) begin
          ways_1_metas_20_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_539) begin
          ways_1_metas_21_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_540) begin
          ways_1_metas_22_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_541) begin
          ways_1_metas_23_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_542) begin
          ways_1_metas_24_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_543) begin
          ways_1_metas_25_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_544) begin
          ways_1_metas_26_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_545) begin
          ways_1_metas_27_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_546) begin
          ways_1_metas_28_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_547) begin
          ways_1_metas_29_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_548) begin
          ways_1_metas_30_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_549) begin
          ways_1_metas_31_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_550) begin
          ways_1_metas_32_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_551) begin
          ways_1_metas_33_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_552) begin
          ways_1_metas_34_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_553) begin
          ways_1_metas_35_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_554) begin
          ways_1_metas_36_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_555) begin
          ways_1_metas_37_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_556) begin
          ways_1_metas_38_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_557) begin
          ways_1_metas_39_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_558) begin
          ways_1_metas_40_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_559) begin
          ways_1_metas_41_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_560) begin
          ways_1_metas_42_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_561) begin
          ways_1_metas_43_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_562) begin
          ways_1_metas_44_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_563) begin
          ways_1_metas_45_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_564) begin
          ways_1_metas_46_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_565) begin
          ways_1_metas_47_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_566) begin
          ways_1_metas_48_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_567) begin
          ways_1_metas_49_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_568) begin
          ways_1_metas_50_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_569) begin
          ways_1_metas_51_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_570) begin
          ways_1_metas_52_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_571) begin
          ways_1_metas_53_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_572) begin
          ways_1_metas_54_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_573) begin
          ways_1_metas_55_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_574) begin
          ways_1_metas_56_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_575) begin
          ways_1_metas_57_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_576) begin
          ways_1_metas_58_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_577) begin
          ways_1_metas_59_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_578) begin
          ways_1_metas_60_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_579) begin
          ways_1_metas_61_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_580) begin
          ways_1_metas_62_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_581) begin
          ways_1_metas_63_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_582) begin
          ways_1_metas_64_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_583) begin
          ways_1_metas_65_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_584) begin
          ways_1_metas_66_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_585) begin
          ways_1_metas_67_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_586) begin
          ways_1_metas_68_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_587) begin
          ways_1_metas_69_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_588) begin
          ways_1_metas_70_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_589) begin
          ways_1_metas_71_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_590) begin
          ways_1_metas_72_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_591) begin
          ways_1_metas_73_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_592) begin
          ways_1_metas_74_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_593) begin
          ways_1_metas_75_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_594) begin
          ways_1_metas_76_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_595) begin
          ways_1_metas_77_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_596) begin
          ways_1_metas_78_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_597) begin
          ways_1_metas_79_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_598) begin
          ways_1_metas_80_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_599) begin
          ways_1_metas_81_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_600) begin
          ways_1_metas_82_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_601) begin
          ways_1_metas_83_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_602) begin
          ways_1_metas_84_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_603) begin
          ways_1_metas_85_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_604) begin
          ways_1_metas_86_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_605) begin
          ways_1_metas_87_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_606) begin
          ways_1_metas_88_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_607) begin
          ways_1_metas_89_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_608) begin
          ways_1_metas_90_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_609) begin
          ways_1_metas_91_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_610) begin
          ways_1_metas_92_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_611) begin
          ways_1_metas_93_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_612) begin
          ways_1_metas_94_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_613) begin
          ways_1_metas_95_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_614) begin
          ways_1_metas_96_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_615) begin
          ways_1_metas_97_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_616) begin
          ways_1_metas_98_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_617) begin
          ways_1_metas_99_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_618) begin
          ways_1_metas_100_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_619) begin
          ways_1_metas_101_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_620) begin
          ways_1_metas_102_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_621) begin
          ways_1_metas_103_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_622) begin
          ways_1_metas_104_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_623) begin
          ways_1_metas_105_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_624) begin
          ways_1_metas_106_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_625) begin
          ways_1_metas_107_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_626) begin
          ways_1_metas_108_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_627) begin
          ways_1_metas_109_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_628) begin
          ways_1_metas_110_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_629) begin
          ways_1_metas_111_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_630) begin
          ways_1_metas_112_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_631) begin
          ways_1_metas_113_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_632) begin
          ways_1_metas_114_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_633) begin
          ways_1_metas_115_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_634) begin
          ways_1_metas_116_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_635) begin
          ways_1_metas_117_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_636) begin
          ways_1_metas_118_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_637) begin
          ways_1_metas_119_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_638) begin
          ways_1_metas_120_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_639) begin
          ways_1_metas_121_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_640) begin
          ways_1_metas_122_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_641) begin
          ways_1_metas_123_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_642) begin
          ways_1_metas_124_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_643) begin
          ways_1_metas_125_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_644) begin
          ways_1_metas_126_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
        if(tmp_645) begin
          ways_1_metas_127_tag <= cpu_tag_d1; // @ ICache.scala l187
        end
      end
      if((flush || is_miss)) begin
        cpu_cmd_ready_1 <= 1'b0; // @ ICache.scala l192
      end else begin
        if((flush_done || next_level_done)) begin
          cpu_cmd_ready_1 <= 1'b1; // @ ICache.scala l195
        end
      end
    end
  end

  always @(posedge io_axiClk) begin
    hit_id_d1 <= hit_id; // @ Reg.scala l39
    is_hit_d1 <= is_hit; // @ Reg.scala l39
    if(is_miss) begin
      evict_id_miss <= evict_id; // @ ICache.scala l52
    end
    next_level_done <= (next_level_rsp_valid && (next_level_data_cnt_value == 3'b111)); // @ Reg.scala l39
  end


endmodule

module Fetch (
  input               flush,
  input               stall,
  input               interrupt_vld,
  input      [31:0]   interrupt_pc,
  input               redirect_vld,
  input      [31:0]   redirect_pc,
  output              icache_ports_cmd_valid,
  input               icache_ports_cmd_ready,
  output     [31:0]   icache_ports_cmd_payload_addr,
  input               icache_ports_rsp_valid,
  input      [31:0]   icache_ports_rsp_payload_data,
  output     [31:0]   bpu_predict_pc,
  output              bpu_predict_valid,
  input               bpu_predict_taken,
  input      [31:0]   bpu_target_pc,
  output              dst_ports_valid,
  input               dst_ports_ready,
  output     [31:0]   dst_ports_payload_pc,
  output     [31:0]   dst_ports_payload_pc_next,
  output              dst_ports_payload_bpu_pred_taken,
  output     [31:0]   dst_ports_payload_instruction,
  output     [63:0]   bpu_predict_imm,
  output              bpu_predict_jal,
  output              bpu_predict_branch,
  input               io_axiClk,
  input               cpu_rst
);
  localparam FetchEnum_IDLE = 2'd0;
  localparam FetchEnum_FETCH = 2'd1;
  localparam FetchEnum_HALT = 2'd2;

  wire                pc_stream_fifo_ports_m_ports_valid;
  wire       [31:0]   pc_stream_fifo_ports_m_ports_payload;
  wire                pc_stream_fifo_ports_s_ports_ready;
  wire                pc_stream_fifo_has_space;
  wire       [31:0]   pc_stream_fifo_next_payload;
  wire                pc_stream_fifo_next_valid;
  wire                pc_next_stream_fifo_ports_m_ports_valid;
  wire       [31:0]   pc_next_stream_fifo_ports_m_ports_payload;
  wire                pc_next_stream_fifo_ports_s_ports_ready;
  wire                pc_next_stream_fifo_has_space;
  wire       [31:0]   pc_next_stream_fifo_next_payload;
  wire                pc_next_stream_fifo_next_valid;
  wire                bpu_pred_taken_fifo_ports_m_ports_valid;
  wire                bpu_pred_taken_fifo_ports_m_ports_payload;
  wire                bpu_pred_taken_fifo_ports_s_ports_ready;
  wire                bpu_pred_taken_fifo_has_space;
  wire                instr_stream_fifo_ports_m_ports_valid;
  wire       [31:0]   instr_stream_fifo_ports_m_ports_payload;
  wire                instr_stream_fifo_ports_s_ports_ready;
  wire                instr_stream_fifo_has_space;
  wire       [19:0]   tmp_tmp_bpu_predict_imm_2;
  wire       [11:0]   tmp_tmp_bpu_predict_imm_4;
  wire                tmp_bpu_predict_imm_6;
  wire                tmp_bpu_predict_imm_7;
  reg        [31:0]   pc;
  reg                 fetch_valid;
  reg                 rsp_flush;
  wire                pc_in_stream_valid;
  wire                pc_in_stream_ready;
  wire       [31:0]   pc_in_stream_payload;
  wire                pc_out_stream_valid;
  wire                pc_out_stream_ready;
  wire       [31:0]   pc_out_stream_payload;
  wire                pc_next_in_stream_valid;
  wire                pc_next_in_stream_ready;
  wire       [31:0]   pc_next_in_stream_payload;
  wire                pc_next_out_stream_valid;
  wire                pc_next_out_stream_ready;
  wire       [31:0]   pc_next_out_stream_payload;
  wire                bpu_pred_taken_in_valid;
  wire                bpu_pred_taken_in_ready;
  wire                bpu_pred_taken_in_payload;
  wire                bpu_pred_taken_out_valid;
  wire                bpu_pred_taken_out_ready;
  wire                bpu_pred_taken_out_payload;
  wire                instr_in_stream_valid;
  wire                instr_in_stream_ready;
  wire       [31:0]   instr_in_stream_payload;
  wire                instr_out_stream_valid;
  wire                instr_out_stream_ready;
  wire       [31:0]   instr_out_stream_payload;
  wire                fifo_all_valid;
  wire                fifo_all_ready;
  reg        [1:0]    fetchFSM_state_next;
  reg        [1:0]    fetchFSM_state_curr;
  wire                dst_ports_isStall;
  wire                icache_ports_cmd_isStall;
  wire                icache_ports_cmd_fire;
  wire                icache_ports_cmd_fire_1;
  wire                dst_ports_fire;
  wire                dst_ports_fire_1;
  wire                dst_ports_fire_2;
  wire                dst_ports_fire_3;
  wire                tmp_bpu_predict_imm;
  wire                tmp_bpu_predict_imm_1;
  wire                tmp_bpu_predict_imm_2;
  reg        [42:0]   tmp_bpu_predict_imm_3;
  wire                tmp_bpu_predict_imm_4;
  reg        [50:0]   tmp_bpu_predict_imm_5;
  wire                icache_ports_cmd_fire_2;
  reg        [31:0]   pc_regNextWhen;
  `ifndef SYNTHESIS
  reg [39:0] fetchFSM_state_next_string;
  reg [39:0] fetchFSM_state_curr_string;
  `endif


  assign tmp_tmp_bpu_predict_imm_2 = {{{icache_ports_rsp_payload_data[31],icache_ports_rsp_payload_data[19 : 12]},icache_ports_rsp_payload_data[20]},icache_ports_rsp_payload_data[30 : 21]};
  assign tmp_tmp_bpu_predict_imm_4 = {{{icache_ports_rsp_payload_data[31],icache_ports_rsp_payload_data[7]},icache_ports_rsp_payload_data[30 : 25]},icache_ports_rsp_payload_data[11 : 8]};
  assign tmp_bpu_predict_imm_6 = icache_ports_rsp_payload_data[31];
  assign tmp_bpu_predict_imm_7 = icache_ports_rsp_payload_data[7];
  FIFO pc_stream_fifo (
    .ports_s_ports_valid   (pc_in_stream_valid                        ), //i
    .ports_s_ports_ready   (pc_stream_fifo_ports_s_ports_ready        ), //o
    .ports_s_ports_payload (pc_in_stream_payload[31:0]                ), //i
    .ports_m_ports_valid   (pc_stream_fifo_ports_m_ports_valid        ), //o
    .ports_m_ports_ready   (pc_out_stream_ready                       ), //i
    .ports_m_ports_payload (pc_stream_fifo_ports_m_ports_payload[31:0]), //o
    .flush                 (flush                                     ), //i
    .has_space             (pc_stream_fifo_has_space                  ), //o
    .next_payload          (pc_stream_fifo_next_payload[31:0]         ), //o
    .next_valid            (pc_stream_fifo_next_valid                 ), //o
    .io_axiClk             (io_axiClk                                 ), //i
    .cpu_rst               (cpu_rst                                   )  //i
  );
  FIFO pc_next_stream_fifo (
    .ports_s_ports_valid   (pc_next_in_stream_valid                        ), //i
    .ports_s_ports_ready   (pc_next_stream_fifo_ports_s_ports_ready        ), //o
    .ports_s_ports_payload (pc_next_in_stream_payload[31:0]                ), //i
    .ports_m_ports_valid   (pc_next_stream_fifo_ports_m_ports_valid        ), //o
    .ports_m_ports_ready   (pc_next_out_stream_ready                       ), //i
    .ports_m_ports_payload (pc_next_stream_fifo_ports_m_ports_payload[31:0]), //o
    .flush                 (flush                                          ), //i
    .has_space             (pc_next_stream_fifo_has_space                  ), //o
    .next_payload          (pc_next_stream_fifo_next_payload[31:0]         ), //o
    .next_valid            (pc_next_stream_fifo_next_valid                 ), //o
    .io_axiClk             (io_axiClk                                      ), //i
    .cpu_rst               (cpu_rst                                        )  //i
  );
  FIFO_2 bpu_pred_taken_fifo (
    .ports_s_ports_valid   (bpu_pred_taken_in_valid                  ), //i
    .ports_s_ports_ready   (bpu_pred_taken_fifo_ports_s_ports_ready  ), //o
    .ports_s_ports_payload (bpu_pred_taken_in_payload                ), //i
    .ports_m_ports_valid   (bpu_pred_taken_fifo_ports_m_ports_valid  ), //o
    .ports_m_ports_ready   (bpu_pred_taken_out_ready                 ), //i
    .ports_m_ports_payload (bpu_pred_taken_fifo_ports_m_ports_payload), //o
    .flush                 (flush                                    ), //i
    .has_space             (bpu_pred_taken_fifo_has_space            ), //o
    .io_axiClk             (io_axiClk                                ), //i
    .cpu_rst               (cpu_rst                                  )  //i
  );
  FIFO_3 instr_stream_fifo (
    .ports_s_ports_valid   (instr_in_stream_valid                        ), //i
    .ports_s_ports_ready   (instr_stream_fifo_ports_s_ports_ready        ), //o
    .ports_s_ports_payload (instr_in_stream_payload[31:0]                ), //i
    .ports_m_ports_valid   (instr_stream_fifo_ports_m_ports_valid        ), //o
    .ports_m_ports_ready   (instr_out_stream_ready                       ), //i
    .ports_m_ports_payload (instr_stream_fifo_ports_m_ports_payload[31:0]), //o
    .flush                 (flush                                        ), //i
    .has_space             (instr_stream_fifo_has_space                  ), //o
    .io_axiClk             (io_axiClk                                    ), //i
    .cpu_rst               (cpu_rst                                      )  //i
  );
  `ifndef SYNTHESIS
  always @(*) begin
    case(fetchFSM_state_next)
      FetchEnum_IDLE : fetchFSM_state_next_string = "IDLE ";
      FetchEnum_FETCH : fetchFSM_state_next_string = "FETCH";
      FetchEnum_HALT : fetchFSM_state_next_string = "HALT ";
      default : fetchFSM_state_next_string = "?????";
    endcase
  end
  always @(*) begin
    case(fetchFSM_state_curr)
      FetchEnum_IDLE : fetchFSM_state_curr_string = "IDLE ";
      FetchEnum_FETCH : fetchFSM_state_curr_string = "FETCH";
      FetchEnum_HALT : fetchFSM_state_curr_string = "HALT ";
      default : fetchFSM_state_curr_string = "?????";
    endcase
  end
  `endif

  assign fifo_all_valid = ((pc_out_stream_valid && instr_out_stream_valid) && pc_next_out_stream_valid); // @ Fetch.scala l52
  assign fifo_all_ready = ((pc_stream_fifo_has_space && bpu_pred_taken_fifo_has_space) && instr_stream_fifo_has_space); // @ BaseType.scala l305
  assign dst_ports_isStall = (dst_ports_valid && (! dst_ports_ready)); // @ BaseType.scala l305
  always @(*) begin
    case(fetchFSM_state_curr)
      FetchEnum_IDLE : begin
        if((! dst_ports_isStall)) begin
          fetchFSM_state_next = FetchEnum_FETCH; // @ Enum.scala l151
        end else begin
          fetchFSM_state_next = FetchEnum_IDLE; // @ Enum.scala l151
        end
      end
      FetchEnum_FETCH : begin
        if((icache_ports_cmd_isStall || (! fifo_all_ready))) begin
          fetchFSM_state_next = FetchEnum_HALT; // @ Enum.scala l151
        end else begin
          fetchFSM_state_next = FetchEnum_FETCH; // @ Enum.scala l151
        end
      end
      default : begin
        if((icache_ports_cmd_ready && fifo_all_ready)) begin
          fetchFSM_state_next = FetchEnum_FETCH; // @ Enum.scala l151
        end else begin
          fetchFSM_state_next = FetchEnum_HALT; // @ Enum.scala l151
        end
      end
    endcase
  end

  assign icache_ports_cmd_isStall = (icache_ports_cmd_valid && (! icache_ports_cmd_ready)); // @ BaseType.scala l305
  assign icache_ports_cmd_fire = (icache_ports_cmd_valid && icache_ports_cmd_ready); // @ BaseType.scala l305
  assign icache_ports_cmd_fire_1 = (icache_ports_cmd_valid && icache_ports_cmd_ready); // @ BaseType.scala l305
  assign pc_in_stream_valid = icache_ports_cmd_fire_1; // @ Fetch.scala l134
  assign pc_in_stream_payload = pc; // @ Fetch.scala l135
  assign dst_ports_fire = (dst_ports_valid && dst_ports_ready); // @ BaseType.scala l305
  assign pc_out_stream_ready = dst_ports_fire; // @ Fetch.scala l136
  assign pc_in_stream_ready = pc_stream_fifo_ports_s_ports_ready; // @ Fetch.scala l137
  assign pc_out_stream_valid = pc_stream_fifo_ports_m_ports_valid; // @ Fetch.scala l138
  assign pc_out_stream_payload = pc_stream_fifo_ports_m_ports_payload; // @ Fetch.scala l138
  assign pc_next_in_stream_valid = instr_in_stream_valid; // @ Fetch.scala l144
  assign pc_next_in_stream_payload = bpu_target_pc; // @ Fetch.scala l145
  assign dst_ports_fire_1 = (dst_ports_valid && dst_ports_ready); // @ BaseType.scala l305
  assign pc_next_out_stream_ready = dst_ports_fire_1; // @ Fetch.scala l146
  assign pc_next_in_stream_ready = pc_next_stream_fifo_ports_s_ports_ready; // @ Fetch.scala l147
  assign pc_next_out_stream_valid = pc_next_stream_fifo_ports_m_ports_valid; // @ Fetch.scala l148
  assign pc_next_out_stream_payload = pc_next_stream_fifo_ports_m_ports_payload; // @ Fetch.scala l148
  assign bpu_pred_taken_in_valid = instr_in_stream_valid; // @ Fetch.scala l152
  assign bpu_pred_taken_in_payload = bpu_predict_taken; // @ Fetch.scala l159
  assign dst_ports_fire_2 = (dst_ports_valid && dst_ports_ready); // @ BaseType.scala l305
  assign bpu_pred_taken_out_ready = dst_ports_fire_2; // @ Fetch.scala l160
  assign bpu_pred_taken_in_ready = bpu_pred_taken_fifo_ports_s_ports_ready; // @ Fetch.scala l161
  assign bpu_pred_taken_out_valid = bpu_pred_taken_fifo_ports_m_ports_valid; // @ Fetch.scala l162
  assign bpu_pred_taken_out_payload = bpu_pred_taken_fifo_ports_m_ports_payload; // @ Fetch.scala l162
  assign instr_in_stream_valid = ((icache_ports_rsp_valid && (! rsp_flush)) && (! flush)); // @ Fetch.scala l166
  assign instr_in_stream_payload = icache_ports_rsp_payload_data; // @ Fetch.scala l167
  assign dst_ports_fire_3 = (dst_ports_valid && dst_ports_ready); // @ BaseType.scala l305
  assign instr_out_stream_ready = dst_ports_fire_3; // @ Fetch.scala l168
  assign instr_in_stream_ready = instr_stream_fifo_ports_s_ports_ready; // @ Fetch.scala l169
  assign instr_out_stream_valid = instr_stream_fifo_ports_m_ports_valid; // @ Fetch.scala l170
  assign instr_out_stream_payload = instr_stream_fifo_ports_m_ports_payload; // @ Fetch.scala l170
  assign dst_ports_payload_pc = pc_out_stream_payload; // @ Fetch.scala l174
  assign dst_ports_payload_bpu_pred_taken = bpu_pred_taken_out_payload; // @ Fetch.scala l175
  assign dst_ports_payload_instruction = instr_out_stream_payload; // @ Fetch.scala l176
  assign dst_ports_valid = (fifo_all_valid && (! flush)); // @ Fetch.scala l177
  assign icache_ports_cmd_payload_addr = pc; // @ Fetch.scala l178
  assign tmp_bpu_predict_imm = (icache_ports_rsp_payload_data[6 : 0] == 7'h6f); // @ BaseType.scala l305
  assign tmp_bpu_predict_imm_1 = (icache_ports_rsp_payload_data[6 : 0] == 7'h63); // @ BaseType.scala l305
  assign tmp_bpu_predict_imm_2 = tmp_tmp_bpu_predict_imm_2[19]; // @ BaseType.scala l305
  always @(*) begin
    tmp_bpu_predict_imm_3[42] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[41] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[40] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[39] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[38] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[37] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[36] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[35] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[34] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[33] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[32] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[31] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[30] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[29] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[28] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[27] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[26] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[25] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[24] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[23] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[22] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[21] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[20] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[19] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[18] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[17] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[16] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[15] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[14] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[13] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[12] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[11] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[10] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[9] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[8] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[7] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[6] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[5] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[4] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[3] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[2] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[1] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
    tmp_bpu_predict_imm_3[0] = tmp_bpu_predict_imm_2; // @ Literal.scala l87
  end

  assign tmp_bpu_predict_imm_4 = tmp_tmp_bpu_predict_imm_4[11]; // @ BaseType.scala l305
  always @(*) begin
    tmp_bpu_predict_imm_5[50] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[49] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[48] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[47] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[46] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[45] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[44] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[43] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[42] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[41] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[40] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[39] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[38] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[37] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[36] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[35] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[34] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[33] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[32] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[31] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[30] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[29] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[28] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[27] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[26] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[25] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[24] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[23] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[22] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[21] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[20] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[19] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[18] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[17] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[16] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[15] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[14] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[13] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[12] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[11] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[10] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[9] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[8] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[7] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[6] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[5] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[4] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[3] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[2] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[1] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
    tmp_bpu_predict_imm_5[0] = tmp_bpu_predict_imm_4; // @ Literal.scala l87
  end

  assign bpu_predict_imm = (tmp_bpu_predict_imm ? {{tmp_bpu_predict_imm_3,{{{icache_ports_rsp_payload_data[31],icache_ports_rsp_payload_data[19 : 12]},icache_ports_rsp_payload_data[20]},icache_ports_rsp_payload_data[30 : 21]}},1'b0} : (tmp_bpu_predict_imm_1 ? {{tmp_bpu_predict_imm_5,{{{tmp_bpu_predict_imm_6,tmp_bpu_predict_imm_7},icache_ports_rsp_payload_data[30 : 25]},icache_ports_rsp_payload_data[11 : 8]}},1'b0} : 64'h0)); // @ Fetch.scala l184
  assign bpu_predict_jal = tmp_bpu_predict_imm; // @ Fetch.scala l185
  assign bpu_predict_branch = tmp_bpu_predict_imm_1; // @ Fetch.scala l186
  assign icache_ports_cmd_fire_2 = (icache_ports_cmd_valid && icache_ports_cmd_ready); // @ BaseType.scala l305
  assign dst_ports_payload_pc_next = pc_next_out_stream_payload; // @ Fetch.scala l189
  assign bpu_predict_valid = instr_in_stream_valid; // @ Fetch.scala l191
  assign bpu_predict_pc = pc_regNextWhen; // @ Fetch.scala l192
  assign icache_ports_cmd_valid = ((fetch_valid && (! flush)) && (! bpu_predict_taken)); // @ Fetch.scala l193
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      pc <= 32'h80000000; // @ Data.scala l400
      fetch_valid <= 1'b0; // @ Data.scala l400
      rsp_flush <= 1'b0; // @ Data.scala l400
      fetchFSM_state_curr <= FetchEnum_IDLE; // @ Data.scala l400
    end else begin
      fetchFSM_state_curr <= fetchFSM_state_next; // @ Reg.scala l39
      if((! icache_ports_cmd_ready)) begin
        if(interrupt_vld) begin
          rsp_flush <= 1'b1; // @ Fetch.scala l96
        end else begin
          if(redirect_vld) begin
            rsp_flush <= 1'b1; // @ Fetch.scala l99
          end else begin
            if(bpu_predict_taken) begin
              rsp_flush <= 1'b1; // @ Fetch.scala l102
            end
          end
        end
      end else begin
        if(icache_ports_rsp_valid) begin
          rsp_flush <= 1'b0; // @ Fetch.scala l106
        end
      end
      if((fetchFSM_state_next == FetchEnum_FETCH)) begin
        fetch_valid <= 1'b1; // @ Fetch.scala l111
      end else begin
        fetch_valid <= 1'b0; // @ Fetch.scala l114
      end
      if(interrupt_vld) begin
        pc <= interrupt_pc; // @ Fetch.scala l118
      end else begin
        if(redirect_vld) begin
          pc <= redirect_pc; // @ Fetch.scala l121
        end else begin
          if(bpu_predict_taken) begin
            pc <= bpu_target_pc; // @ Fetch.scala l125
          end else begin
            if(icache_ports_cmd_fire) begin
              pc <= (pc + 32'h00000004); // @ Fetch.scala l128
            end
          end
        end
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(icache_ports_cmd_fire_2) begin
      pc_regNextWhen <= pc; // @ Fetch.scala l188
    end
  end


endmodule

module StreamFifo (
  input               io_push_valid,
  output              io_push_ready,
  input      [2:0]    io_push_payload_startAt,
  input      [2:0]    io_push_payload_endAt,
  input      [2:0]    io_push_payload_size,
  input      [1:0]    io_push_payload_id,
  output              io_pop_valid,
  input               io_pop_ready,
  output     [2:0]    io_pop_payload_startAt,
  output     [2:0]    io_pop_payload_endAt,
  output     [2:0]    io_pop_payload_size,
  output     [1:0]    io_pop_payload_id,
  input               io_flush,
  output     [2:0]    io_occupancy,
  output     [2:0]    io_availability,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg        [10:0]   tmp_logic_ram_port0;
  wire       [1:0]    tmp_logic_pushPtr_valueNext;
  wire       [0:0]    tmp_logic_pushPtr_valueNext_1;
  wire       [1:0]    tmp_logic_popPtr_valueNext;
  wire       [0:0]    tmp_logic_popPtr_valueNext_1;
  wire                tmp_logic_ram_port;
  wire                tmp_tmp_io_pop_payload_startAt;
  wire       [10:0]   tmp_logic_ram_port_1;
  wire       [1:0]    tmp_io_availability;
  reg                 tmp_1;
  reg                 logic_pushPtr_willIncrement;
  reg                 logic_pushPtr_willClear;
  reg        [1:0]    logic_pushPtr_valueNext;
  reg        [1:0]    logic_pushPtr_value;
  wire                logic_pushPtr_willOverflowIfInc;
  wire                logic_pushPtr_willOverflow;
  reg                 logic_popPtr_willIncrement;
  reg                 logic_popPtr_willClear;
  reg        [1:0]    logic_popPtr_valueNext;
  reg        [1:0]    logic_popPtr_value;
  wire                logic_popPtr_willOverflowIfInc;
  wire                logic_popPtr_willOverflow;
  wire                logic_ptrMatch;
  reg                 logic_risingOccupancy;
  wire                logic_pushing;
  wire                logic_popping;
  wire                logic_empty;
  wire                logic_full;
  reg                 tmp_io_pop_valid;
  wire       [10:0]   tmp_io_pop_payload_startAt;
  wire       [1:0]    logic_ptrDif;
  reg [10:0] logic_ram [0:3];

  assign tmp_logic_pushPtr_valueNext_1 = logic_pushPtr_willIncrement;
  assign tmp_logic_pushPtr_valueNext = {1'd0, tmp_logic_pushPtr_valueNext_1};
  assign tmp_logic_popPtr_valueNext_1 = logic_popPtr_willIncrement;
  assign tmp_logic_popPtr_valueNext = {1'd0, tmp_logic_popPtr_valueNext_1};
  assign tmp_io_availability = (logic_popPtr_value - logic_pushPtr_value);
  assign tmp_tmp_io_pop_payload_startAt = 1'b1;
  assign tmp_logic_ram_port_1 = {io_push_payload_id,{io_push_payload_size,{io_push_payload_endAt,io_push_payload_startAt}}};
  always @(posedge io_axiClk) begin
    if(tmp_tmp_io_pop_payload_startAt) begin
      tmp_logic_ram_port0 <= logic_ram[logic_popPtr_valueNext];
    end
  end

  always @(posedge io_axiClk) begin
    if(tmp_1) begin
      logic_ram[logic_pushPtr_value] <= tmp_logic_ram_port_1;
    end
  end

  always @(*) begin
    tmp_1 = 1'b0; // @ when.scala l47
    if(logic_pushing) begin
      tmp_1 = 1'b1; // @ when.scala l52
    end
  end

  always @(*) begin
    logic_pushPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(logic_pushing) begin
      logic_pushPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    logic_pushPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      logic_pushPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign logic_pushPtr_willOverflowIfInc = (logic_pushPtr_value == 2'b11); // @ BaseType.scala l305
  assign logic_pushPtr_willOverflow = (logic_pushPtr_willOverflowIfInc && logic_pushPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    logic_pushPtr_valueNext = (logic_pushPtr_value + tmp_logic_pushPtr_valueNext); // @ Utils.scala l548
    if(logic_pushPtr_willClear) begin
      logic_pushPtr_valueNext = 2'b00; // @ Utils.scala l558
    end
  end

  always @(*) begin
    logic_popPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(logic_popping) begin
      logic_popPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    logic_popPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      logic_popPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign logic_popPtr_willOverflowIfInc = (logic_popPtr_value == 2'b11); // @ BaseType.scala l305
  assign logic_popPtr_willOverflow = (logic_popPtr_willOverflowIfInc && logic_popPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    logic_popPtr_valueNext = (logic_popPtr_value + tmp_logic_popPtr_valueNext); // @ Utils.scala l548
    if(logic_popPtr_willClear) begin
      logic_popPtr_valueNext = 2'b00; // @ Utils.scala l558
    end
  end

  assign logic_ptrMatch = (logic_pushPtr_value == logic_popPtr_value); // @ BaseType.scala l305
  assign logic_pushing = (io_push_valid && io_push_ready); // @ BaseType.scala l305
  assign logic_popping = (io_pop_valid && io_pop_ready); // @ BaseType.scala l305
  assign logic_empty = (logic_ptrMatch && (! logic_risingOccupancy)); // @ BaseType.scala l305
  assign logic_full = (logic_ptrMatch && logic_risingOccupancy); // @ BaseType.scala l305
  assign io_push_ready = (! logic_full); // @ Stream.scala l1118
  assign io_pop_valid = ((! logic_empty) && (! (tmp_io_pop_valid && (! logic_full)))); // @ Stream.scala l1119
  assign tmp_io_pop_payload_startAt = tmp_logic_ram_port0; // @ Mem.scala l310
  assign io_pop_payload_startAt = tmp_io_pop_payload_startAt[2 : 0]; // @ Stream.scala l1120
  assign io_pop_payload_endAt = tmp_io_pop_payload_startAt[5 : 3]; // @ Stream.scala l1120
  assign io_pop_payload_size = tmp_io_pop_payload_startAt[8 : 6]; // @ Stream.scala l1120
  assign io_pop_payload_id = tmp_io_pop_payload_startAt[10 : 9]; // @ Stream.scala l1120
  assign logic_ptrDif = (logic_pushPtr_value - logic_popPtr_value); // @ BaseType.scala l299
  assign io_occupancy = {(logic_risingOccupancy && logic_ptrMatch),logic_ptrDif}; // @ Stream.scala l1135
  assign io_availability = {((! logic_risingOccupancy) && logic_ptrMatch),tmp_io_availability}; // @ Stream.scala l1136
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      logic_pushPtr_value <= 2'b00; // @ Data.scala l400
      logic_popPtr_value <= 2'b00; // @ Data.scala l400
      logic_risingOccupancy <= 1'b0; // @ Data.scala l400
      tmp_io_pop_valid <= 1'b0; // @ Data.scala l400
    end else begin
      logic_pushPtr_value <= logic_pushPtr_valueNext; // @ Reg.scala l39
      logic_popPtr_value <= logic_popPtr_valueNext; // @ Reg.scala l39
      tmp_io_pop_valid <= (logic_popPtr_valueNext == logic_pushPtr_value); // @ Reg.scala l39
      if((logic_pushing != logic_popping)) begin
        logic_risingOccupancy <= logic_pushing; // @ Stream.scala l1123
      end
      if(io_flush) begin
        logic_risingOccupancy <= 1'b0; // @ Stream.scala l1150
      end
    end
  end


endmodule

module StreamFifo_1 (
  input               io_push_valid,
  output              io_push_ready,
  input               io_push_payload,
  output              io_pop_valid,
  input               io_pop_ready,
  output              io_pop_payload,
  input               io_flush,
  output     [1:0]    io_occupancy,
  output     [1:0]    io_availability,
  input               io_axiClk,
  input               tmp_io_resetn
);

  reg        [0:0]    tmp_logic_ram_port0;
  wire                tmp_logic_ram_port;
  wire                tmp_io_pop_payload;
  wire       [0:0]    tmp_logic_ram_port_1;
  wire       [0:0]    tmp_io_availability;
  reg                 tmp_1;
  reg                 logic_pushPtr_willIncrement;
  reg                 logic_pushPtr_willClear;
  reg        [0:0]    logic_pushPtr_valueNext;
  reg        [0:0]    logic_pushPtr_value;
  wire                logic_pushPtr_willOverflowIfInc;
  wire                logic_pushPtr_willOverflow;
  reg                 logic_popPtr_willIncrement;
  reg                 logic_popPtr_willClear;
  reg        [0:0]    logic_popPtr_valueNext;
  reg        [0:0]    logic_popPtr_value;
  wire                logic_popPtr_willOverflowIfInc;
  wire                logic_popPtr_willOverflow;
  wire                logic_ptrMatch;
  reg                 logic_risingOccupancy;
  wire                logic_pushing;
  wire                logic_popping;
  wire                logic_empty;
  wire                logic_full;
  reg                 tmp_io_pop_valid;
  wire       [0:0]    logic_ptrDif;
  reg [0:0] logic_ram [0:1];

  assign tmp_io_availability = (logic_popPtr_value - logic_pushPtr_value);
  assign tmp_io_pop_payload = 1'b1;
  assign tmp_logic_ram_port_1 = io_push_payload;
  always @(posedge io_axiClk) begin
    if(tmp_io_pop_payload) begin
      tmp_logic_ram_port0 <= logic_ram[logic_popPtr_valueNext];
    end
  end

  always @(posedge io_axiClk) begin
    if(tmp_1) begin
      logic_ram[logic_pushPtr_value] <= tmp_logic_ram_port_1;
    end
  end

  always @(*) begin
    tmp_1 = 1'b0; // @ when.scala l47
    if(logic_pushing) begin
      tmp_1 = 1'b1; // @ when.scala l52
    end
  end

  always @(*) begin
    logic_pushPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(logic_pushing) begin
      logic_pushPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    logic_pushPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      logic_pushPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign logic_pushPtr_willOverflowIfInc = (logic_pushPtr_value == 1'b1); // @ BaseType.scala l305
  assign logic_pushPtr_willOverflow = (logic_pushPtr_willOverflowIfInc && logic_pushPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    logic_pushPtr_valueNext = (logic_pushPtr_value + logic_pushPtr_willIncrement); // @ Utils.scala l548
    if(logic_pushPtr_willClear) begin
      logic_pushPtr_valueNext = 1'b0; // @ Utils.scala l558
    end
  end

  always @(*) begin
    logic_popPtr_willIncrement = 1'b0; // @ Utils.scala l536
    if(logic_popping) begin
      logic_popPtr_willIncrement = 1'b1; // @ Utils.scala l540
    end
  end

  always @(*) begin
    logic_popPtr_willClear = 1'b0; // @ Utils.scala l537
    if(io_flush) begin
      logic_popPtr_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign logic_popPtr_willOverflowIfInc = (logic_popPtr_value == 1'b1); // @ BaseType.scala l305
  assign logic_popPtr_willOverflow = (logic_popPtr_willOverflowIfInc && logic_popPtr_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    logic_popPtr_valueNext = (logic_popPtr_value + logic_popPtr_willIncrement); // @ Utils.scala l548
    if(logic_popPtr_willClear) begin
      logic_popPtr_valueNext = 1'b0; // @ Utils.scala l558
    end
  end

  assign logic_ptrMatch = (logic_pushPtr_value == logic_popPtr_value); // @ BaseType.scala l305
  assign logic_pushing = (io_push_valid && io_push_ready); // @ BaseType.scala l305
  assign logic_popping = (io_pop_valid && io_pop_ready); // @ BaseType.scala l305
  assign logic_empty = (logic_ptrMatch && (! logic_risingOccupancy)); // @ BaseType.scala l305
  assign logic_full = (logic_ptrMatch && logic_risingOccupancy); // @ BaseType.scala l305
  assign io_push_ready = (! logic_full); // @ Stream.scala l1118
  assign io_pop_valid = ((! logic_empty) && (! (tmp_io_pop_valid && (! logic_full)))); // @ Stream.scala l1119
  assign io_pop_payload = tmp_logic_ram_port0[0]; // @ Stream.scala l1120
  assign logic_ptrDif = (logic_pushPtr_value - logic_popPtr_value); // @ BaseType.scala l299
  assign io_occupancy = {(logic_risingOccupancy && logic_ptrMatch),logic_ptrDif}; // @ Stream.scala l1135
  assign io_availability = {((! logic_risingOccupancy) && logic_ptrMatch),tmp_io_availability}; // @ Stream.scala l1136
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      logic_pushPtr_value <= 1'b0; // @ Data.scala l400
      logic_popPtr_value <= 1'b0; // @ Data.scala l400
      logic_risingOccupancy <= 1'b0; // @ Data.scala l400
      tmp_io_pop_valid <= 1'b0; // @ Data.scala l400
    end else begin
      logic_pushPtr_value <= logic_pushPtr_valueNext; // @ Reg.scala l39
      logic_popPtr_value <= logic_popPtr_valueNext; // @ Reg.scala l39
      tmp_io_pop_valid <= (logic_popPtr_valueNext == logic_pushPtr_value); // @ Reg.scala l39
      if((logic_pushing != logic_popping)) begin
        logic_risingOccupancy <= logic_pushing; // @ Stream.scala l1123
      end
      if(io_flush) begin
        logic_risingOccupancy <= 1'b0; // @ Stream.scala l1150
      end
    end
  end


endmodule

module StreamTransactionExtender (
  input      [6:0]    io_count,
  input               io_input_valid,
  output              io_input_ready,
  input      [63:0]   io_input_payload_data,
  input      [7:0]    io_input_payload_strb,
  input               io_input_payload_last,
  output              io_output_valid,
  input               io_output_ready,
  output     [63:0]   io_output_payload_data,
  output     [7:0]    io_output_payload_strb,
  output              io_output_payload_last,
  output              io_working,
  output              io_first,
  output              io_last,
  output              io_done,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                counter_io_available;
  wire                counter_io_working;
  wire                counter_io_last;
  wire                counter_io_done;
  wire       [6:0]    counter_io_value;
  wire                io_input_fire;
  wire                io_output_fire;
  reg        [63:0]   payloadReg_data;
  reg        [7:0]    payloadReg_strb;
  reg                 payloadReg_last;
  wire       [63:0]   payload_data;
  wire       [7:0]    payload_strb;
  wire                payload_last;
  wire                io_input_fire_1;

  StreamTransactionCounter_6 counter (
    .io_ctrlFire   (io_input_fire        ), //i
    .io_targetFire (io_output_fire       ), //i
    .io_available  (counter_io_available ), //o
    .io_count      (io_count[6:0]        ), //i
    .io_working    (counter_io_working   ), //o
    .io_last       (counter_io_last      ), //o
    .io_done       (counter_io_done      ), //o
    .io_value      (counter_io_value[6:0]), //o
    .io_axiClk     (io_axiClk            ), //i
    .tmp_io_resetn (tmp_io_resetn        )  //i
  );
  assign io_input_fire = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_fire = (io_output_valid && io_output_ready); // @ BaseType.scala l305
  assign payload_data = payloadReg_data; // @ Misc.scala l552
  assign payload_strb = payloadReg_strb; // @ Misc.scala l552
  assign payload_last = payloadReg_last; // @ Misc.scala l552
  assign io_input_fire_1 = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_payload_data = payload_data; // @ Stream.scala l1971
  assign io_output_payload_strb = payload_strb; // @ Stream.scala l1971
  assign io_output_payload_last = (counter_io_last && payload_last); // @ Stream.scala l1971
  assign io_output_valid = counter_io_working; // @ Stream.scala l1972
  assign io_input_ready = counter_io_available; // @ Stream.scala l1973
  assign io_last = counter_io_last; // @ Stream.scala l1974
  assign io_done = counter_io_done; // @ Stream.scala l1975
  assign io_first = ((counter_io_value == 7'h0) && counter_io_working); // @ Stream.scala l1976
  assign io_working = counter_io_working; // @ Stream.scala l1977
  always @(posedge io_axiClk) begin
    if(io_input_fire_1) begin
      payloadReg_data <= io_input_payload_data; // @ Stream.scala l1968
      payloadReg_strb <= io_input_payload_strb; // @ Stream.scala l1968
      payloadReg_last <= io_input_payload_last; // @ Stream.scala l1968
    end
  end


endmodule

//StreamTransactionCounter_1 replaced by StreamTransactionCounter

module StreamTransactionCounter (
  input               io_ctrlFire,
  input               io_targetFire,
  output              io_available,
  input      [7:0]    io_count,
  output              io_working,
  output              io_last,
  output              io_done,
  output     [7:0]    io_value,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [7:0]    tmp_counter_valueNext;
  wire       [0:0]    tmp_counter_valueNext_1;
  reg        [7:0]    expected;
  reg        [7:0]    countReg;
  reg                 counter_willIncrement;
  reg                 counter_willClear;
  reg        [7:0]    counter_valueNext;
  reg        [7:0]    counter_value;
  wire                counter_willOverflowIfInc;
  wire                counter_willOverflow;
  wire                lastOne;
  reg                 running;
  reg                 working;
  wire                done;

  assign tmp_counter_valueNext_1 = counter_willIncrement;
  assign tmp_counter_valueNext = {7'd0, tmp_counter_valueNext_1};
  always @(*) begin
    expected = countReg; // @ Phase.scala l1785
    if(io_ctrlFire) begin
      expected = io_count; // @ Stream.scala l1871
    end
  end

  always @(*) begin
    counter_willIncrement = 1'b0; // @ Utils.scala l536
    if(!done) begin
      if((io_targetFire && working)) begin
        counter_willIncrement = 1'b1; // @ Utils.scala l540
      end
    end
  end

  always @(*) begin
    counter_willClear = 1'b0; // @ Utils.scala l537
    if(done) begin
      counter_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign counter_willOverflowIfInc = (counter_value == 8'hff); // @ BaseType.scala l305
  assign counter_willOverflow = (counter_willOverflowIfInc && counter_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    counter_valueNext = (counter_value + tmp_counter_valueNext); // @ Utils.scala l548
    if(counter_willClear) begin
      counter_valueNext = 8'h0; // @ Utils.scala l558
    end
  end

  assign lastOne = (expected <= counter_value); // @ BaseType.scala l305
  always @(*) begin
    working = running; // @ Misc.scala l552
    if(io_ctrlFire) begin
      working = 1'b1; // @ Stream.scala l1881
    end
  end

  assign done = (lastOne && io_targetFire); // @ BaseType.scala l305
  assign io_working = working; // @ Stream.scala l1895
  assign io_last = (lastOne && working); // @ Stream.scala l1896
  assign io_done = (done && working); // @ Stream.scala l1897
  assign io_value = counter_value; // @ Stream.scala l1898
  assign io_available = (! running); // @ Stream.scala l1899
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      counter_value <= 8'h0; // @ Data.scala l400
      running <= 1'b0; // @ Data.scala l400
    end else begin
      counter_value <= counter_valueNext; // @ Reg.scala l39
      if(done) begin
        running <= 1'b0; // @ Stream.scala l1882
      end else begin
        running <= working; // @ Stream.scala l1883
      end
    end
  end

  always @(posedge io_axiClk) begin
    countReg <= expected; // @ Phase.scala l1803
  end


endmodule

//Axi4DownsizerSubTransactionGenerator replaced by Axi4DownsizerSubTransactionGenerator_1

module StreamTransactionExtender_2 (
  input      [6:0]    io_count,
  input               io_input_valid,
  output              io_input_ready,
  input      [6:0]    io_input_payload_ratio,
  input      [2:0]    io_input_payload_size,
  input      [7:0]    io_input_payload_len,
  input      [31:0]   io_input_payload_start,
  output              io_output_valid,
  input               io_output_ready,
  output     [6:0]    io_output_payload_ratio,
  output     [2:0]    io_output_payload_size,
  output     [7:0]    io_output_payload_len,
  output     [31:0]   io_output_payload_start,
  output              io_working,
  output              io_first,
  output              io_last,
  output              io_done,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                counter_io_available;
  wire                counter_io_working;
  wire                counter_io_last;
  wire                counter_io_done;
  wire       [6:0]    counter_io_value;
  wire                io_input_fire;
  wire                io_output_fire;
  reg        [6:0]    payloadReg_ratio;
  reg        [2:0]    payloadReg_size;
  reg        [7:0]    payloadReg_len;
  reg        [31:0]   payloadReg_start;
  wire       [6:0]    payload_ratio;
  wire       [2:0]    payload_size;
  wire       [7:0]    payload_len;
  wire       [31:0]   payload_start;
  wire                io_input_fire_1;

  StreamTransactionCounter_6 counter (
    .io_ctrlFire   (io_input_fire        ), //i
    .io_targetFire (io_output_fire       ), //i
    .io_available  (counter_io_available ), //o
    .io_count      (io_count[6:0]        ), //i
    .io_working    (counter_io_working   ), //o
    .io_last       (counter_io_last      ), //o
    .io_done       (counter_io_done      ), //o
    .io_value      (counter_io_value[6:0]), //o
    .io_axiClk     (io_axiClk            ), //i
    .tmp_io_resetn (tmp_io_resetn        )  //i
  );
  assign io_input_fire = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_fire = (io_output_valid && io_output_ready); // @ BaseType.scala l305
  assign payload_ratio = payloadReg_ratio; // @ Misc.scala l552
  assign payload_size = payloadReg_size; // @ Misc.scala l552
  assign payload_len = payloadReg_len; // @ Misc.scala l552
  assign payload_start = payloadReg_start; // @ Misc.scala l552
  assign io_input_fire_1 = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_payload_ratio = payload_ratio; // @ Stream.scala l1971
  assign io_output_payload_size = payload_size; // @ Stream.scala l1971
  assign io_output_payload_len = payload_len; // @ Stream.scala l1971
  assign io_output_payload_start = payload_start; // @ Stream.scala l1971
  assign io_output_valid = counter_io_working; // @ Stream.scala l1972
  assign io_input_ready = counter_io_available; // @ Stream.scala l1973
  assign io_last = counter_io_last; // @ Stream.scala l1974
  assign io_done = counter_io_done; // @ Stream.scala l1975
  assign io_first = ((counter_io_value == 7'h0) && counter_io_working); // @ Stream.scala l1976
  assign io_working = counter_io_working; // @ Stream.scala l1977
  always @(posedge io_axiClk) begin
    if(io_input_fire_1) begin
      payloadReg_ratio <= io_input_payload_ratio; // @ Stream.scala l1968
      payloadReg_size <= io_input_payload_size; // @ Stream.scala l1968
      payloadReg_len <= io_input_payload_len; // @ Stream.scala l1968
      payloadReg_start <= io_input_payload_start; // @ Stream.scala l1968
    end
  end


endmodule

module StreamTransactionExtender_1 (
  input      [7:0]    io_count,
  input               io_input_valid,
  output              io_input_ready,
  input      [6:0]    io_input_payload_ratio,
  input      [2:0]    io_input_payload_size,
  input      [7:0]    io_input_payload_len,
  input      [31:0]   io_input_payload_start,
  output              io_output_valid,
  input               io_output_ready,
  output     [6:0]    io_output_payload_ratio,
  output     [2:0]    io_output_payload_size,
  output     [7:0]    io_output_payload_len,
  output     [31:0]   io_output_payload_start,
  output              io_working,
  output              io_first,
  output              io_last,
  output              io_done,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                counter_io_available;
  wire                counter_io_working;
  wire                counter_io_last;
  wire                counter_io_done;
  wire       [7:0]    counter_io_value;
  wire                io_input_fire;
  wire                io_output_fire;
  reg        [6:0]    payloadReg_ratio;
  reg        [2:0]    payloadReg_size;
  reg        [7:0]    payloadReg_len;
  reg        [31:0]   payloadReg_start;
  wire       [6:0]    payload_ratio;
  wire       [2:0]    payload_size;
  wire       [7:0]    payload_len;
  wire       [31:0]   payload_start;
  wire                io_input_fire_1;

  StreamTransactionCounter_4 counter (
    .io_ctrlFire   (io_input_fire        ), //i
    .io_targetFire (io_output_fire       ), //i
    .io_available  (counter_io_available ), //o
    .io_count      (io_count[7:0]        ), //i
    .io_working    (counter_io_working   ), //o
    .io_last       (counter_io_last      ), //o
    .io_done       (counter_io_done      ), //o
    .io_value      (counter_io_value[7:0]), //o
    .io_axiClk     (io_axiClk            ), //i
    .tmp_io_resetn (tmp_io_resetn        )  //i
  );
  assign io_input_fire = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_fire = (io_output_valid && io_output_ready); // @ BaseType.scala l305
  assign payload_ratio = payloadReg_ratio; // @ Misc.scala l552
  assign payload_size = payloadReg_size; // @ Misc.scala l552
  assign payload_len = payloadReg_len; // @ Misc.scala l552
  assign payload_start = payloadReg_start; // @ Misc.scala l552
  assign io_input_fire_1 = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_payload_ratio = payload_ratio; // @ Stream.scala l1971
  assign io_output_payload_size = payload_size; // @ Stream.scala l1971
  assign io_output_payload_len = payload_len; // @ Stream.scala l1971
  assign io_output_payload_start = payload_start; // @ Stream.scala l1971
  assign io_output_valid = counter_io_working; // @ Stream.scala l1972
  assign io_input_ready = counter_io_available; // @ Stream.scala l1973
  assign io_last = counter_io_last; // @ Stream.scala l1974
  assign io_done = counter_io_done; // @ Stream.scala l1975
  assign io_first = ((counter_io_value == 8'h0) && counter_io_working); // @ Stream.scala l1976
  assign io_working = counter_io_working; // @ Stream.scala l1977
  always @(posedge io_axiClk) begin
    if(io_input_fire_1) begin
      payloadReg_ratio <= io_input_payload_ratio; // @ Stream.scala l1968
      payloadReg_size <= io_input_payload_size; // @ Stream.scala l1968
      payloadReg_len <= io_input_payload_len; // @ Stream.scala l1968
      payloadReg_start <= io_input_payload_start; // @ Stream.scala l1968
    end
  end


endmodule

module Axi4DownsizerSubTransactionGenerator_1 (
  input               io_input_valid,
  output              io_input_ready,
  input      [31:0]   io_input_payload_addr,
  input      [3:0]    io_input_payload_id,
  input      [3:0]    io_input_payload_region,
  input      [7:0]    io_input_payload_len,
  input      [2:0]    io_input_payload_size,
  input      [1:0]    io_input_payload_burst,
  input      [0:0]    io_input_payload_lock,
  input      [3:0]    io_input_payload_cache,
  input      [3:0]    io_input_payload_qos,
  input      [2:0]    io_input_payload_prot,
  output              io_output_valid,
  input               io_output_ready,
  output     [31:0]   io_output_payload_addr,
  output     [3:0]    io_output_payload_id,
  output     [3:0]    io_output_payload_region,
  output     [7:0]    io_output_payload_len,
  output     [2:0]    io_output_payload_size,
  output     [1:0]    io_output_payload_burst,
  output     [0:0]    io_output_payload_lock,
  output     [3:0]    io_output_payload_cache,
  output     [3:0]    io_output_payload_qos,
  output     [2:0]    io_output_payload_prot,
  output     [31:0]   io_start,
  output reg [6:0]    io_ratio,
  output reg [2:0]    io_size,
  output              io_working,
  output              io_last,
  output              io_done,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                cmdExtender_io_input_ready;
  wire                cmdExtender_io_output_valid;
  wire       [31:0]   cmdExtender_io_output_payload_addr;
  wire       [3:0]    cmdExtender_io_output_payload_id;
  wire       [3:0]    cmdExtender_io_output_payload_region;
  wire       [7:0]    cmdExtender_io_output_payload_len;
  wire       [2:0]    cmdExtender_io_output_payload_size;
  wire       [1:0]    cmdExtender_io_output_payload_burst;
  wire       [0:0]    cmdExtender_io_output_payload_lock;
  wire       [3:0]    cmdExtender_io_output_payload_cache;
  wire       [3:0]    cmdExtender_io_output_payload_qos;
  wire       [2:0]    cmdExtender_io_output_payload_prot;
  wire                cmdExtender_io_working;
  wire                cmdExtender_io_first;
  wire                cmdExtender_io_last;
  wire                cmdExtender_io_done;
  wire                tmp_when;
  wire       [31:0]   tmp_startAddress;
  wire       [6:0]    tmp_ratio;
  wire       [31:0]   tmp_address;
  wire       [15:0]   tmp_address_1;
  wire       [8:0]    tmp_address_2;
  wire       [8:0]    tmp_address_3;
  wire       [1:0]    tmp_address_4;
  reg        [31:0]   startAddress;
  wire       [2:0]    sizeDiff;
  reg        [2:0]    sizePerTrans;
  reg        [6:0]    ratio;
  wire                cmdStreamWithSize_valid;
  wire                cmdStreamWithSize_ready;
  wire       [31:0]   cmdStreamWithSize_payload_addr;
  wire       [3:0]    cmdStreamWithSize_payload_id;
  wire       [3:0]    cmdStreamWithSize_payload_region;
  wire       [7:0]    cmdStreamWithSize_payload_len;
  wire       [2:0]    cmdStreamWithSize_payload_size;
  wire       [1:0]    cmdStreamWithSize_payload_burst;
  wire       [0:0]    cmdStreamWithSize_payload_lock;
  wire       [3:0]    cmdStreamWithSize_payload_cache;
  wire       [3:0]    cmdStreamWithSize_payload_qos;
  wire       [2:0]    cmdStreamWithSize_payload_prot;
  wire                io_input_fire;
  reg        [2:0]    size;
  wire                cmdExtendedStream_valid;
  wire                cmdExtendedStream_ready;
  wire       [31:0]   cmdExtendedStream_payload_addr;
  wire       [3:0]    cmdExtendedStream_payload_id;
  wire       [3:0]    cmdExtendedStream_payload_region;
  wire       [7:0]    cmdExtendedStream_payload_len;
  wire       [2:0]    cmdExtendedStream_payload_size;
  wire       [1:0]    cmdExtendedStream_payload_burst;
  wire       [0:0]    cmdExtendedStream_payload_lock;
  wire       [3:0]    cmdExtendedStream_payload_cache;
  wire       [3:0]    cmdExtendedStream_payload_qos;
  wire       [2:0]    cmdExtendedStream_payload_prot;
  reg        [31:0]   address;
  wire                cmdStreamWithSize_fire;
  wire                cmdExtendedStream_fire;
  wire                cmdStream_valid;
  wire                cmdStream_ready;
  wire       [31:0]   cmdStream_payload_addr;
  wire       [3:0]    cmdStream_payload_id;
  wire       [3:0]    cmdStream_payload_region;
  wire       [7:0]    cmdStream_payload_len;
  wire       [2:0]    cmdStream_payload_size;
  wire       [1:0]    cmdStream_payload_burst;
  wire       [0:0]    cmdStream_payload_lock;
  wire       [3:0]    cmdStream_payload_cache;
  wire       [3:0]    cmdStream_payload_qos;
  wire       [2:0]    cmdStream_payload_prot;
  wire                io_input_fire_1;
  reg        [6:0]    dataRatio;
  wire                io_input_fire_2;

  assign tmp_when = (3'b010 < io_input_payload_size);
  assign tmp_startAddress = (io_input_payload_addr >>> io_input_payload_size);
  assign tmp_ratio = (7'h01 <<< sizeDiff);
  assign tmp_address_1 = ({7'd0,tmp_address_2} <<< size);
  assign tmp_address = {16'd0, tmp_address_1};
  assign tmp_address_2 = ({1'b0,cmdExtendedStream_payload_len} + tmp_address_3);
  assign tmp_address_4 = {1'b0,1'b1};
  assign tmp_address_3 = {7'd0, tmp_address_4};
  StreamTransactionExtender_4 cmdExtender (
    .io_count                 (ratio[6:0]                               ), //i
    .io_input_valid           (cmdStreamWithSize_valid                  ), //i
    .io_input_ready           (cmdExtender_io_input_ready               ), //o
    .io_input_payload_addr    (cmdStreamWithSize_payload_addr[31:0]     ), //i
    .io_input_payload_id      (cmdStreamWithSize_payload_id[3:0]        ), //i
    .io_input_payload_region  (cmdStreamWithSize_payload_region[3:0]    ), //i
    .io_input_payload_len     (cmdStreamWithSize_payload_len[7:0]       ), //i
    .io_input_payload_size    (cmdStreamWithSize_payload_size[2:0]      ), //i
    .io_input_payload_burst   (cmdStreamWithSize_payload_burst[1:0]     ), //i
    .io_input_payload_lock    (cmdStreamWithSize_payload_lock           ), //i
    .io_input_payload_cache   (cmdStreamWithSize_payload_cache[3:0]     ), //i
    .io_input_payload_qos     (cmdStreamWithSize_payload_qos[3:0]       ), //i
    .io_input_payload_prot    (cmdStreamWithSize_payload_prot[2:0]      ), //i
    .io_output_valid          (cmdExtender_io_output_valid              ), //o
    .io_output_ready          (cmdExtendedStream_ready                  ), //i
    .io_output_payload_addr   (cmdExtender_io_output_payload_addr[31:0] ), //o
    .io_output_payload_id     (cmdExtender_io_output_payload_id[3:0]    ), //o
    .io_output_payload_region (cmdExtender_io_output_payload_region[3:0]), //o
    .io_output_payload_len    (cmdExtender_io_output_payload_len[7:0]   ), //o
    .io_output_payload_size   (cmdExtender_io_output_payload_size[2:0]  ), //o
    .io_output_payload_burst  (cmdExtender_io_output_payload_burst[1:0] ), //o
    .io_output_payload_lock   (cmdExtender_io_output_payload_lock       ), //o
    .io_output_payload_cache  (cmdExtender_io_output_payload_cache[3:0] ), //o
    .io_output_payload_qos    (cmdExtender_io_output_payload_qos[3:0]   ), //o
    .io_output_payload_prot   (cmdExtender_io_output_payload_prot[2:0]  ), //o
    .io_working               (cmdExtender_io_working                   ), //o
    .io_first                 (cmdExtender_io_first                     ), //o
    .io_last                  (cmdExtender_io_last                      ), //o
    .io_done                  (cmdExtender_io_done                      ), //o
    .io_axiClk                (io_axiClk                                ), //i
    .tmp_io_resetn            (tmp_io_resetn                            )  //i
  );
  assign sizeDiff = (io_input_payload_size - 3'b010); // @ BaseType.scala l299
  always @(*) begin
    if(tmp_when) begin
      startAddress = (tmp_startAddress <<< io_input_payload_size); // @ Axi4Downsizer.scala l46
    end else begin
      startAddress = io_input_payload_addr; // @ Axi4Downsizer.scala l50
    end
  end

  always @(*) begin
    if(tmp_when) begin
      ratio = (tmp_ratio - 7'h01); // @ Axi4Downsizer.scala l47
    end else begin
      ratio = 7'h0; // @ Axi4Downsizer.scala l51
    end
  end

  always @(*) begin
    if(tmp_when) begin
      sizePerTrans = 3'b010; // @ Axi4Downsizer.scala l48
    end else begin
      sizePerTrans = io_input_payload_size; // @ Axi4Downsizer.scala l52
    end
  end

  assign cmdStreamWithSize_valid = io_input_valid; // @ Stream.scala l308
  assign io_input_ready = cmdStreamWithSize_ready; // @ Stream.scala l309
  assign cmdStreamWithSize_payload_addr = startAddress; // @ Axi4Downsizer.scala l57
  assign cmdStreamWithSize_payload_size = sizePerTrans; // @ Axi4Downsizer.scala l58
  assign cmdStreamWithSize_payload_id = io_input_payload_id; // @ MultiData.scala l233
  assign cmdStreamWithSize_payload_region = io_input_payload_region; // @ MultiData.scala l233
  assign cmdStreamWithSize_payload_len = io_input_payload_len; // @ MultiData.scala l233
  assign cmdStreamWithSize_payload_burst = io_input_payload_burst; // @ MultiData.scala l233
  assign cmdStreamWithSize_payload_lock = io_input_payload_lock; // @ MultiData.scala l233
  assign cmdStreamWithSize_payload_cache = io_input_payload_cache; // @ MultiData.scala l233
  assign cmdStreamWithSize_payload_qos = io_input_payload_qos; // @ MultiData.scala l233
  assign cmdStreamWithSize_payload_prot = io_input_payload_prot; // @ MultiData.scala l233
  assign io_input_fire = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign cmdStreamWithSize_ready = cmdExtender_io_input_ready; // @ Stream.scala l295
  assign cmdExtendedStream_valid = cmdExtender_io_output_valid; // @ Stream.scala l294
  assign cmdExtendedStream_payload_addr = cmdExtender_io_output_payload_addr; // @ Stream.scala l296
  assign cmdExtendedStream_payload_id = cmdExtender_io_output_payload_id; // @ Stream.scala l296
  assign cmdExtendedStream_payload_region = cmdExtender_io_output_payload_region; // @ Stream.scala l296
  assign cmdExtendedStream_payload_len = cmdExtender_io_output_payload_len; // @ Stream.scala l296
  assign cmdExtendedStream_payload_size = cmdExtender_io_output_payload_size; // @ Stream.scala l296
  assign cmdExtendedStream_payload_burst = cmdExtender_io_output_payload_burst; // @ Stream.scala l296
  assign cmdExtendedStream_payload_lock = cmdExtender_io_output_payload_lock; // @ Stream.scala l296
  assign cmdExtendedStream_payload_cache = cmdExtender_io_output_payload_cache; // @ Stream.scala l296
  assign cmdExtendedStream_payload_qos = cmdExtender_io_output_payload_qos; // @ Stream.scala l296
  assign cmdExtendedStream_payload_prot = cmdExtender_io_output_payload_prot; // @ Stream.scala l296
  assign cmdStreamWithSize_fire = (cmdStreamWithSize_valid && cmdStreamWithSize_ready); // @ BaseType.scala l305
  assign cmdExtendedStream_fire = (cmdExtendedStream_valid && cmdExtendedStream_ready); // @ BaseType.scala l305
  assign cmdStream_valid = cmdExtendedStream_valid; // @ Stream.scala l308
  assign cmdExtendedStream_ready = cmdStream_ready; // @ Stream.scala l309
  assign cmdStream_payload_addr = address; // @ Axi4Downsizer.scala l74
  assign cmdStream_payload_id = cmdExtendedStream_payload_id; // @ MultiData.scala l233
  assign cmdStream_payload_region = cmdExtendedStream_payload_region; // @ MultiData.scala l233
  assign cmdStream_payload_len = cmdExtendedStream_payload_len; // @ MultiData.scala l233
  assign cmdStream_payload_size = cmdExtendedStream_payload_size; // @ MultiData.scala l233
  assign cmdStream_payload_burst = cmdExtendedStream_payload_burst; // @ MultiData.scala l233
  assign cmdStream_payload_lock = cmdExtendedStream_payload_lock; // @ MultiData.scala l233
  assign cmdStream_payload_cache = cmdExtendedStream_payload_cache; // @ MultiData.scala l233
  assign cmdStream_payload_qos = cmdExtendedStream_payload_qos; // @ MultiData.scala l233
  assign cmdStream_payload_prot = cmdExtendedStream_payload_prot; // @ MultiData.scala l233
  assign io_input_fire_1 = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_input_fire_2 = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  always @(*) begin
    if(io_input_fire_2) begin
      io_ratio = ratio; // @ Axi4Downsizer.scala l80
    end else begin
      io_ratio = dataRatio; // @ Axi4Downsizer.scala l83
    end
  end

  always @(*) begin
    if(io_input_fire_2) begin
      io_size = sizePerTrans; // @ Axi4Downsizer.scala l81
    end else begin
      io_size = size; // @ Axi4Downsizer.scala l84
    end
  end

  assign io_working = cmdExtender_io_working; // @ Axi4Downsizer.scala l87
  assign io_last = cmdExtender_io_last; // @ Axi4Downsizer.scala l88
  assign io_done = cmdExtender_io_done; // @ Axi4Downsizer.scala l89
  assign io_start = startAddress; // @ Axi4Downsizer.scala l90
  assign io_output_valid = cmdStream_valid; // @ Stream.scala l294
  assign cmdStream_ready = io_output_ready; // @ Stream.scala l295
  assign io_output_payload_addr = cmdStream_payload_addr; // @ Stream.scala l296
  assign io_output_payload_id = cmdStream_payload_id; // @ Stream.scala l296
  assign io_output_payload_region = cmdStream_payload_region; // @ Stream.scala l296
  assign io_output_payload_len = cmdStream_payload_len; // @ Stream.scala l296
  assign io_output_payload_size = cmdStream_payload_size; // @ Stream.scala l296
  assign io_output_payload_burst = cmdStream_payload_burst; // @ Stream.scala l296
  assign io_output_payload_lock = cmdStream_payload_lock; // @ Stream.scala l296
  assign io_output_payload_cache = cmdStream_payload_cache; // @ Stream.scala l296
  assign io_output_payload_qos = cmdStream_payload_qos; // @ Stream.scala l296
  assign io_output_payload_prot = cmdStream_payload_prot; // @ Stream.scala l296
  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      size <= 3'b010; // @ Data.scala l400
      address <= 32'h0; // @ Data.scala l400
      dataRatio <= 7'h0; // @ Data.scala l400
    end else begin
      if(io_input_fire) begin
        size <= sizePerTrans; // @ Axi4Downsizer.scala l61
      end
      if(cmdStreamWithSize_fire) begin
        address <= cmdStreamWithSize_payload_addr; // @ Axi4Downsizer.scala l67
      end else begin
        if(cmdExtendedStream_fire) begin
          address <= (address + tmp_address); // @ Axi4Downsizer.scala l69
        end
      end
      if(io_input_fire_1) begin
        dataRatio <= ratio; // @ Axi4Downsizer.scala l78
      end
    end
  end


endmodule

module Clint (
  input      [31:0]   pc,
  input      [31:0]   pc_next,
  output reg          csr_ports_mepc_wen,
  output reg [63:0]   csr_ports_mepc_wdata,
  output reg          csr_ports_mcause_wen,
  output reg [63:0]   csr_ports_mcause_wdata,
  output reg          csr_ports_mstatus_wen,
  output reg [63:0]   csr_ports_mstatus_wdata,
  input      [63:0]   csr_ports_mtvec,
  input      [63:0]   csr_ports_mepc,
  input      [63:0]   csr_ports_mstatus,
  input               csr_ports_global_int_en,
  input               csr_ports_mtime_int_en,
  input               csr_ports_mtime_int_pend,
  input               timer_int,
  output reg          int_en,
  output reg [31:0]   int_pc,
  input               ecall,
  input               ebreak,
  input               mret
);
  localparam ExceptionEnum_IDLE = 3'd0;
  localparam ExceptionEnum_ECALL = 3'd1;
  localparam ExceptionEnum_EBREAK = 3'd2;
  localparam ExceptionEnum_MRET = 3'd3;
  localparam ExceptionEnum_TIME_1 = 3'd4;

  wire       [31:0]   tmp_mepc_wdata;
  wire       [31:0]   tmp_mepc_wdata_1;
  wire       [63:0]   tmp_int_pc;
  wire       [63:0]   tmp_int_pc_1;
  reg        [2:0]    int_state;
  reg        [63:0]   mepc_wdata;
  reg        [63:0]   mcause_wdata;
  `ifndef SYNTHESIS
  reg [47:0] int_state_string;
  `endif


  assign tmp_mepc_wdata = pc_next;
  assign tmp_mepc_wdata_1 = pc;
  assign tmp_int_pc = csr_ports_mtvec;
  assign tmp_int_pc_1 = csr_ports_mepc;
  `ifndef SYNTHESIS
  always @(*) begin
    case(int_state)
      ExceptionEnum_IDLE : int_state_string = "IDLE  ";
      ExceptionEnum_ECALL : int_state_string = "ECALL ";
      ExceptionEnum_EBREAK : int_state_string = "EBREAK";
      ExceptionEnum_MRET : int_state_string = "MRET  ";
      ExceptionEnum_TIME_1 : int_state_string = "TIME_1";
      default : int_state_string = "??????";
    endcase
  end
  `endif

  always @(*) begin
    if(ecall) begin
      int_state = ExceptionEnum_ECALL; // @ Enum.scala l151
    end else begin
      if(ebreak) begin
        int_state = ExceptionEnum_EBREAK; // @ Enum.scala l151
      end else begin
        if(((csr_ports_global_int_en && csr_ports_mtime_int_en) && timer_int)) begin
          int_state = ExceptionEnum_TIME_1; // @ Enum.scala l151
        end else begin
          if(mret) begin
            int_state = ExceptionEnum_MRET; // @ Enum.scala l151
          end else begin
            int_state = ExceptionEnum_IDLE; // @ Enum.scala l151
          end
        end
      end
    end
  end

  always @(*) begin
    if((int_state == ExceptionEnum_TIME_1)) begin
      mepc_wdata = {32'd0, tmp_mepc_wdata}; // @ Exception.scala l154
    end else begin
      mepc_wdata = {32'd0, tmp_mepc_wdata_1}; // @ Exception.scala l157
    end
  end

  always @(*) begin
    if((int_state == ExceptionEnum_ECALL)) begin
      mcause_wdata = 64'h000000000000000b; // @ Exception.scala l162
    end else begin
      if((int_state == ExceptionEnum_EBREAK)) begin
        mcause_wdata = 64'h0000000000000003; // @ Exception.scala l165
      end else begin
        if((int_state == ExceptionEnum_TIME_1)) begin
          mcause_wdata = 64'h8000000000000007; // @ Exception.scala l168
        end else begin
          mcause_wdata = 64'h0; // @ Exception.scala l171
        end
      end
    end
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        int_en = 1'b1; // @ Exception.scala l177
      end
      ExceptionEnum_MRET : begin
        int_en = 1'b1; // @ Exception.scala l188
      end
      default : begin
        int_en = 1'b0; // @ Exception.scala l199
      end
    endcase
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        int_pc = tmp_int_pc[31:0]; // @ Exception.scala l178
      end
      ExceptionEnum_MRET : begin
        int_pc = tmp_int_pc_1[31:0]; // @ Exception.scala l189
      end
      default : begin
        int_pc = 32'h0; // @ Exception.scala l200
      end
    endcase
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        csr_ports_mepc_wen = 1'b1; // @ Exception.scala l179
      end
      ExceptionEnum_MRET : begin
        csr_ports_mepc_wen = 1'b0; // @ Exception.scala l190
      end
      default : begin
        csr_ports_mepc_wen = 1'b0; // @ Exception.scala l201
      end
    endcase
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        csr_ports_mcause_wen = 1'b1; // @ Exception.scala l180
      end
      ExceptionEnum_MRET : begin
        csr_ports_mcause_wen = 1'b0; // @ Exception.scala l191
      end
      default : begin
        csr_ports_mcause_wen = 1'b0; // @ Exception.scala l202
      end
    endcase
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        csr_ports_mstatus_wen = 1'b1; // @ Exception.scala l181
      end
      ExceptionEnum_MRET : begin
        csr_ports_mstatus_wen = 1'b1; // @ Exception.scala l192
      end
      default : begin
        csr_ports_mstatus_wen = 1'b0; // @ Exception.scala l203
      end
    endcase
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        csr_ports_mepc_wdata = mepc_wdata; // @ Exception.scala l182
      end
      ExceptionEnum_MRET : begin
        csr_ports_mepc_wdata = 64'h0; // @ Exception.scala l193
      end
      default : begin
        csr_ports_mepc_wdata = 64'h0; // @ Exception.scala l204
      end
    endcase
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        csr_ports_mcause_wdata = mcause_wdata; // @ Exception.scala l183
      end
      ExceptionEnum_MRET : begin
        csr_ports_mcause_wdata = 64'h0; // @ Exception.scala l194
      end
      default : begin
        csr_ports_mcause_wdata = 64'h0; // @ Exception.scala l205
      end
    endcase
  end

  always @(*) begin
    case(int_state)
      ExceptionEnum_ECALL, ExceptionEnum_EBREAK, ExceptionEnum_TIME_1 : begin
        csr_ports_mstatus_wdata = {{{{csr_ports_mstatus[63 : 8],csr_ports_mstatus[3]},csr_ports_mstatus[6 : 4]},1'b0},csr_ports_mstatus[2 : 0]}; // @ Exception.scala l184
      end
      ExceptionEnum_MRET : begin
        csr_ports_mstatus_wdata = {{{{csr_ports_mstatus[63 : 8],1'b1},csr_ports_mstatus[6 : 4]},csr_ports_mstatus[7]},csr_ports_mstatus[2 : 0]}; // @ Exception.scala l195
      end
      default : begin
        csr_ports_mstatus_wdata = 64'h0; // @ Exception.scala l206
      end
    endcase
  end


endmodule

module CsrRegfile (
  input      [11:0]   cpu_ports_waddr,
  input               cpu_ports_wen,
  input      [63:0]   cpu_ports_wdata,
  input      [11:0]   cpu_ports_raddr,
  output reg [63:0]   cpu_ports_rdata,
  input               clint_ports_mepc_wen,
  input      [63:0]   clint_ports_mepc_wdata,
  input               clint_ports_mcause_wen,
  input      [63:0]   clint_ports_mcause_wdata,
  input               clint_ports_mstatus_wen,
  input      [63:0]   clint_ports_mstatus_wdata,
  output     [63:0]   clint_ports_mtvec,
  output     [63:0]   clint_ports_mepc,
  output     [63:0]   clint_ports_mstatus,
  output              clint_ports_global_int_en,
  output              clint_ports_mtime_int_en,
  output              clint_ports_mtime_int_pend,
  input               timer_int,
  input               io_axiClk,
  input               cpu_rst
);

  wire       [63:0]   tmp_mcycle;
  reg        [63:0]   mstatus;
  reg        [63:0]   mie;
  reg        [63:0]   mtvec;
  reg        [63:0]   mepc;
  reg        [63:0]   mcause;
  reg        [63:0]   mtval;
  reg        [63:0]   mip;
  reg        [63:0]   mcycle;
  reg        [63:0]   mhartid;
  reg        [63:0]   mscratch;

  assign tmp_mcycle = (mcycle + 64'h0000000000000001);
  always @(*) begin
    if((cpu_ports_wen && (cpu_ports_raddr == cpu_ports_waddr))) begin
      cpu_ports_rdata = cpu_ports_wdata; // @ Exception.scala l71
    end else begin
      case(cpu_ports_raddr)
        12'h300 : begin
          cpu_ports_rdata = mstatus; // @ Exception.scala l75
        end
        12'h304 : begin
          cpu_ports_rdata = mie; // @ Exception.scala l78
        end
        12'h305 : begin
          cpu_ports_rdata = mtvec; // @ Exception.scala l81
        end
        12'h341 : begin
          cpu_ports_rdata = mepc; // @ Exception.scala l84
        end
        12'h342 : begin
          cpu_ports_rdata = mcause; // @ Exception.scala l87
        end
        12'h343 : begin
          cpu_ports_rdata = mtval; // @ Exception.scala l90
        end
        12'h344 : begin
          cpu_ports_rdata = mip; // @ Exception.scala l93
        end
        12'hb00 : begin
          cpu_ports_rdata = mcycle; // @ Exception.scala l96
        end
        12'hf14 : begin
          cpu_ports_rdata = mhartid; // @ Exception.scala l99
        end
        default : begin
          cpu_ports_rdata = 64'h0; // @ Exception.scala l102
        end
      endcase
    end
  end

  assign clint_ports_mtvec = mtvec; // @ Exception.scala l108
  assign clint_ports_mepc = mepc; // @ Exception.scala l109
  assign clint_ports_mstatus = mstatus; // @ Exception.scala l110
  assign clint_ports_global_int_en = mstatus[3]; // @ Exception.scala l111
  assign clint_ports_mtime_int_en = mie[7]; // @ Exception.scala l112
  assign clint_ports_mtime_int_pend = mip[7]; // @ Exception.scala l113
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      mstatus <= {51'h0,13'h1880}; // @ Data.scala l400
      mie <= 64'h0; // @ Data.scala l400
      mtvec <= 64'h0; // @ Data.scala l400
      mepc <= 64'h0; // @ Data.scala l400
      mcause <= 64'h0; // @ Data.scala l400
      mtval <= 64'h0; // @ Data.scala l400
      mip <= 64'h0; // @ Data.scala l400
      mcycle <= 64'h0; // @ Data.scala l400
      mhartid <= 64'h0; // @ Data.scala l400
      mscratch <= 64'h0; // @ Data.scala l400
    end else begin
      mcycle <= tmp_mcycle; // @ Exception.scala l25
      mip <= {{{{52'h0,1'b0},3'b000},timer_int},7'h0}; // @ Exception.scala l26
      if(cpu_ports_wen) begin
        case(cpu_ports_waddr)
          12'h300 : begin
            mstatus <= {{{{{{{((cpu_ports_wdata[16 : 15] == 2'b11) || (cpu_ports_wdata[14 : 13] == 2'b11)),50'h0},2'b11},3'b000},cpu_ports_wdata[7]},3'b000},cpu_ports_wdata[3]},3'b000}; // @ Exception.scala l31
          end
          12'h304 : begin
            mie <= {{{{{{52'h0,cpu_ports_wdata[11]},3'b000},cpu_ports_wdata[7]},3'b000},cpu_ports_wdata[3]},3'b000}; // @ Exception.scala l35
          end
          12'h305 : begin
            mtvec <= cpu_ports_wdata; // @ Exception.scala l38
          end
          12'h341 : begin
            mepc <= cpu_ports_wdata; // @ Exception.scala l41
          end
          12'h342 : begin
            mcause <= cpu_ports_wdata; // @ Exception.scala l44
          end
          12'h343 : begin
            mtval <= cpu_ports_wdata; // @ Exception.scala l47
          end
          12'hf14 : begin
            mhartid <= cpu_ports_wdata; // @ Exception.scala l50
          end
          12'h340 : begin
            mscratch <= cpu_ports_wdata; // @ Exception.scala l53
          end
          default : begin
          end
        endcase
      end else begin
        if(clint_ports_mepc_wen) begin
          mepc <= clint_ports_mepc_wdata; // @ Exception.scala l58
        end
        if(clint_ports_mcause_wen) begin
          mcause <= clint_ports_mcause_wdata; // @ Exception.scala l61
        end
        if(clint_ports_mstatus_wen) begin
          mstatus <= clint_ports_mstatus_wdata; // @ Exception.scala l64
        end
        mtvec <= {clint_ports_mtvec[63 : 2],2'b00}; // @ Exception.scala l66
      end
    end
  end


endmodule

module FIFO_3 (
  input               ports_s_ports_valid,
  output              ports_s_ports_ready,
  input      [31:0]   ports_s_ports_payload,
  output              ports_m_ports_valid,
  input               ports_m_ports_ready,
  output     [31:0]   ports_m_ports_payload,
  input               flush,
  output              has_space,
  input               io_axiClk,
  input               cpu_rst
);

  reg        [31:0]   tmp_ports_m_ports_payload;
  reg        [2:0]    read_ptr;
  reg        [2:0]    write_ptr;
  wire       [1:0]    read_addr;
  wire       [1:0]    next_read_addr;
  wire       [1:0]    write_addr;
  wire                fifo_empty;
  wire                fifo_full;
  reg        [31:0]   fifo_ram_0;
  reg        [31:0]   fifo_ram_1;
  reg        [31:0]   fifo_ram_2;
  reg        [31:0]   fifo_ram_3;
  wire                ports_m_ports_fire;
  wire       [3:0]    tmp_1;
  wire                ports_s_ports_fire;
  reg        [2:0]    empty_entry_cnt;
  reg        [2:0]    empty_entry_cnt_next;
  wire                ports_s_ports_fire_1;
  wire                ports_m_ports_fire_1;
  wire                ports_s_ports_fire_2;
  wire                ports_m_ports_fire_2;

  always @(*) begin
    case(read_addr)
      2'b00 : tmp_ports_m_ports_payload = fifo_ram_0;
      2'b01 : tmp_ports_m_ports_payload = fifo_ram_1;
      2'b10 : tmp_ports_m_ports_payload = fifo_ram_2;
      default : tmp_ports_m_ports_payload = fifo_ram_3;
    endcase
  end

  assign read_addr = read_ptr[1 : 0]; // @ BaseType.scala l299
  assign next_read_addr = (read_addr + 2'b01); // @ BaseType.scala l299
  assign write_addr = write_ptr[1 : 0]; // @ BaseType.scala l299
  assign fifo_empty = (read_ptr == write_ptr); // @ BaseType.scala l305
  assign fifo_full = ((read_addr == write_addr) && (read_ptr[2] != write_ptr[2])); // @ BaseType.scala l305
  assign ports_m_ports_fire = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign tmp_1 = ({3'd0,1'b1} <<< write_addr); // @ BaseType.scala l299
  assign ports_s_ports_fire = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_s_ports_fire_1 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_1 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  always @(*) begin
    if((ports_s_ports_fire_1 && (! ports_m_ports_fire_1))) begin
      empty_entry_cnt_next = (empty_entry_cnt - 3'b001); // @ FIFO.scala l51
    end else begin
      if(((! ports_s_ports_fire_2) && ports_m_ports_fire_2)) begin
        empty_entry_cnt_next = (empty_entry_cnt + 3'b001); // @ FIFO.scala l54
      end else begin
        empty_entry_cnt_next = empty_entry_cnt; // @ FIFO.scala l57
      end
    end
  end

  assign ports_s_ports_fire_2 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_2 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign ports_s_ports_ready = (! fifo_full); // @ FIFO.scala l68
  assign ports_m_ports_valid = (! fifo_empty); // @ FIFO.scala l69
  assign ports_m_ports_payload = tmp_ports_m_ports_payload; // @ FIFO.scala l70
  assign has_space = (3'b001 < empty_entry_cnt_next); // @ FIFO.scala l71
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      read_ptr <= 3'b000; // @ Data.scala l400
      write_ptr <= 3'b000; // @ Data.scala l400
      empty_entry_cnt <= 3'b100; // @ Data.scala l400
    end else begin
      if(flush) begin
        read_ptr <= 3'b000; // @ FIFO.scala l34
      end else begin
        if(ports_m_ports_fire) begin
          read_ptr <= (read_ptr + 3'b001); // @ FIFO.scala l37
        end
      end
      if(flush) begin
        write_ptr <= 3'b000; // @ FIFO.scala l40
      end else begin
        if(ports_s_ports_fire) begin
          write_ptr <= (write_ptr + 3'b001); // @ FIFO.scala l43
        end
      end
      if(flush) begin
        empty_entry_cnt <= 3'b100; // @ FIFO.scala l60
      end else begin
        empty_entry_cnt <= empty_entry_cnt_next; // @ FIFO.scala l63
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(!flush) begin
      if(ports_s_ports_fire) begin
        if(tmp_1[0]) begin
          fifo_ram_0 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[1]) begin
          fifo_ram_1 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[2]) begin
          fifo_ram_2 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[3]) begin
          fifo_ram_3 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
      end
    end
  end


endmodule

module FIFO_2 (
  input               ports_s_ports_valid,
  output              ports_s_ports_ready,
  input               ports_s_ports_payload,
  output              ports_m_ports_valid,
  input               ports_m_ports_ready,
  output              ports_m_ports_payload,
  input               flush,
  output              has_space,
  input               io_axiClk,
  input               cpu_rst
);

  reg                 tmp_ports_m_ports_payload;
  reg        [2:0]    read_ptr;
  reg        [2:0]    write_ptr;
  wire       [1:0]    read_addr;
  wire       [1:0]    next_read_addr;
  wire       [1:0]    write_addr;
  wire                fifo_empty;
  wire                fifo_full;
  reg                 fifo_ram_0;
  reg                 fifo_ram_1;
  reg                 fifo_ram_2;
  reg                 fifo_ram_3;
  wire                ports_m_ports_fire;
  wire       [3:0]    tmp_1;
  wire                ports_s_ports_fire;
  reg        [2:0]    empty_entry_cnt;
  reg        [2:0]    empty_entry_cnt_next;
  wire                ports_s_ports_fire_1;
  wire                ports_m_ports_fire_1;
  wire                ports_s_ports_fire_2;
  wire                ports_m_ports_fire_2;

  always @(*) begin
    case(read_addr)
      2'b00 : tmp_ports_m_ports_payload = fifo_ram_0;
      2'b01 : tmp_ports_m_ports_payload = fifo_ram_1;
      2'b10 : tmp_ports_m_ports_payload = fifo_ram_2;
      default : tmp_ports_m_ports_payload = fifo_ram_3;
    endcase
  end

  assign read_addr = read_ptr[1 : 0]; // @ BaseType.scala l299
  assign next_read_addr = (read_addr + 2'b01); // @ BaseType.scala l299
  assign write_addr = write_ptr[1 : 0]; // @ BaseType.scala l299
  assign fifo_empty = (read_ptr == write_ptr); // @ BaseType.scala l305
  assign fifo_full = ((read_addr == write_addr) && (read_ptr[2] != write_ptr[2])); // @ BaseType.scala l305
  assign ports_m_ports_fire = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign tmp_1 = ({3'd0,1'b1} <<< write_addr); // @ BaseType.scala l299
  assign ports_s_ports_fire = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_s_ports_fire_1 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_1 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  always @(*) begin
    if((ports_s_ports_fire_1 && (! ports_m_ports_fire_1))) begin
      empty_entry_cnt_next = (empty_entry_cnt - 3'b001); // @ FIFO.scala l51
    end else begin
      if(((! ports_s_ports_fire_2) && ports_m_ports_fire_2)) begin
        empty_entry_cnt_next = (empty_entry_cnt + 3'b001); // @ FIFO.scala l54
      end else begin
        empty_entry_cnt_next = empty_entry_cnt; // @ FIFO.scala l57
      end
    end
  end

  assign ports_s_ports_fire_2 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_2 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign ports_s_ports_ready = (! fifo_full); // @ FIFO.scala l68
  assign ports_m_ports_valid = (! fifo_empty); // @ FIFO.scala l69
  assign ports_m_ports_payload = tmp_ports_m_ports_payload; // @ FIFO.scala l70
  assign has_space = (3'b001 < empty_entry_cnt_next); // @ FIFO.scala l71
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      read_ptr <= 3'b000; // @ Data.scala l400
      write_ptr <= 3'b000; // @ Data.scala l400
      empty_entry_cnt <= 3'b100; // @ Data.scala l400
    end else begin
      if(flush) begin
        read_ptr <= 3'b000; // @ FIFO.scala l34
      end else begin
        if(ports_m_ports_fire) begin
          read_ptr <= (read_ptr + 3'b001); // @ FIFO.scala l37
        end
      end
      if(flush) begin
        write_ptr <= 3'b000; // @ FIFO.scala l40
      end else begin
        if(ports_s_ports_fire) begin
          write_ptr <= (write_ptr + 3'b001); // @ FIFO.scala l43
        end
      end
      if(flush) begin
        empty_entry_cnt <= 3'b100; // @ FIFO.scala l60
      end else begin
        empty_entry_cnt <= empty_entry_cnt_next; // @ FIFO.scala l63
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(!flush) begin
      if(ports_s_ports_fire) begin
        if(tmp_1[0]) begin
          fifo_ram_0 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[1]) begin
          fifo_ram_1 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[2]) begin
          fifo_ram_2 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[3]) begin
          fifo_ram_3 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
      end
    end
  end


endmodule

//FIFO_1 replaced by FIFO

module FIFO (
  input               ports_s_ports_valid,
  output              ports_s_ports_ready,
  input      [31:0]   ports_s_ports_payload,
  output              ports_m_ports_valid,
  input               ports_m_ports_ready,
  output     [31:0]   ports_m_ports_payload,
  input               flush,
  output              has_space,
  output     [31:0]   next_payload,
  output              next_valid,
  input               io_axiClk,
  input               cpu_rst
);

  reg        [31:0]   tmp_ports_m_ports_payload;
  reg        [31:0]   tmp_next_payload;
  reg        [2:0]    read_ptr;
  reg        [2:0]    write_ptr;
  wire       [1:0]    read_addr;
  wire       [1:0]    next_read_addr;
  wire       [1:0]    write_addr;
  wire                fifo_empty;
  wire                fifo_full;
  reg        [31:0]   fifo_ram_0;
  reg        [31:0]   fifo_ram_1;
  reg        [31:0]   fifo_ram_2;
  reg        [31:0]   fifo_ram_3;
  wire                ports_m_ports_fire;
  wire       [3:0]    tmp_1;
  wire                ports_s_ports_fire;
  reg        [2:0]    empty_entry_cnt;
  reg        [2:0]    empty_entry_cnt_next;
  wire                ports_s_ports_fire_1;
  wire                ports_m_ports_fire_1;
  wire                ports_s_ports_fire_2;
  wire                ports_m_ports_fire_2;
  reg        [2:0]    fifo_cnt;
  wire                ports_s_ports_fire_3;
  wire                ports_m_ports_fire_3;
  wire                ports_s_ports_fire_4;
  wire                ports_m_ports_fire_4;

  always @(*) begin
    case(read_addr)
      2'b00 : tmp_ports_m_ports_payload = fifo_ram_0;
      2'b01 : tmp_ports_m_ports_payload = fifo_ram_1;
      2'b10 : tmp_ports_m_ports_payload = fifo_ram_2;
      default : tmp_ports_m_ports_payload = fifo_ram_3;
    endcase
  end

  always @(*) begin
    case(next_read_addr)
      2'b00 : tmp_next_payload = fifo_ram_0;
      2'b01 : tmp_next_payload = fifo_ram_1;
      2'b10 : tmp_next_payload = fifo_ram_2;
      default : tmp_next_payload = fifo_ram_3;
    endcase
  end

  assign read_addr = read_ptr[1 : 0]; // @ BaseType.scala l299
  assign next_read_addr = (read_addr + 2'b01); // @ BaseType.scala l299
  assign write_addr = write_ptr[1 : 0]; // @ BaseType.scala l299
  assign fifo_empty = (read_ptr == write_ptr); // @ BaseType.scala l305
  assign fifo_full = ((read_addr == write_addr) && (read_ptr[2] != write_ptr[2])); // @ BaseType.scala l305
  assign ports_m_ports_fire = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign tmp_1 = ({3'd0,1'b1} <<< write_addr); // @ BaseType.scala l299
  assign ports_s_ports_fire = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_s_ports_fire_1 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_1 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  always @(*) begin
    if((ports_s_ports_fire_1 && (! ports_m_ports_fire_1))) begin
      empty_entry_cnt_next = (empty_entry_cnt - 3'b001); // @ FIFO.scala l51
    end else begin
      if(((! ports_s_ports_fire_2) && ports_m_ports_fire_2)) begin
        empty_entry_cnt_next = (empty_entry_cnt + 3'b001); // @ FIFO.scala l54
      end else begin
        empty_entry_cnt_next = empty_entry_cnt; // @ FIFO.scala l57
      end
    end
  end

  assign ports_s_ports_fire_2 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_2 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign ports_s_ports_ready = (! fifo_full); // @ FIFO.scala l68
  assign ports_m_ports_valid = (! fifo_empty); // @ FIFO.scala l69
  assign ports_m_ports_payload = tmp_ports_m_ports_payload; // @ FIFO.scala l70
  assign has_space = (3'b001 < empty_entry_cnt_next); // @ FIFO.scala l71
  assign next_payload = tmp_next_payload; // @ FIFO.scala l78
  assign ports_s_ports_fire_3 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_3 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign ports_s_ports_fire_4 = (ports_s_ports_valid && ports_s_ports_ready); // @ BaseType.scala l305
  assign ports_m_ports_fire_4 = (ports_m_ports_valid && ports_m_ports_ready); // @ BaseType.scala l305
  assign next_valid = (3'b010 <= fifo_cnt); // @ FIFO.scala l90
  always @(posedge io_axiClk or posedge cpu_rst) begin
    if(cpu_rst) begin
      read_ptr <= 3'b000; // @ Data.scala l400
      write_ptr <= 3'b000; // @ Data.scala l400
      empty_entry_cnt <= 3'b100; // @ Data.scala l400
      fifo_cnt <= 3'b000; // @ Data.scala l400
    end else begin
      if(flush) begin
        read_ptr <= 3'b000; // @ FIFO.scala l34
      end else begin
        if(ports_m_ports_fire) begin
          read_ptr <= (read_ptr + 3'b001); // @ FIFO.scala l37
        end
      end
      if(flush) begin
        write_ptr <= 3'b000; // @ FIFO.scala l40
      end else begin
        if(ports_s_ports_fire) begin
          write_ptr <= (write_ptr + 3'b001); // @ FIFO.scala l43
        end
      end
      if(flush) begin
        empty_entry_cnt <= 3'b100; // @ FIFO.scala l60
      end else begin
        empty_entry_cnt <= empty_entry_cnt_next; // @ FIFO.scala l63
      end
      if(flush) begin
        fifo_cnt <= 3'b000; // @ FIFO.scala l80
      end else begin
        if((ports_s_ports_fire_3 && (! ports_m_ports_fire_3))) begin
          fifo_cnt <= (fifo_cnt + 3'b001); // @ FIFO.scala l83
        end else begin
          if(((! ports_s_ports_fire_4) && ports_m_ports_fire_4)) begin
            fifo_cnt <= (fifo_cnt - 3'b001); // @ FIFO.scala l86
          end
        end
      end
    end
  end

  always @(posedge io_axiClk) begin
    if(!flush) begin
      if(ports_s_ports_fire) begin
        if(tmp_1[0]) begin
          fifo_ram_0 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[1]) begin
          fifo_ram_1 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[2]) begin
          fifo_ram_2 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
        if(tmp_1[3]) begin
          fifo_ram_3 <= ports_s_ports_payload; // @ FIFO.scala l44
        end
      end
    end
  end


endmodule

//StreamTransactionCounter_2 replaced by StreamTransactionCounter_6

//StreamTransactionExtender_3 replaced by StreamTransactionExtender_4

//StreamTransactionCounter_3 replaced by StreamTransactionCounter_6

module StreamTransactionCounter_4 (
  input               io_ctrlFire,
  input               io_targetFire,
  output              io_available,
  input      [7:0]    io_count,
  output              io_working,
  output              io_last,
  output              io_done,
  output     [7:0]    io_value,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [7:0]    tmp_counter_valueNext;
  wire       [0:0]    tmp_counter_valueNext_1;
  reg        [7:0]    countReg;
  reg                 counter_willIncrement;
  reg                 counter_willClear;
  reg        [7:0]    counter_valueNext;
  reg        [7:0]    counter_value;
  wire                counter_willOverflowIfInc;
  wire                counter_willOverflow;
  wire       [7:0]    expected;
  wire                lastOne;
  reg                 running;
  wire                working;
  wire                done;

  assign tmp_counter_valueNext_1 = counter_willIncrement;
  assign tmp_counter_valueNext = {7'd0, tmp_counter_valueNext_1};
  always @(*) begin
    counter_willIncrement = 1'b0; // @ Utils.scala l536
    if(!done) begin
      if((io_targetFire && working)) begin
        counter_willIncrement = 1'b1; // @ Utils.scala l540
      end
    end
  end

  always @(*) begin
    counter_willClear = 1'b0; // @ Utils.scala l537
    if(done) begin
      counter_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign counter_willOverflowIfInc = (counter_value == 8'hff); // @ BaseType.scala l305
  assign counter_willOverflow = (counter_willOverflowIfInc && counter_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    counter_valueNext = (counter_value + tmp_counter_valueNext); // @ Utils.scala l548
    if(counter_willClear) begin
      counter_valueNext = 8'h0; // @ Utils.scala l558
    end
  end

  assign expected = countReg; // @ Misc.scala l552
  assign lastOne = (expected <= counter_value); // @ BaseType.scala l305
  assign working = running; // @ Misc.scala l552
  assign done = (lastOne && io_targetFire); // @ BaseType.scala l305
  assign io_working = working; // @ Stream.scala l1895
  assign io_last = (lastOne && working); // @ Stream.scala l1896
  assign io_done = (done && working); // @ Stream.scala l1897
  assign io_value = counter_value; // @ Stream.scala l1898
  assign io_available = ((! working) || io_done); // @ Stream.scala l1899
  always @(posedge io_axiClk) begin
    if(io_ctrlFire) begin
      countReg <= io_count; // @ Stream.scala l1871
    end
  end

  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      counter_value <= 8'h0; // @ Data.scala l400
      running <= 1'b0; // @ Data.scala l400
    end else begin
      counter_value <= counter_valueNext; // @ Reg.scala l39
      if(io_ctrlFire) begin
        running <= 1'b1; // @ Stream.scala l1885
      end else begin
        if(done) begin
          running <= 1'b0; // @ Stream.scala l1886
        end
      end
    end
  end


endmodule

module StreamTransactionExtender_4 (
  input      [6:0]    io_count,
  input               io_input_valid,
  output              io_input_ready,
  input      [31:0]   io_input_payload_addr,
  input      [3:0]    io_input_payload_id,
  input      [3:0]    io_input_payload_region,
  input      [7:0]    io_input_payload_len,
  input      [2:0]    io_input_payload_size,
  input      [1:0]    io_input_payload_burst,
  input      [0:0]    io_input_payload_lock,
  input      [3:0]    io_input_payload_cache,
  input      [3:0]    io_input_payload_qos,
  input      [2:0]    io_input_payload_prot,
  output              io_output_valid,
  input               io_output_ready,
  output     [31:0]   io_output_payload_addr,
  output     [3:0]    io_output_payload_id,
  output     [3:0]    io_output_payload_region,
  output     [7:0]    io_output_payload_len,
  output     [2:0]    io_output_payload_size,
  output     [1:0]    io_output_payload_burst,
  output     [0:0]    io_output_payload_lock,
  output     [3:0]    io_output_payload_cache,
  output     [3:0]    io_output_payload_qos,
  output     [2:0]    io_output_payload_prot,
  output              io_working,
  output              io_first,
  output              io_last,
  output              io_done,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire                counter_io_available;
  wire                counter_io_working;
  wire                counter_io_last;
  wire                counter_io_done;
  wire       [6:0]    counter_io_value;
  wire                io_input_fire;
  wire                io_output_fire;
  reg        [31:0]   payloadReg_addr;
  reg        [3:0]    payloadReg_id;
  reg        [3:0]    payloadReg_region;
  reg        [7:0]    payloadReg_len;
  reg        [2:0]    payloadReg_size;
  reg        [1:0]    payloadReg_burst;
  reg        [0:0]    payloadReg_lock;
  reg        [3:0]    payloadReg_cache;
  reg        [3:0]    payloadReg_qos;
  reg        [2:0]    payloadReg_prot;
  wire       [31:0]   payload_addr;
  wire       [3:0]    payload_id;
  wire       [3:0]    payload_region;
  wire       [7:0]    payload_len;
  wire       [2:0]    payload_size;
  wire       [1:0]    payload_burst;
  wire       [0:0]    payload_lock;
  wire       [3:0]    payload_cache;
  wire       [3:0]    payload_qos;
  wire       [2:0]    payload_prot;
  wire                io_input_fire_1;

  StreamTransactionCounter_6 counter (
    .io_ctrlFire   (io_input_fire        ), //i
    .io_targetFire (io_output_fire       ), //i
    .io_available  (counter_io_available ), //o
    .io_count      (io_count[6:0]        ), //i
    .io_working    (counter_io_working   ), //o
    .io_last       (counter_io_last      ), //o
    .io_done       (counter_io_done      ), //o
    .io_value      (counter_io_value[6:0]), //o
    .io_axiClk     (io_axiClk            ), //i
    .tmp_io_resetn (tmp_io_resetn        )  //i
  );
  assign io_input_fire = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_fire = (io_output_valid && io_output_ready); // @ BaseType.scala l305
  assign payload_addr = payloadReg_addr; // @ Misc.scala l552
  assign payload_id = payloadReg_id; // @ Misc.scala l552
  assign payload_region = payloadReg_region; // @ Misc.scala l552
  assign payload_len = payloadReg_len; // @ Misc.scala l552
  assign payload_size = payloadReg_size; // @ Misc.scala l552
  assign payload_burst = payloadReg_burst; // @ Misc.scala l552
  assign payload_lock = payloadReg_lock; // @ Misc.scala l552
  assign payload_cache = payloadReg_cache; // @ Misc.scala l552
  assign payload_qos = payloadReg_qos; // @ Misc.scala l552
  assign payload_prot = payloadReg_prot; // @ Misc.scala l552
  assign io_input_fire_1 = (io_input_valid && io_input_ready); // @ BaseType.scala l305
  assign io_output_payload_addr = payload_addr; // @ Stream.scala l1971
  assign io_output_payload_id = payload_id; // @ Stream.scala l1971
  assign io_output_payload_region = payload_region; // @ Stream.scala l1971
  assign io_output_payload_len = payload_len; // @ Stream.scala l1971
  assign io_output_payload_size = payload_size; // @ Stream.scala l1971
  assign io_output_payload_burst = payload_burst; // @ Stream.scala l1971
  assign io_output_payload_lock = payload_lock; // @ Stream.scala l1971
  assign io_output_payload_cache = payload_cache; // @ Stream.scala l1971
  assign io_output_payload_qos = payload_qos; // @ Stream.scala l1971
  assign io_output_payload_prot = payload_prot; // @ Stream.scala l1971
  assign io_output_valid = counter_io_working; // @ Stream.scala l1972
  assign io_input_ready = counter_io_available; // @ Stream.scala l1973
  assign io_last = counter_io_last; // @ Stream.scala l1974
  assign io_done = counter_io_done; // @ Stream.scala l1975
  assign io_first = ((counter_io_value == 7'h0) && counter_io_working); // @ Stream.scala l1976
  assign io_working = counter_io_working; // @ Stream.scala l1977
  always @(posedge io_axiClk) begin
    if(io_input_fire_1) begin
      payloadReg_addr <= io_input_payload_addr; // @ Stream.scala l1968
      payloadReg_id <= io_input_payload_id; // @ Stream.scala l1968
      payloadReg_region <= io_input_payload_region; // @ Stream.scala l1968
      payloadReg_len <= io_input_payload_len; // @ Stream.scala l1968
      payloadReg_size <= io_input_payload_size; // @ Stream.scala l1968
      payloadReg_burst <= io_input_payload_burst; // @ Stream.scala l1968
      payloadReg_lock <= io_input_payload_lock; // @ Stream.scala l1968
      payloadReg_cache <= io_input_payload_cache; // @ Stream.scala l1968
      payloadReg_qos <= io_input_payload_qos; // @ Stream.scala l1968
      payloadReg_prot <= io_input_payload_prot; // @ Stream.scala l1968
    end
  end


endmodule

//StreamTransactionCounter_5 replaced by StreamTransactionCounter_6

module StreamTransactionCounter_6 (
  input               io_ctrlFire,
  input               io_targetFire,
  output              io_available,
  input      [6:0]    io_count,
  output              io_working,
  output              io_last,
  output              io_done,
  output     [6:0]    io_value,
  input               io_axiClk,
  input               tmp_io_resetn
);

  wire       [6:0]    tmp_counter_valueNext;
  wire       [0:0]    tmp_counter_valueNext_1;
  reg        [6:0]    countReg;
  reg                 counter_willIncrement;
  reg                 counter_willClear;
  reg        [6:0]    counter_valueNext;
  reg        [6:0]    counter_value;
  wire                counter_willOverflowIfInc;
  wire                counter_willOverflow;
  wire       [6:0]    expected;
  wire                lastOne;
  reg                 running;
  wire                working;
  wire                done;

  assign tmp_counter_valueNext_1 = counter_willIncrement;
  assign tmp_counter_valueNext = {6'd0, tmp_counter_valueNext_1};
  always @(*) begin
    counter_willIncrement = 1'b0; // @ Utils.scala l536
    if(!done) begin
      if((io_targetFire && working)) begin
        counter_willIncrement = 1'b1; // @ Utils.scala l540
      end
    end
  end

  always @(*) begin
    counter_willClear = 1'b0; // @ Utils.scala l537
    if(done) begin
      counter_willClear = 1'b1; // @ Utils.scala l539
    end
  end

  assign counter_willOverflowIfInc = (counter_value == 7'h7f); // @ BaseType.scala l305
  assign counter_willOverflow = (counter_willOverflowIfInc && counter_willIncrement); // @ BaseType.scala l305
  always @(*) begin
    counter_valueNext = (counter_value + tmp_counter_valueNext); // @ Utils.scala l548
    if(counter_willClear) begin
      counter_valueNext = 7'h0; // @ Utils.scala l558
    end
  end

  assign expected = countReg; // @ Misc.scala l552
  assign lastOne = (expected <= counter_value); // @ BaseType.scala l305
  assign working = running; // @ Misc.scala l552
  assign done = (lastOne && io_targetFire); // @ BaseType.scala l305
  assign io_working = working; // @ Stream.scala l1895
  assign io_last = (lastOne && working); // @ Stream.scala l1896
  assign io_done = (done && working); // @ Stream.scala l1897
  assign io_value = counter_value; // @ Stream.scala l1898
  assign io_available = ((! working) || io_done); // @ Stream.scala l1899
  always @(posedge io_axiClk) begin
    if(io_ctrlFire) begin
      countReg <= io_count; // @ Stream.scala l1871
    end
  end

  always @(posedge io_axiClk or posedge tmp_io_resetn) begin
    if(tmp_io_resetn) begin
      counter_value <= 7'h0; // @ Data.scala l400
      running <= 1'b0; // @ Data.scala l400
    end else begin
      counter_value <= counter_valueNext; // @ Reg.scala l39
      if(io_ctrlFire) begin
        running <= 1'b1; // @ Stream.scala l1885
      end else begin
        if(done) begin
          running <= 1'b0; // @ Stream.scala l1886
        end
      end
    end
  end


endmodule
